name: Install Docker

on:
  workflow_dispatch:
jobs:
  install_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard
      - name: Write WireGuard config
        run: |
          echo "${{ secrets.WG_CONFIG }}" > wg0.conf
      - name: Bring up VPN
        run: |
          sudo wg-quick up ./wg0.conf
          sudo wg show

      - name: Override system DNS resolver
        run: |
          sudo rm /etc/resolv.conf
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
          
      - name: Uninstall old Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PI_HOST_IP }}
          username: ${{ vars.PI_USER }}
          password: ${{ secrets.PI_PASSWORD }}
          script: |
            for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do
              sudo apt-get remove -y --allow-change-held-packages $pkg || true
            done
      - name: Add Docker repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PI_HOST_IP }}
          username: ${{ vars.PI_USER }}
          password: ${{ secrets.PI_PASSWORD }}
          script: |
            sudo apt-get update
            sudo apt-get install ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
      - name: Install Docker packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PI_HOST_IP }}
          username: ${{ vars.PI_USER }}
          password: ${{ secrets.PI_PASSWORD }}
          script: |
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Ensure Docker is running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PI_HOST_IP }}
          username: ${{ vars.PI_USER }}
          password: ${{ secrets.PI_PASSWORD }}
          script: |
            sudo systemctl enable --now docker
            sudo systemctl status docker --no-pager
      - name: Bring down VPN
        run: |
          sudo wg-quick down ./wg0.conf
          sudo wg show   
  deploy_portainer: 
    uses: liamj-f/rpi4-docker/.github/workflows/portainer-deploy.yml@main
    needs: install_docker
    secrets: inherit
    with:
      branch_name: ${{ github.ref }}
  deploy_pihole:
    uses: liamj-f/rpi4-docker/.github/workflows/pihole-redeploy.yml@main
    needs: deploy_portainer
    secrets: inherit
    with:
      branch_name: ${{ github.ref }}    
  deploy_nginx:
    uses: liamj-f/rpi4-docker/.github/workflows/nginx-redeploy.yml@main
    needs: deploy_portainer
    secrets: inherit
    with:
      branch_name: ${{ github.ref }}    
  deploy_mysql:
    uses: liamj-f/rpi4-docker/.github/workflows/mysql-redeploy.yml@main
    needs: deploy_portainer
    secrets: inherit
    with:
      branch_name: ${{ github.ref }}   
     
 
