name: Redeploy Pihole to RPI0
on:
  workflow_dispatch:    
  push:
    branches:
      - refs/heads/dhcp-failover
    paths:
      /.github/workflows/install-failover-pihole.yml
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard 
          
      - name: Write WireGuard config
        run: |
          echo "${{ secrets.WG_CONFIG }}" > wg0.conf

      - name: Bring up VPN
        run: |
          sudo wg-quick up ./wg0.conf
          sudo wg show
          
      - name: Override system DNS resolver
        run: |
          sudo rm /etc/resolv.conf
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
          
      - name: Install PiHole on RPI0
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.RPI0_IP }}
          username: ${{ vars.RPI0_USER }}
          password: ${{ secrets.RPI0_PASSWORD }}
          script: |
            # Create unattended install config
            sudo mkdir -p /etc/pihole
            sudo tee /etc/pihole/setupVars.conf > /dev/null <<EOF
            PIHOLE_INTERFACE=wlan0,wg0
            QUERY_LOGGING=true
            INSTALL_WEB_SERVER=true
            INSTALL_WEB_INTERFACE=true
            LIGHTTPD_ENABLED=true
            WEBPASSWORD="${{ secrets.APP_PASSWORD }}"
            BLOCKING_ENABLED=true
            EOF
            
            curl -sSL https://install.pi-hole.net -o /tmp/pihole-install.sh
            sudo bash /tmp/pihole-install.sh --unattended

      - name: Set interfaces
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.RPI0_IP }}
          username: ${{ vars.RPI0_USER }}
          password: ${{ secrets.RPI0_PASSWORD }}
          script: |
            sudo pihole-FTL --config dns.interface "wlan0,wg0"
            sudo pihole-FTL --config dns.listeningMode "SINGLE"
            sudo pihole restartdns

      - name: Configure custom web port
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.RPI0_IP }}
          username: ${{ vars.RPI0_USER }}
          password: ${{ secrets.RPI0_PASSWORD }}
          script: |
            sudo pihole-FTL --config webserver.port "82"
            sudo sed -i 's/server.port\s*=\s*80/server.port = 82/' /etc/lighttpd/lighttpd.conf 
            sudo pihole -a -p ${{ secrets.APP_PASSWORD }}
            sudo systemctl restart lighttpd
          
      - name: Bring down VPN
        run: |
          sudo wg-quick down ./wg0.conf
          sudo wg show   
          
