name: Redeploy Nextloud via Portainer GitOps
#ToDo:
# create the mount points and automount
# then rescan files if the database isn't intact.

on:
  push:
    branches:
      - main
    paths:
      - 'nextcloud-compose.yml'
  workflow_dispatch:
  workflow_call:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard 
      - name: Write WireGuard config
        run: |
          echo "${{ secrets.WG_CONFIG }}" > wg0.conf

      - name: Bring up VPN
        run: |
          sudo wg-quick up ./wg0.conf
          sudo wg show
          
      - name: Override system DNS resolver
        run: |
          sudo rm /etc/resolv.conf
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
          
      - name: Create Nextcloud DB + User
        run: |
          docker exec mysql mysql -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "\
            CREATE DATABASE IF NOT EXISTS nextcloud; \
            CREATE USER IF NOT EXISTS 'nextcloud_app'@'%' IDENTIFIED BY '${{ secrets.NEXTCLOUD_APP_PASSWORD }}'; \
            GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextcloud_app'@'%'; \
            FLUSH PRIVILEGES;"
            
      - name: Authenticate to Portainer
        id: auth
        run: |
          RESPONSE=$(curl -X POST "${{ secrets.PI_HOST_IP }}:83/api/auth" \
            -H "Content-Type: application/json" \
            -d '{
                 "Username":"${{ vars.PORTAINER_USER }}", 
                 "Password":"${{ secrets.PI_PASSWORD }}"
                }')
          TOKEN=$(echo "$RESPONSE" | jq -r '.jwt')
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Get Stack ID (if exists)
        id: get_stack_id
        run: |
          STACKS=$(curl --fail -s -X GET "http://${{ vars.PI_HOST_IP }}:83/api/stacks" \
          -H "Authorization: Bearer ${{ steps.auth.outputs.token }}" || echo "")

          STACK_ID=$(echo "$STACKS" | jq -r '.[] | select(.Name=="nextcloud") | .Id')
          
          if [ -z "$STACK_ID" ]; then
            echo "Stack not found."
            echo "stack_id=0" >> $GITHUB_OUTPUT
          else
            echo "Stack found with ID: $STACK_ID"
            echo "stack_id=$STACK_ID" >> $GITHUB_OUTPUT
          fi

      - name: Get Portainer EndpointId
        id: endpoint
        run: |
          RESPONSE=$(curl -s -X GET "http://${{ vars.PI_HOST_IP }}:83/api/endpoints" \
            -H "Authorization: Bearer ${{ steps.auth.outputs.token }}")
          ENDPOINT_ID=$(echo "$RESPONSE" | jq '.[0].Id')
          echo "endpoint_id=$ENDPOINT_ID" >> $GITHUB_OUTPUT

      - name: Create Stack from GitHub
        if: ${{ steps.get_stack_id.outputs.stack_id == '0' }}
        run: |
          echo "Creating stack from GitHub..."
          RESPONSE=$(curl -v -s -S -X POST "http://${{ vars.PI_HOST_IP }}:83/api/stacks/create/standalone/repository?endpointId=${{ steps.endpoint.outputs.endpoint_id }}" \
          -H "Authorization: Bearer ${{ steps.auth.outputs.token }}" \
          -H "Content-Type: application/json" \
          -d '{
               "Name": "nextcloud",
               "RepositoryURL": "https://github.com/liamj-f/rpi4-docker",
               "RepositoryReferenceName": "${{ inputs.branch_name }}",
               "ComposeFile": "nextcloud-compose.yml",
               "RepositoryAuthentication": false,
               "AutoUpdate": {
                              "forcePullImage": true,
                              "forceUpdate": true,
                              "Webhook": "5313a6c3-2e45-44e7-ad69-7bfe677e24fe"
                             },
               "Env": [
                       {
                       "name":"MYSQL_HOST"
                       "value":"mysql"
                       },
                       {
                       "name":"MYSQL_DATABASE"
                       "value":"nextcloud"
                       },
                       {
                       "name":"MYSQL_USER"
                       "value":"nextcloud_app"
                       },
                       {
                        "name":"MYSQL_PASSWORD",
                        "value":"${{ secrets.NEXTCLOUD_APP_PASSWORD }}"
                        },
                       {
                        "name":"NEXTCLOUD_ADMIN_USER",
                        "value":"${{ vars.PORTAINER_USER }}"
                       },
                       {
                        "name":"NEXTCLOUD_ADMIN_PASSWORD",
                        "value":"${{ secrets.PI_PASSWORD }}"
                       }
                       ],
               ],
               "Prune": true,
               "StackFileVersion": "3"
              }')

            echo "API Response: $RESPONSE"
            echo "stack_response=$RESPONSE" >> $GITHUB_OUTPUT

      - name: Update Stack
        if: ${{ steps.get_stack_id.outputs.stack_id != '0' }}
        run: |
          curl -s -X PUT "http://${{ vars.PI_HOST_IP }}:83/api/stacks/${{ steps.get_stack_id.outputs.stack_id }}/git/redeploy?endpointId=${{ steps.endpoint.outputs.endpoint_id }}" \
          -H "Authorization: Bearer ${{ steps.auth.outputs.token }}" \
          -H "Content-Type: application/json" \
          -d '{
               "PullImage": true,
               "RepositoryReferenceName": "${{ inputs.branch_name }}",
               "repositoryAuthentication": false,
               "Env": [
                       {
                       "name":"MYSQL_HOST"
                       "value":"mysql"
                       },
                       {
                       "name":"MYSQL_DATABASE"
                       "value":"nextcloud"
                       },
                       {
                       "name":"MYSQL_USER"
                       "value":"nextcloud_app"
                       },
                       {
                        "name":"MYSQL_PASSWORD",
                        "value":"${{ secrets.NEXTCLOUD_APP_PASSWORD }}"
                        },
                       {
                        "name":"NEXTCLOUD_ADMIN_USER",
                        "value":"${{ vars.PORTAINER_USER }}"
                       },
                       {
                        "name":"NEXTCLOUD_ADMIN_PASSWORD",
                        "value":"${{ secrets.PI_PASSWORD }}"
                       }
                       ],
               ],
               "Prune": true
              }'          
    
#      - name: Trigger stack redeploy via webhook
#        run: |
#          echo "Triggering stack redeploy via webhook..."
#          RESPONSE=$(curl -s -w "HTTP %{http_code}" -X POST "http://192.168.0.2:83/api/stacks/webhooks/e56041a2-75f6-4a10-85dc-c69424de631e")
#          echo "$RESPONSE"

      - name: Rescan files in external drive
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PI_HOST_IP }}
          username: ${{ vars.PI_USER }}
          password: ${{ secrets.PI_PASSWORD }}
          script: |
            docker exec -u www-data nextcloud php occ files:scan --all
      - name: Bring down VPN
        run: |
          sudo wg-quick down ./wg0.conf
          sudo wg show   
