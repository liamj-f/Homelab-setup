var Cr = Object.defineProperty;
var Dr = (e, n, i) => n in e ? Cr(e, n, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: i
}) : e[n] = i;
var ye = (e, n, i) => Dr(e, typeof n != "symbol" ? n + "" : n, i);
import {aP as getAugmentedNamespace, aQ as dist, aR as commonjsGlobal, aS as process$1, aO as Buffer$G, aT as getDefaultExportFromCjs, as as cloneDeep, aU as assign, aV as createI18n, aW as isPlainObject, ac as isNil, aX as isFunction$1, aY as axios, aZ as trim, a_ as padStart, a$ as isObjectLike, b0 as defineStore, e as reactive, r as ref$1, b as computed} from "./vendor-vmc0LyWq.js";
import {_ as __vitePreload, C as Cx, k as ko} from "./su-C6U772VT.js";
var build = {
    exports: {}
};
function commonjsRequire(e) {
    throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')
}
var core = {
    exports: {}
}
  , cryptoBrowserify = {}
  , browser$b = {
    exports: {}
}
  , safeBuffer$2 = {
    exports: {}
};
const require$$0$2 = getAugmentedNamespace(dist);
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(e, n) {
    var i = require$$0$2
      , o = i.Buffer;
    function l(c, u) {
        for (var h in c)
            u[h] = c[h]
    }
    o.from && o.alloc && o.allocUnsafe && o.allocUnsafeSlow ? e.exports = i : (l(i, n),
    n.Buffer = a);
    function a(c, u, h) {
        return o(c, u, h)
    }
    a.prototype = Object.create(o.prototype),
    l(o, a),
    a.from = function(c, u, h) {
        if (typeof c == "number")
            throw new TypeError("Argument must not be a number");
        return o(c, u, h)
    }
    ,
    a.alloc = function(c, u, h) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        var m = o(c);
        return u !== void 0 ? typeof h == "string" ? m.fill(u, h) : m.fill(u) : m.fill(0),
        m
    }
    ,
    a.allocUnsafe = function(c) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        return o(c)
    }
    ,
    a.allocUnsafeSlow = function(c) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        return i.SlowBuffer(c)
    }
}
)(safeBuffer$2, safeBuffer$2.exports);
var safeBufferExports$1 = safeBuffer$2.exports
  , MAX_BYTES = 65536
  , MAX_UINT32 = 4294967295;
function oldBrowser$1() {
    throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`)
}
var Buffer$F = safeBufferExports$1.Buffer
  , crypto$1 = commonjsGlobal.crypto || commonjsGlobal.msCrypto;
crypto$1 && crypto$1.getRandomValues ? browser$b.exports = randomBytes$2 : browser$b.exports = oldBrowser$1;
function randomBytes$2(e, n) {
    if (e > MAX_UINT32)
        throw new RangeError("requested too many random bytes");
    var i = Buffer$F.allocUnsafe(e);
    if (e > 0)
        if (e > MAX_BYTES)
            for (var o = 0; o < e; o += MAX_BYTES)
                crypto$1.getRandomValues(i.slice(o, o + MAX_BYTES));
        else
            crypto$1.getRandomValues(i);
    return typeof n == "function" ? process$1.nextTick(function() {
        n(null, i)
    }) : i
}
var browserExports = browser$b.exports
  , inherits_browser = {
    exports: {}
};
typeof Object.create == "function" ? inherits_browser.exports = function(n, i) {
    i && (n.super_ = i,
    n.prototype = Object.create(i.prototype, {
        constructor: {
            value: n,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }))
}
: inherits_browser.exports = function(n, i) {
    if (i) {
        n.super_ = i;
        var o = function() {};
        o.prototype = i.prototype,
        n.prototype = new o,
        n.prototype.constructor = n
    }
}
;
var inherits_browserExports = inherits_browser.exports, events = {
    exports: {}
}, R = typeof Reflect == "object" ? Reflect : null, ReflectApply = R && typeof R.apply == "function" ? R.apply : function(n, i, o) {
    return Function.prototype.apply.call(n, i, o)
}
, ReflectOwnKeys;
R && typeof R.ownKeys == "function" ? ReflectOwnKeys = R.ownKeys : Object.getOwnPropertySymbols ? ReflectOwnKeys = function(n) {
    return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))
}
: ReflectOwnKeys = function(n) {
    return Object.getOwnPropertyNames(n)
}
;
function ProcessEmitWarning(e) {
    console && console.warn && console.warn(e)
}
var NumberIsNaN = Number.isNaN || function(n) {
    return n !== n
}
;
function EventEmitter() {
    EventEmitter.init.call(this)
}
events.exports = EventEmitter;
events.exports.once = once;
EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = void 0;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = void 0;
var defaultMaxListeners = 10;
function checkListener(e) {
    if (typeof e != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
}
Object.defineProperty(EventEmitter, "defaultMaxListeners", {
    enumerable: !0,
    get: function() {
        return defaultMaxListeners
    },
    set: function(e) {
        if (typeof e != "number" || e < 0 || NumberIsNaN(e))
            throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
        defaultMaxListeners = e
    }
});
EventEmitter.init = function() {
    (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null),
    this._eventsCount = 0),
    this._maxListeners = this._maxListeners || void 0
}
;
EventEmitter.prototype.setMaxListeners = function(n) {
    if (typeof n != "number" || n < 0 || NumberIsNaN(n))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
    return this._maxListeners = n,
    this
}
;
function _getMaxListeners(e) {
    return e._maxListeners === void 0 ? EventEmitter.defaultMaxListeners : e._maxListeners
}
EventEmitter.prototype.getMaxListeners = function() {
    return _getMaxListeners(this)
}
;
EventEmitter.prototype.emit = function(n) {
    for (var i = [], o = 1; o < arguments.length; o++)
        i.push(arguments[o]);
    var l = n === "error"
      , a = this._events;
    if (a !== void 0)
        l = l && a.error === void 0;
    else if (!l)
        return !1;
    if (l) {
        var c;
        if (i.length > 0 && (c = i[0]),
        c instanceof Error)
            throw c;
        var u = new Error("Unhandled error." + (c ? " (" + c.message + ")" : ""));
        throw u.context = c,
        u
    }
    var h = a[n];
    if (h === void 0)
        return !1;
    if (typeof h == "function")
        ReflectApply(h, this, i);
    else
        for (var m = h.length, d = arrayClone(h, m), o = 0; o < m; ++o)
            ReflectApply(d[o], this, i);
    return !0
}
;
function _addListener(e, n, i, o) {
    var l, a, c;
    if (checkListener(i),
    a = e._events,
    a === void 0 ? (a = e._events = Object.create(null),
    e._eventsCount = 0) : (a.newListener !== void 0 && (e.emit("newListener", n, i.listener ? i.listener : i),
    a = e._events),
    c = a[n]),
    c === void 0)
        c = a[n] = i,
        ++e._eventsCount;
    else if (typeof c == "function" ? c = a[n] = o ? [i, c] : [c, i] : o ? c.unshift(i) : c.push(i),
    l = _getMaxListeners(e),
    l > 0 && c.length > l && !c.warned) {
        c.warned = !0;
        var u = new Error("Possible EventEmitter memory leak detected. " + c.length + " " + String(n) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        u.name = "MaxListenersExceededWarning",
        u.emitter = e,
        u.type = n,
        u.count = c.length,
        ProcessEmitWarning(u)
    }
    return e
}
EventEmitter.prototype.addListener = function(n, i) {
    return _addListener(this, n, i, !1)
}
;
EventEmitter.prototype.on = EventEmitter.prototype.addListener;
EventEmitter.prototype.prependListener = function(n, i) {
    return _addListener(this, n, i, !0)
}
;
function onceWrapper() {
    if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn),
        this.fired = !0,
        arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
}
function _onceWrap(e, n, i) {
    var o = {
        fired: !1,
        wrapFn: void 0,
        target: e,
        type: n,
        listener: i
    }
      , l = onceWrapper.bind(o);
    return l.listener = i,
    o.wrapFn = l,
    l
}
EventEmitter.prototype.once = function(n, i) {
    return checkListener(i),
    this.on(n, _onceWrap(this, n, i)),
    this
}
;
EventEmitter.prototype.prependOnceListener = function(n, i) {
    return checkListener(i),
    this.prependListener(n, _onceWrap(this, n, i)),
    this
}
;
EventEmitter.prototype.removeListener = function(n, i) {
    var o, l, a, c, u;
    if (checkListener(i),
    l = this._events,
    l === void 0)
        return this;
    if (o = l[n],
    o === void 0)
        return this;
    if (o === i || o.listener === i)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete l[n],
        l.removeListener && this.emit("removeListener", n, o.listener || i));
    else if (typeof o != "function") {
        for (a = -1,
        c = o.length - 1; c >= 0; c--)
            if (o[c] === i || o[c].listener === i) {
                u = o[c].listener,
                a = c;
                break
            }
        if (a < 0)
            return this;
        a === 0 ? o.shift() : spliceOne(o, a),
        o.length === 1 && (l[n] = o[0]),
        l.removeListener !== void 0 && this.emit("removeListener", n, u || i)
    }
    return this
}
;
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.removeAllListeners = function(n) {
    var i, o, l;
    if (o = this._events,
    o === void 0)
        return this;
    if (o.removeListener === void 0)
        return arguments.length === 0 ? (this._events = Object.create(null),
        this._eventsCount = 0) : o[n] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete o[n]),
        this;
    if (arguments.length === 0) {
        var a = Object.keys(o), c;
        for (l = 0; l < a.length; ++l)
            c = a[l],
            c !== "removeListener" && this.removeAllListeners(c);
        return this.removeAllListeners("removeListener"),
        this._events = Object.create(null),
        this._eventsCount = 0,
        this
    }
    if (i = o[n],
    typeof i == "function")
        this.removeListener(n, i);
    else if (i !== void 0)
        for (l = i.length - 1; l >= 0; l--)
            this.removeListener(n, i[l]);
    return this
}
;
function _listeners(e, n, i) {
    var o = e._events;
    if (o === void 0)
        return [];
    var l = o[n];
    return l === void 0 ? [] : typeof l == "function" ? i ? [l.listener || l] : [l] : i ? unwrapListeners(l) : arrayClone(l, l.length)
}
EventEmitter.prototype.listeners = function(n) {
    return _listeners(this, n, !0)
}
;
EventEmitter.prototype.rawListeners = function(n) {
    return _listeners(this, n, !1)
}
;
EventEmitter.listenerCount = function(e, n) {
    return typeof e.listenerCount == "function" ? e.listenerCount(n) : listenerCount.call(e, n)
}
;
EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(e) {
    var n = this._events;
    if (n !== void 0) {
        var i = n[e];
        if (typeof i == "function")
            return 1;
        if (i !== void 0)
            return i.length
    }
    return 0
}
EventEmitter.prototype.eventNames = function() {
    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : []
}
;
function arrayClone(e, n) {
    for (var i = new Array(n), o = 0; o < n; ++o)
        i[o] = e[o];
    return i
}
function spliceOne(e, n) {
    for (; n + 1 < e.length; n++)
        e[n] = e[n + 1];
    e.pop()
}
function unwrapListeners(e) {
    for (var n = new Array(e.length), i = 0; i < n.length; ++i)
        n[i] = e[i].listener || e[i];
    return n
}
function once(e, n) {
    return new Promise(function(i, o) {
        function l(c) {
            e.removeListener(n, a),
            o(c)
        }
        function a() {
            typeof e.removeListener == "function" && e.removeListener("error", l),
            i([].slice.call(arguments))
        }
        eventTargetAgnosticAddListener(e, n, a, {
            once: !0
        }),
        n !== "error" && addErrorHandlerIfEventEmitter(e, l, {
            once: !0
        })
    }
    )
}
function addErrorHandlerIfEventEmitter(e, n, i) {
    typeof e.on == "function" && eventTargetAgnosticAddListener(e, "error", n, i)
}
function eventTargetAgnosticAddListener(e, n, i, o) {
    if (typeof e.on == "function")
        o.once ? e.once(n, i) : e.on(n, i);
    else if (typeof e.addEventListener == "function")
        e.addEventListener(n, function l(a) {
            o.once && e.removeEventListener(n, l),
            i(a)
        });
    else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e)
}
var eventsExports = events.exports, streamBrowser$1, hasRequiredStreamBrowser;
function requireStreamBrowser() {
    return hasRequiredStreamBrowser || (hasRequiredStreamBrowser = 1,
    streamBrowser$1 = eventsExports.EventEmitter),
    streamBrowser$1
}
var util$3 = {}, types$1 = {}, shams$1 = function() {
    if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
        return !1;
    if (typeof Symbol.iterator == "symbol")
        return !0;
    var n = {}
      , i = Symbol("test")
      , o = Object(i);
    if (typeof i == "string" || Object.prototype.toString.call(i) !== "[object Symbol]" || Object.prototype.toString.call(o) !== "[object Symbol]")
        return !1;
    var l = 42;
    n[i] = l;
    for (var a in n)
        return !1;
    if (typeof Object.keys == "function" && Object.keys(n).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(n).length !== 0)
        return !1;
    var c = Object.getOwnPropertySymbols(n);
    if (c.length !== 1 || c[0] !== i || !Object.prototype.propertyIsEnumerable.call(n, i))
        return !1;
    if (typeof Object.getOwnPropertyDescriptor == "function") {
        var u = Object.getOwnPropertyDescriptor(n, i);
        if (u.value !== l || u.enumerable !== !0)
            return !1
    }
    return !0
}, shams, hasRequiredShams;
function requireShams() {
    if (hasRequiredShams)
        return shams;
    hasRequiredShams = 1;
    var e = shams$1;
    return shams = function() {
        return e() && !!Symbol.toStringTag
    }
    ,
    shams
}
var esObjectAtoms = Object
  , esErrors = Error
  , _eval = EvalError
  , range = RangeError
  , ref = ReferenceError
  , syntax = SyntaxError
  , type = TypeError
  , uri = URIError
  , abs$1 = Math.abs
  , floor$1 = Math.floor
  , max$2 = Math.max
  , min$1 = Math.min
  , pow$1 = Math.pow
  , round$1 = Math.round
  , _isNaN = Number.isNaN || function(n) {
    return n !== n
}
  , $isNaN = _isNaN
  , sign$2 = function(n) {
    return $isNaN(n) || n === 0 ? n : n < 0 ? -1 : 1
}
  , gOPD$2 = Object.getOwnPropertyDescriptor
  , $gOPD$1 = gOPD$2;
if ($gOPD$1)
    try {
        $gOPD$1([], "length")
    } catch {
        $gOPD$1 = null
    }
var gopd$1 = $gOPD$1
  , $defineProperty$3 = Object.defineProperty || !1;
if ($defineProperty$3)
    try {
        $defineProperty$3({}, "a", {
            value: 1
        })
    } catch {
        $defineProperty$3 = !1
    }
var esDefineProperty = $defineProperty$3, hasSymbols$2, hasRequiredHasSymbols;
function requireHasSymbols() {
    if (hasRequiredHasSymbols)
        return hasSymbols$2;
    hasRequiredHasSymbols = 1;
    var e = typeof Symbol < "u" && Symbol
      , n = shams$1;
    return hasSymbols$2 = function() {
        return typeof e != "function" || typeof Symbol != "function" || typeof e("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : n()
    }
    ,
    hasSymbols$2
}
var Reflect_getPrototypeOf, hasRequiredReflect_getPrototypeOf;
function requireReflect_getPrototypeOf() {
    return hasRequiredReflect_getPrototypeOf || (hasRequiredReflect_getPrototypeOf = 1,
    Reflect_getPrototypeOf = typeof Reflect < "u" && Reflect.getPrototypeOf || null),
    Reflect_getPrototypeOf
}
var Object_getPrototypeOf, hasRequiredObject_getPrototypeOf;
function requireObject_getPrototypeOf() {
    if (hasRequiredObject_getPrototypeOf)
        return Object_getPrototypeOf;
    hasRequiredObject_getPrototypeOf = 1;
    var e = esObjectAtoms;
    return Object_getPrototypeOf = e.getPrototypeOf || null,
    Object_getPrototypeOf
}
var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ", toStr$2 = Object.prototype.toString, max$1 = Math.max, funcType = "[object Function]", concatty = function(n, i) {
    for (var o = [], l = 0; l < n.length; l += 1)
        o[l] = n[l];
    for (var a = 0; a < i.length; a += 1)
        o[a + n.length] = i[a];
    return o
}, slicy = function(n, i) {
    for (var o = [], l = i, a = 0; l < n.length; l += 1,
    a += 1)
        o[a] = n[l];
    return o
}, joiny = function(e, n) {
    for (var i = "", o = 0; o < e.length; o += 1)
        i += e[o],
        o + 1 < e.length && (i += n);
    return i
}, implementation$7 = function(n) {
    var i = this;
    if (typeof i != "function" || toStr$2.apply(i) !== funcType)
        throw new TypeError(ERROR_MESSAGE + i);
    for (var o = slicy(arguments, 1), l, a = function() {
        if (this instanceof l) {
            var d = i.apply(this, concatty(o, arguments));
            return Object(d) === d ? d : this
        }
        return i.apply(n, concatty(o, arguments))
    }, c = max$1(0, i.length - o.length), u = [], h = 0; h < c; h++)
        u[h] = "$" + h;
    if (l = Function("binder", "return function (" + joiny(u, ",") + "){ return binder.apply(this,arguments); }")(a),
    i.prototype) {
        var m = function() {};
        m.prototype = i.prototype,
        l.prototype = new m,
        m.prototype = null
    }
    return l
}, implementation$6 = implementation$7, functionBind = Function.prototype.bind || implementation$6, functionCall = Function.prototype.call, functionApply = Function.prototype.apply, reflectApply = typeof Reflect < "u" && Reflect && Reflect.apply, bind$3 = functionBind, $apply$2 = functionApply, $call$2 = functionCall, $reflectApply = reflectApply, actualApply$1 = $reflectApply || bind$3.call($call$2, $apply$2), bind$2 = functionBind, $TypeError$5 = type, $call$1 = functionCall, $actualApply = actualApply$1, callBindApplyHelpers = function(n) {
    if (n.length < 1 || typeof n[0] != "function")
        throw new $TypeError$5("a function is required");
    return $actualApply(bind$2, $call$1, n)
}, get, hasRequiredGet;
function requireGet() {
    if (hasRequiredGet)
        return get;
    hasRequiredGet = 1;
    var e = callBindApplyHelpers, n = gopd$1, i;
    try {
        i = [].__proto__ === Array.prototype
    } catch (c) {
        if (!c || typeof c != "object" || !("code"in c) || c.code !== "ERR_PROTO_ACCESS")
            throw c
    }
    var o = !!i && n && n(Object.prototype, "__proto__")
      , l = Object
      , a = l.getPrototypeOf;
    return get = o && typeof o.get == "function" ? e([o.get]) : typeof a == "function" ? function(u) {
        return a(u == null ? u : l(u))
    }
    : !1,
    get
}
var getProto$2, hasRequiredGetProto;
function requireGetProto() {
    if (hasRequiredGetProto)
        return getProto$2;
    hasRequiredGetProto = 1;
    var e = requireReflect_getPrototypeOf()
      , n = requireObject_getPrototypeOf()
      , i = requireGet();
    return getProto$2 = e ? function(l) {
        return e(l)
    }
    : n ? function(l) {
        if (!l || typeof l != "object" && typeof l != "function")
            throw new TypeError("getProto: not an object");
        return n(l)
    }
    : i ? function(l) {
        return i(l)
    }
    : null,
    getProto$2
}
var hasown, hasRequiredHasown;
function requireHasown() {
    if (hasRequiredHasown)
        return hasown;
    hasRequiredHasown = 1;
    var e = Function.prototype.call
      , n = Object.prototype.hasOwnProperty
      , i = functionBind;
    return hasown = i.call(e, n),
    hasown
}
var undefined$1, $Object$1 = esObjectAtoms, $Error = esErrors, $EvalError = _eval, $RangeError = range, $ReferenceError = ref, $SyntaxError$1 = syntax, $TypeError$4 = type, $URIError = uri, abs = abs$1, floor = floor$1, max = max$2, min = min$1, pow = pow$1, round = round$1, sign$1 = sign$2, $Function = Function, getEvalledConstructor = function(e) {
    try {
        return $Function('"use strict"; return (' + e + ").constructor;")()
    } catch {}
}, $gOPD = gopd$1, $defineProperty$2 = esDefineProperty, throwTypeError = function() {
    throw new $TypeError$4
}, ThrowTypeError = $gOPD ? function() {
    try {
        return arguments.callee,
        throwTypeError
    } catch {
        try {
            return $gOPD(arguments, "callee").get
        } catch {
            return throwTypeError
        }
    }
}() : throwTypeError, hasSymbols$1 = requireHasSymbols()(), getProto$1 = requireGetProto(), $ObjectGPO = requireObject_getPrototypeOf(), $ReflectGPO = requireReflect_getPrototypeOf(), $apply$1 = functionApply, $call = functionCall, needsEval = {}, TypedArray = typeof Uint8Array > "u" || !getProto$1 ? undefined$1 : getProto$1(Uint8Array), INTRINSICS = {
    __proto__: null,
    "%AggregateError%": typeof AggregateError > "u" ? undefined$1 : AggregateError,
    "%Array%": Array,
    "%ArrayBuffer%": typeof ArrayBuffer > "u" ? undefined$1 : ArrayBuffer,
    "%ArrayIteratorPrototype%": hasSymbols$1 && getProto$1 ? getProto$1([][Symbol.iterator]()) : undefined$1,
    "%AsyncFromSyncIteratorPrototype%": undefined$1,
    "%AsyncFunction%": needsEval,
    "%AsyncGenerator%": needsEval,
    "%AsyncGeneratorFunction%": needsEval,
    "%AsyncIteratorPrototype%": needsEval,
    "%Atomics%": typeof Atomics > "u" ? undefined$1 : Atomics,
    "%BigInt%": typeof BigInt > "u" ? undefined$1 : BigInt,
    "%BigInt64Array%": typeof BigInt64Array > "u" ? undefined$1 : BigInt64Array,
    "%BigUint64Array%": typeof BigUint64Array > "u" ? undefined$1 : BigUint64Array,
    "%Boolean%": Boolean,
    "%DataView%": typeof DataView > "u" ? undefined$1 : DataView,
    "%Date%": Date,
    "%decodeURI%": decodeURI,
    "%decodeURIComponent%": decodeURIComponent,
    "%encodeURI%": encodeURI,
    "%encodeURIComponent%": encodeURIComponent,
    "%Error%": $Error,
    "%eval%": eval,
    "%EvalError%": $EvalError,
    "%Float16Array%": typeof Float16Array > "u" ? undefined$1 : Float16Array,
    "%Float32Array%": typeof Float32Array > "u" ? undefined$1 : Float32Array,
    "%Float64Array%": typeof Float64Array > "u" ? undefined$1 : Float64Array,
    "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? undefined$1 : FinalizationRegistry,
    "%Function%": $Function,
    "%GeneratorFunction%": needsEval,
    "%Int8Array%": typeof Int8Array > "u" ? undefined$1 : Int8Array,
    "%Int16Array%": typeof Int16Array > "u" ? undefined$1 : Int16Array,
    "%Int32Array%": typeof Int32Array > "u" ? undefined$1 : Int32Array,
    "%isFinite%": isFinite,
    "%isNaN%": isNaN,
    "%IteratorPrototype%": hasSymbols$1 && getProto$1 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1,
    "%JSON%": typeof JSON == "object" ? JSON : undefined$1,
    "%Map%": typeof Map > "u" ? undefined$1 : Map,
    "%MapIteratorPrototype%": typeof Map > "u" || !hasSymbols$1 || !getProto$1 ? undefined$1 : getProto$1(new Map()[Symbol.iterator]()),
    "%Math%": Math,
    "%Number%": Number,
    "%Object%": $Object$1,
    "%Object.getOwnPropertyDescriptor%": $gOPD,
    "%parseFloat%": parseFloat,
    "%parseInt%": parseInt,
    "%Promise%": typeof Promise > "u" ? undefined$1 : Promise,
    "%Proxy%": typeof Proxy > "u" ? undefined$1 : Proxy,
    "%RangeError%": $RangeError,
    "%ReferenceError%": $ReferenceError,
    "%Reflect%": typeof Reflect > "u" ? undefined$1 : Reflect,
    "%RegExp%": RegExp,
    "%Set%": typeof Set > "u" ? undefined$1 : Set,
    "%SetIteratorPrototype%": typeof Set > "u" || !hasSymbols$1 || !getProto$1 ? undefined$1 : getProto$1(new Set()[Symbol.iterator]()),
    "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? undefined$1 : SharedArrayBuffer,
    "%String%": String,
    "%StringIteratorPrototype%": hasSymbols$1 && getProto$1 ? getProto$1(""[Symbol.iterator]()) : undefined$1,
    "%Symbol%": hasSymbols$1 ? Symbol : undefined$1,
    "%SyntaxError%": $SyntaxError$1,
    "%ThrowTypeError%": ThrowTypeError,
    "%TypedArray%": TypedArray,
    "%TypeError%": $TypeError$4,
    "%Uint8Array%": typeof Uint8Array > "u" ? undefined$1 : Uint8Array,
    "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? undefined$1 : Uint8ClampedArray,
    "%Uint16Array%": typeof Uint16Array > "u" ? undefined$1 : Uint16Array,
    "%Uint32Array%": typeof Uint32Array > "u" ? undefined$1 : Uint32Array,
    "%URIError%": $URIError,
    "%WeakMap%": typeof WeakMap > "u" ? undefined$1 : WeakMap,
    "%WeakRef%": typeof WeakRef > "u" ? undefined$1 : WeakRef,
    "%WeakSet%": typeof WeakSet > "u" ? undefined$1 : WeakSet,
    "%Function.prototype.call%": $call,
    "%Function.prototype.apply%": $apply$1,
    "%Object.defineProperty%": $defineProperty$2,
    "%Object.getPrototypeOf%": $ObjectGPO,
    "%Math.abs%": abs,
    "%Math.floor%": floor,
    "%Math.max%": max,
    "%Math.min%": min,
    "%Math.pow%": pow,
    "%Math.round%": round,
    "%Math.sign%": sign$1,
    "%Reflect.getPrototypeOf%": $ReflectGPO
};
if (getProto$1)
    try {
        null.error
    } catch (e) {
        var errorProto = getProto$1(getProto$1(e));
        INTRINSICS["%Error.prototype%"] = errorProto
    }
var doEval = function e(n) {
    var i;
    if (n === "%AsyncFunction%")
        i = getEvalledConstructor("async function () {}");
    else if (n === "%GeneratorFunction%")
        i = getEvalledConstructor("function* () {}");
    else if (n === "%AsyncGeneratorFunction%")
        i = getEvalledConstructor("async function* () {}");
    else if (n === "%AsyncGenerator%") {
        var o = e("%AsyncGeneratorFunction%");
        o && (i = o.prototype)
    } else if (n === "%AsyncIteratorPrototype%") {
        var l = e("%AsyncGenerator%");
        l && getProto$1 && (i = getProto$1(l.prototype))
    }
    return INTRINSICS[n] = i,
    i
}
  , LEGACY_ALIASES = {
    __proto__: null,
    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
    "%ArrayPrototype%": ["Array", "prototype"],
    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
    "%ArrayProto_values%": ["Array", "prototype", "values"],
    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
    "%BooleanPrototype%": ["Boolean", "prototype"],
    "%DataViewPrototype%": ["DataView", "prototype"],
    "%DatePrototype%": ["Date", "prototype"],
    "%ErrorPrototype%": ["Error", "prototype"],
    "%EvalErrorPrototype%": ["EvalError", "prototype"],
    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
    "%FunctionPrototype%": ["Function", "prototype"],
    "%Generator%": ["GeneratorFunction", "prototype"],
    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
    "%JSONParse%": ["JSON", "parse"],
    "%JSONStringify%": ["JSON", "stringify"],
    "%MapPrototype%": ["Map", "prototype"],
    "%NumberPrototype%": ["Number", "prototype"],
    "%ObjectPrototype%": ["Object", "prototype"],
    "%ObjProto_toString%": ["Object", "prototype", "toString"],
    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
    "%PromisePrototype%": ["Promise", "prototype"],
    "%PromiseProto_then%": ["Promise", "prototype", "then"],
    "%Promise_all%": ["Promise", "all"],
    "%Promise_reject%": ["Promise", "reject"],
    "%Promise_resolve%": ["Promise", "resolve"],
    "%RangeErrorPrototype%": ["RangeError", "prototype"],
    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
    "%RegExpPrototype%": ["RegExp", "prototype"],
    "%SetPrototype%": ["Set", "prototype"],
    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
    "%StringPrototype%": ["String", "prototype"],
    "%SymbolPrototype%": ["Symbol", "prototype"],
    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
    "%TypeErrorPrototype%": ["TypeError", "prototype"],
    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
    "%URIErrorPrototype%": ["URIError", "prototype"],
    "%WeakMapPrototype%": ["WeakMap", "prototype"],
    "%WeakSetPrototype%": ["WeakSet", "prototype"]
}
  , bind$1 = functionBind
  , hasOwn$1 = requireHasown()
  , $concat = bind$1.call($call, Array.prototype.concat)
  , $spliceApply = bind$1.call($apply$1, Array.prototype.splice)
  , $replace = bind$1.call($call, String.prototype.replace)
  , $strSlice = bind$1.call($call, String.prototype.slice)
  , $exec$2 = bind$1.call($call, RegExp.prototype.exec)
  , rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g
  , reEscapeChar = /\\(\\)?/g
  , stringToPath = function(n) {
    var i = $strSlice(n, 0, 1)
      , o = $strSlice(n, -1);
    if (i === "%" && o !== "%")
        throw new $SyntaxError$1("invalid intrinsic syntax, expected closing `%`");
    if (o === "%" && i !== "%")
        throw new $SyntaxError$1("invalid intrinsic syntax, expected opening `%`");
    var l = [];
    return $replace(n, rePropName, function(a, c, u, h) {
        l[l.length] = u ? $replace(h, reEscapeChar, "$1") : c || a
    }),
    l
}
  , getBaseIntrinsic = function(n, i) {
    var o = n, l;
    if (hasOwn$1(LEGACY_ALIASES, o) && (l = LEGACY_ALIASES[o],
    o = "%" + l[0] + "%"),
    hasOwn$1(INTRINSICS, o)) {
        var a = INTRINSICS[o];
        if (a === needsEval && (a = doEval(o)),
        typeof a > "u" && !i)
            throw new $TypeError$4("intrinsic " + n + " exists, but is not available. Please file an issue!");
        return {
            alias: l,
            name: o,
            value: a
        }
    }
    throw new $SyntaxError$1("intrinsic " + n + " does not exist!")
}
  , getIntrinsic = function(n, i) {
    if (typeof n != "string" || n.length === 0)
        throw new $TypeError$4("intrinsic name must be a non-empty string");
    if (arguments.length > 1 && typeof i != "boolean")
        throw new $TypeError$4('"allowMissing" argument must be a boolean');
    if ($exec$2(/^%?[^%]*%?$/, n) === null)
        throw new $SyntaxError$1("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
    var o = stringToPath(n)
      , l = o.length > 0 ? o[0] : ""
      , a = getBaseIntrinsic("%" + l + "%", i)
      , c = a.name
      , u = a.value
      , h = !1
      , m = a.alias;
    m && (l = m[0],
    $spliceApply(o, $concat([0, 1], m)));
    for (var d = 1, p = !0; d < o.length; d += 1) {
        var b = o[d]
          , g = $strSlice(b, 0, 1)
          , $ = $strSlice(b, -1);
        if ((g === '"' || g === "'" || g === "`" || $ === '"' || $ === "'" || $ === "`") && g !== $)
            throw new $SyntaxError$1("property names with quotes must have matching quotes");
        if ((b === "constructor" || !p) && (h = !0),
        l += "." + b,
        c = "%" + l + "%",
        hasOwn$1(INTRINSICS, c))
            u = INTRINSICS[c];
        else if (u != null) {
            if (!(b in u)) {
                if (!i)
                    throw new $TypeError$4("base intrinsic for " + n + " exists, but the property is not available.");
                return
            }
            if ($gOPD && d + 1 >= o.length) {
                var N = $gOPD(u, b);
                p = !!N,
                p && "get"in N && !("originalValue"in N.get) ? u = N.get : u = u[b]
            } else
                p = hasOwn$1(u, b),
                u = u[b];
            p && !h && (INTRINSICS[c] = u)
        }
    }
    return u
}
  , GetIntrinsic$2 = getIntrinsic
  , callBindBasic = callBindApplyHelpers
  , $indexOf$1 = callBindBasic([GetIntrinsic$2("%String.prototype.indexOf%")])
  , callBound$7 = function(n, i) {
    var o = GetIntrinsic$2(n, !!i);
    return typeof o == "function" && $indexOf$1(n, ".prototype.") > -1 ? callBindBasic([o]) : o
}
  , hasToStringTag$2 = requireShams()()
  , callBound$6 = callBound$7
  , $toString$1 = callBound$6("Object.prototype.toString")
  , isStandardArguments = function(n) {
    return hasToStringTag$2 && n && typeof n == "object" && Symbol.toStringTag in n ? !1 : $toString$1(n) === "[object Arguments]"
}
  , isLegacyArguments = function(n) {
    return isStandardArguments(n) ? !0 : n !== null && typeof n == "object" && "length"in n && typeof n.length == "number" && n.length >= 0 && $toString$1(n) !== "[object Array]" && "callee"in n && $toString$1(n.callee) === "[object Function]"
}
  , supportsStandardArguments = function() {
    return isStandardArguments(arguments)
}();
isStandardArguments.isLegacyArguments = isLegacyArguments;
var isArguments$1 = supportsStandardArguments ? isStandardArguments : isLegacyArguments, callBound$5 = callBound$7, hasToStringTag$1 = requireShams()(), hasOwn = requireHasown(), gOPD$1 = gopd$1, fn;
if (hasToStringTag$1) {
    var $exec$1 = callBound$5("RegExp.prototype.exec")
      , isRegexMarker = {}
      , throwRegexMarker = function() {
        throw isRegexMarker
    }
      , badStringifier = {
        toString: throwRegexMarker,
        valueOf: throwRegexMarker
    };
    typeof Symbol.toPrimitive == "symbol" && (badStringifier[Symbol.toPrimitive] = throwRegexMarker),
    fn = function(n) {
        if (!n || typeof n != "object")
            return !1;
        var i = gOPD$1(n, "lastIndex")
          , o = i && hasOwn(i, "value");
        if (!o)
            return !1;
        try {
            $exec$1(n, badStringifier)
        } catch (l) {
            return l === isRegexMarker
        }
    }
} else {
    var $toString = callBound$5("Object.prototype.toString")
      , regexClass = "[object RegExp]";
    fn = function(n) {
        return !n || typeof n != "object" && typeof n != "function" ? !1 : $toString(n) === regexClass
    }
}
var isRegex$1 = fn, callBound$4 = callBound$7, isRegex = isRegex$1, $exec = callBound$4("RegExp.prototype.exec"), $TypeError$3 = type, safeRegexTest$1 = function(n) {
    if (!isRegex(n))
        throw new $TypeError$3("`regex` must be a RegExp");
    return function(o) {
        return $exec(n, o) !== null
    }
}, callBound$3 = callBound$7, safeRegexTest = safeRegexTest$1, isFnRegex = safeRegexTest(/^\s*(?:function)?\*/), hasToStringTag = requireShams()(), getProto = requireGetProto(), toStr$1 = callBound$3("Object.prototype.toString"), fnToStr = callBound$3("Function.prototype.toString"), getGeneratorFunc = function() {
    if (!hasToStringTag)
        return !1;
    try {
        return Function("return function*() {}")()
    } catch {}
}, GeneratorFunction, isGeneratorFunction = function(n) {
    if (typeof n != "function")
        return !1;
    if (isFnRegex(fnToStr(n)))
        return !0;
    if (!hasToStringTag) {
        var i = toStr$1(n);
        return i === "[object GeneratorFunction]"
    }
    if (!getProto)
        return !1;
    if (typeof GeneratorFunction > "u") {
        var o = getGeneratorFunc();
        GeneratorFunction = o ? getProto(o) : !1
    }
    return getProto(n) === GeneratorFunction
}, isCallable, hasRequiredIsCallable;
function requireIsCallable() {
    if (hasRequiredIsCallable)
        return isCallable;
    hasRequiredIsCallable = 1;
    var e = Function.prototype.toString, n = typeof Reflect == "object" && Reflect !== null && Reflect.apply, i, o;
    if (typeof n == "function" && typeof Object.defineProperty == "function")
        try {
            i = Object.defineProperty({}, "length", {
                get: function() {
                    throw o
                }
            }),
            o = {},
            n(function() {
                throw 42
            }, null, i)
        } catch (T) {
            T !== o && (n = null)
        }
    else
        n = null;
    var l = /^\s*class\b/
      , a = function(M) {
        try {
            var q = e.call(M);
            return l.test(q)
        } catch {
            return !1
        }
    }
      , c = function(M) {
        try {
            return a(M) ? !1 : (e.call(M),
            !0)
        } catch {
            return !1
        }
    }
      , u = Object.prototype.toString
      , h = "[object Object]"
      , m = "[object Function]"
      , d = "[object GeneratorFunction]"
      , p = "[object HTMLAllCollection]"
      , b = "[object HTML document.all class]"
      , g = "[object HTMLCollection]"
      , $ = typeof Symbol == "function" && !!Symbol.toStringTag
      , N = !(0 in [, ])
      , I = function() {
        return !1
    };
    if (typeof document == "object") {
        var L = document.all;
        u.call(L) === u.call(document.all) && (I = function(M) {
            if ((N || !M) && (typeof M > "u" || typeof M == "object"))
                try {
                    var q = u.call(M);
                    return (q === p || q === b || q === g || q === h) && M("") == null
                } catch {}
            return !1
        }
        )
    }
    return isCallable = n ? function(M) {
        if (I(M))
            return !0;
        if (!M || typeof M != "function" && typeof M != "object")
            return !1;
        try {
            n(M, null, i)
        } catch (q) {
            if (q !== o)
                return !1
        }
        return !a(M) && c(M)
    }
    : function(M) {
        if (I(M))
            return !0;
        if (!M || typeof M != "function" && typeof M != "object")
            return !1;
        if ($)
            return c(M);
        if (a(M))
            return !1;
        var q = u.call(M);
        return q !== m && q !== d && !/^\[object HTML/.test(q) ? !1 : c(M)
    }
    ,
    isCallable
}
var forEach, hasRequiredForEach;
function requireForEach() {
    if (hasRequiredForEach)
        return forEach;
    hasRequiredForEach = 1;
    var e = requireIsCallable()
      , n = Object.prototype.toString
      , i = Object.prototype.hasOwnProperty
      , o = function(h, m, d) {
        for (var p = 0, b = h.length; p < b; p++)
            i.call(h, p) && (d == null ? m(h[p], p, h) : m.call(d, h[p], p, h))
    }
      , l = function(h, m, d) {
        for (var p = 0, b = h.length; p < b; p++)
            d == null ? m(h.charAt(p), p, h) : m.call(d, h.charAt(p), p, h)
    }
      , a = function(h, m, d) {
        for (var p in h)
            i.call(h, p) && (d == null ? m(h[p], p, h) : m.call(d, h[p], p, h))
    };
    function c(u) {
        return n.call(u) === "[object Array]"
    }
    return forEach = function(h, m, d) {
        if (!e(m))
            throw new TypeError("iterator must be a function");
        var p;
        arguments.length >= 3 && (p = d),
        c(h) ? o(h, m, p) : typeof h == "string" ? l(h, m, p) : a(h, m, p)
    }
    ,
    forEach
}
var possibleTypedArrayNames, hasRequiredPossibleTypedArrayNames;
function requirePossibleTypedArrayNames() {
    return hasRequiredPossibleTypedArrayNames || (hasRequiredPossibleTypedArrayNames = 1,
    possibleTypedArrayNames = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"]),
    possibleTypedArrayNames
}
var availableTypedArrays, hasRequiredAvailableTypedArrays;
function requireAvailableTypedArrays() {
    if (hasRequiredAvailableTypedArrays)
        return availableTypedArrays;
    hasRequiredAvailableTypedArrays = 1;
    var e = requirePossibleTypedArrayNames()
      , n = typeof globalThis > "u" ? commonjsGlobal : globalThis;
    return availableTypedArrays = function() {
        for (var o = [], l = 0; l < e.length; l++)
            typeof n[e[l]] == "function" && (o[o.length] = e[l]);
        return o
    }
    ,
    availableTypedArrays
}
var callBind$1 = {
    exports: {}
}
  , $defineProperty$1 = esDefineProperty
  , $SyntaxError = syntax
  , $TypeError$2 = type
  , gopd = gopd$1
  , defineDataProperty = function(n, i, o) {
    if (!n || typeof n != "object" && typeof n != "function")
        throw new $TypeError$2("`obj` must be an object or a function`");
    if (typeof i != "string" && typeof i != "symbol")
        throw new $TypeError$2("`property` must be a string or a symbol`");
    if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
        throw new $TypeError$2("`nonEnumerable`, if provided, must be a boolean or null");
    if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
        throw new $TypeError$2("`nonWritable`, if provided, must be a boolean or null");
    if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
        throw new $TypeError$2("`nonConfigurable`, if provided, must be a boolean or null");
    if (arguments.length > 6 && typeof arguments[6] != "boolean")
        throw new $TypeError$2("`loose`, if provided, must be a boolean");
    var l = arguments.length > 3 ? arguments[3] : null
      , a = arguments.length > 4 ? arguments[4] : null
      , c = arguments.length > 5 ? arguments[5] : null
      , u = arguments.length > 6 ? arguments[6] : !1
      , h = !!gopd && gopd(n, i);
    if ($defineProperty$1)
        $defineProperty$1(n, i, {
            configurable: c === null && h ? h.configurable : !c,
            enumerable: l === null && h ? h.enumerable : !l,
            value: o,
            writable: a === null && h ? h.writable : !a
        });
    else if (u || !l && !a && !c)
        n[i] = o;
    else
        throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.")
}
  , $defineProperty = esDefineProperty
  , hasPropertyDescriptors = function() {
    return !!$defineProperty
};
hasPropertyDescriptors.hasArrayLengthDefineBug = function() {
    if (!$defineProperty)
        return null;
    try {
        return $defineProperty([], "length", {
            value: 1
        }).length !== 1
    } catch {
        return !0
    }
}
;
var hasPropertyDescriptors_1 = hasPropertyDescriptors
  , GetIntrinsic$1 = getIntrinsic
  , define = defineDataProperty
  , hasDescriptors = hasPropertyDescriptors_1()
  , gOPD = gopd$1
  , $TypeError$1 = type
  , $floor = GetIntrinsic$1("%Math.floor%")
  , setFunctionLength = function(n, i) {
    if (typeof n != "function")
        throw new $TypeError$1("`fn` is not a function");
    if (typeof i != "number" || i < 0 || i > 4294967295 || $floor(i) !== i)
        throw new $TypeError$1("`length` must be a positive 32-bit integer");
    var o = arguments.length > 2 && !!arguments[2]
      , l = !0
      , a = !0;
    if ("length"in n && gOPD) {
        var c = gOPD(n, "length");
        c && !c.configurable && (l = !1),
        c && !c.writable && (a = !1)
    }
    return (l || a || !o) && (hasDescriptors ? define(n, "length", i, !0, !0) : define(n, "length", i)),
    n
}
  , bind = functionBind
  , $apply = functionApply
  , actualApply = actualApply$1
  , applyBind = function() {
    return actualApply(bind, $apply, arguments)
};
(function(e) {
    var n = setFunctionLength
      , i = esDefineProperty
      , o = callBindApplyHelpers
      , l = applyBind;
    e.exports = function(c) {
        var u = o(arguments)
          , h = c.length - (arguments.length - 1);
        return n(u, 1 + (h > 0 ? h : 0), !0)
    }
    ,
    i ? i(e.exports, "apply", {
        value: l
    }) : e.exports.apply = l
}
)(callBind$1);
var callBindExports = callBind$1.exports, whichTypedArray, hasRequiredWhichTypedArray;
function requireWhichTypedArray() {
    if (hasRequiredWhichTypedArray)
        return whichTypedArray;
    hasRequiredWhichTypedArray = 1;
    var e = requireForEach()
      , n = requireAvailableTypedArrays()
      , i = callBindExports
      , o = callBound$7
      , l = gopd$1
      , a = requireGetProto()
      , c = o("Object.prototype.toString")
      , u = requireShams()()
      , h = typeof globalThis > "u" ? commonjsGlobal : globalThis
      , m = n()
      , d = o("String.prototype.slice")
      , p = o("Array.prototype.indexOf", !0) || function(I, L) {
        for (var T = 0; T < I.length; T += 1)
            if (I[T] === L)
                return T;
        return -1
    }
      , b = {
        __proto__: null
    };
    u && l && a ? e(m, function(N) {
        var I = new h[N];
        if (Symbol.toStringTag in I && a) {
            var L = a(I)
              , T = l(L, Symbol.toStringTag);
            if (!T && L) {
                var M = a(L);
                T = l(M, Symbol.toStringTag)
            }
            b["$" + N] = i(T.get)
        }
    }) : e(m, function(N) {
        var I = new h[N]
          , L = I.slice || I.set;
        L && (b["$" + N] = i(L))
    });
    var g = function(I) {
        var L = !1;
        return e(b, function(T, M) {
            if (!L)
                try {
                    "$" + T(I) === M && (L = d(M, 1))
                } catch {}
        }),
        L
    }
      , $ = function(I) {
        var L = !1;
        return e(b, function(T, M) {
            if (!L)
                try {
                    T(I),
                    L = d(M, 1)
                } catch {}
        }),
        L
    };
    return whichTypedArray = function(I) {
        if (!I || typeof I != "object")
            return !1;
        if (!u) {
            var L = d(c(I), 8, -1);
            return p(m, L) > -1 ? L : L !== "Object" ? !1 : $(I)
        }
        return l ? g(I) : null
    }
    ,
    whichTypedArray
}
var isTypedArray$1, hasRequiredIsTypedArray;
function requireIsTypedArray() {
    if (hasRequiredIsTypedArray)
        return isTypedArray$1;
    hasRequiredIsTypedArray = 1;
    var e = requireWhichTypedArray();
    return isTypedArray$1 = function(i) {
        return !!e(i)
    }
    ,
    isTypedArray$1
}
(function(e) {
    var n = isArguments$1
      , i = isGeneratorFunction
      , o = requireWhichTypedArray()
      , l = requireIsTypedArray();
    function a(ce) {
        return ce.call.bind(ce)
    }
    var c = typeof BigInt < "u"
      , u = typeof Symbol < "u"
      , h = a(Object.prototype.toString)
      , m = a(Number.prototype.valueOf)
      , d = a(String.prototype.valueOf)
      , p = a(Boolean.prototype.valueOf);
    if (c)
        var b = a(BigInt.prototype.valueOf);
    if (u)
        var g = a(Symbol.prototype.valueOf);
    function $(ce, De) {
        if (typeof ce != "object")
            return !1;
        try {
            return De(ce),
            !0
        } catch {
            return !1
        }
    }
    e.isArgumentsObject = n,
    e.isGeneratorFunction = i,
    e.isTypedArray = l;
    function N(ce) {
        return typeof Promise < "u" && ce instanceof Promise || ce !== null && typeof ce == "object" && typeof ce.then == "function" && typeof ce.catch == "function"
    }
    e.isPromise = N;
    function I(ce) {
        return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(ce) : l(ce) || k(ce)
    }
    e.isArrayBufferView = I;
    function L(ce) {
        return o(ce) === "Uint8Array"
    }
    e.isUint8Array = L;
    function T(ce) {
        return o(ce) === "Uint8ClampedArray"
    }
    e.isUint8ClampedArray = T;
    function M(ce) {
        return o(ce) === "Uint16Array"
    }
    e.isUint16Array = M;
    function q(ce) {
        return o(ce) === "Uint32Array"
    }
    e.isUint32Array = q;
    function Q(ce) {
        return o(ce) === "Int8Array"
    }
    e.isInt8Array = Q;
    function Y(ce) {
        return o(ce) === "Int16Array"
    }
    e.isInt16Array = Y;
    function ee(ce) {
        return o(ce) === "Int32Array"
    }
    e.isInt32Array = ee;
    function ie(ce) {
        return o(ce) === "Float32Array"
    }
    e.isFloat32Array = ie;
    function te(ce) {
        return o(ce) === "Float64Array"
    }
    e.isFloat64Array = te;
    function ne(ce) {
        return o(ce) === "BigInt64Array"
    }
    e.isBigInt64Array = ne;
    function V(ce) {
        return o(ce) === "BigUint64Array"
    }
    e.isBigUint64Array = V;
    function w(ce) {
        return h(ce) === "[object Map]"
    }
    w.working = typeof Map < "u" && w(new Map);
    function x(ce) {
        return typeof Map > "u" ? !1 : w.working ? w(ce) : ce instanceof Map
    }
    e.isMap = x;
    function v(ce) {
        return h(ce) === "[object Set]"
    }
    v.working = typeof Set < "u" && v(new Set);
    function S(ce) {
        return typeof Set > "u" ? !1 : v.working ? v(ce) : ce instanceof Set
    }
    e.isSet = S;
    function D(ce) {
        return h(ce) === "[object WeakMap]"
    }
    D.working = typeof WeakMap < "u" && D(new WeakMap);
    function C(ce) {
        return typeof WeakMap > "u" ? !1 : D.working ? D(ce) : ce instanceof WeakMap
    }
    e.isWeakMap = C;
    function O(ce) {
        return h(ce) === "[object WeakSet]"
    }
    O.working = typeof WeakSet < "u" && O(new WeakSet);
    function P(ce) {
        return O(ce)
    }
    e.isWeakSet = P;
    function y(ce) {
        return h(ce) === "[object ArrayBuffer]"
    }
    y.working = typeof ArrayBuffer < "u" && y(new ArrayBuffer);
    function A(ce) {
        return typeof ArrayBuffer > "u" ? !1 : y.working ? y(ce) : ce instanceof ArrayBuffer
    }
    e.isArrayBuffer = A;
    function E(ce) {
        return h(ce) === "[object DataView]"
    }
    E.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && E(new DataView(new ArrayBuffer(1),0,1));
    function k(ce) {
        return typeof DataView > "u" ? !1 : E.working ? E(ce) : ce instanceof DataView
    }
    e.isDataView = k;
    var H = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
    function J(ce) {
        return h(ce) === "[object SharedArrayBuffer]"
    }
    function j(ce) {
        return typeof H > "u" ? !1 : (typeof J.working > "u" && (J.working = J(new H)),
        J.working ? J(ce) : ce instanceof H)
    }
    e.isSharedArrayBuffer = j;
    function F(ce) {
        return h(ce) === "[object AsyncFunction]"
    }
    e.isAsyncFunction = F;
    function U(ce) {
        return h(ce) === "[object Map Iterator]"
    }
    e.isMapIterator = U;
    function re(ce) {
        return h(ce) === "[object Set Iterator]"
    }
    e.isSetIterator = re;
    function oe(ce) {
        return h(ce) === "[object Generator]"
    }
    e.isGeneratorObject = oe;
    function X(ce) {
        return h(ce) === "[object WebAssembly.Module]"
    }
    e.isWebAssemblyCompiledModule = X;
    function Z(ce) {
        return $(ce, m)
    }
    e.isNumberObject = Z;
    function se(ce) {
        return $(ce, d)
    }
    e.isStringObject = se;
    function ue(ce) {
        return $(ce, p)
    }
    e.isBooleanObject = ue;
    function he(ce) {
        return c && $(ce, b)
    }
    e.isBigIntObject = he;
    function ve(ce) {
        return u && $(ce, g)
    }
    e.isSymbolObject = ve;
    function ge(ce) {
        return Z(ce) || se(ce) || ue(ce) || he(ce) || ve(ce)
    }
    e.isBoxedPrimitive = ge;
    function _e(ce) {
        return typeof Uint8Array < "u" && (A(ce) || j(ce))
    }
    e.isAnyArrayBuffer = _e,
    ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(ce) {
        Object.defineProperty(e, ce, {
            enumerable: !1,
            value: function() {
                throw new Error(ce + " is not supported in userland")
            }
        })
    })
}
)(types$1);
var isBufferBrowser = function(n) {
    return n && typeof n == "object" && typeof n.copy == "function" && typeof n.fill == "function" && typeof n.readUInt8 == "function"
};
(function(e) {
    var n = {}
      , i = Object.getOwnPropertyDescriptors || function(H) {
        for (var J = Object.keys(H), j = {}, F = 0; F < J.length; F++)
            j[J[F]] = Object.getOwnPropertyDescriptor(H, J[F]);
        return j
    }
      , o = /%[sdj%]/g;
    e.format = function(k) {
        if (!Y(k)) {
            for (var H = [], J = 0; J < arguments.length; J++)
                H.push(u(arguments[J]));
            return H.join(" ")
        }
        for (var J = 1, j = arguments, F = j.length, U = String(k).replace(o, function(oe) {
            if (oe === "%%")
                return "%";
            if (J >= F)
                return oe;
            switch (oe) {
            case "%s":
                return String(j[J++]);
            case "%d":
                return Number(j[J++]);
            case "%j":
                try {
                    return JSON.stringify(j[J++])
                } catch {
                    return "[Circular]"
                }
            default:
                return oe
            }
        }), re = j[J]; J < F; re = j[++J])
            M(re) || !ne(re) ? U += " " + re : U += " " + u(re);
        return U
    }
    ,
    e.deprecate = function(k, H) {
        if (typeof process$1 < "u" && process$1.noDeprecation === !0)
            return k;
        if (typeof process$1 > "u")
            return function() {
                return e.deprecate(k, H).apply(this, arguments)
            }
            ;
        var J = !1;
        function j() {
            if (!J) {
                if (process$1.throwDeprecation)
                    throw new Error(H);
                process$1.traceDeprecation ? console.trace(H) : console.error(H),
                J = !0
            }
            return k.apply(this, arguments)
        }
        return j
    }
    ;
    var l = {}
      , a = /^$/;
    if (n.NODE_DEBUG) {
        var c = n.NODE_DEBUG;
        c = c.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(),
        a = new RegExp("^" + c + "$","i")
    }
    e.debuglog = function(k) {
        if (k = k.toUpperCase(),
        !l[k])
            if (a.test(k)) {
                var H = process$1.pid;
                l[k] = function() {
                    var J = e.format.apply(e, arguments);
                    console.error("%s %d: %s", k, H, J)
                }
            } else
                l[k] = function() {}
                ;
        return l[k]
    }
    ;
    function u(k, H) {
        var J = {
            seen: [],
            stylize: m
        };
        return arguments.length >= 3 && (J.depth = arguments[2]),
        arguments.length >= 4 && (J.colors = arguments[3]),
        T(H) ? J.showHidden = H : H && e._extend(J, H),
        ie(J.showHidden) && (J.showHidden = !1),
        ie(J.depth) && (J.depth = 2),
        ie(J.colors) && (J.colors = !1),
        ie(J.customInspect) && (J.customInspect = !0),
        J.colors && (J.stylize = h),
        p(J, k, J.depth)
    }
    e.inspect = u,
    u.colors = {
        bold: [1, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        white: [37, 39],
        grey: [90, 39],
        black: [30, 39],
        blue: [34, 39],
        cyan: [36, 39],
        green: [32, 39],
        magenta: [35, 39],
        red: [31, 39],
        yellow: [33, 39]
    },
    u.styles = {
        special: "cyan",
        number: "yellow",
        boolean: "yellow",
        undefined: "grey",
        null: "bold",
        string: "green",
        date: "magenta",
        regexp: "red"
    };
    function h(k, H) {
        var J = u.styles[H];
        return J ? "\x1B[" + u.colors[J][0] + "m" + k + "\x1B[" + u.colors[J][1] + "m" : k
    }
    function m(k, H) {
        return k
    }
    function d(k) {
        var H = {};
        return k.forEach(function(J, j) {
            H[J] = !0
        }),
        H
    }
    function p(k, H, J) {
        if (k.customInspect && H && x(H.inspect) && H.inspect !== e.inspect && !(H.constructor && H.constructor.prototype === H)) {
            var j = H.inspect(J, k);
            return Y(j) || (j = p(k, j, J)),
            j
        }
        var F = b(k, H);
        if (F)
            return F;
        var U = Object.keys(H)
          , re = d(U);
        if (k.showHidden && (U = Object.getOwnPropertyNames(H)),
        w(H) && (U.indexOf("message") >= 0 || U.indexOf("description") >= 0))
            return g(H);
        if (U.length === 0) {
            if (x(H)) {
                var oe = H.name ? ": " + H.name : "";
                return k.stylize("[Function" + oe + "]", "special")
            }
            if (te(H))
                return k.stylize(RegExp.prototype.toString.call(H), "regexp");
            if (V(H))
                return k.stylize(Date.prototype.toString.call(H), "date");
            if (w(H))
                return g(H)
        }
        var X = ""
          , Z = !1
          , se = ["{", "}"];
        if (L(H) && (Z = !0,
        se = ["[", "]"]),
        x(H)) {
            var ue = H.name ? ": " + H.name : "";
            X = " [Function" + ue + "]"
        }
        if (te(H) && (X = " " + RegExp.prototype.toString.call(H)),
        V(H) && (X = " " + Date.prototype.toUTCString.call(H)),
        w(H) && (X = " " + g(H)),
        U.length === 0 && (!Z || H.length == 0))
            return se[0] + X + se[1];
        if (J < 0)
            return te(H) ? k.stylize(RegExp.prototype.toString.call(H), "regexp") : k.stylize("[Object]", "special");
        k.seen.push(H);
        var he;
        return Z ? he = $(k, H, J, re, U) : he = U.map(function(ve) {
            return N(k, H, J, re, ve, Z)
        }),
        k.seen.pop(),
        I(he, X, se)
    }
    function b(k, H) {
        if (ie(H))
            return k.stylize("undefined", "undefined");
        if (Y(H)) {
            var J = "'" + JSON.stringify(H).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
            return k.stylize(J, "string")
        }
        if (Q(H))
            return k.stylize("" + H, "number");
        if (T(H))
            return k.stylize("" + H, "boolean");
        if (M(H))
            return k.stylize("null", "null")
    }
    function g(k) {
        return "[" + Error.prototype.toString.call(k) + "]"
    }
    function $(k, H, J, j, F) {
        for (var U = [], re = 0, oe = H.length; re < oe; ++re)
            P(H, String(re)) ? U.push(N(k, H, J, j, String(re), !0)) : U.push("");
        return F.forEach(function(X) {
            X.match(/^\d+$/) || U.push(N(k, H, J, j, X, !0))
        }),
        U
    }
    function N(k, H, J, j, F, U) {
        var re, oe, X;
        if (X = Object.getOwnPropertyDescriptor(H, F) || {
            value: H[F]
        },
        X.get ? X.set ? oe = k.stylize("[Getter/Setter]", "special") : oe = k.stylize("[Getter]", "special") : X.set && (oe = k.stylize("[Setter]", "special")),
        P(j, F) || (re = "[" + F + "]"),
        oe || (k.seen.indexOf(X.value) < 0 ? (M(J) ? oe = p(k, X.value, null) : oe = p(k, X.value, J - 1),
        oe.indexOf(`
`) > -1 && (U ? oe = oe.split(`
`).map(function(Z) {
            return "  " + Z
        }).join(`
`).slice(2) : oe = `
` + oe.split(`
`).map(function(Z) {
            return "   " + Z
        }).join(`
`))) : oe = k.stylize("[Circular]", "special")),
        ie(re)) {
            if (U && F.match(/^\d+$/))
                return oe;
            re = JSON.stringify("" + F),
            re.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (re = re.slice(1, -1),
            re = k.stylize(re, "name")) : (re = re.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"),
            re = k.stylize(re, "string"))
        }
        return re + ": " + oe
    }
    function I(k, H, J) {
        var j = k.reduce(function(F, U) {
            return U.indexOf(`
`) >= 0,
            F + U.replace(/\u001b\[\d\d?m/g, "").length + 1
        }, 0);
        return j > 60 ? J[0] + (H === "" ? "" : H + `
 `) + " " + k.join(`,
  `) + " " + J[1] : J[0] + H + " " + k.join(", ") + " " + J[1]
    }
    e.types = types$1;
    function L(k) {
        return Array.isArray(k)
    }
    e.isArray = L;
    function T(k) {
        return typeof k == "boolean"
    }
    e.isBoolean = T;
    function M(k) {
        return k === null
    }
    e.isNull = M;
    function q(k) {
        return k == null
    }
    e.isNullOrUndefined = q;
    function Q(k) {
        return typeof k == "number"
    }
    e.isNumber = Q;
    function Y(k) {
        return typeof k == "string"
    }
    e.isString = Y;
    function ee(k) {
        return typeof k == "symbol"
    }
    e.isSymbol = ee;
    function ie(k) {
        return k === void 0
    }
    e.isUndefined = ie;
    function te(k) {
        return ne(k) && S(k) === "[object RegExp]"
    }
    e.isRegExp = te,
    e.types.isRegExp = te;
    function ne(k) {
        return typeof k == "object" && k !== null
    }
    e.isObject = ne;
    function V(k) {
        return ne(k) && S(k) === "[object Date]"
    }
    e.isDate = V,
    e.types.isDate = V;
    function w(k) {
        return ne(k) && (S(k) === "[object Error]" || k instanceof Error)
    }
    e.isError = w,
    e.types.isNativeError = w;
    function x(k) {
        return typeof k == "function"
    }
    e.isFunction = x;
    function v(k) {
        return k === null || typeof k == "boolean" || typeof k == "number" || typeof k == "string" || typeof k == "symbol" || typeof k > "u"
    }
    e.isPrimitive = v,
    e.isBuffer = isBufferBrowser;
    function S(k) {
        return Object.prototype.toString.call(k)
    }
    function D(k) {
        return k < 10 ? "0" + k.toString(10) : k.toString(10)
    }
    var C = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function O() {
        var k = new Date
          , H = [D(k.getHours()), D(k.getMinutes()), D(k.getSeconds())].join(":");
        return [k.getDate(), C[k.getMonth()], H].join(" ")
    }
    e.log = function() {
        console.log("%s - %s", O(), e.format.apply(e, arguments))
    }
    ,
    e.inherits = inherits_browserExports,
    e._extend = function(k, H) {
        if (!H || !ne(H))
            return k;
        for (var J = Object.keys(H), j = J.length; j--; )
            k[J[j]] = H[J[j]];
        return k
    }
    ;
    function P(k, H) {
        return Object.prototype.hasOwnProperty.call(k, H)
    }
    var y = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
    e.promisify = function(H) {
        if (typeof H != "function")
            throw new TypeError('The "original" argument must be of type Function');
        if (y && H[y]) {
            var J = H[y];
            if (typeof J != "function")
                throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(J, y, {
                value: J,
                enumerable: !1,
                writable: !1,
                configurable: !0
            }),
            J
        }
        function J() {
            for (var j, F, U = new Promise(function(X, Z) {
                j = X,
                F = Z
            }
            ), re = [], oe = 0; oe < arguments.length; oe++)
                re.push(arguments[oe]);
            re.push(function(X, Z) {
                X ? F(X) : j(Z)
            });
            try {
                H.apply(this, re)
            } catch (X) {
                F(X)
            }
            return U
        }
        return Object.setPrototypeOf(J, Object.getPrototypeOf(H)),
        y && Object.defineProperty(J, y, {
            value: J,
            enumerable: !1,
            writable: !1,
            configurable: !0
        }),
        Object.defineProperties(J, i(H))
    }
    ,
    e.promisify.custom = y;
    function A(k, H) {
        if (!k) {
            var J = new Error("Promise was rejected with a falsy value");
            J.reason = k,
            k = J
        }
        return H(k)
    }
    function E(k) {
        if (typeof k != "function")
            throw new TypeError('The "original" argument must be of type Function');
        function H() {
            for (var J = [], j = 0; j < arguments.length; j++)
                J.push(arguments[j]);
            var F = J.pop();
            if (typeof F != "function")
                throw new TypeError("The last argument must be of type Function");
            var U = this
              , re = function() {
                return F.apply(U, arguments)
            };
            k.apply(this, J).then(function(oe) {
                process$1.nextTick(re.bind(null, null, oe))
            }, function(oe) {
                process$1.nextTick(A.bind(null, oe, re))
            })
        }
        return Object.setPrototypeOf(H, Object.getPrototypeOf(k)),
        Object.defineProperties(H, i(k)),
        H
    }
    e.callbackify = E
}
)(util$3);
var buffer_list, hasRequiredBuffer_list;
function requireBuffer_list() {
    if (hasRequiredBuffer_list)
        return buffer_list;
    hasRequiredBuffer_list = 1;
    function e($, N) {
        var I = Object.keys($);
        if (Object.getOwnPropertySymbols) {
            var L = Object.getOwnPropertySymbols($);
            N && (L = L.filter(function(T) {
                return Object.getOwnPropertyDescriptor($, T).enumerable
            })),
            I.push.apply(I, L)
        }
        return I
    }
    function n($) {
        for (var N = 1; N < arguments.length; N++) {
            var I = arguments[N] != null ? arguments[N] : {};
            N % 2 ? e(Object(I), !0).forEach(function(L) {
                i($, L, I[L])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties($, Object.getOwnPropertyDescriptors(I)) : e(Object(I)).forEach(function(L) {
                Object.defineProperty($, L, Object.getOwnPropertyDescriptor(I, L))
            })
        }
        return $
    }
    function i($, N, I) {
        return N = c(N),
        N in $ ? Object.defineProperty($, N, {
            value: I,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : $[N] = I,
        $
    }
    function o($, N) {
        if (!($ instanceof N))
            throw new TypeError("Cannot call a class as a function")
    }
    function l($, N) {
        for (var I = 0; I < N.length; I++) {
            var L = N[I];
            L.enumerable = L.enumerable || !1,
            L.configurable = !0,
            "value"in L && (L.writable = !0),
            Object.defineProperty($, c(L.key), L)
        }
    }
    function a($, N, I) {
        return N && l($.prototype, N),
        Object.defineProperty($, "prototype", {
            writable: !1
        }),
        $
    }
    function c($) {
        var N = u($, "string");
        return typeof N == "symbol" ? N : String(N)
    }
    function u($, N) {
        if (typeof $ != "object" || $ === null)
            return $;
        var I = $[Symbol.toPrimitive];
        if (I !== void 0) {
            var L = I.call($, N);
            if (typeof L != "object")
                return L;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return String($)
    }
    var h = require$$0$2
      , m = h.Buffer
      , d = util$3
      , p = d.inspect
      , b = p && p.custom || "inspect";
    function g($, N, I) {
        m.prototype.copy.call($, N, I)
    }
    return buffer_list = function() {
        function $() {
            o(this, $),
            this.head = null,
            this.tail = null,
            this.length = 0
        }
        return a($, [{
            key: "push",
            value: function(I) {
                var L = {
                    data: I,
                    next: null
                };
                this.length > 0 ? this.tail.next = L : this.head = L,
                this.tail = L,
                ++this.length
            }
        }, {
            key: "unshift",
            value: function(I) {
                var L = {
                    data: I,
                    next: this.head
                };
                this.length === 0 && (this.tail = L),
                this.head = L,
                ++this.length
            }
        }, {
            key: "shift",
            value: function() {
                if (this.length !== 0) {
                    var I = this.head.data;
                    return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next,
                    --this.length,
                    I
                }
            }
        }, {
            key: "clear",
            value: function() {
                this.head = this.tail = null,
                this.length = 0
            }
        }, {
            key: "join",
            value: function(I) {
                if (this.length === 0)
                    return "";
                for (var L = this.head, T = "" + L.data; L = L.next; )
                    T += I + L.data;
                return T
            }
        }, {
            key: "concat",
            value: function(I) {
                if (this.length === 0)
                    return m.alloc(0);
                for (var L = m.allocUnsafe(I >>> 0), T = this.head, M = 0; T; )
                    g(T.data, L, M),
                    M += T.data.length,
                    T = T.next;
                return L
            }
        }, {
            key: "consume",
            value: function(I, L) {
                var T;
                return I < this.head.data.length ? (T = this.head.data.slice(0, I),
                this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? T = this.shift() : T = L ? this._getString(I) : this._getBuffer(I),
                T
            }
        }, {
            key: "first",
            value: function() {
                return this.head.data
            }
        }, {
            key: "_getString",
            value: function(I) {
                var L = this.head
                  , T = 1
                  , M = L.data;
                for (I -= M.length; L = L.next; ) {
                    var q = L.data
                      , Q = I > q.length ? q.length : I;
                    if (Q === q.length ? M += q : M += q.slice(0, I),
                    I -= Q,
                    I === 0) {
                        Q === q.length ? (++T,
                        L.next ? this.head = L.next : this.head = this.tail = null) : (this.head = L,
                        L.data = q.slice(Q));
                        break
                    }
                    ++T
                }
                return this.length -= T,
                M
            }
        }, {
            key: "_getBuffer",
            value: function(I) {
                var L = m.allocUnsafe(I)
                  , T = this.head
                  , M = 1;
                for (T.data.copy(L),
                I -= T.data.length; T = T.next; ) {
                    var q = T.data
                      , Q = I > q.length ? q.length : I;
                    if (q.copy(L, L.length - I, 0, Q),
                    I -= Q,
                    I === 0) {
                        Q === q.length ? (++M,
                        T.next ? this.head = T.next : this.head = this.tail = null) : (this.head = T,
                        T.data = q.slice(Q));
                        break
                    }
                    ++M
                }
                return this.length -= M,
                L
            }
        }, {
            key: b,
            value: function(I, L) {
                return p(this, n(n({}, L), {}, {
                    depth: 0,
                    customInspect: !1
                }))
            }
        }]),
        $
    }(),
    buffer_list
}
var destroy_1$1, hasRequiredDestroy;
function requireDestroy() {
    if (hasRequiredDestroy)
        return destroy_1$1;
    hasRequiredDestroy = 1;
    function e(c, u) {
        var h = this
          , m = this._readableState && this._readableState.destroyed
          , d = this._writableState && this._writableState.destroyed;
        return m || d ? (u ? u(c) : c && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0,
        process$1.nextTick(l, this, c)) : process$1.nextTick(l, this, c)),
        this) : (this._readableState && (this._readableState.destroyed = !0),
        this._writableState && (this._writableState.destroyed = !0),
        this._destroy(c || null, function(p) {
            !u && p ? h._writableState ? h._writableState.errorEmitted ? process$1.nextTick(i, h) : (h._writableState.errorEmitted = !0,
            process$1.nextTick(n, h, p)) : process$1.nextTick(n, h, p) : u ? (process$1.nextTick(i, h),
            u(p)) : process$1.nextTick(i, h)
        }),
        this)
    }
    function n(c, u) {
        l(c, u),
        i(c)
    }
    function i(c) {
        c._writableState && !c._writableState.emitClose || c._readableState && !c._readableState.emitClose || c.emit("close")
    }
    function o() {
        this._readableState && (this._readableState.destroyed = !1,
        this._readableState.reading = !1,
        this._readableState.ended = !1,
        this._readableState.endEmitted = !1),
        this._writableState && (this._writableState.destroyed = !1,
        this._writableState.ended = !1,
        this._writableState.ending = !1,
        this._writableState.finalCalled = !1,
        this._writableState.prefinished = !1,
        this._writableState.finished = !1,
        this._writableState.errorEmitted = !1)
    }
    function l(c, u) {
        c.emit("error", u)
    }
    function a(c, u) {
        var h = c._readableState
          , m = c._writableState;
        h && h.autoDestroy || m && m.autoDestroy ? c.destroy(u) : c.emit("error", u)
    }
    return destroy_1$1 = {
        destroy: e,
        undestroy: o,
        errorOrDestroy: a
    },
    destroy_1$1
}
var errorsBrowser = {}, hasRequiredErrorsBrowser;
function requireErrorsBrowser() {
    if (hasRequiredErrorsBrowser)
        return errorsBrowser;
    hasRequiredErrorsBrowser = 1;
    function e(u, h) {
        u.prototype = Object.create(h.prototype),
        u.prototype.constructor = u,
        u.__proto__ = h
    }
    var n = {};
    function i(u, h, m) {
        m || (m = Error);
        function d(b, g, $) {
            return typeof h == "string" ? h : h(b, g, $)
        }
        var p = function(b) {
            e(g, b);
            function g($, N, I) {
                return b.call(this, d($, N, I)) || this
            }
            return g
        }(m);
        p.prototype.name = m.name,
        p.prototype.code = u,
        n[u] = p
    }
    function o(u, h) {
        if (Array.isArray(u)) {
            var m = u.length;
            return u = u.map(function(d) {
                return String(d)
            }),
            m > 2 ? "one of ".concat(h, " ").concat(u.slice(0, m - 1).join(", "), ", or ") + u[m - 1] : m === 2 ? "one of ".concat(h, " ").concat(u[0], " or ").concat(u[1]) : "of ".concat(h, " ").concat(u[0])
        } else
            return "of ".concat(h, " ").concat(String(u))
    }
    function l(u, h, m) {
        return u.substr(0, h.length) === h
    }
    function a(u, h, m) {
        return (m === void 0 || m > u.length) && (m = u.length),
        u.substring(m - h.length, m) === h
    }
    function c(u, h, m) {
        return typeof m != "number" && (m = 0),
        m + h.length > u.length ? !1 : u.indexOf(h, m) !== -1
    }
    return i("ERR_INVALID_OPT_VALUE", function(u, h) {
        return 'The value "' + h + '" is invalid for option "' + u + '"'
    }, TypeError),
    i("ERR_INVALID_ARG_TYPE", function(u, h, m) {
        var d;
        typeof h == "string" && l(h, "not ") ? (d = "must not be",
        h = h.replace(/^not /, "")) : d = "must be";
        var p;
        if (a(u, " argument"))
            p = "The ".concat(u, " ").concat(d, " ").concat(o(h, "type"));
        else {
            var b = c(u, ".") ? "property" : "argument";
            p = 'The "'.concat(u, '" ').concat(b, " ").concat(d, " ").concat(o(h, "type"))
        }
        return p += ". Received type ".concat(typeof m),
        p
    }, TypeError),
    i("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
    i("ERR_METHOD_NOT_IMPLEMENTED", function(u) {
        return "The " + u + " method is not implemented"
    }),
    i("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
    i("ERR_STREAM_DESTROYED", function(u) {
        return "Cannot call " + u + " after a stream was destroyed"
    }),
    i("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
    i("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
    i("ERR_STREAM_WRITE_AFTER_END", "write after end"),
    i("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError),
    i("ERR_UNKNOWN_ENCODING", function(u) {
        return "Unknown encoding: " + u
    }, TypeError),
    i("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"),
    errorsBrowser.codes = n,
    errorsBrowser
}
var state, hasRequiredState;
function requireState() {
    if (hasRequiredState)
        return state;
    hasRequiredState = 1;
    var e = requireErrorsBrowser().codes.ERR_INVALID_OPT_VALUE;
    function n(o, l, a) {
        return o.highWaterMark != null ? o.highWaterMark : l ? o[a] : null
    }
    function i(o, l, a, c) {
        var u = n(l, c, a);
        if (u != null) {
            if (!(isFinite(u) && Math.floor(u) === u) || u < 0) {
                var h = c ? a : "highWaterMark";
                throw new e(h,u)
            }
            return Math.floor(u)
        }
        return o.objectMode ? 16 : 16 * 1024
    }
    return state = {
        getHighWaterMark: i
    },
    state
}
var browser$a = deprecate;
function deprecate(e, n) {
    if (config$5("noDeprecation"))
        return e;
    var i = !1;
    function o() {
        if (!i) {
            if (config$5("throwDeprecation"))
                throw new Error(n);
            config$5("traceDeprecation") ? console.trace(n) : console.warn(n),
            i = !0
        }
        return e.apply(this, arguments)
    }
    return o
}
function config$5(e) {
    try {
        if (!commonjsGlobal.localStorage)
            return !1
    } catch {
        return !1
    }
    var n = commonjsGlobal.localStorage[e];
    return n == null ? !1 : String(n).toLowerCase() === "true"
}
var _stream_writable$1, hasRequired_stream_writable$1;
function require_stream_writable$1() {
    if (hasRequired_stream_writable$1)
        return _stream_writable$1;
    hasRequired_stream_writable$1 = 1,
    _stream_writable$1 = ie;
    function e(j) {
        var F = this;
        this.next = null,
        this.entry = null,
        this.finish = function() {
            J(F, j)
        }
    }
    var n;
    ie.WritableState = Y;
    var i = {
        deprecate: browser$a
    }
      , o = requireStreamBrowser()
      , l = require$$0$2.Buffer
      , a = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {}
    ;
    function c(j) {
        return l.from(j)
    }
    function u(j) {
        return l.isBuffer(j) || j instanceof a
    }
    var h = requireDestroy()
      , m = requireState()
      , d = m.getHighWaterMark
      , p = requireErrorsBrowser().codes
      , b = p.ERR_INVALID_ARG_TYPE
      , g = p.ERR_METHOD_NOT_IMPLEMENTED
      , $ = p.ERR_MULTIPLE_CALLBACK
      , N = p.ERR_STREAM_CANNOT_PIPE
      , I = p.ERR_STREAM_DESTROYED
      , L = p.ERR_STREAM_NULL_VALUES
      , T = p.ERR_STREAM_WRITE_AFTER_END
      , M = p.ERR_UNKNOWN_ENCODING
      , q = h.errorOrDestroy;
    inherits_browserExports(ie, o);
    function Q() {}
    function Y(j, F, U) {
        n = n || require_stream_duplex$1(),
        j = j || {},
        typeof U != "boolean" && (U = F instanceof n),
        this.objectMode = !!j.objectMode,
        U && (this.objectMode = this.objectMode || !!j.writableObjectMode),
        this.highWaterMark = d(this, j, "writableHighWaterMark", U),
        this.finalCalled = !1,
        this.needDrain = !1,
        this.ending = !1,
        this.ended = !1,
        this.finished = !1,
        this.destroyed = !1;
        var re = j.decodeStrings === !1;
        this.decodeStrings = !re,
        this.defaultEncoding = j.defaultEncoding || "utf8",
        this.length = 0,
        this.writing = !1,
        this.corked = 0,
        this.sync = !0,
        this.bufferProcessing = !1,
        this.onwrite = function(oe) {
            D(F, oe)
        }
        ,
        this.writecb = null,
        this.writelen = 0,
        this.bufferedRequest = null,
        this.lastBufferedRequest = null,
        this.pendingcb = 0,
        this.prefinished = !1,
        this.errorEmitted = !1,
        this.emitClose = j.emitClose !== !1,
        this.autoDestroy = !!j.autoDestroy,
        this.bufferedRequestCount = 0,
        this.corkedRequestsFree = new e(this)
    }
    Y.prototype.getBuffer = function() {
        for (var F = this.bufferedRequest, U = []; F; )
            U.push(F),
            F = F.next;
        return U
    }
    ,
    function() {
        try {
            Object.defineProperty(Y.prototype, "buffer", {
                get: i.deprecate(function() {
                    return this.getBuffer()
                }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
            })
        } catch {}
    }();
    var ee;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (ee = Function.prototype[Symbol.hasInstance],
    Object.defineProperty(ie, Symbol.hasInstance, {
        value: function(F) {
            return ee.call(this, F) ? !0 : this !== ie ? !1 : F && F._writableState instanceof Y
        }
    })) : ee = function(F) {
        return F instanceof this
    }
    ;
    function ie(j) {
        n = n || require_stream_duplex$1();
        var F = this instanceof n;
        if (!F && !ee.call(ie, this))
            return new ie(j);
        this._writableState = new Y(j,this,F),
        this.writable = !0,
        j && (typeof j.write == "function" && (this._write = j.write),
        typeof j.writev == "function" && (this._writev = j.writev),
        typeof j.destroy == "function" && (this._destroy = j.destroy),
        typeof j.final == "function" && (this._final = j.final)),
        o.call(this)
    }
    ie.prototype.pipe = function() {
        q(this, new N)
    }
    ;
    function te(j, F) {
        var U = new T;
        q(j, U),
        process$1.nextTick(F, U)
    }
    function ne(j, F, U, re) {
        var oe;
        return U === null ? oe = new L : typeof U != "string" && !F.objectMode && (oe = new b("chunk",["string", "Buffer"],U)),
        oe ? (q(j, oe),
        process$1.nextTick(re, oe),
        !1) : !0
    }
    ie.prototype.write = function(j, F, U) {
        var re = this._writableState
          , oe = !1
          , X = !re.objectMode && u(j);
        return X && !l.isBuffer(j) && (j = c(j)),
        typeof F == "function" && (U = F,
        F = null),
        X ? F = "buffer" : F || (F = re.defaultEncoding),
        typeof U != "function" && (U = Q),
        re.ending ? te(this, U) : (X || ne(this, re, j, U)) && (re.pendingcb++,
        oe = w(this, re, X, j, F, U)),
        oe
    }
    ,
    ie.prototype.cork = function() {
        this._writableState.corked++
    }
    ,
    ie.prototype.uncork = function() {
        var j = this._writableState;
        j.corked && (j.corked--,
        !j.writing && !j.corked && !j.bufferProcessing && j.bufferedRequest && P(this, j))
    }
    ,
    ie.prototype.setDefaultEncoding = function(F) {
        if (typeof F == "string" && (F = F.toLowerCase()),
        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((F + "").toLowerCase()) > -1))
            throw new M(F);
        return this._writableState.defaultEncoding = F,
        this
    }
    ,
    Object.defineProperty(ie.prototype, "writableBuffer", {
        enumerable: !1,
        get: function() {
            return this._writableState && this._writableState.getBuffer()
        }
    });
    function V(j, F, U) {
        return !j.objectMode && j.decodeStrings !== !1 && typeof F == "string" && (F = l.from(F, U)),
        F
    }
    Object.defineProperty(ie.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._writableState.highWaterMark
        }
    });
    function w(j, F, U, re, oe, X) {
        if (!U) {
            var Z = V(F, re, oe);
            re !== Z && (U = !0,
            oe = "buffer",
            re = Z)
        }
        var se = F.objectMode ? 1 : re.length;
        F.length += se;
        var ue = F.length < F.highWaterMark;
        if (ue || (F.needDrain = !0),
        F.writing || F.corked) {
            var he = F.lastBufferedRequest;
            F.lastBufferedRequest = {
                chunk: re,
                encoding: oe,
                isBuf: U,
                callback: X,
                next: null
            },
            he ? he.next = F.lastBufferedRequest : F.bufferedRequest = F.lastBufferedRequest,
            F.bufferedRequestCount += 1
        } else
            x(j, F, !1, se, re, oe, X);
        return ue
    }
    function x(j, F, U, re, oe, X, Z) {
        F.writelen = re,
        F.writecb = Z,
        F.writing = !0,
        F.sync = !0,
        F.destroyed ? F.onwrite(new I("write")) : U ? j._writev(oe, F.onwrite) : j._write(oe, X, F.onwrite),
        F.sync = !1
    }
    function v(j, F, U, re, oe) {
        --F.pendingcb,
        U ? (process$1.nextTick(oe, re),
        process$1.nextTick(k, j, F),
        j._writableState.errorEmitted = !0,
        q(j, re)) : (oe(re),
        j._writableState.errorEmitted = !0,
        q(j, re),
        k(j, F))
    }
    function S(j) {
        j.writing = !1,
        j.writecb = null,
        j.length -= j.writelen,
        j.writelen = 0
    }
    function D(j, F) {
        var U = j._writableState
          , re = U.sync
          , oe = U.writecb;
        if (typeof oe != "function")
            throw new $;
        if (S(U),
        F)
            v(j, U, re, F, oe);
        else {
            var X = y(U) || j.destroyed;
            !X && !U.corked && !U.bufferProcessing && U.bufferedRequest && P(j, U),
            re ? process$1.nextTick(C, j, U, X, oe) : C(j, U, X, oe)
        }
    }
    function C(j, F, U, re) {
        U || O(j, F),
        F.pendingcb--,
        re(),
        k(j, F)
    }
    function O(j, F) {
        F.length === 0 && F.needDrain && (F.needDrain = !1,
        j.emit("drain"))
    }
    function P(j, F) {
        F.bufferProcessing = !0;
        var U = F.bufferedRequest;
        if (j._writev && U && U.next) {
            var re = F.bufferedRequestCount
              , oe = new Array(re)
              , X = F.corkedRequestsFree;
            X.entry = U;
            for (var Z = 0, se = !0; U; )
                oe[Z] = U,
                U.isBuf || (se = !1),
                U = U.next,
                Z += 1;
            oe.allBuffers = se,
            x(j, F, !0, F.length, oe, "", X.finish),
            F.pendingcb++,
            F.lastBufferedRequest = null,
            X.next ? (F.corkedRequestsFree = X.next,
            X.next = null) : F.corkedRequestsFree = new e(F),
            F.bufferedRequestCount = 0
        } else {
            for (; U; ) {
                var ue = U.chunk
                  , he = U.encoding
                  , ve = U.callback
                  , ge = F.objectMode ? 1 : ue.length;
                if (x(j, F, !1, ge, ue, he, ve),
                U = U.next,
                F.bufferedRequestCount--,
                F.writing)
                    break
            }
            U === null && (F.lastBufferedRequest = null)
        }
        F.bufferedRequest = U,
        F.bufferProcessing = !1
    }
    ie.prototype._write = function(j, F, U) {
        U(new g("_write()"))
    }
    ,
    ie.prototype._writev = null,
    ie.prototype.end = function(j, F, U) {
        var re = this._writableState;
        return typeof j == "function" ? (U = j,
        j = null,
        F = null) : typeof F == "function" && (U = F,
        F = null),
        j != null && this.write(j, F),
        re.corked && (re.corked = 1,
        this.uncork()),
        re.ending || H(this, re, U),
        this
    }
    ,
    Object.defineProperty(ie.prototype, "writableLength", {
        enumerable: !1,
        get: function() {
            return this._writableState.length
        }
    });
    function y(j) {
        return j.ending && j.length === 0 && j.bufferedRequest === null && !j.finished && !j.writing
    }
    function A(j, F) {
        j._final(function(U) {
            F.pendingcb--,
            U && q(j, U),
            F.prefinished = !0,
            j.emit("prefinish"),
            k(j, F)
        })
    }
    function E(j, F) {
        !F.prefinished && !F.finalCalled && (typeof j._final == "function" && !F.destroyed ? (F.pendingcb++,
        F.finalCalled = !0,
        process$1.nextTick(A, j, F)) : (F.prefinished = !0,
        j.emit("prefinish")))
    }
    function k(j, F) {
        var U = y(F);
        if (U && (E(j, F),
        F.pendingcb === 0 && (F.finished = !0,
        j.emit("finish"),
        F.autoDestroy))) {
            var re = j._readableState;
            (!re || re.autoDestroy && re.endEmitted) && j.destroy()
        }
        return U
    }
    function H(j, F, U) {
        F.ending = !0,
        k(j, F),
        U && (F.finished ? process$1.nextTick(U) : j.once("finish", U)),
        F.ended = !0,
        j.writable = !1
    }
    function J(j, F, U) {
        var re = j.entry;
        for (j.entry = null; re; ) {
            var oe = re.callback;
            F.pendingcb--,
            oe(U),
            re = re.next
        }
        F.corkedRequestsFree.next = j
    }
    return Object.defineProperty(ie.prototype, "destroyed", {
        enumerable: !1,
        get: function() {
            return this._writableState === void 0 ? !1 : this._writableState.destroyed
        },
        set: function(F) {
            this._writableState && (this._writableState.destroyed = F)
        }
    }),
    ie.prototype.destroy = h.destroy,
    ie.prototype._undestroy = h.undestroy,
    ie.prototype._destroy = function(j, F) {
        F(j)
    }
    ,
    _stream_writable$1
}
var _stream_duplex$1, hasRequired_stream_duplex$1;
function require_stream_duplex$1() {
    if (hasRequired_stream_duplex$1)
        return _stream_duplex$1;
    hasRequired_stream_duplex$1 = 1;
    var e = Object.keys || function(m) {
        var d = [];
        for (var p in m)
            d.push(p);
        return d
    }
    ;
    _stream_duplex$1 = c;
    var n = require_stream_readable$1()
      , i = require_stream_writable$1();
    inherits_browserExports(c, n);
    for (var o = e(i.prototype), l = 0; l < o.length; l++) {
        var a = o[l];
        c.prototype[a] || (c.prototype[a] = i.prototype[a])
    }
    function c(m) {
        if (!(this instanceof c))
            return new c(m);
        n.call(this, m),
        i.call(this, m),
        this.allowHalfOpen = !0,
        m && (m.readable === !1 && (this.readable = !1),
        m.writable === !1 && (this.writable = !1),
        m.allowHalfOpen === !1 && (this.allowHalfOpen = !1,
        this.once("end", u)))
    }
    Object.defineProperty(c.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._writableState.highWaterMark
        }
    }),
    Object.defineProperty(c.prototype, "writableBuffer", {
        enumerable: !1,
        get: function() {
            return this._writableState && this._writableState.getBuffer()
        }
    }),
    Object.defineProperty(c.prototype, "writableLength", {
        enumerable: !1,
        get: function() {
            return this._writableState.length
        }
    });
    function u() {
        this._writableState.ended || process$1.nextTick(h, this)
    }
    function h(m) {
        m.end()
    }
    return Object.defineProperty(c.prototype, "destroyed", {
        enumerable: !1,
        get: function() {
            return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed
        },
        set: function(d) {
            this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = d,
            this._writableState.destroyed = d)
        }
    }),
    _stream_duplex$1
}
var string_decoder = {}
  , Buffer$E = safeBufferExports$1.Buffer
  , isEncoding = Buffer$E.isEncoding || function(e) {
    switch (e = "" + e,
    e && e.toLowerCase()) {
    case "hex":
    case "utf8":
    case "utf-8":
    case "ascii":
    case "binary":
    case "base64":
    case "ucs2":
    case "ucs-2":
    case "utf16le":
    case "utf-16le":
    case "raw":
        return !0;
    default:
        return !1
    }
}
;
function _normalizeEncoding(e) {
    if (!e)
        return "utf8";
    for (var n; ; )
        switch (e) {
        case "utf8":
        case "utf-8":
            return "utf8";
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return "utf16le";
        case "latin1":
        case "binary":
            return "latin1";
        case "base64":
        case "ascii":
        case "hex":
            return e;
        default:
            if (n)
                return;
            e = ("" + e).toLowerCase(),
            n = !0
        }
}
function normalizeEncoding(e) {
    var n = _normalizeEncoding(e);
    if (typeof n != "string" && (Buffer$E.isEncoding === isEncoding || !isEncoding(e)))
        throw new Error("Unknown encoding: " + e);
    return n || e
}
string_decoder.StringDecoder = StringDecoder$1;
function StringDecoder$1(e) {
    this.encoding = normalizeEncoding(e);
    var n;
    switch (this.encoding) {
    case "utf16le":
        this.text = utf16Text,
        this.end = utf16End,
        n = 4;
        break;
    case "utf8":
        this.fillLast = utf8FillLast,
        n = 4;
        break;
    case "base64":
        this.text = base64Text,
        this.end = base64End,
        n = 3;
        break;
    default:
        this.write = simpleWrite,
        this.end = simpleEnd;
        return
    }
    this.lastNeed = 0,
    this.lastTotal = 0,
    this.lastChar = Buffer$E.allocUnsafe(n)
}
StringDecoder$1.prototype.write = function(e) {
    if (e.length === 0)
        return "";
    var n, i;
    if (this.lastNeed) {
        if (n = this.fillLast(e),
        n === void 0)
            return "";
        i = this.lastNeed,
        this.lastNeed = 0
    } else
        i = 0;
    return i < e.length ? n ? n + this.text(e, i) : this.text(e, i) : n || ""
}
;
StringDecoder$1.prototype.end = utf8End;
StringDecoder$1.prototype.text = utf8Text;
StringDecoder$1.prototype.fillLast = function(e) {
    if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed),
        this.lastChar.toString(this.encoding, 0, this.lastTotal);
    e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
    this.lastNeed -= e.length
}
;
function utf8CheckByte(e) {
    return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2
}
function utf8CheckIncomplete(e, n, i) {
    var o = n.length - 1;
    if (o < i)
        return 0;
    var l = utf8CheckByte(n[o]);
    return l >= 0 ? (l > 0 && (e.lastNeed = l - 1),
    l) : --o < i || l === -2 ? 0 : (l = utf8CheckByte(n[o]),
    l >= 0 ? (l > 0 && (e.lastNeed = l - 2),
    l) : --o < i || l === -2 ? 0 : (l = utf8CheckByte(n[o]),
    l >= 0 ? (l > 0 && (l === 2 ? l = 0 : e.lastNeed = l - 3),
    l) : 0))
}
function utf8CheckExtraBytes(e, n, i) {
    if ((n[0] & 192) !== 128)
        return e.lastNeed = 0,
        "�";
    if (e.lastNeed > 1 && n.length > 1) {
        if ((n[1] & 192) !== 128)
            return e.lastNeed = 1,
            "�";
        if (e.lastNeed > 2 && n.length > 2 && (n[2] & 192) !== 128)
            return e.lastNeed = 2,
            "�"
    }
}
function utf8FillLast(e) {
    var n = this.lastTotal - this.lastNeed
      , i = utf8CheckExtraBytes(this, e);
    if (i !== void 0)
        return i;
    if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, n, 0, this.lastNeed),
        this.lastChar.toString(this.encoding, 0, this.lastTotal);
    e.copy(this.lastChar, n, 0, e.length),
    this.lastNeed -= e.length
}
function utf8Text(e, n) {
    var i = utf8CheckIncomplete(this, e, n);
    if (!this.lastNeed)
        return e.toString("utf8", n);
    this.lastTotal = i;
    var o = e.length - (i - this.lastNeed);
    return e.copy(this.lastChar, 0, o),
    e.toString("utf8", n, o)
}
function utf8End(e) {
    var n = e && e.length ? this.write(e) : "";
    return this.lastNeed ? n + "�" : n
}
function utf16Text(e, n) {
    if ((e.length - n) % 2 === 0) {
        var i = e.toString("utf16le", n);
        if (i) {
            var o = i.charCodeAt(i.length - 1);
            if (o >= 55296 && o <= 56319)
                return this.lastNeed = 2,
                this.lastTotal = 4,
                this.lastChar[0] = e[e.length - 2],
                this.lastChar[1] = e[e.length - 1],
                i.slice(0, -1)
        }
        return i
    }
    return this.lastNeed = 1,
    this.lastTotal = 2,
    this.lastChar[0] = e[e.length - 1],
    e.toString("utf16le", n, e.length - 1)
}
function utf16End(e) {
    var n = e && e.length ? this.write(e) : "";
    if (this.lastNeed) {
        var i = this.lastTotal - this.lastNeed;
        return n + this.lastChar.toString("utf16le", 0, i)
    }
    return n
}
function base64Text(e, n) {
    var i = (e.length - n) % 3;
    return i === 0 ? e.toString("base64", n) : (this.lastNeed = 3 - i,
    this.lastTotal = 3,
    i === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2],
    this.lastChar[1] = e[e.length - 1]),
    e.toString("base64", n, e.length - i))
}
function base64End(e) {
    var n = e && e.length ? this.write(e) : "";
    return this.lastNeed ? n + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : n
}
function simpleWrite(e) {
    return e.toString(this.encoding)
}
function simpleEnd(e) {
    return e && e.length ? this.write(e) : ""
}
var endOfStream, hasRequiredEndOfStream;
function requireEndOfStream() {
    if (hasRequiredEndOfStream)
        return endOfStream;
    hasRequiredEndOfStream = 1;
    var e = requireErrorsBrowser().codes.ERR_STREAM_PREMATURE_CLOSE;
    function n(a) {
        var c = !1;
        return function() {
            if (!c) {
                c = !0;
                for (var u = arguments.length, h = new Array(u), m = 0; m < u; m++)
                    h[m] = arguments[m];
                a.apply(this, h)
            }
        }
    }
    function i() {}
    function o(a) {
        return a.setHeader && typeof a.abort == "function"
    }
    function l(a, c, u) {
        if (typeof c == "function")
            return l(a, null, c);
        c || (c = {}),
        u = n(u || i);
        var h = c.readable || c.readable !== !1 && a.readable
          , m = c.writable || c.writable !== !1 && a.writable
          , d = function() {
            a.writable || b()
        }
          , p = a._writableState && a._writableState.finished
          , b = function() {
            m = !1,
            p = !0,
            h || u.call(a)
        }
          , g = a._readableState && a._readableState.endEmitted
          , $ = function() {
            h = !1,
            g = !0,
            m || u.call(a)
        }
          , N = function(M) {
            u.call(a, M)
        }
          , I = function() {
            var M;
            if (h && !g)
                return (!a._readableState || !a._readableState.ended) && (M = new e),
                u.call(a, M);
            if (m && !p)
                return (!a._writableState || !a._writableState.ended) && (M = new e),
                u.call(a, M)
        }
          , L = function() {
            a.req.on("finish", b)
        };
        return o(a) ? (a.on("complete", b),
        a.on("abort", I),
        a.req ? L() : a.on("request", L)) : m && !a._writableState && (a.on("end", d),
        a.on("close", d)),
        a.on("end", $),
        a.on("finish", b),
        c.error !== !1 && a.on("error", N),
        a.on("close", I),
        function() {
            a.removeListener("complete", b),
            a.removeListener("abort", I),
            a.removeListener("request", L),
            a.req && a.req.removeListener("finish", b),
            a.removeListener("end", d),
            a.removeListener("close", d),
            a.removeListener("finish", b),
            a.removeListener("end", $),
            a.removeListener("error", N),
            a.removeListener("close", I)
        }
    }
    return endOfStream = l,
    endOfStream
}
var async_iterator, hasRequiredAsync_iterator;
function requireAsync_iterator() {
    if (hasRequiredAsync_iterator)
        return async_iterator;
    hasRequiredAsync_iterator = 1;
    var e;
    function n(M, q, Q) {
        return q = i(q),
        q in M ? Object.defineProperty(M, q, {
            value: Q,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : M[q] = Q,
        M
    }
    function i(M) {
        var q = o(M, "string");
        return typeof q == "symbol" ? q : String(q)
    }
    function o(M, q) {
        if (typeof M != "object" || M === null)
            return M;
        var Q = M[Symbol.toPrimitive];
        if (Q !== void 0) {
            var Y = Q.call(M, q);
            if (typeof Y != "object")
                return Y;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return (q === "string" ? String : Number)(M)
    }
    var l = requireEndOfStream()
      , a = Symbol("lastResolve")
      , c = Symbol("lastReject")
      , u = Symbol("error")
      , h = Symbol("ended")
      , m = Symbol("lastPromise")
      , d = Symbol("handlePromise")
      , p = Symbol("stream");
    function b(M, q) {
        return {
            value: M,
            done: q
        }
    }
    function g(M) {
        var q = M[a];
        if (q !== null) {
            var Q = M[p].read();
            Q !== null && (M[m] = null,
            M[a] = null,
            M[c] = null,
            q(b(Q, !1)))
        }
    }
    function $(M) {
        process$1.nextTick(g, M)
    }
    function N(M, q) {
        return function(Q, Y) {
            M.then(function() {
                if (q[h]) {
                    Q(b(void 0, !0));
                    return
                }
                q[d](Q, Y)
            }, Y)
        }
    }
    var I = Object.getPrototypeOf(function() {})
      , L = Object.setPrototypeOf((e = {
        get stream() {
            return this[p]
        },
        next: function() {
            var q = this
              , Q = this[u];
            if (Q !== null)
                return Promise.reject(Q);
            if (this[h])
                return Promise.resolve(b(void 0, !0));
            if (this[p].destroyed)
                return new Promise(function(te, ne) {
                    process$1.nextTick(function() {
                        q[u] ? ne(q[u]) : te(b(void 0, !0))
                    })
                }
                );
            var Y = this[m], ee;
            if (Y)
                ee = new Promise(N(Y, this));
            else {
                var ie = this[p].read();
                if (ie !== null)
                    return Promise.resolve(b(ie, !1));
                ee = new Promise(this[d])
            }
            return this[m] = ee,
            ee
        }
    },
    n(e, Symbol.asyncIterator, function() {
        return this
    }),
    n(e, "return", function() {
        var q = this;
        return new Promise(function(Q, Y) {
            q[p].destroy(null, function(ee) {
                if (ee) {
                    Y(ee);
                    return
                }
                Q(b(void 0, !0))
            })
        }
        )
    }),
    e), I)
      , T = function(q) {
        var Q, Y = Object.create(L, (Q = {},
        n(Q, p, {
            value: q,
            writable: !0
        }),
        n(Q, a, {
            value: null,
            writable: !0
        }),
        n(Q, c, {
            value: null,
            writable: !0
        }),
        n(Q, u, {
            value: null,
            writable: !0
        }),
        n(Q, h, {
            value: q._readableState.endEmitted,
            writable: !0
        }),
        n(Q, d, {
            value: function(ie, te) {
                var ne = Y[p].read();
                ne ? (Y[m] = null,
                Y[a] = null,
                Y[c] = null,
                ie(b(ne, !1))) : (Y[a] = ie,
                Y[c] = te)
            },
            writable: !0
        }),
        Q));
        return Y[m] = null,
        l(q, function(ee) {
            if (ee && ee.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                var ie = Y[c];
                ie !== null && (Y[m] = null,
                Y[a] = null,
                Y[c] = null,
                ie(ee)),
                Y[u] = ee;
                return
            }
            var te = Y[a];
            te !== null && (Y[m] = null,
            Y[a] = null,
            Y[c] = null,
            te(b(void 0, !0))),
            Y[h] = !0
        }),
        q.on("readable", $.bind(null, Y)),
        Y
    };
    return async_iterator = T,
    async_iterator
}
var fromBrowser, hasRequiredFromBrowser;
function requireFromBrowser() {
    return hasRequiredFromBrowser || (hasRequiredFromBrowser = 1,
    fromBrowser = function() {
        throw new Error("Readable.from is not available in the browser")
    }
    ),
    fromBrowser
}
var _stream_readable$1, hasRequired_stream_readable$1;
function require_stream_readable$1() {
    if (hasRequired_stream_readable$1)
        return _stream_readable$1;
    hasRequired_stream_readable$1 = 1,
    _stream_readable$1 = te;
    var e;
    te.ReadableState = ie,
    eventsExports.EventEmitter;
    var n = function(Z, se) {
        return Z.listeners(se).length
    }
      , i = requireStreamBrowser()
      , o = require$$0$2.Buffer
      , l = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {}
    ;
    function a(X) {
        return o.from(X)
    }
    function c(X) {
        return o.isBuffer(X) || X instanceof l
    }
    var u = util$3, h;
    u && u.debuglog ? h = u.debuglog("stream") : h = function() {}
    ;
    var m = requireBuffer_list(), d = requireDestroy(), p = requireState(), b = p.getHighWaterMark, g = requireErrorsBrowser().codes, $ = g.ERR_INVALID_ARG_TYPE, N = g.ERR_STREAM_PUSH_AFTER_EOF, I = g.ERR_METHOD_NOT_IMPLEMENTED, L = g.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, T, M, q;
    inherits_browserExports(te, i);
    var Q = d.errorOrDestroy
      , Y = ["error", "close", "destroy", "pause", "resume"];
    function ee(X, Z, se) {
        if (typeof X.prependListener == "function")
            return X.prependListener(Z, se);
        !X._events || !X._events[Z] ? X.on(Z, se) : Array.isArray(X._events[Z]) ? X._events[Z].unshift(se) : X._events[Z] = [se, X._events[Z]]
    }
    function ie(X, Z, se) {
        e = e || require_stream_duplex$1(),
        X = X || {},
        typeof se != "boolean" && (se = Z instanceof e),
        this.objectMode = !!X.objectMode,
        se && (this.objectMode = this.objectMode || !!X.readableObjectMode),
        this.highWaterMark = b(this, X, "readableHighWaterMark", se),
        this.buffer = new m,
        this.length = 0,
        this.pipes = null,
        this.pipesCount = 0,
        this.flowing = null,
        this.ended = !1,
        this.endEmitted = !1,
        this.reading = !1,
        this.sync = !0,
        this.needReadable = !1,
        this.emittedReadable = !1,
        this.readableListening = !1,
        this.resumeScheduled = !1,
        this.paused = !0,
        this.emitClose = X.emitClose !== !1,
        this.autoDestroy = !!X.autoDestroy,
        this.destroyed = !1,
        this.defaultEncoding = X.defaultEncoding || "utf8",
        this.awaitDrain = 0,
        this.readingMore = !1,
        this.decoder = null,
        this.encoding = null,
        X.encoding && (T || (T = string_decoder.StringDecoder),
        this.decoder = new T(X.encoding),
        this.encoding = X.encoding)
    }
    function te(X) {
        if (e = e || require_stream_duplex$1(),
        !(this instanceof te))
            return new te(X);
        var Z = this instanceof e;
        this._readableState = new ie(X,this,Z),
        this.readable = !0,
        X && (typeof X.read == "function" && (this._read = X.read),
        typeof X.destroy == "function" && (this._destroy = X.destroy)),
        i.call(this)
    }
    Object.defineProperty(te.prototype, "destroyed", {
        enumerable: !1,
        get: function() {
            return this._readableState === void 0 ? !1 : this._readableState.destroyed
        },
        set: function(Z) {
            this._readableState && (this._readableState.destroyed = Z)
        }
    }),
    te.prototype.destroy = d.destroy,
    te.prototype._undestroy = d.undestroy,
    te.prototype._destroy = function(X, Z) {
        Z(X)
    }
    ,
    te.prototype.push = function(X, Z) {
        var se = this._readableState, ue;
        return se.objectMode ? ue = !0 : typeof X == "string" && (Z = Z || se.defaultEncoding,
        Z !== se.encoding && (X = o.from(X, Z),
        Z = ""),
        ue = !0),
        ne(this, X, Z, !1, ue)
    }
    ,
    te.prototype.unshift = function(X) {
        return ne(this, X, null, !0, !1)
    }
    ;
    function ne(X, Z, se, ue, he) {
        h("readableAddChunk", Z);
        var ve = X._readableState;
        if (Z === null)
            ve.reading = !1,
            D(X, ve);
        else {
            var ge;
            if (he || (ge = w(ve, Z)),
            ge)
                Q(X, ge);
            else if (ve.objectMode || Z && Z.length > 0)
                if (typeof Z != "string" && !ve.objectMode && Object.getPrototypeOf(Z) !== o.prototype && (Z = a(Z)),
                ue)
                    ve.endEmitted ? Q(X, new L) : V(X, ve, Z, !0);
                else if (ve.ended)
                    Q(X, new N);
                else {
                    if (ve.destroyed)
                        return !1;
                    ve.reading = !1,
                    ve.decoder && !se ? (Z = ve.decoder.write(Z),
                    ve.objectMode || Z.length !== 0 ? V(X, ve, Z, !1) : P(X, ve)) : V(X, ve, Z, !1)
                }
            else
                ue || (ve.reading = !1,
                P(X, ve))
        }
        return !ve.ended && (ve.length < ve.highWaterMark || ve.length === 0)
    }
    function V(X, Z, se, ue) {
        Z.flowing && Z.length === 0 && !Z.sync ? (Z.awaitDrain = 0,
        X.emit("data", se)) : (Z.length += Z.objectMode ? 1 : se.length,
        ue ? Z.buffer.unshift(se) : Z.buffer.push(se),
        Z.needReadable && C(X)),
        P(X, Z)
    }
    function w(X, Z) {
        var se;
        return !c(Z) && typeof Z != "string" && Z !== void 0 && !X.objectMode && (se = new $("chunk",["string", "Buffer", "Uint8Array"],Z)),
        se
    }
    te.prototype.isPaused = function() {
        return this._readableState.flowing === !1
    }
    ,
    te.prototype.setEncoding = function(X) {
        T || (T = string_decoder.StringDecoder);
        var Z = new T(X);
        this._readableState.decoder = Z,
        this._readableState.encoding = this._readableState.decoder.encoding;
        for (var se = this._readableState.buffer.head, ue = ""; se !== null; )
            ue += Z.write(se.data),
            se = se.next;
        return this._readableState.buffer.clear(),
        ue !== "" && this._readableState.buffer.push(ue),
        this._readableState.length = ue.length,
        this
    }
    ;
    var x = 1073741824;
    function v(X) {
        return X >= x ? X = x : (X--,
        X |= X >>> 1,
        X |= X >>> 2,
        X |= X >>> 4,
        X |= X >>> 8,
        X |= X >>> 16,
        X++),
        X
    }
    function S(X, Z) {
        return X <= 0 || Z.length === 0 && Z.ended ? 0 : Z.objectMode ? 1 : X !== X ? Z.flowing && Z.length ? Z.buffer.head.data.length : Z.length : (X > Z.highWaterMark && (Z.highWaterMark = v(X)),
        X <= Z.length ? X : Z.ended ? Z.length : (Z.needReadable = !0,
        0))
    }
    te.prototype.read = function(X) {
        h("read", X),
        X = parseInt(X, 10);
        var Z = this._readableState
          , se = X;
        if (X !== 0 && (Z.emittedReadable = !1),
        X === 0 && Z.needReadable && ((Z.highWaterMark !== 0 ? Z.length >= Z.highWaterMark : Z.length > 0) || Z.ended))
            return h("read: emitReadable", Z.length, Z.ended),
            Z.length === 0 && Z.ended ? U(this) : C(this),
            null;
        if (X = S(X, Z),
        X === 0 && Z.ended)
            return Z.length === 0 && U(this),
            null;
        var ue = Z.needReadable;
        h("need readable", ue),
        (Z.length === 0 || Z.length - X < Z.highWaterMark) && (ue = !0,
        h("length less than watermark", ue)),
        Z.ended || Z.reading ? (ue = !1,
        h("reading or ended", ue)) : ue && (h("do read"),
        Z.reading = !0,
        Z.sync = !0,
        Z.length === 0 && (Z.needReadable = !0),
        this._read(Z.highWaterMark),
        Z.sync = !1,
        Z.reading || (X = S(se, Z)));
        var he;
        return X > 0 ? he = F(X, Z) : he = null,
        he === null ? (Z.needReadable = Z.length <= Z.highWaterMark,
        X = 0) : (Z.length -= X,
        Z.awaitDrain = 0),
        Z.length === 0 && (Z.ended || (Z.needReadable = !0),
        se !== X && Z.ended && U(this)),
        he !== null && this.emit("data", he),
        he
    }
    ;
    function D(X, Z) {
        if (h("onEofChunk"),
        !Z.ended) {
            if (Z.decoder) {
                var se = Z.decoder.end();
                se && se.length && (Z.buffer.push(se),
                Z.length += Z.objectMode ? 1 : se.length)
            }
            Z.ended = !0,
            Z.sync ? C(X) : (Z.needReadable = !1,
            Z.emittedReadable || (Z.emittedReadable = !0,
            O(X)))
        }
    }
    function C(X) {
        var Z = X._readableState;
        h("emitReadable", Z.needReadable, Z.emittedReadable),
        Z.needReadable = !1,
        Z.emittedReadable || (h("emitReadable", Z.flowing),
        Z.emittedReadable = !0,
        process$1.nextTick(O, X))
    }
    function O(X) {
        var Z = X._readableState;
        h("emitReadable_", Z.destroyed, Z.length, Z.ended),
        !Z.destroyed && (Z.length || Z.ended) && (X.emit("readable"),
        Z.emittedReadable = !1),
        Z.needReadable = !Z.flowing && !Z.ended && Z.length <= Z.highWaterMark,
        j(X)
    }
    function P(X, Z) {
        Z.readingMore || (Z.readingMore = !0,
        process$1.nextTick(y, X, Z))
    }
    function y(X, Z) {
        for (; !Z.reading && !Z.ended && (Z.length < Z.highWaterMark || Z.flowing && Z.length === 0); ) {
            var se = Z.length;
            if (h("maybeReadMore read 0"),
            X.read(0),
            se === Z.length)
                break
        }
        Z.readingMore = !1
    }
    te.prototype._read = function(X) {
        Q(this, new I("_read()"))
    }
    ,
    te.prototype.pipe = function(X, Z) {
        var se = this
          , ue = this._readableState;
        switch (ue.pipesCount) {
        case 0:
            ue.pipes = X;
            break;
        case 1:
            ue.pipes = [ue.pipes, X];
            break;
        default:
            ue.pipes.push(X);
            break
        }
        ue.pipesCount += 1,
        h("pipe count=%d opts=%j", ue.pipesCount, Z);
        var he = (!Z || Z.end !== !1) && X !== process$1.stdout && X !== process$1.stderr
          , ve = he ? _e : fe;
        ue.endEmitted ? process$1.nextTick(ve) : se.once("end", ve),
        X.on("unpipe", ge);
        function ge(de, me) {
            h("onunpipe"),
            de === se && me && me.hasUnpiped === !1 && (me.hasUnpiped = !0,
            be())
        }
        function _e() {
            h("onend"),
            X.end()
        }
        var ce = A(se);
        X.on("drain", ce);
        var De = !1;
        function be() {
            h("cleanup"),
            X.removeListener("close", ae),
            X.removeListener("finish", le),
            X.removeListener("drain", ce),
            X.removeListener("error", Ee),
            X.removeListener("unpipe", ge),
            se.removeListener("end", _e),
            se.removeListener("end", fe),
            se.removeListener("data", Ae),
            De = !0,
            ue.awaitDrain && (!X._writableState || X._writableState.needDrain) && ce()
        }
        se.on("data", Ae);
        function Ae(de) {
            h("ondata");
            var me = X.write(de);
            h("dest.write", me),
            me === !1 && ((ue.pipesCount === 1 && ue.pipes === X || ue.pipesCount > 1 && oe(ue.pipes, X) !== -1) && !De && (h("false write response, pause", ue.awaitDrain),
            ue.awaitDrain++),
            se.pause())
        }
        function Ee(de) {
            h("onerror", de),
            fe(),
            X.removeListener("error", Ee),
            n(X, "error") === 0 && Q(X, de)
        }
        ee(X, "error", Ee);
        function ae() {
            X.removeListener("finish", le),
            fe()
        }
        X.once("close", ae);
        function le() {
            h("onfinish"),
            X.removeListener("close", ae),
            fe()
        }
        X.once("finish", le);
        function fe() {
            h("unpipe"),
            se.unpipe(X)
        }
        return X.emit("pipe", se),
        ue.flowing || (h("pipe resume"),
        se.resume()),
        X
    }
    ;
    function A(X) {
        return function() {
            var se = X._readableState;
            h("pipeOnDrain", se.awaitDrain),
            se.awaitDrain && se.awaitDrain--,
            se.awaitDrain === 0 && n(X, "data") && (se.flowing = !0,
            j(X))
        }
    }
    te.prototype.unpipe = function(X) {
        var Z = this._readableState
          , se = {
            hasUnpiped: !1
        };
        if (Z.pipesCount === 0)
            return this;
        if (Z.pipesCount === 1)
            return X && X !== Z.pipes ? this : (X || (X = Z.pipes),
            Z.pipes = null,
            Z.pipesCount = 0,
            Z.flowing = !1,
            X && X.emit("unpipe", this, se),
            this);
        if (!X) {
            var ue = Z.pipes
              , he = Z.pipesCount;
            Z.pipes = null,
            Z.pipesCount = 0,
            Z.flowing = !1;
            for (var ve = 0; ve < he; ve++)
                ue[ve].emit("unpipe", this, {
                    hasUnpiped: !1
                });
            return this
        }
        var ge = oe(Z.pipes, X);
        return ge === -1 ? this : (Z.pipes.splice(ge, 1),
        Z.pipesCount -= 1,
        Z.pipesCount === 1 && (Z.pipes = Z.pipes[0]),
        X.emit("unpipe", this, se),
        this)
    }
    ,
    te.prototype.on = function(X, Z) {
        var se = i.prototype.on.call(this, X, Z)
          , ue = this._readableState;
        return X === "data" ? (ue.readableListening = this.listenerCount("readable") > 0,
        ue.flowing !== !1 && this.resume()) : X === "readable" && !ue.endEmitted && !ue.readableListening && (ue.readableListening = ue.needReadable = !0,
        ue.flowing = !1,
        ue.emittedReadable = !1,
        h("on readable", ue.length, ue.reading),
        ue.length ? C(this) : ue.reading || process$1.nextTick(k, this)),
        se
    }
    ,
    te.prototype.addListener = te.prototype.on,
    te.prototype.removeListener = function(X, Z) {
        var se = i.prototype.removeListener.call(this, X, Z);
        return X === "readable" && process$1.nextTick(E, this),
        se
    }
    ,
    te.prototype.removeAllListeners = function(X) {
        var Z = i.prototype.removeAllListeners.apply(this, arguments);
        return (X === "readable" || X === void 0) && process$1.nextTick(E, this),
        Z
    }
    ;
    function E(X) {
        var Z = X._readableState;
        Z.readableListening = X.listenerCount("readable") > 0,
        Z.resumeScheduled && !Z.paused ? Z.flowing = !0 : X.listenerCount("data") > 0 && X.resume()
    }
    function k(X) {
        h("readable nexttick read 0"),
        X.read(0)
    }
    te.prototype.resume = function() {
        var X = this._readableState;
        return X.flowing || (h("resume"),
        X.flowing = !X.readableListening,
        H(this, X)),
        X.paused = !1,
        this
    }
    ;
    function H(X, Z) {
        Z.resumeScheduled || (Z.resumeScheduled = !0,
        process$1.nextTick(J, X, Z))
    }
    function J(X, Z) {
        h("resume", Z.reading),
        Z.reading || X.read(0),
        Z.resumeScheduled = !1,
        X.emit("resume"),
        j(X),
        Z.flowing && !Z.reading && X.read(0)
    }
    te.prototype.pause = function() {
        return h("call pause flowing=%j", this._readableState.flowing),
        this._readableState.flowing !== !1 && (h("pause"),
        this._readableState.flowing = !1,
        this.emit("pause")),
        this._readableState.paused = !0,
        this
    }
    ;
    function j(X) {
        var Z = X._readableState;
        for (h("flow", Z.flowing); Z.flowing && X.read() !== null; )
            ;
    }
    te.prototype.wrap = function(X) {
        var Z = this
          , se = this._readableState
          , ue = !1;
        X.on("end", function() {
            if (h("wrapped end"),
            se.decoder && !se.ended) {
                var ge = se.decoder.end();
                ge && ge.length && Z.push(ge)
            }
            Z.push(null)
        }),
        X.on("data", function(ge) {
            if (h("wrapped data"),
            se.decoder && (ge = se.decoder.write(ge)),
            !(se.objectMode && ge == null) && !(!se.objectMode && (!ge || !ge.length))) {
                var _e = Z.push(ge);
                _e || (ue = !0,
                X.pause())
            }
        });
        for (var he in X)
            this[he] === void 0 && typeof X[he] == "function" && (this[he] = function(_e) {
                return function() {
                    return X[_e].apply(X, arguments)
                }
            }(he));
        for (var ve = 0; ve < Y.length; ve++)
            X.on(Y[ve], this.emit.bind(this, Y[ve]));
        return this._read = function(ge) {
            h("wrapped _read", ge),
            ue && (ue = !1,
            X.resume())
        }
        ,
        this
    }
    ,
    typeof Symbol == "function" && (te.prototype[Symbol.asyncIterator] = function() {
        return M === void 0 && (M = requireAsync_iterator()),
        M(this)
    }
    ),
    Object.defineProperty(te.prototype, "readableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._readableState.highWaterMark
        }
    }),
    Object.defineProperty(te.prototype, "readableBuffer", {
        enumerable: !1,
        get: function() {
            return this._readableState && this._readableState.buffer
        }
    }),
    Object.defineProperty(te.prototype, "readableFlowing", {
        enumerable: !1,
        get: function() {
            return this._readableState.flowing
        },
        set: function(Z) {
            this._readableState && (this._readableState.flowing = Z)
        }
    }),
    te._fromList = F,
    Object.defineProperty(te.prototype, "readableLength", {
        enumerable: !1,
        get: function() {
            return this._readableState.length
        }
    });
    function F(X, Z) {
        if (Z.length === 0)
            return null;
        var se;
        return Z.objectMode ? se = Z.buffer.shift() : !X || X >= Z.length ? (Z.decoder ? se = Z.buffer.join("") : Z.buffer.length === 1 ? se = Z.buffer.first() : se = Z.buffer.concat(Z.length),
        Z.buffer.clear()) : se = Z.buffer.consume(X, Z.decoder),
        se
    }
    function U(X) {
        var Z = X._readableState;
        h("endReadable", Z.endEmitted),
        Z.endEmitted || (Z.ended = !0,
        process$1.nextTick(re, Z, X))
    }
    function re(X, Z) {
        if (h("endReadableNT", X.endEmitted, X.length),
        !X.endEmitted && X.length === 0 && (X.endEmitted = !0,
        Z.readable = !1,
        Z.emit("end"),
        X.autoDestroy)) {
            var se = Z._writableState;
            (!se || se.autoDestroy && se.finished) && Z.destroy()
        }
    }
    typeof Symbol == "function" && (te.from = function(X, Z) {
        return q === void 0 && (q = requireFromBrowser()),
        q(te, X, Z)
    }
    );
    function oe(X, Z) {
        for (var se = 0, ue = X.length; se < ue; se++)
            if (X[se] === Z)
                return se;
        return -1
    }
    return _stream_readable$1
}
var _stream_transform$1, hasRequired_stream_transform;
function require_stream_transform() {
    if (hasRequired_stream_transform)
        return _stream_transform$1;
    hasRequired_stream_transform = 1,
    _stream_transform$1 = u;
    var e = requireErrorsBrowser().codes
      , n = e.ERR_METHOD_NOT_IMPLEMENTED
      , i = e.ERR_MULTIPLE_CALLBACK
      , o = e.ERR_TRANSFORM_ALREADY_TRANSFORMING
      , l = e.ERR_TRANSFORM_WITH_LENGTH_0
      , a = require_stream_duplex$1();
    inherits_browserExports(u, a);
    function c(d, p) {
        var b = this._transformState;
        b.transforming = !1;
        var g = b.writecb;
        if (g === null)
            return this.emit("error", new i);
        b.writechunk = null,
        b.writecb = null,
        p != null && this.push(p),
        g(d);
        var $ = this._readableState;
        $.reading = !1,
        ($.needReadable || $.length < $.highWaterMark) && this._read($.highWaterMark)
    }
    function u(d) {
        if (!(this instanceof u))
            return new u(d);
        a.call(this, d),
        this._transformState = {
            afterTransform: c.bind(this),
            needTransform: !1,
            transforming: !1,
            writecb: null,
            writechunk: null,
            writeencoding: null
        },
        this._readableState.needReadable = !0,
        this._readableState.sync = !1,
        d && (typeof d.transform == "function" && (this._transform = d.transform),
        typeof d.flush == "function" && (this._flush = d.flush)),
        this.on("prefinish", h)
    }
    function h() {
        var d = this;
        typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(p, b) {
            m(d, p, b)
        }) : m(this, null, null)
    }
    u.prototype.push = function(d, p) {
        return this._transformState.needTransform = !1,
        a.prototype.push.call(this, d, p)
    }
    ,
    u.prototype._transform = function(d, p, b) {
        b(new n("_transform()"))
    }
    ,
    u.prototype._write = function(d, p, b) {
        var g = this._transformState;
        if (g.writecb = b,
        g.writechunk = d,
        g.writeencoding = p,
        !g.transforming) {
            var $ = this._readableState;
            (g.needTransform || $.needReadable || $.length < $.highWaterMark) && this._read($.highWaterMark)
        }
    }
    ,
    u.prototype._read = function(d) {
        var p = this._transformState;
        p.writechunk !== null && !p.transforming ? (p.transforming = !0,
        this._transform(p.writechunk, p.writeencoding, p.afterTransform)) : p.needTransform = !0
    }
    ,
    u.prototype._destroy = function(d, p) {
        a.prototype._destroy.call(this, d, function(b) {
            p(b)
        })
    }
    ;
    function m(d, p, b) {
        if (p)
            return d.emit("error", p);
        if (b != null && d.push(b),
        d._writableState.length)
            throw new l;
        if (d._transformState.transforming)
            throw new o;
        return d.push(null)
    }
    return _stream_transform$1
}
var _stream_passthrough$1, hasRequired_stream_passthrough;
function require_stream_passthrough() {
    if (hasRequired_stream_passthrough)
        return _stream_passthrough$1;
    hasRequired_stream_passthrough = 1,
    _stream_passthrough$1 = n;
    var e = require_stream_transform();
    inherits_browserExports(n, e);
    function n(i) {
        if (!(this instanceof n))
            return new n(i);
        e.call(this, i)
    }
    return n.prototype._transform = function(i, o, l) {
        l(null, i)
    }
    ,
    _stream_passthrough$1
}
var pipeline_1, hasRequiredPipeline;
function requirePipeline() {
    if (hasRequiredPipeline)
        return pipeline_1;
    hasRequiredPipeline = 1;
    var e;
    function n(b) {
        var g = !1;
        return function() {
            g || (g = !0,
            b.apply(void 0, arguments))
        }
    }
    var i = requireErrorsBrowser().codes
      , o = i.ERR_MISSING_ARGS
      , l = i.ERR_STREAM_DESTROYED;
    function a(b) {
        if (b)
            throw b
    }
    function c(b) {
        return b.setHeader && typeof b.abort == "function"
    }
    function u(b, g, $, N) {
        N = n(N);
        var I = !1;
        b.on("close", function() {
            I = !0
        }),
        e === void 0 && (e = requireEndOfStream()),
        e(b, {
            readable: g,
            writable: $
        }, function(T) {
            if (T)
                return N(T);
            I = !0,
            N()
        });
        var L = !1;
        return function(T) {
            if (!I && !L) {
                if (L = !0,
                c(b))
                    return b.abort();
                if (typeof b.destroy == "function")
                    return b.destroy();
                N(T || new l("pipe"))
            }
        }
    }
    function h(b) {
        b()
    }
    function m(b, g) {
        return b.pipe(g)
    }
    function d(b) {
        return !b.length || typeof b[b.length - 1] != "function" ? a : b.pop()
    }
    function p() {
        for (var b = arguments.length, g = new Array(b), $ = 0; $ < b; $++)
            g[$] = arguments[$];
        var N = d(g);
        if (Array.isArray(g[0]) && (g = g[0]),
        g.length < 2)
            throw new o("streams");
        var I, L = g.map(function(T, M) {
            var q = M < g.length - 1
              , Q = M > 0;
            return u(T, q, Q, function(Y) {
                I || (I = Y),
                Y && L.forEach(h),
                !q && (L.forEach(h),
                N(I))
            })
        });
        return g.reduce(m)
    }
    return pipeline_1 = p,
    pipeline_1
}
var streamBrowserify = Stream
  , EE = eventsExports.EventEmitter
  , inherits$s = inherits_browserExports;
inherits$s(Stream, EE);
Stream.Readable = require_stream_readable$1();
Stream.Writable = require_stream_writable$1();
Stream.Duplex = require_stream_duplex$1();
Stream.Transform = require_stream_transform();
Stream.PassThrough = require_stream_passthrough();
Stream.finished = requireEndOfStream();
Stream.pipeline = requirePipeline();
Stream.Stream = Stream;
function Stream() {
    EE.call(this)
}
Stream.prototype.pipe = function(e, n) {
    var i = this;
    function o(d) {
        e.writable && e.write(d) === !1 && i.pause && i.pause()
    }
    i.on("data", o);
    function l() {
        i.readable && i.resume && i.resume()
    }
    e.on("drain", l),
    !e._isStdio && (!n || n.end !== !1) && (i.on("end", c),
    i.on("close", u));
    var a = !1;
    function c() {
        a || (a = !0,
        e.end())
    }
    function u() {
        a || (a = !0,
        typeof e.destroy == "function" && e.destroy())
    }
    function h(d) {
        if (m(),
        EE.listenerCount(this, "error") === 0)
            throw d
    }
    i.on("error", h),
    e.on("error", h);
    function m() {
        i.removeListener("data", o),
        e.removeListener("drain", l),
        i.removeListener("end", c),
        i.removeListener("close", u),
        i.removeListener("error", h),
        e.removeListener("error", h),
        i.removeListener("end", m),
        i.removeListener("close", m),
        e.removeListener("close", m)
    }
    return i.on("end", m),
    i.on("close", m),
    e.on("close", m),
    e.emit("pipe", i),
    e
}
;
var Buffer$D = safeBufferExports$1.Buffer
  , Transform$8 = streamBrowserify.Transform
  , inherits$r = inherits_browserExports;
function HashBase$4(e) {
    Transform$8.call(this),
    this._block = Buffer$D.allocUnsafe(e),
    this._blockSize = e,
    this._blockOffset = 0,
    this._length = [0, 0, 0, 0],
    this._finalized = !1
}
inherits$r(HashBase$4, Transform$8);
HashBase$4.prototype._transform = function(e, n, i) {
    var o = null;
    try {
        this.update(e, n)
    } catch (l) {
        o = l
    }
    i(o)
}
;
HashBase$4.prototype._flush = function(e) {
    var n = null;
    try {
        this.push(this.digest())
    } catch (i) {
        n = i
    }
    e(n)
}
;
var useUint8Array$3 = typeof Uint8Array < "u"
  , useArrayBuffer$3 = typeof ArrayBuffer < "u" && typeof Uint8Array < "u" && ArrayBuffer.isView && (Buffer$D.prototype instanceof Uint8Array || Buffer$D.TYPED_ARRAY_SUPPORT);
function toBuffer$6(e, n) {
    if (e instanceof Buffer$D)
        return e;
    if (typeof e == "string")
        return Buffer$D.from(e, n);
    if (useArrayBuffer$3 && ArrayBuffer.isView(e)) {
        if (e.byteLength === 0)
            return Buffer$D.alloc(0);
        var i = Buffer$D.from(e.buffer, e.byteOffset, e.byteLength);
        if (i.byteLength === e.byteLength)
            return i
    }
    if (useUint8Array$3 && e instanceof Uint8Array || Buffer$D.isBuffer(e) && e.constructor && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e))
        return Buffer$D.from(e);
    throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')
}
HashBase$4.prototype.update = function(e, n) {
    if (this._finalized)
        throw new Error("Digest already called");
    e = toBuffer$6(e, n);
    for (var i = this._block, o = 0; this._blockOffset + e.length - o >= this._blockSize; ) {
        for (var l = this._blockOffset; l < this._blockSize; )
            i[l++] = e[o++];
        this._update(),
        this._blockOffset = 0
    }
    for (; o < e.length; )
        i[this._blockOffset++] = e[o++];
    for (var a = 0, c = e.length * 8; c > 0; ++a)
        this._length[a] += c,
        c = this._length[a] / 4294967296 | 0,
        c > 0 && (this._length[a] -= 4294967296 * c);
    return this
}
;
HashBase$4.prototype._update = function() {
    throw new Error("_update is not implemented")
}
;
HashBase$4.prototype.digest = function(e) {
    if (this._finalized)
        throw new Error("Digest already called");
    this._finalized = !0;
    var n = this._digest();
    e !== void 0 && (n = n.toString(e)),
    this._block.fill(0),
    this._blockOffset = 0;
    for (var i = 0; i < 4; ++i)
        this._length[i] = 0;
    return n
}
;
HashBase$4.prototype._digest = function() {
    throw new Error("_digest is not implemented")
}
;
var hashBase$1 = HashBase$4
  , inherits$q = inherits_browserExports
  , HashBase$3 = hashBase$1
  , Buffer$C = safeBufferExports$1.Buffer
  , ARRAY16$1 = new Array(16);
function MD5$3() {
    HashBase$3.call(this, 64),
    this._a = 1732584193,
    this._b = 4023233417,
    this._c = 2562383102,
    this._d = 271733878
}
inherits$q(MD5$3, HashBase$3);
MD5$3.prototype._update = function() {
    for (var e = ARRAY16$1, n = 0; n < 16; ++n)
        e[n] = this._block.readInt32LE(n * 4);
    var i = this._a
      , o = this._b
      , l = this._c
      , a = this._d;
    i = fnF(i, o, l, a, e[0], 3614090360, 7),
    a = fnF(a, i, o, l, e[1], 3905402710, 12),
    l = fnF(l, a, i, o, e[2], 606105819, 17),
    o = fnF(o, l, a, i, e[3], 3250441966, 22),
    i = fnF(i, o, l, a, e[4], 4118548399, 7),
    a = fnF(a, i, o, l, e[5], 1200080426, 12),
    l = fnF(l, a, i, o, e[6], 2821735955, 17),
    o = fnF(o, l, a, i, e[7], 4249261313, 22),
    i = fnF(i, o, l, a, e[8], 1770035416, 7),
    a = fnF(a, i, o, l, e[9], 2336552879, 12),
    l = fnF(l, a, i, o, e[10], 4294925233, 17),
    o = fnF(o, l, a, i, e[11], 2304563134, 22),
    i = fnF(i, o, l, a, e[12], 1804603682, 7),
    a = fnF(a, i, o, l, e[13], 4254626195, 12),
    l = fnF(l, a, i, o, e[14], 2792965006, 17),
    o = fnF(o, l, a, i, e[15], 1236535329, 22),
    i = fnG(i, o, l, a, e[1], 4129170786, 5),
    a = fnG(a, i, o, l, e[6], 3225465664, 9),
    l = fnG(l, a, i, o, e[11], 643717713, 14),
    o = fnG(o, l, a, i, e[0], 3921069994, 20),
    i = fnG(i, o, l, a, e[5], 3593408605, 5),
    a = fnG(a, i, o, l, e[10], 38016083, 9),
    l = fnG(l, a, i, o, e[15], 3634488961, 14),
    o = fnG(o, l, a, i, e[4], 3889429448, 20),
    i = fnG(i, o, l, a, e[9], 568446438, 5),
    a = fnG(a, i, o, l, e[14], 3275163606, 9),
    l = fnG(l, a, i, o, e[3], 4107603335, 14),
    o = fnG(o, l, a, i, e[8], 1163531501, 20),
    i = fnG(i, o, l, a, e[13], 2850285829, 5),
    a = fnG(a, i, o, l, e[2], 4243563512, 9),
    l = fnG(l, a, i, o, e[7], 1735328473, 14),
    o = fnG(o, l, a, i, e[12], 2368359562, 20),
    i = fnH(i, o, l, a, e[5], 4294588738, 4),
    a = fnH(a, i, o, l, e[8], 2272392833, 11),
    l = fnH(l, a, i, o, e[11], 1839030562, 16),
    o = fnH(o, l, a, i, e[14], 4259657740, 23),
    i = fnH(i, o, l, a, e[1], 2763975236, 4),
    a = fnH(a, i, o, l, e[4], 1272893353, 11),
    l = fnH(l, a, i, o, e[7], 4139469664, 16),
    o = fnH(o, l, a, i, e[10], 3200236656, 23),
    i = fnH(i, o, l, a, e[13], 681279174, 4),
    a = fnH(a, i, o, l, e[0], 3936430074, 11),
    l = fnH(l, a, i, o, e[3], 3572445317, 16),
    o = fnH(o, l, a, i, e[6], 76029189, 23),
    i = fnH(i, o, l, a, e[9], 3654602809, 4),
    a = fnH(a, i, o, l, e[12], 3873151461, 11),
    l = fnH(l, a, i, o, e[15], 530742520, 16),
    o = fnH(o, l, a, i, e[2], 3299628645, 23),
    i = fnI(i, o, l, a, e[0], 4096336452, 6),
    a = fnI(a, i, o, l, e[7], 1126891415, 10),
    l = fnI(l, a, i, o, e[14], 2878612391, 15),
    o = fnI(o, l, a, i, e[5], 4237533241, 21),
    i = fnI(i, o, l, a, e[12], 1700485571, 6),
    a = fnI(a, i, o, l, e[3], 2399980690, 10),
    l = fnI(l, a, i, o, e[10], 4293915773, 15),
    o = fnI(o, l, a, i, e[1], 2240044497, 21),
    i = fnI(i, o, l, a, e[8], 1873313359, 6),
    a = fnI(a, i, o, l, e[15], 4264355552, 10),
    l = fnI(l, a, i, o, e[6], 2734768916, 15),
    o = fnI(o, l, a, i, e[13], 1309151649, 21),
    i = fnI(i, o, l, a, e[4], 4149444226, 6),
    a = fnI(a, i, o, l, e[11], 3174756917, 10),
    l = fnI(l, a, i, o, e[2], 718787259, 15),
    o = fnI(o, l, a, i, e[9], 3951481745, 21),
    this._a = this._a + i | 0,
    this._b = this._b + o | 0,
    this._c = this._c + l | 0,
    this._d = this._d + a | 0
}
;
MD5$3.prototype._digest = function() {
    this._block[this._blockOffset++] = 128,
    this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64),
    this._update(),
    this._blockOffset = 0),
    this._block.fill(0, this._blockOffset, 56),
    this._block.writeUInt32LE(this._length[0], 56),
    this._block.writeUInt32LE(this._length[1], 60),
    this._update();
    var e = Buffer$C.allocUnsafe(16);
    return e.writeInt32LE(this._a, 0),
    e.writeInt32LE(this._b, 4),
    e.writeInt32LE(this._c, 8),
    e.writeInt32LE(this._d, 12),
    e
}
;
function rotl$2(e, n) {
    return e << n | e >>> 32 - n
}
function fnF(e, n, i, o, l, a, c) {
    return rotl$2(e + (n & i | ~n & o) + l + a | 0, c) + n | 0
}
function fnG(e, n, i, o, l, a, c) {
    return rotl$2(e + (n & o | i & ~o) + l + a | 0, c) + n | 0
}
function fnH(e, n, i, o, l, a, c) {
    return rotl$2(e + (n ^ i ^ o) + l + a | 0, c) + n | 0
}
function fnI(e, n, i, o, l, a, c) {
    return rotl$2(e + (i ^ (n | ~o)) + l + a | 0, c) + n | 0
}
var md5_js = MD5$3
  , Buffer$B = require$$0$2.Buffer
  , inherits$p = inherits_browserExports
  , HashBase$2 = hashBase$1
  , ARRAY16 = new Array(16)
  , zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]
  , zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]
  , sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]
  , sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
  , hl = [0, 1518500249, 1859775393, 2400959708, 2840853838]
  , hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
function RIPEMD160$5() {
    HashBase$2.call(this, 64),
    this._a = 1732584193,
    this._b = 4023233417,
    this._c = 2562383102,
    this._d = 271733878,
    this._e = 3285377520
}
inherits$p(RIPEMD160$5, HashBase$2);
RIPEMD160$5.prototype._update = function() {
    for (var e = ARRAY16, n = 0; n < 16; ++n)
        e[n] = this._block.readInt32LE(n * 4);
    for (var i = this._a | 0, o = this._b | 0, l = this._c | 0, a = this._d | 0, c = this._e | 0, u = this._a | 0, h = this._b | 0, m = this._c | 0, d = this._d | 0, p = this._e | 0, b = 0; b < 80; b += 1) {
        var g, $;
        b < 16 ? (g = fn1$1(i, o, l, a, c, e[zl[b]], hl[0], sl[b]),
        $ = fn5$1(u, h, m, d, p, e[zr[b]], hr[0], sr[b])) : b < 32 ? (g = fn2$1(i, o, l, a, c, e[zl[b]], hl[1], sl[b]),
        $ = fn4$1(u, h, m, d, p, e[zr[b]], hr[1], sr[b])) : b < 48 ? (g = fn3$1(i, o, l, a, c, e[zl[b]], hl[2], sl[b]),
        $ = fn3$1(u, h, m, d, p, e[zr[b]], hr[2], sr[b])) : b < 64 ? (g = fn4$1(i, o, l, a, c, e[zl[b]], hl[3], sl[b]),
        $ = fn2$1(u, h, m, d, p, e[zr[b]], hr[3], sr[b])) : (g = fn5$1(i, o, l, a, c, e[zl[b]], hl[4], sl[b]),
        $ = fn1$1(u, h, m, d, p, e[zr[b]], hr[4], sr[b])),
        i = c,
        c = a,
        a = rotl$1(l, 10),
        l = o,
        o = g,
        u = p,
        p = d,
        d = rotl$1(m, 10),
        m = h,
        h = $
    }
    var N = this._b + l + d | 0;
    this._b = this._c + a + p | 0,
    this._c = this._d + c + u | 0,
    this._d = this._e + i + h | 0,
    this._e = this._a + o + m | 0,
    this._a = N
}
;
RIPEMD160$5.prototype._digest = function() {
    this._block[this._blockOffset++] = 128,
    this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64),
    this._update(),
    this._blockOffset = 0),
    this._block.fill(0, this._blockOffset, 56),
    this._block.writeUInt32LE(this._length[0], 56),
    this._block.writeUInt32LE(this._length[1], 60),
    this._update();
    var e = Buffer$B.alloc ? Buffer$B.alloc(20) : new Buffer$B(20);
    return e.writeInt32LE(this._a, 0),
    e.writeInt32LE(this._b, 4),
    e.writeInt32LE(this._c, 8),
    e.writeInt32LE(this._d, 12),
    e.writeInt32LE(this._e, 16),
    e
}
;
function rotl$1(e, n) {
    return e << n | e >>> 32 - n
}
function fn1$1(e, n, i, o, l, a, c, u) {
    return rotl$1(e + (n ^ i ^ o) + a + c | 0, u) + l | 0
}
function fn2$1(e, n, i, o, l, a, c, u) {
    return rotl$1(e + (n & i | ~n & o) + a + c | 0, u) + l | 0
}
function fn3$1(e, n, i, o, l, a, c, u) {
    return rotl$1(e + ((n | ~i) ^ o) + a + c | 0, u) + l | 0
}
function fn4$1(e, n, i, o, l, a, c, u) {
    return rotl$1(e + (n & o | i & ~o) + a + c | 0, u) + l | 0
}
function fn5$1(e, n, i, o, l, a, c, u) {
    return rotl$1(e + (n ^ (i | ~o)) + a + c | 0, u) + l | 0
}
var ripemd160$2 = RIPEMD160$5
  , sha_js = {
    exports: {}
}
  , toString$1 = {}.toString
  , isarray$1 = Array.isArray || function(e) {
    return toString$1.call(e) == "[object Array]"
}
  , $TypeError = type
  , callBound$2 = callBound$7
  , $typedArrayBuffer = callBound$2("TypedArray.prototype.buffer", !0)
  , isTypedArray = requireIsTypedArray()
  , typedArrayBuffer$1 = $typedArrayBuffer || function(n) {
    if (!isTypedArray(n))
        throw new $TypeError("Not a Typed Array");
    return n.buffer
}
  , Buffer$A = safeBufferExports$1.Buffer
  , isArray$1 = isarray$1
  , typedArrayBuffer = typedArrayBuffer$1
  , isView$1 = ArrayBuffer.isView || function(n) {
    try {
        return typedArrayBuffer(n),
        !0
    } catch {
        return !1
    }
}
  , useUint8Array$2 = typeof Uint8Array < "u"
  , useArrayBuffer$2 = typeof ArrayBuffer < "u" && typeof Uint8Array < "u"
  , useFromArrayBuffer = useArrayBuffer$2 && (Buffer$A.prototype instanceof Uint8Array || Buffer$A.TYPED_ARRAY_SUPPORT)
  , toBuffer$5 = function(n, i) {
    if (n instanceof Buffer$A)
        return n;
    if (typeof n == "string")
        return Buffer$A.from(n, i);
    if (useArrayBuffer$2 && isView$1(n)) {
        if (n.byteLength === 0)
            return Buffer$A.alloc(0);
        if (useFromArrayBuffer) {
            var o = Buffer$A.from(n.buffer, n.byteOffset, n.byteLength);
            if (o.byteLength === n.byteLength)
                return o
        }
        var l = n instanceof Uint8Array ? n : new Uint8Array(n.buffer,n.byteOffset,n.byteLength)
          , a = Buffer$A.from(l);
        if (a.length === n.byteLength)
            return a
    }
    if (useUint8Array$2 && n instanceof Uint8Array)
        return Buffer$A.from(n);
    var c = isArray$1(n);
    if (c)
        for (var u = 0; u < n.length; u += 1) {
            var h = n[u];
            if (typeof h != "number" || h < 0 || h > 255 || ~~h !== h)
                throw new RangeError("Array items must be numbers in the range 0-255.")
        }
    if (c || Buffer$A.isBuffer(n) && n.constructor && typeof n.constructor.isBuffer == "function" && n.constructor.isBuffer(n))
        return Buffer$A.from(n);
    throw new TypeError('The "data" argument must be a string, an Array, a Buffer, a Uint8Array, or a DataView.')
}
  , Buffer$z = safeBufferExports$1.Buffer
  , toBuffer$4 = toBuffer$5;
function Hash$7(e, n) {
    this._block = Buffer$z.alloc(e),
    this._finalSize = n,
    this._blockSize = e,
    this._len = 0
}
Hash$7.prototype.update = function(e, n) {
    e = toBuffer$4(e, n || "utf8");
    for (var i = this._block, o = this._blockSize, l = e.length, a = this._len, c = 0; c < l; ) {
        for (var u = a % o, h = Math.min(l - c, o - u), m = 0; m < h; m++)
            i[u + m] = e[c + m];
        a += h,
        c += h,
        a % o === 0 && this._update(i)
    }
    return this._len += l,
    this
}
;
Hash$7.prototype.digest = function(e) {
    var n = this._len % this._blockSize;
    this._block[n] = 128,
    this._block.fill(0, n + 1),
    n >= this._finalSize && (this._update(this._block),
    this._block.fill(0));
    var i = this._len * 8;
    if (i <= 4294967295)
        this._block.writeUInt32BE(i, this._blockSize - 4);
    else {
        var o = (i & 4294967295) >>> 0
          , l = (i - o) / 4294967296;
        this._block.writeUInt32BE(l, this._blockSize - 8),
        this._block.writeUInt32BE(o, this._blockSize - 4)
    }
    this._update(this._block);
    var a = this._hash();
    return e ? a.toString(e) : a
}
;
Hash$7.prototype._update = function() {
    throw new Error("_update must be implemented by subclass")
}
;
var hash$3 = Hash$7
  , inherits$o = inherits_browserExports
  , Hash$6 = hash$3
  , Buffer$y = safeBufferExports$1.Buffer
  , K$4 = [1518500249, 1859775393, -1894007588, -899497514]
  , W$5 = new Array(80);
function Sha() {
    this.init(),
    this._w = W$5,
    Hash$6.call(this, 64, 56)
}
inherits$o(Sha, Hash$6);
Sha.prototype.init = function() {
    return this._a = 1732584193,
    this._b = 4023233417,
    this._c = 2562383102,
    this._d = 271733878,
    this._e = 3285377520,
    this
}
;
function rotl5$1(e) {
    return e << 5 | e >>> 27
}
function rotl30$1(e) {
    return e << 30 | e >>> 2
}
function ft$1(e, n, i, o) {
    return e === 0 ? n & i | ~n & o : e === 2 ? n & i | n & o | i & o : n ^ i ^ o
}
Sha.prototype._update = function(e) {
    for (var n = this._w, i = this._a | 0, o = this._b | 0, l = this._c | 0, a = this._d | 0, c = this._e | 0, u = 0; u < 16; ++u)
        n[u] = e.readInt32BE(u * 4);
    for (; u < 80; ++u)
        n[u] = n[u - 3] ^ n[u - 8] ^ n[u - 14] ^ n[u - 16];
    for (var h = 0; h < 80; ++h) {
        var m = ~~(h / 20)
          , d = rotl5$1(i) + ft$1(m, o, l, a) + c + n[h] + K$4[m] | 0;
        c = a,
        a = l,
        l = rotl30$1(o),
        o = i,
        i = d
    }
    this._a = i + this._a | 0,
    this._b = o + this._b | 0,
    this._c = l + this._c | 0,
    this._d = a + this._d | 0,
    this._e = c + this._e | 0
}
;
Sha.prototype._hash = function() {
    var e = Buffer$y.allocUnsafe(20);
    return e.writeInt32BE(this._a | 0, 0),
    e.writeInt32BE(this._b | 0, 4),
    e.writeInt32BE(this._c | 0, 8),
    e.writeInt32BE(this._d | 0, 12),
    e.writeInt32BE(this._e | 0, 16),
    e
}
;
var sha$4 = Sha
  , inherits$n = inherits_browserExports
  , Hash$5 = hash$3
  , Buffer$x = safeBufferExports$1.Buffer
  , K$3 = [1518500249, 1859775393, -1894007588, -899497514]
  , W$4 = new Array(80);
function Sha1() {
    this.init(),
    this._w = W$4,
    Hash$5.call(this, 64, 56)
}
inherits$n(Sha1, Hash$5);
Sha1.prototype.init = function() {
    return this._a = 1732584193,
    this._b = 4023233417,
    this._c = 2562383102,
    this._d = 271733878,
    this._e = 3285377520,
    this
}
;
function rotl1(e) {
    return e << 1 | e >>> 31
}
function rotl5(e) {
    return e << 5 | e >>> 27
}
function rotl30(e) {
    return e << 30 | e >>> 2
}
function ft(e, n, i, o) {
    return e === 0 ? n & i | ~n & o : e === 2 ? n & i | n & o | i & o : n ^ i ^ o
}
Sha1.prototype._update = function(e) {
    for (var n = this._w, i = this._a | 0, o = this._b | 0, l = this._c | 0, a = this._d | 0, c = this._e | 0, u = 0; u < 16; ++u)
        n[u] = e.readInt32BE(u * 4);
    for (; u < 80; ++u)
        n[u] = rotl1(n[u - 3] ^ n[u - 8] ^ n[u - 14] ^ n[u - 16]);
    for (var h = 0; h < 80; ++h) {
        var m = ~~(h / 20)
          , d = rotl5(i) + ft(m, o, l, a) + c + n[h] + K$3[m] | 0;
        c = a,
        a = l,
        l = rotl30(o),
        o = i,
        i = d
    }
    this._a = i + this._a | 0,
    this._b = o + this._b | 0,
    this._c = l + this._c | 0,
    this._d = a + this._d | 0,
    this._e = c + this._e | 0
}
;
Sha1.prototype._hash = function() {
    var e = Buffer$x.allocUnsafe(20);
    return e.writeInt32BE(this._a | 0, 0),
    e.writeInt32BE(this._b | 0, 4),
    e.writeInt32BE(this._c | 0, 8),
    e.writeInt32BE(this._d | 0, 12),
    e.writeInt32BE(this._e | 0, 16),
    e
}
;
var sha1$1 = Sha1
  , inherits$m = inherits_browserExports
  , Hash$4 = hash$3
  , Buffer$w = safeBufferExports$1.Buffer
  , K$2 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]
  , W$3 = new Array(64);
function Sha256$1() {
    this.init(),
    this._w = W$3,
    Hash$4.call(this, 64, 56)
}
inherits$m(Sha256$1, Hash$4);
Sha256$1.prototype.init = function() {
    return this._a = 1779033703,
    this._b = 3144134277,
    this._c = 1013904242,
    this._d = 2773480762,
    this._e = 1359893119,
    this._f = 2600822924,
    this._g = 528734635,
    this._h = 1541459225,
    this
}
;
function ch(e, n, i) {
    return i ^ e & (n ^ i)
}
function maj$1(e, n, i) {
    return e & n | i & (e | n)
}
function sigma0$1(e) {
    return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10)
}
function sigma1$1(e) {
    return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7)
}
function gamma0(e) {
    return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3
}
function gamma1(e) {
    return (e >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10
}
Sha256$1.prototype._update = function(e) {
    for (var n = this._w, i = this._a | 0, o = this._b | 0, l = this._c | 0, a = this._d | 0, c = this._e | 0, u = this._f | 0, h = this._g | 0, m = this._h | 0, d = 0; d < 16; ++d)
        n[d] = e.readInt32BE(d * 4);
    for (; d < 64; ++d)
        n[d] = gamma1(n[d - 2]) + n[d - 7] + gamma0(n[d - 15]) + n[d - 16] | 0;
    for (var p = 0; p < 64; ++p) {
        var b = m + sigma1$1(c) + ch(c, u, h) + K$2[p] + n[p] | 0
          , g = sigma0$1(i) + maj$1(i, o, l) | 0;
        m = h,
        h = u,
        u = c,
        c = a + b | 0,
        a = l,
        l = o,
        o = i,
        i = b + g | 0
    }
    this._a = i + this._a | 0,
    this._b = o + this._b | 0,
    this._c = l + this._c | 0,
    this._d = a + this._d | 0,
    this._e = c + this._e | 0,
    this._f = u + this._f | 0,
    this._g = h + this._g | 0,
    this._h = m + this._h | 0
}
;
Sha256$1.prototype._hash = function() {
    var e = Buffer$w.allocUnsafe(32);
    return e.writeInt32BE(this._a, 0),
    e.writeInt32BE(this._b, 4),
    e.writeInt32BE(this._c, 8),
    e.writeInt32BE(this._d, 12),
    e.writeInt32BE(this._e, 16),
    e.writeInt32BE(this._f, 20),
    e.writeInt32BE(this._g, 24),
    e.writeInt32BE(this._h, 28),
    e
}
;
var sha256$2 = Sha256$1
  , inherits$l = inherits_browserExports
  , Sha256 = sha256$2
  , Hash$3 = hash$3
  , Buffer$v = safeBufferExports$1.Buffer
  , W$2 = new Array(64);
function Sha224() {
    this.init(),
    this._w = W$2,
    Hash$3.call(this, 64, 56)
}
inherits$l(Sha224, Sha256);
Sha224.prototype.init = function() {
    return this._a = 3238371032,
    this._b = 914150663,
    this._c = 812702999,
    this._d = 4144912697,
    this._e = 4290775857,
    this._f = 1750603025,
    this._g = 1694076839,
    this._h = 3204075428,
    this
}
;
Sha224.prototype._hash = function() {
    var e = Buffer$v.allocUnsafe(28);
    return e.writeInt32BE(this._a, 0),
    e.writeInt32BE(this._b, 4),
    e.writeInt32BE(this._c, 8),
    e.writeInt32BE(this._d, 12),
    e.writeInt32BE(this._e, 16),
    e.writeInt32BE(this._f, 20),
    e.writeInt32BE(this._g, 24),
    e
}
;
var sha224$2 = Sha224
  , inherits$k = inherits_browserExports
  , Hash$2 = hash$3
  , Buffer$u = safeBufferExports$1.Buffer
  , K$1 = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]
  , W$1 = new Array(160);
function Sha512() {
    this.init(),
    this._w = W$1,
    Hash$2.call(this, 128, 112)
}
inherits$k(Sha512, Hash$2);
Sha512.prototype.init = function() {
    return this._ah = 1779033703,
    this._bh = 3144134277,
    this._ch = 1013904242,
    this._dh = 2773480762,
    this._eh = 1359893119,
    this._fh = 2600822924,
    this._gh = 528734635,
    this._hh = 1541459225,
    this._al = 4089235720,
    this._bl = 2227873595,
    this._cl = 4271175723,
    this._dl = 1595750129,
    this._el = 2917565137,
    this._fl = 725511199,
    this._gl = 4215389547,
    this._hl = 327033209,
    this
}
;
function Ch(e, n, i) {
    return i ^ e & (n ^ i)
}
function maj(e, n, i) {
    return e & n | i & (e | n)
}
function sigma0(e, n) {
    return (e >>> 28 | n << 4) ^ (n >>> 2 | e << 30) ^ (n >>> 7 | e << 25)
}
function sigma1(e, n) {
    return (e >>> 14 | n << 18) ^ (e >>> 18 | n << 14) ^ (n >>> 9 | e << 23)
}
function Gamma0(e, n) {
    return (e >>> 1 | n << 31) ^ (e >>> 8 | n << 24) ^ e >>> 7
}
function Gamma0l(e, n) {
    return (e >>> 1 | n << 31) ^ (e >>> 8 | n << 24) ^ (e >>> 7 | n << 25)
}
function Gamma1(e, n) {
    return (e >>> 19 | n << 13) ^ (n >>> 29 | e << 3) ^ e >>> 6
}
function Gamma1l(e, n) {
    return (e >>> 19 | n << 13) ^ (n >>> 29 | e << 3) ^ (e >>> 6 | n << 26)
}
function getCarry(e, n) {
    return e >>> 0 < n >>> 0 ? 1 : 0
}
Sha512.prototype._update = function(e) {
    for (var n = this._w, i = this._ah | 0, o = this._bh | 0, l = this._ch | 0, a = this._dh | 0, c = this._eh | 0, u = this._fh | 0, h = this._gh | 0, m = this._hh | 0, d = this._al | 0, p = this._bl | 0, b = this._cl | 0, g = this._dl | 0, $ = this._el | 0, N = this._fl | 0, I = this._gl | 0, L = this._hl | 0, T = 0; T < 32; T += 2)
        n[T] = e.readInt32BE(T * 4),
        n[T + 1] = e.readInt32BE(T * 4 + 4);
    for (; T < 160; T += 2) {
        var M = n[T - 30]
          , q = n[T - 15 * 2 + 1]
          , Q = Gamma0(M, q)
          , Y = Gamma0l(q, M);
        M = n[T - 2 * 2],
        q = n[T - 2 * 2 + 1];
        var ee = Gamma1(M, q)
          , ie = Gamma1l(q, M)
          , te = n[T - 7 * 2]
          , ne = n[T - 7 * 2 + 1]
          , V = n[T - 16 * 2]
          , w = n[T - 16 * 2 + 1]
          , x = Y + ne | 0
          , v = Q + te + getCarry(x, Y) | 0;
        x = x + ie | 0,
        v = v + ee + getCarry(x, ie) | 0,
        x = x + w | 0,
        v = v + V + getCarry(x, w) | 0,
        n[T] = v,
        n[T + 1] = x
    }
    for (var S = 0; S < 160; S += 2) {
        v = n[S],
        x = n[S + 1];
        var D = maj(i, o, l)
          , C = maj(d, p, b)
          , O = sigma0(i, d)
          , P = sigma0(d, i)
          , y = sigma1(c, $)
          , A = sigma1($, c)
          , E = K$1[S]
          , k = K$1[S + 1]
          , H = Ch(c, u, h)
          , J = Ch($, N, I)
          , j = L + A | 0
          , F = m + y + getCarry(j, L) | 0;
        j = j + J | 0,
        F = F + H + getCarry(j, J) | 0,
        j = j + k | 0,
        F = F + E + getCarry(j, k) | 0,
        j = j + x | 0,
        F = F + v + getCarry(j, x) | 0;
        var U = P + C | 0
          , re = O + D + getCarry(U, P) | 0;
        m = h,
        L = I,
        h = u,
        I = N,
        u = c,
        N = $,
        $ = g + j | 0,
        c = a + F + getCarry($, g) | 0,
        a = l,
        g = b,
        l = o,
        b = p,
        o = i,
        p = d,
        d = j + U | 0,
        i = F + re + getCarry(d, j) | 0
    }
    this._al = this._al + d | 0,
    this._bl = this._bl + p | 0,
    this._cl = this._cl + b | 0,
    this._dl = this._dl + g | 0,
    this._el = this._el + $ | 0,
    this._fl = this._fl + N | 0,
    this._gl = this._gl + I | 0,
    this._hl = this._hl + L | 0,
    this._ah = this._ah + i + getCarry(this._al, d) | 0,
    this._bh = this._bh + o + getCarry(this._bl, p) | 0,
    this._ch = this._ch + l + getCarry(this._cl, b) | 0,
    this._dh = this._dh + a + getCarry(this._dl, g) | 0,
    this._eh = this._eh + c + getCarry(this._el, $) | 0,
    this._fh = this._fh + u + getCarry(this._fl, N) | 0,
    this._gh = this._gh + h + getCarry(this._gl, I) | 0,
    this._hh = this._hh + m + getCarry(this._hl, L) | 0
}
;
Sha512.prototype._hash = function() {
    var e = Buffer$u.allocUnsafe(64);
    function n(i, o, l) {
        e.writeInt32BE(i, l),
        e.writeInt32BE(o, l + 4)
    }
    return n(this._ah, this._al, 0),
    n(this._bh, this._bl, 8),
    n(this._ch, this._cl, 16),
    n(this._dh, this._dl, 24),
    n(this._eh, this._el, 32),
    n(this._fh, this._fl, 40),
    n(this._gh, this._gl, 48),
    n(this._hh, this._hl, 56),
    e
}
;
var sha512$2 = Sha512
  , inherits$j = inherits_browserExports
  , SHA512$2 = sha512$2
  , Hash$1 = hash$3
  , Buffer$t = safeBufferExports$1.Buffer
  , W = new Array(160);
function Sha384() {
    this.init(),
    this._w = W,
    Hash$1.call(this, 128, 112)
}
inherits$j(Sha384, SHA512$2);
Sha384.prototype.init = function() {
    return this._ah = 3418070365,
    this._bh = 1654270250,
    this._ch = 2438529370,
    this._dh = 355462360,
    this._eh = 1731405415,
    this._fh = 2394180231,
    this._gh = 3675008525,
    this._hh = 1203062813,
    this._al = 3238371032,
    this._bl = 914150663,
    this._cl = 812702999,
    this._dl = 4144912697,
    this._el = 4290775857,
    this._fl = 1750603025,
    this._gl = 1694076839,
    this._hl = 3204075428,
    this
}
;
Sha384.prototype._hash = function() {
    var e = Buffer$t.allocUnsafe(48);
    function n(i, o, l) {
        e.writeInt32BE(i, l),
        e.writeInt32BE(o, l + 4)
    }
    return n(this._ah, this._al, 0),
    n(this._bh, this._bl, 8),
    n(this._ch, this._cl, 16),
    n(this._dh, this._dl, 24),
    n(this._eh, this._el, 32),
    n(this._fh, this._fl, 40),
    e
}
;
var sha384$2 = Sha384;
(function(e) {
    e.exports = function(i) {
        var o = i.toLowerCase()
          , l = e.exports[o];
        if (!l)
            throw new Error(o + " is not supported (we accept pull requests)");
        return new l
    }
    ,
    e.exports.sha = sha$4,
    e.exports.sha1 = sha1$1,
    e.exports.sha224 = sha224$2,
    e.exports.sha256 = sha256$2,
    e.exports.sha384 = sha384$2,
    e.exports.sha512 = sha512$2
}
)(sha_js);
var sha_jsExports = sha_js.exports
  , Buffer$s = safeBufferExports$1.Buffer
  , Transform$7 = streamBrowserify.Transform
  , StringDecoder = string_decoder.StringDecoder
  , inherits$i = inherits_browserExports;
function CipherBase$1(e) {
    Transform$7.call(this),
    this.hashMode = typeof e == "string",
    this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest,
    this._final && (this.__final = this._final,
    this._final = null),
    this._decoder = null,
    this._encoding = null
}
inherits$i(CipherBase$1, Transform$7);
var useUint8Array$1 = typeof Uint8Array < "u"
  , useArrayBuffer$1 = typeof ArrayBuffer < "u" && typeof Uint8Array < "u" && ArrayBuffer.isView && (Buffer$s.prototype instanceof Uint8Array || Buffer$s.TYPED_ARRAY_SUPPORT);
function toBuffer$3(e, n) {
    if (e instanceof Buffer$s)
        return e;
    if (typeof e == "string")
        return Buffer$s.from(e, n);
    if (useArrayBuffer$1 && ArrayBuffer.isView(e)) {
        if (e.byteLength === 0)
            return Buffer$s.alloc(0);
        var i = Buffer$s.from(e.buffer, e.byteOffset, e.byteLength);
        if (i.byteLength === e.byteLength)
            return i
    }
    if (useUint8Array$1 && e instanceof Uint8Array || Buffer$s.isBuffer(e) && e.constructor && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e))
        return Buffer$s.from(e);
    throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')
}
CipherBase$1.prototype.update = function(e, n, i) {
    var o = toBuffer$3(e, n)
      , l = this._update(o);
    return this.hashMode ? this : (i && (l = this._toString(l, i)),
    l)
}
;
CipherBase$1.prototype.setAutoPadding = function() {}
;
CipherBase$1.prototype.getAuthTag = function() {
    throw new Error("trying to get auth tag in unsupported state")
}
;
CipherBase$1.prototype.setAuthTag = function() {
    throw new Error("trying to set auth tag in unsupported state")
}
;
CipherBase$1.prototype.setAAD = function() {
    throw new Error("trying to set aad in unsupported state")
}
;
CipherBase$1.prototype._transform = function(e, n, i) {
    var o;
    try {
        this.hashMode ? this._update(e) : this.push(this._update(e))
    } catch (l) {
        o = l
    } finally {
        i(o)
    }
}
;
CipherBase$1.prototype._flush = function(e) {
    var n;
    try {
        this.push(this.__final())
    } catch (i) {
        n = i
    }
    e(n)
}
;
CipherBase$1.prototype._finalOrDigest = function(e) {
    var n = this.__final() || Buffer$s.alloc(0);
    return e && (n = this._toString(n, e, !0)),
    n
}
;
CipherBase$1.prototype._toString = function(e, n, i) {
    if (this._decoder || (this._decoder = new StringDecoder(n),
    this._encoding = n),
    this._encoding !== n)
        throw new Error("can’t switch encodings");
    var o = this._decoder.write(e);
    return i && (o += this._decoder.end()),
    o
}
;
var cipherBase = CipherBase$1
  , inherits$h = inherits_browserExports
  , MD5$2 = md5_js
  , RIPEMD160$4 = ripemd160$2
  , sha$3 = sha_jsExports
  , Base$5 = cipherBase;
function Hash(e) {
    Base$5.call(this, "digest"),
    this._hash = e
}
inherits$h(Hash, Base$5);
Hash.prototype._update = function(e) {
    this._hash.update(e)
}
;
Hash.prototype._final = function() {
    return this._hash.digest()
}
;
var browser$9 = function(n) {
    return n = n.toLowerCase(),
    n === "md5" ? new MD5$2 : n === "rmd160" || n === "ripemd160" ? new RIPEMD160$4 : new Hash(sha$3(n))
}
  , inherits$g = inherits_browserExports
  , Buffer$r = safeBufferExports$1.Buffer
  , Base$4 = cipherBase
  , ZEROS$2 = Buffer$r.alloc(128)
  , blocksize = 64;
function Hmac$3(e, n) {
    Base$4.call(this, "digest"),
    typeof n == "string" && (n = Buffer$r.from(n)),
    this._alg = e,
    this._key = n,
    n.length > blocksize ? n = e(n) : n.length < blocksize && (n = Buffer$r.concat([n, ZEROS$2], blocksize));
    for (var i = this._ipad = Buffer$r.allocUnsafe(blocksize), o = this._opad = Buffer$r.allocUnsafe(blocksize), l = 0; l < blocksize; l++)
        i[l] = n[l] ^ 54,
        o[l] = n[l] ^ 92;
    this._hash = [i]
}
inherits$g(Hmac$3, Base$4);
Hmac$3.prototype._update = function(e) {
    this._hash.push(e)
}
;
Hmac$3.prototype._final = function() {
    var e = this._alg(Buffer$r.concat(this._hash));
    return this._alg(Buffer$r.concat([this._opad, e]))
}
;
var legacy = Hmac$3
  , MD5$1 = md5_js
  , md5$4 = function(e) {
    return new MD5$1().update(e).digest()
}
  , inherits$f = inherits_browserExports
  , Legacy = legacy
  , Base$3 = cipherBase
  , Buffer$q = safeBufferExports$1.Buffer
  , md5$3 = md5$4
  , RIPEMD160$3 = ripemd160$2
  , sha$2 = sha_jsExports
  , ZEROS$1 = Buffer$q.alloc(128);
function Hmac$2(e, n) {
    Base$3.call(this, "digest"),
    typeof n == "string" && (n = Buffer$q.from(n));
    var i = e === "sha512" || e === "sha384" ? 128 : 64;
    if (this._alg = e,
    this._key = n,
    n.length > i) {
        var o = e === "rmd160" ? new RIPEMD160$3 : sha$2(e);
        n = o.update(n).digest()
    } else
        n.length < i && (n = Buffer$q.concat([n, ZEROS$1], i));
    for (var l = this._ipad = Buffer$q.allocUnsafe(i), a = this._opad = Buffer$q.allocUnsafe(i), c = 0; c < i; c++)
        l[c] = n[c] ^ 54,
        a[c] = n[c] ^ 92;
    this._hash = e === "rmd160" ? new RIPEMD160$3 : sha$2(e),
    this._hash.update(l)
}
inherits$f(Hmac$2, Base$3);
Hmac$2.prototype._update = function(e) {
    this._hash.update(e)
}
;
Hmac$2.prototype._final = function() {
    var e = this._hash.digest()
      , n = this._alg === "rmd160" ? new RIPEMD160$3 : sha$2(this._alg);
    return n.update(this._opad).update(e).digest()
}
;
var browser$8 = function(n, i) {
    return n = n.toLowerCase(),
    n === "rmd160" || n === "ripemd160" ? new Hmac$2("rmd160",i) : n === "md5" ? new Legacy(md5$3,i) : new Hmac$2(n,i)
};
const sha224WithRSAEncryption = {
    sign: "rsa",
    hash: "sha224",
    id: "302d300d06096086480165030402040500041c"
}
  , sha256WithRSAEncryption = {
    sign: "rsa",
    hash: "sha256",
    id: "3031300d060960864801650304020105000420"
}
  , sha384WithRSAEncryption = {
    sign: "rsa",
    hash: "sha384",
    id: "3041300d060960864801650304020205000430"
}
  , sha512WithRSAEncryption = {
    sign: "rsa",
    hash: "sha512",
    id: "3051300d060960864801650304020305000440"
}
  , sha256$1 = {
    sign: "ecdsa",
    hash: "sha256",
    id: ""
}
  , sha224$1 = {
    sign: "ecdsa",
    hash: "sha224",
    id: ""
}
  , sha384$1 = {
    sign: "ecdsa",
    hash: "sha384",
    id: ""
}
  , sha512$1 = {
    sign: "ecdsa",
    hash: "sha512",
    id: ""
}
  , DSA = {
    sign: "dsa",
    hash: "sha1",
    id: ""
}
  , ripemd160WithRSA = {
    sign: "rsa",
    hash: "rmd160",
    id: "3021300906052b2403020105000414"
}
  , md5WithRSAEncryption = {
    sign: "rsa",
    hash: "md5",
    id: "3020300c06082a864886f70d020505000410"
}
  , require$$6 = {
    sha224WithRSAEncryption,
    "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
    },
    sha256WithRSAEncryption,
    "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
    },
    sha384WithRSAEncryption,
    "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
    },
    sha512WithRSAEncryption,
    "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
    },
    "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
    },
    "ecdsa-with-SHA1": {
        sign: "ecdsa",
        hash: "sha1",
        id: ""
    },
    sha256: sha256$1,
    sha224: sha224$1,
    sha384: sha384$1,
    sha512: sha512$1,
    "DSA-SHA": {
        sign: "dsa",
        hash: "sha1",
        id: ""
    },
    "DSA-SHA1": {
        sign: "dsa",
        hash: "sha1",
        id: ""
    },
    DSA,
    "DSA-WITH-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
    },
    "DSA-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
    },
    "DSA-WITH-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
    },
    "DSA-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
    },
    "DSA-WITH-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
    },
    "DSA-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
    },
    "DSA-WITH-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
    },
    "DSA-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
    },
    "DSA-RIPEMD160": {
        sign: "dsa",
        hash: "rmd160",
        id: ""
    },
    ripemd160WithRSA,
    "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
    },
    md5WithRSAEncryption,
    "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
    }
};
var algos = require$$6, browser$7 = {}, MAX_ALLOC = Math.pow(2, 30) - 1, precondition = function(e, n) {
    if (typeof e != "number")
        throw new TypeError("Iterations not a number");
    if (e < 0)
        throw new TypeError("Bad iterations");
    if (typeof n != "number")
        throw new TypeError("Key length not a number");
    if (n < 0 || n > MAX_ALLOC || n !== n)
        throw new TypeError("Bad key length")
}, defaultEncoding$2;
if (commonjsGlobal.process && commonjsGlobal.process.browser)
    defaultEncoding$2 = "utf-8";
else if (commonjsGlobal.process && commonjsGlobal.process.version) {
    var pVersionMajor = parseInt(process$1.version.split(".")[0].slice(1), 10);
    defaultEncoding$2 = pVersionMajor >= 6 ? "utf-8" : "binary"
} else
    defaultEncoding$2 = "utf-8";
var defaultEncoding_1 = defaultEncoding$2
  , intSize = 4
  , zeroBuffer = new Buffer$G(intSize);
zeroBuffer.fill(0);
var charSize = 8
  , hashSize = 16;
function toArray$2(e) {
    if (e.length % intSize !== 0) {
        var n = e.length + (intSize - e.length % intSize);
        e = Buffer$G.concat([e, zeroBuffer], n)
    }
    for (var i = new Array(e.length >>> 2), o = 0, l = 0; o < e.length; o += intSize,
    l++)
        i[l] = e.readInt32LE(o);
    return i
}
var makeHash$1 = function(n, i) {
    var o = i(toArray$2(n), n.length * charSize);
    n = new Buffer$G(hashSize);
    for (var l = 0; l < o.length; l++)
        n.writeInt32LE(o[l], l << 2, !0);
    return n
}
  , makeHash = makeHash$1;
function core_md5(e, n) {
    e[n >> 5] |= 128 << n % 32,
    e[(n + 64 >>> 9 << 4) + 14] = n;
    for (var i = 1732584193, o = -271733879, l = -1732584194, a = 271733878, c = 0; c < e.length; c += 16) {
        var u = i
          , h = o
          , m = l
          , d = a;
        i = md5_ff(i, o, l, a, e[c + 0], 7, -680876936),
        a = md5_ff(a, i, o, l, e[c + 1], 12, -389564586),
        l = md5_ff(l, a, i, o, e[c + 2], 17, 606105819),
        o = md5_ff(o, l, a, i, e[c + 3], 22, -1044525330),
        i = md5_ff(i, o, l, a, e[c + 4], 7, -176418897),
        a = md5_ff(a, i, o, l, e[c + 5], 12, 1200080426),
        l = md5_ff(l, a, i, o, e[c + 6], 17, -1473231341),
        o = md5_ff(o, l, a, i, e[c + 7], 22, -45705983),
        i = md5_ff(i, o, l, a, e[c + 8], 7, 1770035416),
        a = md5_ff(a, i, o, l, e[c + 9], 12, -1958414417),
        l = md5_ff(l, a, i, o, e[c + 10], 17, -42063),
        o = md5_ff(o, l, a, i, e[c + 11], 22, -1990404162),
        i = md5_ff(i, o, l, a, e[c + 12], 7, 1804603682),
        a = md5_ff(a, i, o, l, e[c + 13], 12, -40341101),
        l = md5_ff(l, a, i, o, e[c + 14], 17, -1502002290),
        o = md5_ff(o, l, a, i, e[c + 15], 22, 1236535329),
        i = md5_gg(i, o, l, a, e[c + 1], 5, -165796510),
        a = md5_gg(a, i, o, l, e[c + 6], 9, -1069501632),
        l = md5_gg(l, a, i, o, e[c + 11], 14, 643717713),
        o = md5_gg(o, l, a, i, e[c + 0], 20, -373897302),
        i = md5_gg(i, o, l, a, e[c + 5], 5, -701558691),
        a = md5_gg(a, i, o, l, e[c + 10], 9, 38016083),
        l = md5_gg(l, a, i, o, e[c + 15], 14, -660478335),
        o = md5_gg(o, l, a, i, e[c + 4], 20, -405537848),
        i = md5_gg(i, o, l, a, e[c + 9], 5, 568446438),
        a = md5_gg(a, i, o, l, e[c + 14], 9, -1019803690),
        l = md5_gg(l, a, i, o, e[c + 3], 14, -187363961),
        o = md5_gg(o, l, a, i, e[c + 8], 20, 1163531501),
        i = md5_gg(i, o, l, a, e[c + 13], 5, -1444681467),
        a = md5_gg(a, i, o, l, e[c + 2], 9, -51403784),
        l = md5_gg(l, a, i, o, e[c + 7], 14, 1735328473),
        o = md5_gg(o, l, a, i, e[c + 12], 20, -1926607734),
        i = md5_hh(i, o, l, a, e[c + 5], 4, -378558),
        a = md5_hh(a, i, o, l, e[c + 8], 11, -2022574463),
        l = md5_hh(l, a, i, o, e[c + 11], 16, 1839030562),
        o = md5_hh(o, l, a, i, e[c + 14], 23, -35309556),
        i = md5_hh(i, o, l, a, e[c + 1], 4, -1530992060),
        a = md5_hh(a, i, o, l, e[c + 4], 11, 1272893353),
        l = md5_hh(l, a, i, o, e[c + 7], 16, -155497632),
        o = md5_hh(o, l, a, i, e[c + 10], 23, -1094730640),
        i = md5_hh(i, o, l, a, e[c + 13], 4, 681279174),
        a = md5_hh(a, i, o, l, e[c + 0], 11, -358537222),
        l = md5_hh(l, a, i, o, e[c + 3], 16, -722521979),
        o = md5_hh(o, l, a, i, e[c + 6], 23, 76029189),
        i = md5_hh(i, o, l, a, e[c + 9], 4, -640364487),
        a = md5_hh(a, i, o, l, e[c + 12], 11, -421815835),
        l = md5_hh(l, a, i, o, e[c + 15], 16, 530742520),
        o = md5_hh(o, l, a, i, e[c + 2], 23, -995338651),
        i = md5_ii(i, o, l, a, e[c + 0], 6, -198630844),
        a = md5_ii(a, i, o, l, e[c + 7], 10, 1126891415),
        l = md5_ii(l, a, i, o, e[c + 14], 15, -1416354905),
        o = md5_ii(o, l, a, i, e[c + 5], 21, -57434055),
        i = md5_ii(i, o, l, a, e[c + 12], 6, 1700485571),
        a = md5_ii(a, i, o, l, e[c + 3], 10, -1894986606),
        l = md5_ii(l, a, i, o, e[c + 10], 15, -1051523),
        o = md5_ii(o, l, a, i, e[c + 1], 21, -2054922799),
        i = md5_ii(i, o, l, a, e[c + 8], 6, 1873313359),
        a = md5_ii(a, i, o, l, e[c + 15], 10, -30611744),
        l = md5_ii(l, a, i, o, e[c + 6], 15, -1560198380),
        o = md5_ii(o, l, a, i, e[c + 13], 21, 1309151649),
        i = md5_ii(i, o, l, a, e[c + 4], 6, -145523070),
        a = md5_ii(a, i, o, l, e[c + 11], 10, -1120210379),
        l = md5_ii(l, a, i, o, e[c + 2], 15, 718787259),
        o = md5_ii(o, l, a, i, e[c + 9], 21, -343485551),
        i = safe_add(i, u),
        o = safe_add(o, h),
        l = safe_add(l, m),
        a = safe_add(a, d)
    }
    return [i, o, l, a]
}
function md5_cmn(e, n, i, o, l, a) {
    return safe_add(bit_rol(safe_add(safe_add(n, e), safe_add(o, a)), l), i)
}
function md5_ff(e, n, i, o, l, a, c) {
    return md5_cmn(n & i | ~n & o, e, n, l, a, c)
}
function md5_gg(e, n, i, o, l, a, c) {
    return md5_cmn(n & o | i & ~o, e, n, l, a, c)
}
function md5_hh(e, n, i, o, l, a, c) {
    return md5_cmn(n ^ i ^ o, e, n, l, a, c)
}
function md5_ii(e, n, i, o, l, a, c) {
    return md5_cmn(i ^ (n | ~o), e, n, l, a, c)
}
function safe_add(e, n) {
    var i = (e & 65535) + (n & 65535)
      , o = (e >> 16) + (n >> 16) + (i >> 16);
    return o << 16 | i & 65535
}
function bit_rol(e, n) {
    return e << n | e >>> 32 - n
}
var md5$2 = function(n) {
    return makeHash(n, core_md5)
}
  , Transform$6 = streamBrowserify.Transform
  , inherits$e = inherits_browserExports;
function HashBase$1(e) {
    Transform$6.call(this),
    this._block = new Buffer$G(e),
    this._blockSize = e,
    this._blockOffset = 0,
    this._length = [0, 0, 0, 0],
    this._finalized = !1
}
inherits$e(HashBase$1, Transform$6);
HashBase$1.prototype._transform = function(e, n, i) {
    var o = null;
    try {
        n !== "buffer" && (e = new Buffer$G(e,n)),
        this.update(e)
    } catch (l) {
        o = l
    }
    i(o)
}
;
HashBase$1.prototype._flush = function(e) {
    var n = null;
    try {
        this.push(this._digest())
    } catch (i) {
        n = i
    }
    e(n)
}
;
HashBase$1.prototype.update = function(e, n) {
    if (!Buffer$G.isBuffer(e) && typeof e != "string")
        throw new TypeError("Data must be a string or a buffer");
    if (this._finalized)
        throw new Error("Digest already called");
    Buffer$G.isBuffer(e) || (e = new Buffer$G(e,n || "binary"));
    for (var i = this._block, o = 0; this._blockOffset + e.length - o >= this._blockSize; ) {
        for (var l = this._blockOffset; l < this._blockSize; )
            i[l++] = e[o++];
        this._update(),
        this._blockOffset = 0
    }
    for (; o < e.length; )
        i[this._blockOffset++] = e[o++];
    for (var a = 0, c = e.length * 8; c > 0; ++a)
        this._length[a] += c,
        c = this._length[a] / 4294967296 | 0,
        c > 0 && (this._length[a] -= 4294967296 * c);
    return this
}
;
HashBase$1.prototype._update = function(e) {
    throw new Error("_update is not implemented")
}
;
HashBase$1.prototype.digest = function(e) {
    if (this._finalized)
        throw new Error("Digest already called");
    this._finalized = !0;
    var n = this._digest();
    return e !== void 0 && (n = n.toString(e)),
    n
}
;
HashBase$1.prototype._digest = function() {
    throw new Error("_digest is not implemented")
}
;
var hashBase = HashBase$1
  , inherits$d = inherits_browserExports
  , HashBase = hashBase;
function RIPEMD160$2() {
    HashBase.call(this, 64),
    this._a = 1732584193,
    this._b = 4023233417,
    this._c = 2562383102,
    this._d = 271733878,
    this._e = 3285377520
}
inherits$d(RIPEMD160$2, HashBase);
RIPEMD160$2.prototype._update = function() {
    for (var e = new Array(16), n = 0; n < 16; ++n)
        e[n] = this._block.readInt32LE(n * 4);
    var i = this._a
      , o = this._b
      , l = this._c
      , a = this._d
      , c = this._e;
    i = fn1(i, o, l, a, c, e[0], 0, 11),
    l = rotl(l, 10),
    c = fn1(c, i, o, l, a, e[1], 0, 14),
    o = rotl(o, 10),
    a = fn1(a, c, i, o, l, e[2], 0, 15),
    i = rotl(i, 10),
    l = fn1(l, a, c, i, o, e[3], 0, 12),
    c = rotl(c, 10),
    o = fn1(o, l, a, c, i, e[4], 0, 5),
    a = rotl(a, 10),
    i = fn1(i, o, l, a, c, e[5], 0, 8),
    l = rotl(l, 10),
    c = fn1(c, i, o, l, a, e[6], 0, 7),
    o = rotl(o, 10),
    a = fn1(a, c, i, o, l, e[7], 0, 9),
    i = rotl(i, 10),
    l = fn1(l, a, c, i, o, e[8], 0, 11),
    c = rotl(c, 10),
    o = fn1(o, l, a, c, i, e[9], 0, 13),
    a = rotl(a, 10),
    i = fn1(i, o, l, a, c, e[10], 0, 14),
    l = rotl(l, 10),
    c = fn1(c, i, o, l, a, e[11], 0, 15),
    o = rotl(o, 10),
    a = fn1(a, c, i, o, l, e[12], 0, 6),
    i = rotl(i, 10),
    l = fn1(l, a, c, i, o, e[13], 0, 7),
    c = rotl(c, 10),
    o = fn1(o, l, a, c, i, e[14], 0, 9),
    a = rotl(a, 10),
    i = fn1(i, o, l, a, c, e[15], 0, 8),
    l = rotl(l, 10),
    c = fn2(c, i, o, l, a, e[7], 1518500249, 7),
    o = rotl(o, 10),
    a = fn2(a, c, i, o, l, e[4], 1518500249, 6),
    i = rotl(i, 10),
    l = fn2(l, a, c, i, o, e[13], 1518500249, 8),
    c = rotl(c, 10),
    o = fn2(o, l, a, c, i, e[1], 1518500249, 13),
    a = rotl(a, 10),
    i = fn2(i, o, l, a, c, e[10], 1518500249, 11),
    l = rotl(l, 10),
    c = fn2(c, i, o, l, a, e[6], 1518500249, 9),
    o = rotl(o, 10),
    a = fn2(a, c, i, o, l, e[15], 1518500249, 7),
    i = rotl(i, 10),
    l = fn2(l, a, c, i, o, e[3], 1518500249, 15),
    c = rotl(c, 10),
    o = fn2(o, l, a, c, i, e[12], 1518500249, 7),
    a = rotl(a, 10),
    i = fn2(i, o, l, a, c, e[0], 1518500249, 12),
    l = rotl(l, 10),
    c = fn2(c, i, o, l, a, e[9], 1518500249, 15),
    o = rotl(o, 10),
    a = fn2(a, c, i, o, l, e[5], 1518500249, 9),
    i = rotl(i, 10),
    l = fn2(l, a, c, i, o, e[2], 1518500249, 11),
    c = rotl(c, 10),
    o = fn2(o, l, a, c, i, e[14], 1518500249, 7),
    a = rotl(a, 10),
    i = fn2(i, o, l, a, c, e[11], 1518500249, 13),
    l = rotl(l, 10),
    c = fn2(c, i, o, l, a, e[8], 1518500249, 12),
    o = rotl(o, 10),
    a = fn3(a, c, i, o, l, e[3], 1859775393, 11),
    i = rotl(i, 10),
    l = fn3(l, a, c, i, o, e[10], 1859775393, 13),
    c = rotl(c, 10),
    o = fn3(o, l, a, c, i, e[14], 1859775393, 6),
    a = rotl(a, 10),
    i = fn3(i, o, l, a, c, e[4], 1859775393, 7),
    l = rotl(l, 10),
    c = fn3(c, i, o, l, a, e[9], 1859775393, 14),
    o = rotl(o, 10),
    a = fn3(a, c, i, o, l, e[15], 1859775393, 9),
    i = rotl(i, 10),
    l = fn3(l, a, c, i, o, e[8], 1859775393, 13),
    c = rotl(c, 10),
    o = fn3(o, l, a, c, i, e[1], 1859775393, 15),
    a = rotl(a, 10),
    i = fn3(i, o, l, a, c, e[2], 1859775393, 14),
    l = rotl(l, 10),
    c = fn3(c, i, o, l, a, e[7], 1859775393, 8),
    o = rotl(o, 10),
    a = fn3(a, c, i, o, l, e[0], 1859775393, 13),
    i = rotl(i, 10),
    l = fn3(l, a, c, i, o, e[6], 1859775393, 6),
    c = rotl(c, 10),
    o = fn3(o, l, a, c, i, e[13], 1859775393, 5),
    a = rotl(a, 10),
    i = fn3(i, o, l, a, c, e[11], 1859775393, 12),
    l = rotl(l, 10),
    c = fn3(c, i, o, l, a, e[5], 1859775393, 7),
    o = rotl(o, 10),
    a = fn3(a, c, i, o, l, e[12], 1859775393, 5),
    i = rotl(i, 10),
    l = fn4(l, a, c, i, o, e[1], 2400959708, 11),
    c = rotl(c, 10),
    o = fn4(o, l, a, c, i, e[9], 2400959708, 12),
    a = rotl(a, 10),
    i = fn4(i, o, l, a, c, e[11], 2400959708, 14),
    l = rotl(l, 10),
    c = fn4(c, i, o, l, a, e[10], 2400959708, 15),
    o = rotl(o, 10),
    a = fn4(a, c, i, o, l, e[0], 2400959708, 14),
    i = rotl(i, 10),
    l = fn4(l, a, c, i, o, e[8], 2400959708, 15),
    c = rotl(c, 10),
    o = fn4(o, l, a, c, i, e[12], 2400959708, 9),
    a = rotl(a, 10),
    i = fn4(i, o, l, a, c, e[4], 2400959708, 8),
    l = rotl(l, 10),
    c = fn4(c, i, o, l, a, e[13], 2400959708, 9),
    o = rotl(o, 10),
    a = fn4(a, c, i, o, l, e[3], 2400959708, 14),
    i = rotl(i, 10),
    l = fn4(l, a, c, i, o, e[7], 2400959708, 5),
    c = rotl(c, 10),
    o = fn4(o, l, a, c, i, e[15], 2400959708, 6),
    a = rotl(a, 10),
    i = fn4(i, o, l, a, c, e[14], 2400959708, 8),
    l = rotl(l, 10),
    c = fn4(c, i, o, l, a, e[5], 2400959708, 6),
    o = rotl(o, 10),
    a = fn4(a, c, i, o, l, e[6], 2400959708, 5),
    i = rotl(i, 10),
    l = fn4(l, a, c, i, o, e[2], 2400959708, 12),
    c = rotl(c, 10),
    o = fn5(o, l, a, c, i, e[4], 2840853838, 9),
    a = rotl(a, 10),
    i = fn5(i, o, l, a, c, e[0], 2840853838, 15),
    l = rotl(l, 10),
    c = fn5(c, i, o, l, a, e[5], 2840853838, 5),
    o = rotl(o, 10),
    a = fn5(a, c, i, o, l, e[9], 2840853838, 11),
    i = rotl(i, 10),
    l = fn5(l, a, c, i, o, e[7], 2840853838, 6),
    c = rotl(c, 10),
    o = fn5(o, l, a, c, i, e[12], 2840853838, 8),
    a = rotl(a, 10),
    i = fn5(i, o, l, a, c, e[2], 2840853838, 13),
    l = rotl(l, 10),
    c = fn5(c, i, o, l, a, e[10], 2840853838, 12),
    o = rotl(o, 10),
    a = fn5(a, c, i, o, l, e[14], 2840853838, 5),
    i = rotl(i, 10),
    l = fn5(l, a, c, i, o, e[1], 2840853838, 12),
    c = rotl(c, 10),
    o = fn5(o, l, a, c, i, e[3], 2840853838, 13),
    a = rotl(a, 10),
    i = fn5(i, o, l, a, c, e[8], 2840853838, 14),
    l = rotl(l, 10),
    c = fn5(c, i, o, l, a, e[11], 2840853838, 11),
    o = rotl(o, 10),
    a = fn5(a, c, i, o, l, e[6], 2840853838, 8),
    i = rotl(i, 10),
    l = fn5(l, a, c, i, o, e[15], 2840853838, 5),
    c = rotl(c, 10),
    o = fn5(o, l, a, c, i, e[13], 2840853838, 6),
    a = rotl(a, 10);
    var u = this._a
      , h = this._b
      , m = this._c
      , d = this._d
      , p = this._e;
    u = fn5(u, h, m, d, p, e[5], 1352829926, 8),
    m = rotl(m, 10),
    p = fn5(p, u, h, m, d, e[14], 1352829926, 9),
    h = rotl(h, 10),
    d = fn5(d, p, u, h, m, e[7], 1352829926, 9),
    u = rotl(u, 10),
    m = fn5(m, d, p, u, h, e[0], 1352829926, 11),
    p = rotl(p, 10),
    h = fn5(h, m, d, p, u, e[9], 1352829926, 13),
    d = rotl(d, 10),
    u = fn5(u, h, m, d, p, e[2], 1352829926, 15),
    m = rotl(m, 10),
    p = fn5(p, u, h, m, d, e[11], 1352829926, 15),
    h = rotl(h, 10),
    d = fn5(d, p, u, h, m, e[4], 1352829926, 5),
    u = rotl(u, 10),
    m = fn5(m, d, p, u, h, e[13], 1352829926, 7),
    p = rotl(p, 10),
    h = fn5(h, m, d, p, u, e[6], 1352829926, 7),
    d = rotl(d, 10),
    u = fn5(u, h, m, d, p, e[15], 1352829926, 8),
    m = rotl(m, 10),
    p = fn5(p, u, h, m, d, e[8], 1352829926, 11),
    h = rotl(h, 10),
    d = fn5(d, p, u, h, m, e[1], 1352829926, 14),
    u = rotl(u, 10),
    m = fn5(m, d, p, u, h, e[10], 1352829926, 14),
    p = rotl(p, 10),
    h = fn5(h, m, d, p, u, e[3], 1352829926, 12),
    d = rotl(d, 10),
    u = fn5(u, h, m, d, p, e[12], 1352829926, 6),
    m = rotl(m, 10),
    p = fn4(p, u, h, m, d, e[6], 1548603684, 9),
    h = rotl(h, 10),
    d = fn4(d, p, u, h, m, e[11], 1548603684, 13),
    u = rotl(u, 10),
    m = fn4(m, d, p, u, h, e[3], 1548603684, 15),
    p = rotl(p, 10),
    h = fn4(h, m, d, p, u, e[7], 1548603684, 7),
    d = rotl(d, 10),
    u = fn4(u, h, m, d, p, e[0], 1548603684, 12),
    m = rotl(m, 10),
    p = fn4(p, u, h, m, d, e[13], 1548603684, 8),
    h = rotl(h, 10),
    d = fn4(d, p, u, h, m, e[5], 1548603684, 9),
    u = rotl(u, 10),
    m = fn4(m, d, p, u, h, e[10], 1548603684, 11),
    p = rotl(p, 10),
    h = fn4(h, m, d, p, u, e[14], 1548603684, 7),
    d = rotl(d, 10),
    u = fn4(u, h, m, d, p, e[15], 1548603684, 7),
    m = rotl(m, 10),
    p = fn4(p, u, h, m, d, e[8], 1548603684, 12),
    h = rotl(h, 10),
    d = fn4(d, p, u, h, m, e[12], 1548603684, 7),
    u = rotl(u, 10),
    m = fn4(m, d, p, u, h, e[4], 1548603684, 6),
    p = rotl(p, 10),
    h = fn4(h, m, d, p, u, e[9], 1548603684, 15),
    d = rotl(d, 10),
    u = fn4(u, h, m, d, p, e[1], 1548603684, 13),
    m = rotl(m, 10),
    p = fn4(p, u, h, m, d, e[2], 1548603684, 11),
    h = rotl(h, 10),
    d = fn3(d, p, u, h, m, e[15], 1836072691, 9),
    u = rotl(u, 10),
    m = fn3(m, d, p, u, h, e[5], 1836072691, 7),
    p = rotl(p, 10),
    h = fn3(h, m, d, p, u, e[1], 1836072691, 15),
    d = rotl(d, 10),
    u = fn3(u, h, m, d, p, e[3], 1836072691, 11),
    m = rotl(m, 10),
    p = fn3(p, u, h, m, d, e[7], 1836072691, 8),
    h = rotl(h, 10),
    d = fn3(d, p, u, h, m, e[14], 1836072691, 6),
    u = rotl(u, 10),
    m = fn3(m, d, p, u, h, e[6], 1836072691, 6),
    p = rotl(p, 10),
    h = fn3(h, m, d, p, u, e[9], 1836072691, 14),
    d = rotl(d, 10),
    u = fn3(u, h, m, d, p, e[11], 1836072691, 12),
    m = rotl(m, 10),
    p = fn3(p, u, h, m, d, e[8], 1836072691, 13),
    h = rotl(h, 10),
    d = fn3(d, p, u, h, m, e[12], 1836072691, 5),
    u = rotl(u, 10),
    m = fn3(m, d, p, u, h, e[2], 1836072691, 14),
    p = rotl(p, 10),
    h = fn3(h, m, d, p, u, e[10], 1836072691, 13),
    d = rotl(d, 10),
    u = fn3(u, h, m, d, p, e[0], 1836072691, 13),
    m = rotl(m, 10),
    p = fn3(p, u, h, m, d, e[4], 1836072691, 7),
    h = rotl(h, 10),
    d = fn3(d, p, u, h, m, e[13], 1836072691, 5),
    u = rotl(u, 10),
    m = fn2(m, d, p, u, h, e[8], 2053994217, 15),
    p = rotl(p, 10),
    h = fn2(h, m, d, p, u, e[6], 2053994217, 5),
    d = rotl(d, 10),
    u = fn2(u, h, m, d, p, e[4], 2053994217, 8),
    m = rotl(m, 10),
    p = fn2(p, u, h, m, d, e[1], 2053994217, 11),
    h = rotl(h, 10),
    d = fn2(d, p, u, h, m, e[3], 2053994217, 14),
    u = rotl(u, 10),
    m = fn2(m, d, p, u, h, e[11], 2053994217, 14),
    p = rotl(p, 10),
    h = fn2(h, m, d, p, u, e[15], 2053994217, 6),
    d = rotl(d, 10),
    u = fn2(u, h, m, d, p, e[0], 2053994217, 14),
    m = rotl(m, 10),
    p = fn2(p, u, h, m, d, e[5], 2053994217, 6),
    h = rotl(h, 10),
    d = fn2(d, p, u, h, m, e[12], 2053994217, 9),
    u = rotl(u, 10),
    m = fn2(m, d, p, u, h, e[2], 2053994217, 12),
    p = rotl(p, 10),
    h = fn2(h, m, d, p, u, e[13], 2053994217, 9),
    d = rotl(d, 10),
    u = fn2(u, h, m, d, p, e[9], 2053994217, 12),
    m = rotl(m, 10),
    p = fn2(p, u, h, m, d, e[7], 2053994217, 5),
    h = rotl(h, 10),
    d = fn2(d, p, u, h, m, e[10], 2053994217, 15),
    u = rotl(u, 10),
    m = fn2(m, d, p, u, h, e[14], 2053994217, 8),
    p = rotl(p, 10),
    h = fn1(h, m, d, p, u, e[12], 0, 8),
    d = rotl(d, 10),
    u = fn1(u, h, m, d, p, e[15], 0, 5),
    m = rotl(m, 10),
    p = fn1(p, u, h, m, d, e[10], 0, 12),
    h = rotl(h, 10),
    d = fn1(d, p, u, h, m, e[4], 0, 9),
    u = rotl(u, 10),
    m = fn1(m, d, p, u, h, e[1], 0, 12),
    p = rotl(p, 10),
    h = fn1(h, m, d, p, u, e[5], 0, 5),
    d = rotl(d, 10),
    u = fn1(u, h, m, d, p, e[8], 0, 14),
    m = rotl(m, 10),
    p = fn1(p, u, h, m, d, e[7], 0, 6),
    h = rotl(h, 10),
    d = fn1(d, p, u, h, m, e[6], 0, 8),
    u = rotl(u, 10),
    m = fn1(m, d, p, u, h, e[2], 0, 13),
    p = rotl(p, 10),
    h = fn1(h, m, d, p, u, e[13], 0, 6),
    d = rotl(d, 10),
    u = fn1(u, h, m, d, p, e[14], 0, 5),
    m = rotl(m, 10),
    p = fn1(p, u, h, m, d, e[0], 0, 15),
    h = rotl(h, 10),
    d = fn1(d, p, u, h, m, e[3], 0, 13),
    u = rotl(u, 10),
    m = fn1(m, d, p, u, h, e[9], 0, 11),
    p = rotl(p, 10),
    h = fn1(h, m, d, p, u, e[11], 0, 11),
    d = rotl(d, 10);
    var b = this._b + l + d | 0;
    this._b = this._c + a + p | 0,
    this._c = this._d + c + u | 0,
    this._d = this._e + i + h | 0,
    this._e = this._a + o + m | 0,
    this._a = b
}
;
RIPEMD160$2.prototype._digest = function() {
    this._block[this._blockOffset++] = 128,
    this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64),
    this._update(),
    this._blockOffset = 0),
    this._block.fill(0, this._blockOffset, 56),
    this._block.writeUInt32LE(this._length[0], 56),
    this._block.writeUInt32LE(this._length[1], 60),
    this._update();
    var e = new Buffer$G(20);
    return e.writeInt32LE(this._a, 0),
    e.writeInt32LE(this._b, 4),
    e.writeInt32LE(this._c, 8),
    e.writeInt32LE(this._d, 12),
    e.writeInt32LE(this._e, 16),
    e
}
;
function rotl(e, n) {
    return e << n | e >>> 32 - n
}
function fn1(e, n, i, o, l, a, c, u) {
    return rotl(e + (n ^ i ^ o) + a + c | 0, u) + l | 0
}
function fn2(e, n, i, o, l, a, c, u) {
    return rotl(e + (n & i | ~n & o) + a + c | 0, u) + l | 0
}
function fn3(e, n, i, o, l, a, c, u) {
    return rotl(e + ((n | ~i) ^ o) + a + c | 0, u) + l | 0
}
function fn4(e, n, i, o, l, a, c, u) {
    return rotl(e + (n & o | i & ~o) + a + c | 0, u) + l | 0
}
function fn5(e, n, i, o, l, a, c, u) {
    return rotl(e + (n ^ (i | ~o)) + a + c | 0, u) + l | 0
}
var ripemd160$1 = RIPEMD160$2
  , Buffer$p = safeBufferExports$1.Buffer
  , toBuffer$2 = toBuffer$5
  , useUint8Array = typeof Uint8Array < "u"
  , useArrayBuffer = useUint8Array && typeof ArrayBuffer < "u"
  , isView = useArrayBuffer && ArrayBuffer.isView
  , toBuffer_1 = function(e, n, i) {
    if (typeof e == "string" || Buffer$p.isBuffer(e) || useUint8Array && e instanceof Uint8Array || isView && isView(e))
        return toBuffer$2(e, n);
    throw new TypeError(i + " must be a string, a Buffer, a Uint8Array, or a DataView")
}
  , md5$1 = md5$2
  , RIPEMD160$1 = ripemd160$1
  , sha$1 = sha_jsExports
  , Buffer$o = safeBufferExports$1.Buffer
  , checkParameters$1 = precondition
  , defaultEncoding$1 = defaultEncoding_1
  , toBuffer$1 = toBuffer_1
  , ZEROS = Buffer$o.alloc(128)
  , sizes = {
    __proto__: null,
    md5: 16,
    sha1: 20,
    sha224: 28,
    sha256: 32,
    sha384: 48,
    sha512: 64,
    "sha512-256": 32,
    ripemd160: 20,
    rmd160: 20
}
  , mapping = {
    __proto__: null,
    "sha-1": "sha1",
    "sha-224": "sha224",
    "sha-256": "sha256",
    "sha-384": "sha384",
    "sha-512": "sha512",
    "ripemd-160": "ripemd160"
};
function rmd160Func(e) {
    return new RIPEMD160$1().update(e).digest()
}
function getDigest(e) {
    function n(i) {
        return sha$1(e).update(i).digest()
    }
    return e === "rmd160" || e === "ripemd160" ? rmd160Func : e === "md5" ? md5$1 : n
}
function Hmac$1(e, n, i) {
    var o = getDigest(e)
      , l = e === "sha512" || e === "sha384" ? 128 : 64;
    n.length > l ? n = o(n) : n.length < l && (n = Buffer$o.concat([n, ZEROS], l));
    for (var a = Buffer$o.allocUnsafe(l + sizes[e]), c = Buffer$o.allocUnsafe(l + sizes[e]), u = 0; u < l; u++)
        a[u] = n[u] ^ 54,
        c[u] = n[u] ^ 92;
    var h = Buffer$o.allocUnsafe(l + i + 4);
    a.copy(h, 0, 0, l),
    this.ipad1 = h,
    this.ipad2 = a,
    this.opad = c,
    this.alg = e,
    this.blocksize = l,
    this.hash = o,
    this.size = sizes[e]
}
Hmac$1.prototype.run = function(e, n) {
    e.copy(n, this.blocksize);
    var i = this.hash(n);
    return i.copy(this.opad, this.blocksize),
    this.hash(this.opad)
}
;
function pbkdf2$1(e, n, i, o, l) {
    checkParameters$1(i, o),
    e = toBuffer$1(e, defaultEncoding$1, "Password"),
    n = toBuffer$1(n, defaultEncoding$1, "Salt");
    var a = (l || "sha1").toLowerCase()
      , c = mapping[a] || a
      , u = sizes[c];
    if (typeof u != "number" || !u)
        throw new TypeError("Digest algorithm not supported: " + l);
    var h = new Hmac$1(c,e,n.length)
      , m = Buffer$o.allocUnsafe(o)
      , d = Buffer$o.allocUnsafe(n.length + 4);
    n.copy(d, 0, 0, n.length);
    for (var p = 0, b = u, g = Math.ceil(o / b), $ = 1; $ <= g; $++) {
        d.writeUInt32BE($, n.length);
        for (var N = h.run(d, h.ipad1), I = N, L = 1; L < i; L++) {
            I = h.run(I, h.ipad2);
            for (var T = 0; T < b; T++)
                N[T] ^= I[T]
        }
        N.copy(m, p),
        p += b
    }
    return m
}
var syncBrowser = pbkdf2$1, Buffer$n = safeBufferExports$1.Buffer, checkParameters = precondition, defaultEncoding = defaultEncoding_1, sync = syncBrowser, toBuffer = toBuffer_1, ZERO_BUF, subtle = commonjsGlobal.crypto && commonjsGlobal.crypto.subtle, toBrowser = {
    sha: "SHA-1",
    "sha-1": "SHA-1",
    sha1: "SHA-1",
    sha256: "SHA-256",
    "sha-256": "SHA-256",
    sha384: "SHA-384",
    "sha-384": "SHA-384",
    "sha-512": "SHA-512",
    sha512: "SHA-512"
}, checks = [], nextTick$1;
function getNextTick() {
    return nextTick$1 || (commonjsGlobal.process && commonjsGlobal.process.nextTick ? nextTick$1 = commonjsGlobal.process.nextTick : commonjsGlobal.queueMicrotask ? nextTick$1 = commonjsGlobal.queueMicrotask : commonjsGlobal.setImmediate ? nextTick$1 = commonjsGlobal.setImmediate : nextTick$1 = commonjsGlobal.setTimeout,
    nextTick$1)
}
function browserPbkdf2(e, n, i, o, l) {
    return subtle.importKey("raw", e, {
        name: "PBKDF2"
    }, !1, ["deriveBits"]).then(function(a) {
        return subtle.deriveBits({
            name: "PBKDF2",
            salt: n,
            iterations: i,
            hash: {
                name: l
            }
        }, a, o << 3)
    }).then(function(a) {
        return Buffer$n.from(a)
    })
}
function checkNative(e) {
    if (commonjsGlobal.process && !commonjsGlobal.process.browser || !subtle || !subtle.importKey || !subtle.deriveBits)
        return Promise.resolve(!1);
    if (checks[e] !== void 0)
        return checks[e];
    ZERO_BUF = ZERO_BUF || Buffer$n.alloc(8);
    var n = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, e).then(function() {
        return !0
    }, function() {
        return !1
    });
    return checks[e] = n,
    n
}
function resolvePromise(e, n) {
    e.then(function(i) {
        getNextTick()(function() {
            n(null, i)
        })
    }, function(i) {
        getNextTick()(function() {
            n(i)
        })
    })
}
var async = function(e, n, i, o, l, a) {
    typeof l == "function" && (a = l,
    l = void 0),
    l = l || "sha1";
    var c = toBrowser[l.toLowerCase()];
    if (!c || typeof commonjsGlobal.Promise != "function") {
        getNextTick()(function() {
            var u;
            try {
                u = sync(e, n, i, o, l)
            } catch (h) {
                a(h);
                return
            }
            a(null, u)
        });
        return
    }
    if (checkParameters(i, o),
    e = toBuffer(e, defaultEncoding, "Password"),
    n = toBuffer(n, defaultEncoding, "Salt"),
    typeof a != "function")
        throw new Error("No callback provided to pbkdf2");
    resolvePromise(checkNative(c).then(function(u) {
        return u ? browserPbkdf2(e, n, i, o, c) : sync(e, n, i, o, l)
    }), a)
};
browser$7.pbkdf2 = async;
browser$7.pbkdf2Sync = syncBrowser;
var browser$6 = {}
  , des$2 = {}
  , utils$q = {};
utils$q.readUInt32BE = function(n, i) {
    var o = n[0 + i] << 24 | n[1 + i] << 16 | n[2 + i] << 8 | n[3 + i];
    return o >>> 0
}
;
utils$q.writeUInt32BE = function(n, i, o) {
    n[0 + o] = i >>> 24,
    n[1 + o] = i >>> 16 & 255,
    n[2 + o] = i >>> 8 & 255,
    n[3 + o] = i & 255
}
;
utils$q.ip = function(n, i, o, l) {
    for (var a = 0, c = 0, u = 6; u >= 0; u -= 2) {
        for (var h = 0; h <= 24; h += 8)
            a <<= 1,
            a |= i >>> h + u & 1;
        for (var h = 0; h <= 24; h += 8)
            a <<= 1,
            a |= n >>> h + u & 1
    }
    for (var u = 6; u >= 0; u -= 2) {
        for (var h = 1; h <= 25; h += 8)
            c <<= 1,
            c |= i >>> h + u & 1;
        for (var h = 1; h <= 25; h += 8)
            c <<= 1,
            c |= n >>> h + u & 1
    }
    o[l + 0] = a >>> 0,
    o[l + 1] = c >>> 0
}
;
utils$q.rip = function(n, i, o, l) {
    for (var a = 0, c = 0, u = 0; u < 4; u++)
        for (var h = 24; h >= 0; h -= 8)
            a <<= 1,
            a |= i >>> h + u & 1,
            a <<= 1,
            a |= n >>> h + u & 1;
    for (var u = 4; u < 8; u++)
        for (var h = 24; h >= 0; h -= 8)
            c <<= 1,
            c |= i >>> h + u & 1,
            c <<= 1,
            c |= n >>> h + u & 1;
    o[l + 0] = a >>> 0,
    o[l + 1] = c >>> 0
}
;
utils$q.pc1 = function(n, i, o, l) {
    for (var a = 0, c = 0, u = 7; u >= 5; u--) {
        for (var h = 0; h <= 24; h += 8)
            a <<= 1,
            a |= i >> h + u & 1;
        for (var h = 0; h <= 24; h += 8)
            a <<= 1,
            a |= n >> h + u & 1
    }
    for (var h = 0; h <= 24; h += 8)
        a <<= 1,
        a |= i >> h + u & 1;
    for (var u = 1; u <= 3; u++) {
        for (var h = 0; h <= 24; h += 8)
            c <<= 1,
            c |= i >> h + u & 1;
        for (var h = 0; h <= 24; h += 8)
            c <<= 1,
            c |= n >> h + u & 1
    }
    for (var h = 0; h <= 24; h += 8)
        c <<= 1,
        c |= n >> h + u & 1;
    o[l + 0] = a >>> 0,
    o[l + 1] = c >>> 0
}
;
utils$q.r28shl = function(n, i) {
    return n << i & 268435455 | n >>> 28 - i
}
;
var pc2table = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
utils$q.pc2 = function(n, i, o, l) {
    for (var a = 0, c = 0, u = pc2table.length >>> 1, h = 0; h < u; h++)
        a <<= 1,
        a |= n >>> pc2table[h] & 1;
    for (var h = u; h < pc2table.length; h++)
        c <<= 1,
        c |= i >>> pc2table[h] & 1;
    o[l + 0] = a >>> 0,
    o[l + 1] = c >>> 0
}
;
utils$q.expand = function(n, i, o) {
    var l = 0
      , a = 0;
    l = (n & 1) << 5 | n >>> 27;
    for (var c = 23; c >= 15; c -= 4)
        l <<= 6,
        l |= n >>> c & 63;
    for (var c = 11; c >= 3; c -= 4)
        a |= n >>> c & 63,
        a <<= 6;
    a |= (n & 31) << 1 | n >>> 31,
    i[o + 0] = l >>> 0,
    i[o + 1] = a >>> 0
}
;
var sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
utils$q.substitute = function(n, i) {
    for (var o = 0, l = 0; l < 4; l++) {
        var a = n >>> 18 - l * 6 & 63
          , c = sTable[l * 64 + a];
        o <<= 4,
        o |= c
    }
    for (var l = 0; l < 4; l++) {
        var a = i >>> 18 - l * 6 & 63
          , c = sTable[4 * 64 + l * 64 + a];
        o <<= 4,
        o |= c
    }
    return o >>> 0
}
;
var permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
utils$q.permute = function(n) {
    for (var i = 0, o = 0; o < permuteTable.length; o++)
        i <<= 1,
        i |= n >>> permuteTable[o] & 1;
    return i >>> 0
}
;
utils$q.padSplit = function(n, i, o) {
    for (var l = n.toString(2); l.length < i; )
        l = "0" + l;
    for (var a = [], c = 0; c < i; c += o)
        a.push(l.slice(c, c + o));
    return a.join(" ")
}
;
var minimalisticAssert = assert$l;
function assert$l(e, n) {
    if (!e)
        throw new Error(n || "Assertion failed")
}
assert$l.equal = function(n, i, o) {
    if (n != i)
        throw new Error(o || "Assertion failed: " + n + " != " + i)
}
;
var assert$k = minimalisticAssert;
function Cipher$3(e) {
    this.options = e,
    this.type = this.options.type,
    this.blockSize = 8,
    this._init(),
    this.buffer = new Array(this.blockSize),
    this.bufferOff = 0,
    this.padding = e.padding !== !1
}
var cipher = Cipher$3;
Cipher$3.prototype._init = function() {}
;
Cipher$3.prototype.update = function(n) {
    return n.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(n) : this._updateEncrypt(n)
}
;
Cipher$3.prototype._buffer = function(n, i) {
    for (var o = Math.min(this.buffer.length - this.bufferOff, n.length - i), l = 0; l < o; l++)
        this.buffer[this.bufferOff + l] = n[i + l];
    return this.bufferOff += o,
    o
}
;
Cipher$3.prototype._flushBuffer = function(n, i) {
    return this._update(this.buffer, 0, n, i),
    this.bufferOff = 0,
    this.blockSize
}
;
Cipher$3.prototype._updateEncrypt = function(n) {
    var i = 0
      , o = 0
      , l = (this.bufferOff + n.length) / this.blockSize | 0
      , a = new Array(l * this.blockSize);
    this.bufferOff !== 0 && (i += this._buffer(n, i),
    this.bufferOff === this.buffer.length && (o += this._flushBuffer(a, o)));
    for (var c = n.length - (n.length - i) % this.blockSize; i < c; i += this.blockSize)
        this._update(n, i, a, o),
        o += this.blockSize;
    for (; i < n.length; i++,
    this.bufferOff++)
        this.buffer[this.bufferOff] = n[i];
    return a
}
;
Cipher$3.prototype._updateDecrypt = function(n) {
    for (var i = 0, o = 0, l = Math.ceil((this.bufferOff + n.length) / this.blockSize) - 1, a = new Array(l * this.blockSize); l > 0; l--)
        i += this._buffer(n, i),
        o += this._flushBuffer(a, o);
    return i += this._buffer(n, i),
    a
}
;
Cipher$3.prototype.final = function(n) {
    var i;
    n && (i = this.update(n));
    var o;
    return this.type === "encrypt" ? o = this._finalEncrypt() : o = this._finalDecrypt(),
    i ? i.concat(o) : o
}
;
Cipher$3.prototype._pad = function(n, i) {
    if (i === 0)
        return !1;
    for (; i < n.length; )
        n[i++] = 0;
    return !0
}
;
Cipher$3.prototype._finalEncrypt = function() {
    if (!this._pad(this.buffer, this.bufferOff))
        return [];
    var n = new Array(this.blockSize);
    return this._update(this.buffer, 0, n, 0),
    n
}
;
Cipher$3.prototype._unpad = function(n) {
    return n
}
;
Cipher$3.prototype._finalDecrypt = function() {
    assert$k.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
    var n = new Array(this.blockSize);
    return this._flushBuffer(n, 0),
    this._unpad(n)
}
;
var assert$j = minimalisticAssert
  , inherits$c = inherits_browserExports
  , utils$p = utils$q
  , Cipher$2 = cipher;
function DESState() {
    this.tmp = new Array(2),
    this.keys = null
}
function DES$4(e) {
    Cipher$2.call(this, e);
    var n = new DESState;
    this._desState = n,
    this.deriveKeys(n, e.key)
}
inherits$c(DES$4, Cipher$2);
var des$1 = DES$4;
DES$4.create = function(n) {
    return new DES$4(n)
}
;
var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
DES$4.prototype.deriveKeys = function(n, i) {
    n.keys = new Array(16 * 2),
    assert$j.equal(i.length, this.blockSize, "Invalid key length");
    var o = utils$p.readUInt32BE(i, 0)
      , l = utils$p.readUInt32BE(i, 4);
    utils$p.pc1(o, l, n.tmp, 0),
    o = n.tmp[0],
    l = n.tmp[1];
    for (var a = 0; a < n.keys.length; a += 2) {
        var c = shiftTable[a >>> 1];
        o = utils$p.r28shl(o, c),
        l = utils$p.r28shl(l, c),
        utils$p.pc2(o, l, n.keys, a)
    }
}
;
DES$4.prototype._update = function(n, i, o, l) {
    var a = this._desState
      , c = utils$p.readUInt32BE(n, i)
      , u = utils$p.readUInt32BE(n, i + 4);
    utils$p.ip(c, u, a.tmp, 0),
    c = a.tmp[0],
    u = a.tmp[1],
    this.type === "encrypt" ? this._encrypt(a, c, u, a.tmp, 0) : this._decrypt(a, c, u, a.tmp, 0),
    c = a.tmp[0],
    u = a.tmp[1],
    utils$p.writeUInt32BE(o, c, l),
    utils$p.writeUInt32BE(o, u, l + 4)
}
;
DES$4.prototype._pad = function(n, i) {
    if (this.padding === !1)
        return !1;
    for (var o = n.length - i, l = i; l < n.length; l++)
        n[l] = o;
    return !0
}
;
DES$4.prototype._unpad = function(n) {
    if (this.padding === !1)
        return n;
    for (var i = n[n.length - 1], o = n.length - i; o < n.length; o++)
        assert$j.equal(n[o], i);
    return n.slice(0, n.length - i)
}
;
DES$4.prototype._encrypt = function(n, i, o, l, a) {
    for (var c = i, u = o, h = 0; h < n.keys.length; h += 2) {
        var m = n.keys[h]
          , d = n.keys[h + 1];
        utils$p.expand(u, n.tmp, 0),
        m ^= n.tmp[0],
        d ^= n.tmp[1];
        var p = utils$p.substitute(m, d)
          , b = utils$p.permute(p)
          , g = u;
        u = (c ^ b) >>> 0,
        c = g
    }
    utils$p.rip(u, c, l, a)
}
;
DES$4.prototype._decrypt = function(n, i, o, l, a) {
    for (var c = o, u = i, h = n.keys.length - 2; h >= 0; h -= 2) {
        var m = n.keys[h]
          , d = n.keys[h + 1];
        utils$p.expand(c, n.tmp, 0),
        m ^= n.tmp[0],
        d ^= n.tmp[1];
        var p = utils$p.substitute(m, d)
          , b = utils$p.permute(p)
          , g = c;
        c = (u ^ b) >>> 0,
        u = g
    }
    utils$p.rip(c, u, l, a)
}
;
var cbc$1 = {}
  , assert$i = minimalisticAssert
  , inherits$b = inherits_browserExports
  , proto = {};
function CBCState(e) {
    assert$i.equal(e.length, 8, "Invalid IV length"),
    this.iv = new Array(8);
    for (var n = 0; n < this.iv.length; n++)
        this.iv[n] = e[n]
}
function instantiate(e) {
    function n(a) {
        e.call(this, a),
        this._cbcInit()
    }
    inherits$b(n, e);
    for (var i = Object.keys(proto), o = 0; o < i.length; o++) {
        var l = i[o];
        n.prototype[l] = proto[l]
    }
    return n.create = function(c) {
        return new n(c)
    }
    ,
    n
}
cbc$1.instantiate = instantiate;
proto._cbcInit = function() {
    var n = new CBCState(this.options.iv);
    this._cbcState = n
}
;
proto._update = function(n, i, o, l) {
    var a = this._cbcState
      , c = this.constructor.super_.prototype
      , u = a.iv;
    if (this.type === "encrypt") {
        for (var h = 0; h < this.blockSize; h++)
            u[h] ^= n[i + h];
        c._update.call(this, u, 0, o, l);
        for (var h = 0; h < this.blockSize; h++)
            u[h] = o[l + h]
    } else {
        c._update.call(this, n, i, o, l);
        for (var h = 0; h < this.blockSize; h++)
            o[l + h] ^= u[h];
        for (var h = 0; h < this.blockSize; h++)
            u[h] = n[i + h]
    }
}
;
var assert$h = minimalisticAssert
  , inherits$a = inherits_browserExports
  , Cipher$1 = cipher
  , DES$3 = des$1;
function EDEState(e, n) {
    assert$h.equal(n.length, 24, "Invalid key length");
    var i = n.slice(0, 8)
      , o = n.slice(8, 16)
      , l = n.slice(16, 24);
    e === "encrypt" ? this.ciphers = [DES$3.create({
        type: "encrypt",
        key: i
    }), DES$3.create({
        type: "decrypt",
        key: o
    }), DES$3.create({
        type: "encrypt",
        key: l
    })] : this.ciphers = [DES$3.create({
        type: "decrypt",
        key: l
    }), DES$3.create({
        type: "encrypt",
        key: o
    }), DES$3.create({
        type: "decrypt",
        key: i
    })]
}
function EDE(e) {
    Cipher$1.call(this, e);
    var n = new EDEState(this.type,this.options.key);
    this._edeState = n
}
inherits$a(EDE, Cipher$1);
var ede = EDE;
EDE.create = function(n) {
    return new EDE(n)
}
;
EDE.prototype._update = function(n, i, o, l) {
    var a = this._edeState;
    a.ciphers[0]._update(n, i, o, l),
    a.ciphers[1]._update(o, l, o, l),
    a.ciphers[2]._update(o, l, o, l)
}
;
EDE.prototype._pad = DES$3.prototype._pad;
EDE.prototype._unpad = DES$3.prototype._unpad;
des$2.utils = utils$q;
des$2.Cipher = cipher;
des$2.DES = des$1;
des$2.CBC = cbc$1;
des$2.EDE = ede;
var CipherBase = cipherBase
  , des = des$2
  , inherits$9 = inherits_browserExports
  , Buffer$m = safeBufferExports$1.Buffer
  , modes$3 = {
    "des-ede3-cbc": des.CBC.instantiate(des.EDE),
    "des-ede3": des.EDE,
    "des-ede-cbc": des.CBC.instantiate(des.EDE),
    "des-ede": des.EDE,
    "des-cbc": des.CBC.instantiate(des.DES),
    "des-ecb": des.DES
};
modes$3.des = modes$3["des-cbc"];
modes$3.des3 = modes$3["des-ede3-cbc"];
var browserifyDes = DES$2;
inherits$9(DES$2, CipherBase);
function DES$2(e) {
    CipherBase.call(this);
    var n = e.mode.toLowerCase(), i = modes$3[n], o;
    e.decrypt ? o = "decrypt" : o = "encrypt";
    var l = e.key;
    Buffer$m.isBuffer(l) || (l = Buffer$m.from(l)),
    (n === "des-ede" || n === "des-ede-cbc") && (l = Buffer$m.concat([l, l.slice(0, 8)]));
    var a = e.iv;
    Buffer$m.isBuffer(a) || (a = Buffer$m.from(a)),
    this._des = i.create({
        key: l,
        iv: a,
        type: o
    })
}
DES$2.prototype._update = function(e) {
    return Buffer$m.from(this._des.update(e))
}
;
DES$2.prototype._final = function() {
    return Buffer$m.from(this._des.final())
}
;
var browser$5 = {}
  , encrypter = {}
  , ecb = {};
ecb.encrypt = function(e, n) {
    return e._cipher.encryptBlock(n)
}
;
ecb.decrypt = function(e, n) {
    return e._cipher.decryptBlock(n)
}
;
var cbc = {}
  , bufferXor = function(n, i) {
    for (var o = Math.min(n.length, i.length), l = new Buffer$G(o), a = 0; a < o; ++a)
        l[a] = n[a] ^ i[a];
    return l
}
  , xor$7 = bufferXor;
cbc.encrypt = function(e, n) {
    var i = xor$7(n, e._prev);
    return e._prev = e._cipher.encryptBlock(i),
    e._prev
}
;
cbc.decrypt = function(e, n) {
    var i = e._prev;
    e._prev = n;
    var o = e._cipher.decryptBlock(n);
    return xor$7(o, i)
}
;
var cfb = {}
  , Buffer$l = safeBufferExports$1.Buffer
  , xor$6 = bufferXor;
function encryptStart(e, n, i) {
    var o = n.length
      , l = xor$6(n, e._cache);
    return e._cache = e._cache.slice(o),
    e._prev = Buffer$l.concat([e._prev, i ? n : l]),
    l
}
cfb.encrypt = function(e, n, i) {
    for (var o = Buffer$l.allocUnsafe(0), l; n.length; )
        if (e._cache.length === 0 && (e._cache = e._cipher.encryptBlock(e._prev),
        e._prev = Buffer$l.allocUnsafe(0)),
        e._cache.length <= n.length)
            l = e._cache.length,
            o = Buffer$l.concat([o, encryptStart(e, n.slice(0, l), i)]),
            n = n.slice(l);
        else {
            o = Buffer$l.concat([o, encryptStart(e, n, i)]);
            break
        }
    return o
}
;
var cfb8 = {}
  , Buffer$k = safeBufferExports$1.Buffer;
function encryptByte$1(e, n, i) {
    var o = e._cipher.encryptBlock(e._prev)
      , l = o[0] ^ n;
    return e._prev = Buffer$k.concat([e._prev.slice(1), Buffer$k.from([i ? n : l])]),
    l
}
cfb8.encrypt = function(e, n, i) {
    for (var o = n.length, l = Buffer$k.allocUnsafe(o), a = -1; ++a < o; )
        l[a] = encryptByte$1(e, n[a], i);
    return l
}
;
var cfb1 = {}
  , Buffer$j = safeBufferExports$1.Buffer;
function encryptByte(e, n, i) {
    for (var o, l = -1, a = 8, c = 0, u, h; ++l < a; )
        o = e._cipher.encryptBlock(e._prev),
        u = n & 1 << 7 - l ? 128 : 0,
        h = o[0] ^ u,
        c += (h & 128) >> l % 8,
        e._prev = shiftIn(e._prev, i ? u : h);
    return c
}
function shiftIn(e, n) {
    var i = e.length
      , o = -1
      , l = Buffer$j.allocUnsafe(e.length);
    for (e = Buffer$j.concat([e, Buffer$j.from([n])]); ++o < i; )
        l[o] = e[o] << 1 | e[o + 1] >> 7;
    return l
}
cfb1.encrypt = function(e, n, i) {
    for (var o = n.length, l = Buffer$j.allocUnsafe(o), a = -1; ++a < o; )
        l[a] = encryptByte(e, n[a], i);
    return l
}
;
var ofb = {}
  , xor$5 = bufferXor;
function getBlock$1(e) {
    return e._prev = e._cipher.encryptBlock(e._prev),
    e._prev
}
ofb.encrypt = function(e, n) {
    for (; e._cache.length < n.length; )
        e._cache = Buffer$G.concat([e._cache, getBlock$1(e)]);
    var i = e._cache.slice(0, n.length);
    return e._cache = e._cache.slice(n.length),
    xor$5(n, i)
}
;
var ctr = {};
function incr32$2(e) {
    for (var n = e.length, i; n--; )
        if (i = e.readUInt8(n),
        i === 255)
            e.writeUInt8(0, n);
        else {
            i++,
            e.writeUInt8(i, n);
            break
        }
}
var incr32_1 = incr32$2
  , xor$4 = bufferXor
  , Buffer$i = safeBufferExports$1.Buffer
  , incr32$1 = incr32_1;
function getBlock(e) {
    var n = e._cipher.encryptBlockRaw(e._prev);
    return incr32$1(e._prev),
    n
}
var blockSize = 16;
ctr.encrypt = function(e, n) {
    var i = Math.ceil(n.length / blockSize)
      , o = e._cache.length;
    e._cache = Buffer$i.concat([e._cache, Buffer$i.allocUnsafe(i * blockSize)]);
    for (var l = 0; l < i; l++) {
        var a = getBlock(e)
          , c = o + l * blockSize;
        e._cache.writeUInt32BE(a[0], c + 0),
        e._cache.writeUInt32BE(a[1], c + 4),
        e._cache.writeUInt32BE(a[2], c + 8),
        e._cache.writeUInt32BE(a[3], c + 12)
    }
    var u = e._cache.slice(0, n.length);
    return e._cache = e._cache.slice(n.length),
    xor$4(n, u)
}
;
const aes128 = {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CBC",
    type: "block"
}
  , aes192 = {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CBC",
    type: "block"
}
  , aes256 = {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CBC",
    type: "block"
}
  , require$$2 = {
    "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
    },
    "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
    },
    "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
    },
    "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
    },
    "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
    },
    "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
    },
    aes128,
    aes192,
    aes256,
    "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
    },
    "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
    },
    "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
    },
    "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
    },
    "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
    },
    "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
    },
    "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
    },
    "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
    },
    "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
    },
    "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
    },
    "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
    },
    "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
    },
    "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
    },
    "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
    },
    "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
    },
    "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
    },
    "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
    },
    "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
    }
};
var modeModules = {
    ECB: ecb,
    CBC: cbc,
    CFB: cfb,
    CFB8: cfb8,
    CFB1: cfb1,
    OFB: ofb,
    CTR: ctr,
    GCM: ctr
}
  , modes$2 = require$$2;
for (var key$3 in modes$2)
    modes$2[key$3].module = modeModules[modes$2[key$3].mode];
var modes_1 = modes$2
  , aes$6 = {}
  , Buffer$h = safeBufferExports$1.Buffer;
function asUInt32Array(e) {
    Buffer$h.isBuffer(e) || (e = Buffer$h.from(e));
    for (var n = e.length / 4 | 0, i = new Array(n), o = 0; o < n; o++)
        i[o] = e.readUInt32BE(o * 4);
    return i
}
function scrubVec(e) {
    for (var n = 0; n < e.length; e++)
        e[n] = 0
}
function cryptBlock(e, n, i, o, l) {
    for (var a = i[0], c = i[1], u = i[2], h = i[3], m = e[0] ^ n[0], d = e[1] ^ n[1], p = e[2] ^ n[2], b = e[3] ^ n[3], g, $, N, I, L = 4, T = 1; T < l; T++)
        g = a[m >>> 24] ^ c[d >>> 16 & 255] ^ u[p >>> 8 & 255] ^ h[b & 255] ^ n[L++],
        $ = a[d >>> 24] ^ c[p >>> 16 & 255] ^ u[b >>> 8 & 255] ^ h[m & 255] ^ n[L++],
        N = a[p >>> 24] ^ c[b >>> 16 & 255] ^ u[m >>> 8 & 255] ^ h[d & 255] ^ n[L++],
        I = a[b >>> 24] ^ c[m >>> 16 & 255] ^ u[d >>> 8 & 255] ^ h[p & 255] ^ n[L++],
        m = g,
        d = $,
        p = N,
        b = I;
    return g = (o[m >>> 24] << 24 | o[d >>> 16 & 255] << 16 | o[p >>> 8 & 255] << 8 | o[b & 255]) ^ n[L++],
    $ = (o[d >>> 24] << 24 | o[p >>> 16 & 255] << 16 | o[b >>> 8 & 255] << 8 | o[m & 255]) ^ n[L++],
    N = (o[p >>> 24] << 24 | o[b >>> 16 & 255] << 16 | o[m >>> 8 & 255] << 8 | o[d & 255]) ^ n[L++],
    I = (o[b >>> 24] << 24 | o[m >>> 16 & 255] << 16 | o[d >>> 8 & 255] << 8 | o[p & 255]) ^ n[L++],
    g = g >>> 0,
    $ = $ >>> 0,
    N = N >>> 0,
    I = I >>> 0,
    [g, $, N, I]
}
var RCON = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]
  , G = function() {
    for (var e = new Array(256), n = 0; n < 256; n++)
        n < 128 ? e[n] = n << 1 : e[n] = n << 1 ^ 283;
    for (var i = [], o = [], l = [[], [], [], []], a = [[], [], [], []], c = 0, u = 0, h = 0; h < 256; ++h) {
        var m = u ^ u << 1 ^ u << 2 ^ u << 3 ^ u << 4;
        m = m >>> 8 ^ m & 255 ^ 99,
        i[c] = m,
        o[m] = c;
        var d = e[c]
          , p = e[d]
          , b = e[p]
          , g = e[m] * 257 ^ m * 16843008;
        l[0][c] = g << 24 | g >>> 8,
        l[1][c] = g << 16 | g >>> 16,
        l[2][c] = g << 8 | g >>> 24,
        l[3][c] = g,
        g = b * 16843009 ^ p * 65537 ^ d * 257 ^ c * 16843008,
        a[0][m] = g << 24 | g >>> 8,
        a[1][m] = g << 16 | g >>> 16,
        a[2][m] = g << 8 | g >>> 24,
        a[3][m] = g,
        c === 0 ? c = u = 1 : (c = d ^ e[e[e[b ^ d]]],
        u ^= e[e[u]])
    }
    return {
        SBOX: i,
        INV_SBOX: o,
        SUB_MIX: l,
        INV_SUB_MIX: a
    }
}();
function AES$1(e) {
    this._key = asUInt32Array(e),
    this._reset()
}
AES$1.blockSize = 4 * 4;
AES$1.keySize = 256 / 8;
AES$1.prototype.blockSize = AES$1.blockSize;
AES$1.prototype.keySize = AES$1.keySize;
AES$1.prototype._reset = function() {
    for (var e = this._key, n = e.length, i = n + 6, o = (i + 1) * 4, l = [], a = 0; a < n; a++)
        l[a] = e[a];
    for (a = n; a < o; a++) {
        var c = l[a - 1];
        a % n === 0 ? (c = c << 8 | c >>> 24,
        c = G.SBOX[c >>> 24] << 24 | G.SBOX[c >>> 16 & 255] << 16 | G.SBOX[c >>> 8 & 255] << 8 | G.SBOX[c & 255],
        c ^= RCON[a / n | 0] << 24) : n > 6 && a % n === 4 && (c = G.SBOX[c >>> 24] << 24 | G.SBOX[c >>> 16 & 255] << 16 | G.SBOX[c >>> 8 & 255] << 8 | G.SBOX[c & 255]),
        l[a] = l[a - n] ^ c
    }
    for (var u = [], h = 0; h < o; h++) {
        var m = o - h
          , d = l[m - (h % 4 ? 0 : 4)];
        h < 4 || m <= 4 ? u[h] = d : u[h] = G.INV_SUB_MIX[0][G.SBOX[d >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[d >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[d >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[d & 255]]
    }
    this._nRounds = i,
    this._keySchedule = l,
    this._invKeySchedule = u
}
;
AES$1.prototype.encryptBlockRaw = function(e) {
    return e = asUInt32Array(e),
    cryptBlock(e, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}
;
AES$1.prototype.encryptBlock = function(e) {
    var n = this.encryptBlockRaw(e)
      , i = Buffer$h.allocUnsafe(16);
    return i.writeUInt32BE(n[0], 0),
    i.writeUInt32BE(n[1], 4),
    i.writeUInt32BE(n[2], 8),
    i.writeUInt32BE(n[3], 12),
    i
}
;
AES$1.prototype.decryptBlock = function(e) {
    e = asUInt32Array(e);
    var n = e[1];
    e[1] = e[3],
    e[3] = n;
    var i = cryptBlock(e, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
      , o = Buffer$h.allocUnsafe(16);
    return o.writeUInt32BE(i[0], 0),
    o.writeUInt32BE(i[3], 4),
    o.writeUInt32BE(i[2], 8),
    o.writeUInt32BE(i[1], 12),
    o
}
;
AES$1.prototype.scrub = function() {
    scrubVec(this._keySchedule),
    scrubVec(this._invKeySchedule),
    scrubVec(this._key)
}
;
aes$6.AES = AES$1;
var Buffer$g = safeBufferExports$1.Buffer
  , ZEROES = Buffer$g.alloc(16, 0);
function toArray$1(e) {
    return [e.readUInt32BE(0), e.readUInt32BE(4), e.readUInt32BE(8), e.readUInt32BE(12)]
}
function fromArray(e) {
    var n = Buffer$g.allocUnsafe(16);
    return n.writeUInt32BE(e[0] >>> 0, 0),
    n.writeUInt32BE(e[1] >>> 0, 4),
    n.writeUInt32BE(e[2] >>> 0, 8),
    n.writeUInt32BE(e[3] >>> 0, 12),
    n
}
function GHASH$1(e) {
    this.h = e,
    this.state = Buffer$g.alloc(16, 0),
    this.cache = Buffer$g.allocUnsafe(0)
}
GHASH$1.prototype.ghash = function(e) {
    for (var n = -1; ++n < e.length; )
        this.state[n] ^= e[n];
    this._multiply()
}
;
GHASH$1.prototype._multiply = function() {
    for (var e = toArray$1(this.h), n = [0, 0, 0, 0], i, o, l, a = -1; ++a < 128; ) {
        for (o = (this.state[~~(a / 8)] & 1 << 7 - a % 8) !== 0,
        o && (n[0] ^= e[0],
        n[1] ^= e[1],
        n[2] ^= e[2],
        n[3] ^= e[3]),
        l = (e[3] & 1) !== 0,
        i = 3; i > 0; i--)
            e[i] = e[i] >>> 1 | (e[i - 1] & 1) << 31;
        e[0] = e[0] >>> 1,
        l && (e[0] = e[0] ^ 225 << 24)
    }
    this.state = fromArray(n)
}
;
GHASH$1.prototype.update = function(e) {
    this.cache = Buffer$g.concat([this.cache, e]);
    for (var n; this.cache.length >= 16; )
        n = this.cache.slice(0, 16),
        this.cache = this.cache.slice(16),
        this.ghash(n)
}
;
GHASH$1.prototype.final = function(e, n) {
    return this.cache.length && this.ghash(Buffer$g.concat([this.cache, ZEROES], 16)),
    this.ghash(fromArray([0, e, 0, n])),
    this.state
}
;
var ghash = GHASH$1
  , aes$5 = aes$6
  , Buffer$f = safeBufferExports$1.Buffer
  , Transform$5 = cipherBase
  , inherits$8 = inherits_browserExports
  , GHASH = ghash
  , xor$3 = bufferXor
  , incr32 = incr32_1;
function xorTest(e, n) {
    var i = 0;
    e.length !== n.length && i++;
    for (var o = Math.min(e.length, n.length), l = 0; l < o; ++l)
        i += e[l] ^ n[l];
    return i
}
function calcIv(e, n, i) {
    if (n.length === 12)
        return e._finID = Buffer$f.concat([n, Buffer$f.from([0, 0, 0, 1])]),
        Buffer$f.concat([n, Buffer$f.from([0, 0, 0, 2])]);
    var o = new GHASH(i)
      , l = n.length
      , a = l % 16;
    o.update(n),
    a && (a = 16 - a,
    o.update(Buffer$f.alloc(a, 0))),
    o.update(Buffer$f.alloc(8, 0));
    var c = l * 8
      , u = Buffer$f.alloc(8);
    u.writeUIntBE(c, 0, 8),
    o.update(u),
    e._finID = o.state;
    var h = Buffer$f.from(e._finID);
    return incr32(h),
    h
}
function StreamCipher$3(e, n, i, o) {
    Transform$5.call(this);
    var l = Buffer$f.alloc(4, 0);
    this._cipher = new aes$5.AES(n);
    var a = this._cipher.encryptBlock(l);
    this._ghash = new GHASH(a),
    i = calcIv(this, i, a),
    this._prev = Buffer$f.from(i),
    this._cache = Buffer$f.allocUnsafe(0),
    this._secCache = Buffer$f.allocUnsafe(0),
    this._decrypt = o,
    this._alen = 0,
    this._len = 0,
    this._mode = e,
    this._authTag = null,
    this._called = !1
}
inherits$8(StreamCipher$3, Transform$5);
StreamCipher$3.prototype._update = function(e) {
    if (!this._called && this._alen) {
        var n = 16 - this._alen % 16;
        n < 16 && (n = Buffer$f.alloc(n, 0),
        this._ghash.update(n))
    }
    this._called = !0;
    var i = this._mode.encrypt(this, e);
    return this._decrypt ? this._ghash.update(e) : this._ghash.update(i),
    this._len += e.length,
    i
}
;
StreamCipher$3.prototype._final = function() {
    if (this._decrypt && !this._authTag)
        throw new Error("Unsupported state or unable to authenticate data");
    var e = xor$3(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
    if (this._decrypt && xorTest(e, this._authTag))
        throw new Error("Unsupported state or unable to authenticate data");
    this._authTag = e,
    this._cipher.scrub()
}
;
StreamCipher$3.prototype.getAuthTag = function() {
    if (this._decrypt || !Buffer$f.isBuffer(this._authTag))
        throw new Error("Attempting to get auth tag in unsupported state");
    return this._authTag
}
;
StreamCipher$3.prototype.setAuthTag = function(n) {
    if (!this._decrypt)
        throw new Error("Attempting to set auth tag in unsupported state");
    this._authTag = n
}
;
StreamCipher$3.prototype.setAAD = function(n) {
    if (this._called)
        throw new Error("Attempting to set AAD in unsupported state");
    this._ghash.update(n),
    this._alen += n.length
}
;
var authCipher = StreamCipher$3
  , aes$4 = aes$6
  , Buffer$e = safeBufferExports$1.Buffer
  , Transform$4 = cipherBase
  , inherits$7 = inherits_browserExports;
function StreamCipher$2(e, n, i, o) {
    Transform$4.call(this),
    this._cipher = new aes$4.AES(n),
    this._prev = Buffer$e.from(i),
    this._cache = Buffer$e.allocUnsafe(0),
    this._secCache = Buffer$e.allocUnsafe(0),
    this._decrypt = o,
    this._mode = e
}
inherits$7(StreamCipher$2, Transform$4);
StreamCipher$2.prototype._update = function(e) {
    return this._mode.encrypt(this, e, this._decrypt)
}
;
StreamCipher$2.prototype._final = function() {
    this._cipher.scrub()
}
;
var streamCipher = StreamCipher$2
  , Buffer$d = safeBufferExports$1.Buffer
  , MD5 = md5_js;
function EVP_BytesToKey(e, n, i, o) {
    if (Buffer$d.isBuffer(e) || (e = Buffer$d.from(e, "binary")),
    n && (Buffer$d.isBuffer(n) || (n = Buffer$d.from(n, "binary")),
    n.length !== 8))
        throw new RangeError("salt should be Buffer with 8 byte length");
    for (var l = i / 8, a = Buffer$d.alloc(l), c = Buffer$d.alloc(o || 0), u = Buffer$d.alloc(0); l > 0 || o > 0; ) {
        var h = new MD5;
        h.update(u),
        h.update(e),
        n && h.update(n),
        u = h.digest();
        var m = 0;
        if (l > 0) {
            var d = a.length - l;
            m = Math.min(l, u.length),
            u.copy(a, d, 0, m),
            l -= m
        }
        if (m < u.length && o > 0) {
            var p = c.length - o
              , b = Math.min(o, u.length - m);
            u.copy(c, p, m, m + b),
            o -= b
        }
    }
    return u.fill(0),
    {
        key: a,
        iv: c
    }
}
var evp_bytestokey = EVP_BytesToKey
  , MODES$1 = modes_1
  , AuthCipher$1 = authCipher
  , Buffer$c = safeBufferExports$1.Buffer
  , StreamCipher$1 = streamCipher
  , Transform$3 = cipherBase
  , aes$3 = aes$6
  , ebtk$2 = evp_bytestokey
  , inherits$6 = inherits_browserExports;
function Cipher(e, n, i) {
    Transform$3.call(this),
    this._cache = new Splitter$1,
    this._cipher = new aes$3.AES(n),
    this._prev = Buffer$c.from(i),
    this._mode = e,
    this._autopadding = !0
}
inherits$6(Cipher, Transform$3);
Cipher.prototype._update = function(e) {
    this._cache.add(e);
    for (var n, i, o = []; n = this._cache.get(); )
        i = this._mode.encrypt(this, n),
        o.push(i);
    return Buffer$c.concat(o)
}
;
var PADDING = Buffer$c.alloc(16, 16);
Cipher.prototype._final = function() {
    var e = this._cache.flush();
    if (this._autopadding)
        return e = this._mode.encrypt(this, e),
        this._cipher.scrub(),
        e;
    if (!e.equals(PADDING))
        throw this._cipher.scrub(),
        new Error("data not multiple of block length")
}
;
Cipher.prototype.setAutoPadding = function(e) {
    return this._autopadding = !!e,
    this
}
;
function Splitter$1() {
    this.cache = Buffer$c.allocUnsafe(0)
}
Splitter$1.prototype.add = function(e) {
    this.cache = Buffer$c.concat([this.cache, e])
}
;
Splitter$1.prototype.get = function() {
    if (this.cache.length > 15) {
        var e = this.cache.slice(0, 16);
        return this.cache = this.cache.slice(16),
        e
    }
    return null
}
;
Splitter$1.prototype.flush = function() {
    for (var e = 16 - this.cache.length, n = Buffer$c.allocUnsafe(e), i = -1; ++i < e; )
        n.writeUInt8(e, i);
    return Buffer$c.concat([this.cache, n])
}
;
function createCipheriv$1(e, n, i) {
    var o = MODES$1[e.toLowerCase()];
    if (!o)
        throw new TypeError("invalid suite type");
    if (typeof n == "string" && (n = Buffer$c.from(n)),
    n.length !== o.key / 8)
        throw new TypeError("invalid key length " + n.length);
    if (typeof i == "string" && (i = Buffer$c.from(i)),
    o.mode !== "GCM" && i.length !== o.iv)
        throw new TypeError("invalid iv length " + i.length);
    return o.type === "stream" ? new StreamCipher$1(o.module,n,i) : o.type === "auth" ? new AuthCipher$1(o.module,n,i) : new Cipher(o.module,n,i)
}
function createCipher$1(e, n) {
    var i = MODES$1[e.toLowerCase()];
    if (!i)
        throw new TypeError("invalid suite type");
    var o = ebtk$2(n, !1, i.key, i.iv);
    return createCipheriv$1(e, o.key, o.iv)
}
encrypter.createCipheriv = createCipheriv$1;
encrypter.createCipher = createCipher$1;
var decrypter = {}
  , AuthCipher = authCipher
  , Buffer$b = safeBufferExports$1.Buffer
  , MODES = modes_1
  , StreamCipher = streamCipher
  , Transform$2 = cipherBase
  , aes$2 = aes$6
  , ebtk$1 = evp_bytestokey
  , inherits$5 = inherits_browserExports;
function Decipher(e, n, i) {
    Transform$2.call(this),
    this._cache = new Splitter,
    this._last = void 0,
    this._cipher = new aes$2.AES(n),
    this._prev = Buffer$b.from(i),
    this._mode = e,
    this._autopadding = !0
}
inherits$5(Decipher, Transform$2);
Decipher.prototype._update = function(e) {
    this._cache.add(e);
    for (var n, i, o = []; n = this._cache.get(this._autopadding); )
        i = this._mode.decrypt(this, n),
        o.push(i);
    return Buffer$b.concat(o)
}
;
Decipher.prototype._final = function() {
    var e = this._cache.flush();
    if (this._autopadding)
        return unpad(this._mode.decrypt(this, e));
    if (e)
        throw new Error("data not multiple of block length")
}
;
Decipher.prototype.setAutoPadding = function(e) {
    return this._autopadding = !!e,
    this
}
;
function Splitter() {
    this.cache = Buffer$b.allocUnsafe(0)
}
Splitter.prototype.add = function(e) {
    this.cache = Buffer$b.concat([this.cache, e])
}
;
Splitter.prototype.get = function(e) {
    var n;
    if (e) {
        if (this.cache.length > 16)
            return n = this.cache.slice(0, 16),
            this.cache = this.cache.slice(16),
            n
    } else if (this.cache.length >= 16)
        return n = this.cache.slice(0, 16),
        this.cache = this.cache.slice(16),
        n;
    return null
}
;
Splitter.prototype.flush = function() {
    if (this.cache.length)
        return this.cache
}
;
function unpad(e) {
    var n = e[15];
    if (n < 1 || n > 16)
        throw new Error("unable to decrypt data");
    for (var i = -1; ++i < n; )
        if (e[i + (16 - n)] !== n)
            throw new Error("unable to decrypt data");
    if (n !== 16)
        return e.slice(0, 16 - n)
}
function createDecipheriv$1(e, n, i) {
    var o = MODES[e.toLowerCase()];
    if (!o)
        throw new TypeError("invalid suite type");
    if (typeof i == "string" && (i = Buffer$b.from(i)),
    o.mode !== "GCM" && i.length !== o.iv)
        throw new TypeError("invalid iv length " + i.length);
    if (typeof n == "string" && (n = Buffer$b.from(n)),
    n.length !== o.key / 8)
        throw new TypeError("invalid key length " + n.length);
    return o.type === "stream" ? new StreamCipher(o.module,n,i,!0) : o.type === "auth" ? new AuthCipher(o.module,n,i,!0) : new Decipher(o.module,n,i)
}
function createDecipher$1(e, n) {
    var i = MODES[e.toLowerCase()];
    if (!i)
        throw new TypeError("invalid suite type");
    var o = ebtk$1(n, !1, i.key, i.iv);
    return createDecipheriv$1(e, o.key, o.iv)
}
decrypter.createDecipher = createDecipher$1;
decrypter.createDecipheriv = createDecipheriv$1;
var ciphers$2 = encrypter
  , deciphers = decrypter
  , modes$1 = require$$2;
function getCiphers$1() {
    return Object.keys(modes$1)
}
browser$5.createCipher = browser$5.Cipher = ciphers$2.createCipher;
browser$5.createCipheriv = browser$5.Cipheriv = ciphers$2.createCipheriv;
browser$5.createDecipher = browser$5.Decipher = deciphers.createDecipher;
browser$5.createDecipheriv = browser$5.Decipheriv = deciphers.createDecipheriv;
browser$5.listCiphers = browser$5.getCiphers = getCiphers$1;
var modes = {};
(function(e) {
    e["des-ecb"] = {
        key: 8,
        iv: 0
    },
    e["des-cbc"] = e.des = {
        key: 8,
        iv: 8
    },
    e["des-ede3-cbc"] = e.des3 = {
        key: 24,
        iv: 8
    },
    e["des-ede3"] = {
        key: 24,
        iv: 0
    },
    e["des-ede-cbc"] = {
        key: 16,
        iv: 8
    },
    e["des-ede"] = {
        key: 16,
        iv: 0
    }
}
)(modes);
var DES$1 = browserifyDes
  , aes$1 = browser$5
  , aesModes = modes_1
  , desModes = modes
  , ebtk = evp_bytestokey;
function createCipher(e, n) {
    e = e.toLowerCase();
    var i, o;
    if (aesModes[e])
        i = aesModes[e].key,
        o = aesModes[e].iv;
    else if (desModes[e])
        i = desModes[e].key * 8,
        o = desModes[e].iv;
    else
        throw new TypeError("invalid suite type");
    var l = ebtk(n, !1, i, o);
    return createCipheriv(e, l.key, l.iv)
}
function createDecipher(e, n) {
    e = e.toLowerCase();
    var i, o;
    if (aesModes[e])
        i = aesModes[e].key,
        o = aesModes[e].iv;
    else if (desModes[e])
        i = desModes[e].key * 8,
        o = desModes[e].iv;
    else
        throw new TypeError("invalid suite type");
    var l = ebtk(n, !1, i, o);
    return createDecipheriv(e, l.key, l.iv)
}
function createCipheriv(e, n, i) {
    if (e = e.toLowerCase(),
    aesModes[e])
        return aes$1.createCipheriv(e, n, i);
    if (desModes[e])
        return new DES$1({
            key: n,
            iv: i,
            mode: e
        });
    throw new TypeError("invalid suite type")
}
function createDecipheriv(e, n, i) {
    if (e = e.toLowerCase(),
    aesModes[e])
        return aes$1.createDecipheriv(e, n, i);
    if (desModes[e])
        return new DES$1({
            key: n,
            iv: i,
            mode: e,
            decrypt: !0
        });
    throw new TypeError("invalid suite type")
}
function getCiphers() {
    return Object.keys(desModes).concat(aes$1.getCiphers())
}
browser$6.createCipher = browser$6.Cipher = createCipher;
browser$6.createCipheriv = browser$6.Cipheriv = createCipheriv;
browser$6.createDecipher = browser$6.Decipher = createDecipher;
browser$6.createDecipheriv = browser$6.Decipheriv = createDecipheriv;
browser$6.listCiphers = browser$6.getCiphers = getCiphers;
var browser$4 = {}
  , bn$1 = {
    exports: {}
};
bn$1.exports;
(function(e) {
    (function(n, i) {
        function o(V, w) {
            if (!V)
                throw new Error(w || "Assertion failed")
        }
        function l(V, w) {
            V.super_ = w;
            var x = function() {};
            x.prototype = w.prototype,
            V.prototype = new x,
            V.prototype.constructor = V
        }
        function a(V, w, x) {
            if (a.isBN(V))
                return V;
            this.negative = 0,
            this.words = null,
            this.length = 0,
            this.red = null,
            V !== null && ((w === "le" || w === "be") && (x = w,
            w = 10),
            this._init(V || 0, w || 10, x || "be"))
        }
        typeof n == "object" ? n.exports = a : i.BN = a,
        a.BN = a,
        a.wordSize = 26;
        var c;
        try {
            typeof window < "u" && typeof window.Buffer < "u" ? c = window.Buffer : c = require$$0$2.Buffer
        } catch {}
        a.isBN = function(w) {
            return w instanceof a ? !0 : w !== null && typeof w == "object" && w.constructor.wordSize === a.wordSize && Array.isArray(w.words)
        }
        ,
        a.max = function(w, x) {
            return w.cmp(x) > 0 ? w : x
        }
        ,
        a.min = function(w, x) {
            return w.cmp(x) < 0 ? w : x
        }
        ,
        a.prototype._init = function(w, x, v) {
            if (typeof w == "number")
                return this._initNumber(w, x, v);
            if (typeof w == "object")
                return this._initArray(w, x, v);
            x === "hex" && (x = 16),
            o(x === (x | 0) && x >= 2 && x <= 36),
            w = w.toString().replace(/\s+/g, "");
            var S = 0;
            w[0] === "-" && (S++,
            this.negative = 1),
            S < w.length && (x === 16 ? this._parseHex(w, S, v) : (this._parseBase(w, x, S),
            v === "le" && this._initArray(this.toArray(), x, v)))
        }
        ,
        a.prototype._initNumber = function(w, x, v) {
            w < 0 && (this.negative = 1,
            w = -w),
            w < 67108864 ? (this.words = [w & 67108863],
            this.length = 1) : w < 4503599627370496 ? (this.words = [w & 67108863, w / 67108864 & 67108863],
            this.length = 2) : (o(w < 9007199254740992),
            this.words = [w & 67108863, w / 67108864 & 67108863, 1],
            this.length = 3),
            v === "le" && this._initArray(this.toArray(), x, v)
        }
        ,
        a.prototype._initArray = function(w, x, v) {
            if (o(typeof w.length == "number"),
            w.length <= 0)
                return this.words = [0],
                this.length = 1,
                this;
            this.length = Math.ceil(w.length / 3),
            this.words = new Array(this.length);
            for (var S = 0; S < this.length; S++)
                this.words[S] = 0;
            var D, C, O = 0;
            if (v === "be")
                for (S = w.length - 1,
                D = 0; S >= 0; S -= 3)
                    C = w[S] | w[S - 1] << 8 | w[S - 2] << 16,
                    this.words[D] |= C << O & 67108863,
                    this.words[D + 1] = C >>> 26 - O & 67108863,
                    O += 24,
                    O >= 26 && (O -= 26,
                    D++);
            else if (v === "le")
                for (S = 0,
                D = 0; S < w.length; S += 3)
                    C = w[S] | w[S + 1] << 8 | w[S + 2] << 16,
                    this.words[D] |= C << O & 67108863,
                    this.words[D + 1] = C >>> 26 - O & 67108863,
                    O += 24,
                    O >= 26 && (O -= 26,
                    D++);
            return this.strip()
        }
        ;
        function u(V, w) {
            var x = V.charCodeAt(w);
            return x >= 65 && x <= 70 ? x - 55 : x >= 97 && x <= 102 ? x - 87 : x - 48 & 15
        }
        function h(V, w, x) {
            var v = u(V, x);
            return x - 1 >= w && (v |= u(V, x - 1) << 4),
            v
        }
        a.prototype._parseHex = function(w, x, v) {
            this.length = Math.ceil((w.length - x) / 6),
            this.words = new Array(this.length);
            for (var S = 0; S < this.length; S++)
                this.words[S] = 0;
            var D = 0, C = 0, O;
            if (v === "be")
                for (S = w.length - 1; S >= x; S -= 2)
                    O = h(w, x, S) << D,
                    this.words[C] |= O & 67108863,
                    D >= 18 ? (D -= 18,
                    C += 1,
                    this.words[C] |= O >>> 26) : D += 8;
            else {
                var P = w.length - x;
                for (S = P % 2 === 0 ? x + 1 : x; S < w.length; S += 2)
                    O = h(w, x, S) << D,
                    this.words[C] |= O & 67108863,
                    D >= 18 ? (D -= 18,
                    C += 1,
                    this.words[C] |= O >>> 26) : D += 8
            }
            this.strip()
        }
        ;
        function m(V, w, x, v) {
            for (var S = 0, D = Math.min(V.length, x), C = w; C < D; C++) {
                var O = V.charCodeAt(C) - 48;
                S *= v,
                O >= 49 ? S += O - 49 + 10 : O >= 17 ? S += O - 17 + 10 : S += O
            }
            return S
        }
        a.prototype._parseBase = function(w, x, v) {
            this.words = [0],
            this.length = 1;
            for (var S = 0, D = 1; D <= 67108863; D *= x)
                S++;
            S--,
            D = D / x | 0;
            for (var C = w.length - v, O = C % S, P = Math.min(C, C - O) + v, y = 0, A = v; A < P; A += S)
                y = m(w, A, A + S, x),
                this.imuln(D),
                this.words[0] + y < 67108864 ? this.words[0] += y : this._iaddn(y);
            if (O !== 0) {
                var E = 1;
                for (y = m(w, A, w.length, x),
                A = 0; A < O; A++)
                    E *= x;
                this.imuln(E),
                this.words[0] + y < 67108864 ? this.words[0] += y : this._iaddn(y)
            }
            this.strip()
        }
        ,
        a.prototype.copy = function(w) {
            w.words = new Array(this.length);
            for (var x = 0; x < this.length; x++)
                w.words[x] = this.words[x];
            w.length = this.length,
            w.negative = this.negative,
            w.red = this.red
        }
        ,
        a.prototype.clone = function() {
            var w = new a(null);
            return this.copy(w),
            w
        }
        ,
        a.prototype._expand = function(w) {
            for (; this.length < w; )
                this.words[this.length++] = 0;
            return this
        }
        ,
        a.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; )
                this.length--;
            return this._normSign()
        }
        ,
        a.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0),
            this
        }
        ,
        a.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
        }
        ;
        var d = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]
          , p = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
          , b = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        a.prototype.toString = function(w, x) {
            w = w || 10,
            x = x | 0 || 1;
            var v;
            if (w === 16 || w === "hex") {
                v = "";
                for (var S = 0, D = 0, C = 0; C < this.length; C++) {
                    var O = this.words[C]
                      , P = ((O << S | D) & 16777215).toString(16);
                    D = O >>> 24 - S & 16777215,
                    S += 2,
                    S >= 26 && (S -= 26,
                    C--),
                    D !== 0 || C !== this.length - 1 ? v = d[6 - P.length] + P + v : v = P + v
                }
                for (D !== 0 && (v = D.toString(16) + v); v.length % x !== 0; )
                    v = "0" + v;
                return this.negative !== 0 && (v = "-" + v),
                v
            }
            if (w === (w | 0) && w >= 2 && w <= 36) {
                var y = p[w]
                  , A = b[w];
                v = "";
                var E = this.clone();
                for (E.negative = 0; !E.isZero(); ) {
                    var k = E.modn(A).toString(w);
                    E = E.idivn(A),
                    E.isZero() ? v = k + v : v = d[y - k.length] + k + v
                }
                for (this.isZero() && (v = "0" + v); v.length % x !== 0; )
                    v = "0" + v;
                return this.negative !== 0 && (v = "-" + v),
                v
            }
            o(!1, "Base should be between 2 and 36")
        }
        ,
        a.prototype.toNumber = function() {
            var w = this.words[0];
            return this.length === 2 ? w += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? w += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && o(!1, "Number can only safely store up to 53 bits"),
            this.negative !== 0 ? -w : w
        }
        ,
        a.prototype.toJSON = function() {
            return this.toString(16)
        }
        ,
        a.prototype.toBuffer = function(w, x) {
            return o(typeof c < "u"),
            this.toArrayLike(c, w, x)
        }
        ,
        a.prototype.toArray = function(w, x) {
            return this.toArrayLike(Array, w, x)
        }
        ,
        a.prototype.toArrayLike = function(w, x, v) {
            var S = this.byteLength()
              , D = v || Math.max(1, S);
            o(S <= D, "byte array longer than desired length"),
            o(D > 0, "Requested array length <= 0"),
            this.strip();
            var C = x === "le", O = new w(D), P, y, A = this.clone();
            if (C) {
                for (y = 0; !A.isZero(); y++)
                    P = A.andln(255),
                    A.iushrn(8),
                    O[y] = P;
                for (; y < D; y++)
                    O[y] = 0
            } else {
                for (y = 0; y < D - S; y++)
                    O[y] = 0;
                for (y = 0; !A.isZero(); y++)
                    P = A.andln(255),
                    A.iushrn(8),
                    O[D - y - 1] = P
            }
            return O
        }
        ,
        Math.clz32 ? a.prototype._countBits = function(w) {
            return 32 - Math.clz32(w)
        }
        : a.prototype._countBits = function(w) {
            var x = w
              , v = 0;
            return x >= 4096 && (v += 13,
            x >>>= 13),
            x >= 64 && (v += 7,
            x >>>= 7),
            x >= 8 && (v += 4,
            x >>>= 4),
            x >= 2 && (v += 2,
            x >>>= 2),
            v + x
        }
        ,
        a.prototype._zeroBits = function(w) {
            if (w === 0)
                return 26;
            var x = w
              , v = 0;
            return x & 8191 || (v += 13,
            x >>>= 13),
            x & 127 || (v += 7,
            x >>>= 7),
            x & 15 || (v += 4,
            x >>>= 4),
            x & 3 || (v += 2,
            x >>>= 2),
            x & 1 || v++,
            v
        }
        ,
        a.prototype.bitLength = function() {
            var w = this.words[this.length - 1]
              , x = this._countBits(w);
            return (this.length - 1) * 26 + x
        }
        ;
        function g(V) {
            for (var w = new Array(V.bitLength()), x = 0; x < w.length; x++) {
                var v = x / 26 | 0
                  , S = x % 26;
                w[x] = (V.words[v] & 1 << S) >>> S
            }
            return w
        }
        a.prototype.zeroBits = function() {
            if (this.isZero())
                return 0;
            for (var w = 0, x = 0; x < this.length; x++) {
                var v = this._zeroBits(this.words[x]);
                if (w += v,
                v !== 26)
                    break
            }
            return w
        }
        ,
        a.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8)
        }
        ,
        a.prototype.toTwos = function(w) {
            return this.negative !== 0 ? this.abs().inotn(w).iaddn(1) : this.clone()
        }
        ,
        a.prototype.fromTwos = function(w) {
            return this.testn(w - 1) ? this.notn(w).iaddn(1).ineg() : this.clone()
        }
        ,
        a.prototype.isNeg = function() {
            return this.negative !== 0
        }
        ,
        a.prototype.neg = function() {
            return this.clone().ineg()
        }
        ,
        a.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1),
            this
        }
        ,
        a.prototype.iuor = function(w) {
            for (; this.length < w.length; )
                this.words[this.length++] = 0;
            for (var x = 0; x < w.length; x++)
                this.words[x] = this.words[x] | w.words[x];
            return this.strip()
        }
        ,
        a.prototype.ior = function(w) {
            return o((this.negative | w.negative) === 0),
            this.iuor(w)
        }
        ,
        a.prototype.or = function(w) {
            return this.length > w.length ? this.clone().ior(w) : w.clone().ior(this)
        }
        ,
        a.prototype.uor = function(w) {
            return this.length > w.length ? this.clone().iuor(w) : w.clone().iuor(this)
        }
        ,
        a.prototype.iuand = function(w) {
            var x;
            this.length > w.length ? x = w : x = this;
            for (var v = 0; v < x.length; v++)
                this.words[v] = this.words[v] & w.words[v];
            return this.length = x.length,
            this.strip()
        }
        ,
        a.prototype.iand = function(w) {
            return o((this.negative | w.negative) === 0),
            this.iuand(w)
        }
        ,
        a.prototype.and = function(w) {
            return this.length > w.length ? this.clone().iand(w) : w.clone().iand(this)
        }
        ,
        a.prototype.uand = function(w) {
            return this.length > w.length ? this.clone().iuand(w) : w.clone().iuand(this)
        }
        ,
        a.prototype.iuxor = function(w) {
            var x, v;
            this.length > w.length ? (x = this,
            v = w) : (x = w,
            v = this);
            for (var S = 0; S < v.length; S++)
                this.words[S] = x.words[S] ^ v.words[S];
            if (this !== x)
                for (; S < x.length; S++)
                    this.words[S] = x.words[S];
            return this.length = x.length,
            this.strip()
        }
        ,
        a.prototype.ixor = function(w) {
            return o((this.negative | w.negative) === 0),
            this.iuxor(w)
        }
        ,
        a.prototype.xor = function(w) {
            return this.length > w.length ? this.clone().ixor(w) : w.clone().ixor(this)
        }
        ,
        a.prototype.uxor = function(w) {
            return this.length > w.length ? this.clone().iuxor(w) : w.clone().iuxor(this)
        }
        ,
        a.prototype.inotn = function(w) {
            o(typeof w == "number" && w >= 0);
            var x = Math.ceil(w / 26) | 0
              , v = w % 26;
            this._expand(x),
            v > 0 && x--;
            for (var S = 0; S < x; S++)
                this.words[S] = ~this.words[S] & 67108863;
            return v > 0 && (this.words[S] = ~this.words[S] & 67108863 >> 26 - v),
            this.strip()
        }
        ,
        a.prototype.notn = function(w) {
            return this.clone().inotn(w)
        }
        ,
        a.prototype.setn = function(w, x) {
            o(typeof w == "number" && w >= 0);
            var v = w / 26 | 0
              , S = w % 26;
            return this._expand(v + 1),
            x ? this.words[v] = this.words[v] | 1 << S : this.words[v] = this.words[v] & ~(1 << S),
            this.strip()
        }
        ,
        a.prototype.iadd = function(w) {
            var x;
            if (this.negative !== 0 && w.negative === 0)
                return this.negative = 0,
                x = this.isub(w),
                this.negative ^= 1,
                this._normSign();
            if (this.negative === 0 && w.negative !== 0)
                return w.negative = 0,
                x = this.isub(w),
                w.negative = 1,
                x._normSign();
            var v, S;
            this.length > w.length ? (v = this,
            S = w) : (v = w,
            S = this);
            for (var D = 0, C = 0; C < S.length; C++)
                x = (v.words[C] | 0) + (S.words[C] | 0) + D,
                this.words[C] = x & 67108863,
                D = x >>> 26;
            for (; D !== 0 && C < v.length; C++)
                x = (v.words[C] | 0) + D,
                this.words[C] = x & 67108863,
                D = x >>> 26;
            if (this.length = v.length,
            D !== 0)
                this.words[this.length] = D,
                this.length++;
            else if (v !== this)
                for (; C < v.length; C++)
                    this.words[C] = v.words[C];
            return this
        }
        ,
        a.prototype.add = function(w) {
            var x;
            return w.negative !== 0 && this.negative === 0 ? (w.negative = 0,
            x = this.sub(w),
            w.negative ^= 1,
            x) : w.negative === 0 && this.negative !== 0 ? (this.negative = 0,
            x = w.sub(this),
            this.negative = 1,
            x) : this.length > w.length ? this.clone().iadd(w) : w.clone().iadd(this)
        }
        ,
        a.prototype.isub = function(w) {
            if (w.negative !== 0) {
                w.negative = 0;
                var x = this.iadd(w);
                return w.negative = 1,
                x._normSign()
            } else if (this.negative !== 0)
                return this.negative = 0,
                this.iadd(w),
                this.negative = 1,
                this._normSign();
            var v = this.cmp(w);
            if (v === 0)
                return this.negative = 0,
                this.length = 1,
                this.words[0] = 0,
                this;
            var S, D;
            v > 0 ? (S = this,
            D = w) : (S = w,
            D = this);
            for (var C = 0, O = 0; O < D.length; O++)
                x = (S.words[O] | 0) - (D.words[O] | 0) + C,
                C = x >> 26,
                this.words[O] = x & 67108863;
            for (; C !== 0 && O < S.length; O++)
                x = (S.words[O] | 0) + C,
                C = x >> 26,
                this.words[O] = x & 67108863;
            if (C === 0 && O < S.length && S !== this)
                for (; O < S.length; O++)
                    this.words[O] = S.words[O];
            return this.length = Math.max(this.length, O),
            S !== this && (this.negative = 1),
            this.strip()
        }
        ,
        a.prototype.sub = function(w) {
            return this.clone().isub(w)
        }
        ;
        function $(V, w, x) {
            x.negative = w.negative ^ V.negative;
            var v = V.length + w.length | 0;
            x.length = v,
            v = v - 1 | 0;
            var S = V.words[0] | 0
              , D = w.words[0] | 0
              , C = S * D
              , O = C & 67108863
              , P = C / 67108864 | 0;
            x.words[0] = O;
            for (var y = 1; y < v; y++) {
                for (var A = P >>> 26, E = P & 67108863, k = Math.min(y, w.length - 1), H = Math.max(0, y - V.length + 1); H <= k; H++) {
                    var J = y - H | 0;
                    S = V.words[J] | 0,
                    D = w.words[H] | 0,
                    C = S * D + E,
                    A += C / 67108864 | 0,
                    E = C & 67108863
                }
                x.words[y] = E | 0,
                P = A | 0
            }
            return P !== 0 ? x.words[y] = P | 0 : x.length--,
            x.strip()
        }
        var N = function(w, x, v) {
            var S = w.words, D = x.words, C = v.words, O = 0, P, y, A, E = S[0] | 0, k = E & 8191, H = E >>> 13, J = S[1] | 0, j = J & 8191, F = J >>> 13, U = S[2] | 0, re = U & 8191, oe = U >>> 13, X = S[3] | 0, Z = X & 8191, se = X >>> 13, ue = S[4] | 0, he = ue & 8191, ve = ue >>> 13, ge = S[5] | 0, _e = ge & 8191, ce = ge >>> 13, De = S[6] | 0, be = De & 8191, Ae = De >>> 13, Ee = S[7] | 0, ae = Ee & 8191, le = Ee >>> 13, fe = S[8] | 0, de = fe & 8191, me = fe >>> 13, ze = S[9] | 0, pe = ze & 8191, xe = ze >>> 13, Se = D[0] | 0, we = Se & 8191, ke = Se >>> 13, Le = D[1] | 0, Be = Le & 8191, Ue = Le >>> 13, Fe = D[2] | 0, Te = Fe & 8191, He = Fe >>> 13, We = D[3] | 0, $e = We & 8191, Ve = We >>> 13, Ke = D[4] | 0, Me = Ke & 8191, Ge = Ke >>> 13, Ye = D[5] | 0, Ie = Ye & 8191, je = Ye >>> 13, Ze = D[6] | 0, Pe = Ze & 8191, Oe = Ze >>> 13, qe = D[7] | 0, Ce = qe & 8191, Xe = qe >>> 13, er = D[8] | 0, Re = er & 8191, tr = er >>> 13, nr = D[9] | 0, Ne = nr & 8191, ir = nr >>> 13;
            v.negative = w.negative ^ x.negative,
            v.length = 19,
            P = Math.imul(k, we),
            y = Math.imul(k, ke),
            y = y + Math.imul(H, we) | 0,
            A = Math.imul(H, ke);
            var Je = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (Je >>> 26) | 0,
            Je &= 67108863,
            P = Math.imul(j, we),
            y = Math.imul(j, ke),
            y = y + Math.imul(F, we) | 0,
            A = Math.imul(F, ke),
            P = P + Math.imul(k, Be) | 0,
            y = y + Math.imul(k, Ue) | 0,
            y = y + Math.imul(H, Be) | 0,
            A = A + Math.imul(H, Ue) | 0;
            var Qe = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (Qe >>> 26) | 0,
            Qe &= 67108863,
            P = Math.imul(re, we),
            y = Math.imul(re, ke),
            y = y + Math.imul(oe, we) | 0,
            A = Math.imul(oe, ke),
            P = P + Math.imul(j, Be) | 0,
            y = y + Math.imul(j, Ue) | 0,
            y = y + Math.imul(F, Be) | 0,
            A = A + Math.imul(F, Ue) | 0,
            P = P + Math.imul(k, Te) | 0,
            y = y + Math.imul(k, He) | 0,
            y = y + Math.imul(H, Te) | 0,
            A = A + Math.imul(H, He) | 0;
            var ar = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (ar >>> 26) | 0,
            ar &= 67108863,
            P = Math.imul(Z, we),
            y = Math.imul(Z, ke),
            y = y + Math.imul(se, we) | 0,
            A = Math.imul(se, ke),
            P = P + Math.imul(re, Be) | 0,
            y = y + Math.imul(re, Ue) | 0,
            y = y + Math.imul(oe, Be) | 0,
            A = A + Math.imul(oe, Ue) | 0,
            P = P + Math.imul(j, Te) | 0,
            y = y + Math.imul(j, He) | 0,
            y = y + Math.imul(F, Te) | 0,
            A = A + Math.imul(F, He) | 0,
            P = P + Math.imul(k, $e) | 0,
            y = y + Math.imul(k, Ve) | 0,
            y = y + Math.imul(H, $e) | 0,
            A = A + Math.imul(H, Ve) | 0;
            var lr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (lr >>> 26) | 0,
            lr &= 67108863,
            P = Math.imul(he, we),
            y = Math.imul(he, ke),
            y = y + Math.imul(ve, we) | 0,
            A = Math.imul(ve, ke),
            P = P + Math.imul(Z, Be) | 0,
            y = y + Math.imul(Z, Ue) | 0,
            y = y + Math.imul(se, Be) | 0,
            A = A + Math.imul(se, Ue) | 0,
            P = P + Math.imul(re, Te) | 0,
            y = y + Math.imul(re, He) | 0,
            y = y + Math.imul(oe, Te) | 0,
            A = A + Math.imul(oe, He) | 0,
            P = P + Math.imul(j, $e) | 0,
            y = y + Math.imul(j, Ve) | 0,
            y = y + Math.imul(F, $e) | 0,
            A = A + Math.imul(F, Ve) | 0,
            P = P + Math.imul(k, Me) | 0,
            y = y + Math.imul(k, Ge) | 0,
            y = y + Math.imul(H, Me) | 0,
            A = A + Math.imul(H, Ge) | 0;
            var cr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (cr >>> 26) | 0,
            cr &= 67108863,
            P = Math.imul(_e, we),
            y = Math.imul(_e, ke),
            y = y + Math.imul(ce, we) | 0,
            A = Math.imul(ce, ke),
            P = P + Math.imul(he, Be) | 0,
            y = y + Math.imul(he, Ue) | 0,
            y = y + Math.imul(ve, Be) | 0,
            A = A + Math.imul(ve, Ue) | 0,
            P = P + Math.imul(Z, Te) | 0,
            y = y + Math.imul(Z, He) | 0,
            y = y + Math.imul(se, Te) | 0,
            A = A + Math.imul(se, He) | 0,
            P = P + Math.imul(re, $e) | 0,
            y = y + Math.imul(re, Ve) | 0,
            y = y + Math.imul(oe, $e) | 0,
            A = A + Math.imul(oe, Ve) | 0,
            P = P + Math.imul(j, Me) | 0,
            y = y + Math.imul(j, Ge) | 0,
            y = y + Math.imul(F, Me) | 0,
            A = A + Math.imul(F, Ge) | 0,
            P = P + Math.imul(k, Ie) | 0,
            y = y + Math.imul(k, je) | 0,
            y = y + Math.imul(H, Ie) | 0,
            A = A + Math.imul(H, je) | 0;
            var ur = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (ur >>> 26) | 0,
            ur &= 67108863,
            P = Math.imul(be, we),
            y = Math.imul(be, ke),
            y = y + Math.imul(Ae, we) | 0,
            A = Math.imul(Ae, ke),
            P = P + Math.imul(_e, Be) | 0,
            y = y + Math.imul(_e, Ue) | 0,
            y = y + Math.imul(ce, Be) | 0,
            A = A + Math.imul(ce, Ue) | 0,
            P = P + Math.imul(he, Te) | 0,
            y = y + Math.imul(he, He) | 0,
            y = y + Math.imul(ve, Te) | 0,
            A = A + Math.imul(ve, He) | 0,
            P = P + Math.imul(Z, $e) | 0,
            y = y + Math.imul(Z, Ve) | 0,
            y = y + Math.imul(se, $e) | 0,
            A = A + Math.imul(se, Ve) | 0,
            P = P + Math.imul(re, Me) | 0,
            y = y + Math.imul(re, Ge) | 0,
            y = y + Math.imul(oe, Me) | 0,
            A = A + Math.imul(oe, Ge) | 0,
            P = P + Math.imul(j, Ie) | 0,
            y = y + Math.imul(j, je) | 0,
            y = y + Math.imul(F, Ie) | 0,
            A = A + Math.imul(F, je) | 0,
            P = P + Math.imul(k, Pe) | 0,
            y = y + Math.imul(k, Oe) | 0,
            y = y + Math.imul(H, Pe) | 0,
            A = A + Math.imul(H, Oe) | 0;
            var fr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (fr >>> 26) | 0,
            fr &= 67108863,
            P = Math.imul(ae, we),
            y = Math.imul(ae, ke),
            y = y + Math.imul(le, we) | 0,
            A = Math.imul(le, ke),
            P = P + Math.imul(be, Be) | 0,
            y = y + Math.imul(be, Ue) | 0,
            y = y + Math.imul(Ae, Be) | 0,
            A = A + Math.imul(Ae, Ue) | 0,
            P = P + Math.imul(_e, Te) | 0,
            y = y + Math.imul(_e, He) | 0,
            y = y + Math.imul(ce, Te) | 0,
            A = A + Math.imul(ce, He) | 0,
            P = P + Math.imul(he, $e) | 0,
            y = y + Math.imul(he, Ve) | 0,
            y = y + Math.imul(ve, $e) | 0,
            A = A + Math.imul(ve, Ve) | 0,
            P = P + Math.imul(Z, Me) | 0,
            y = y + Math.imul(Z, Ge) | 0,
            y = y + Math.imul(se, Me) | 0,
            A = A + Math.imul(se, Ge) | 0,
            P = P + Math.imul(re, Ie) | 0,
            y = y + Math.imul(re, je) | 0,
            y = y + Math.imul(oe, Ie) | 0,
            A = A + Math.imul(oe, je) | 0,
            P = P + Math.imul(j, Pe) | 0,
            y = y + Math.imul(j, Oe) | 0,
            y = y + Math.imul(F, Pe) | 0,
            A = A + Math.imul(F, Oe) | 0,
            P = P + Math.imul(k, Ce) | 0,
            y = y + Math.imul(k, Xe) | 0,
            y = y + Math.imul(H, Ce) | 0,
            A = A + Math.imul(H, Xe) | 0;
            var dr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (dr >>> 26) | 0,
            dr &= 67108863,
            P = Math.imul(de, we),
            y = Math.imul(de, ke),
            y = y + Math.imul(me, we) | 0,
            A = Math.imul(me, ke),
            P = P + Math.imul(ae, Be) | 0,
            y = y + Math.imul(ae, Ue) | 0,
            y = y + Math.imul(le, Be) | 0,
            A = A + Math.imul(le, Ue) | 0,
            P = P + Math.imul(be, Te) | 0,
            y = y + Math.imul(be, He) | 0,
            y = y + Math.imul(Ae, Te) | 0,
            A = A + Math.imul(Ae, He) | 0,
            P = P + Math.imul(_e, $e) | 0,
            y = y + Math.imul(_e, Ve) | 0,
            y = y + Math.imul(ce, $e) | 0,
            A = A + Math.imul(ce, Ve) | 0,
            P = P + Math.imul(he, Me) | 0,
            y = y + Math.imul(he, Ge) | 0,
            y = y + Math.imul(ve, Me) | 0,
            A = A + Math.imul(ve, Ge) | 0,
            P = P + Math.imul(Z, Ie) | 0,
            y = y + Math.imul(Z, je) | 0,
            y = y + Math.imul(se, Ie) | 0,
            A = A + Math.imul(se, je) | 0,
            P = P + Math.imul(re, Pe) | 0,
            y = y + Math.imul(re, Oe) | 0,
            y = y + Math.imul(oe, Pe) | 0,
            A = A + Math.imul(oe, Oe) | 0,
            P = P + Math.imul(j, Ce) | 0,
            y = y + Math.imul(j, Xe) | 0,
            y = y + Math.imul(F, Ce) | 0,
            A = A + Math.imul(F, Xe) | 0,
            P = P + Math.imul(k, Re) | 0,
            y = y + Math.imul(k, tr) | 0,
            y = y + Math.imul(H, Re) | 0,
            A = A + Math.imul(H, tr) | 0;
            var pr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (pr >>> 26) | 0,
            pr &= 67108863,
            P = Math.imul(pe, we),
            y = Math.imul(pe, ke),
            y = y + Math.imul(xe, we) | 0,
            A = Math.imul(xe, ke),
            P = P + Math.imul(de, Be) | 0,
            y = y + Math.imul(de, Ue) | 0,
            y = y + Math.imul(me, Be) | 0,
            A = A + Math.imul(me, Ue) | 0,
            P = P + Math.imul(ae, Te) | 0,
            y = y + Math.imul(ae, He) | 0,
            y = y + Math.imul(le, Te) | 0,
            A = A + Math.imul(le, He) | 0,
            P = P + Math.imul(be, $e) | 0,
            y = y + Math.imul(be, Ve) | 0,
            y = y + Math.imul(Ae, $e) | 0,
            A = A + Math.imul(Ae, Ve) | 0,
            P = P + Math.imul(_e, Me) | 0,
            y = y + Math.imul(_e, Ge) | 0,
            y = y + Math.imul(ce, Me) | 0,
            A = A + Math.imul(ce, Ge) | 0,
            P = P + Math.imul(he, Ie) | 0,
            y = y + Math.imul(he, je) | 0,
            y = y + Math.imul(ve, Ie) | 0,
            A = A + Math.imul(ve, je) | 0,
            P = P + Math.imul(Z, Pe) | 0,
            y = y + Math.imul(Z, Oe) | 0,
            y = y + Math.imul(se, Pe) | 0,
            A = A + Math.imul(se, Oe) | 0,
            P = P + Math.imul(re, Ce) | 0,
            y = y + Math.imul(re, Xe) | 0,
            y = y + Math.imul(oe, Ce) | 0,
            A = A + Math.imul(oe, Xe) | 0,
            P = P + Math.imul(j, Re) | 0,
            y = y + Math.imul(j, tr) | 0,
            y = y + Math.imul(F, Re) | 0,
            A = A + Math.imul(F, tr) | 0,
            P = P + Math.imul(k, Ne) | 0,
            y = y + Math.imul(k, ir) | 0,
            y = y + Math.imul(H, Ne) | 0,
            A = A + Math.imul(H, ir) | 0;
            var vr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (vr >>> 26) | 0,
            vr &= 67108863,
            P = Math.imul(pe, Be),
            y = Math.imul(pe, Ue),
            y = y + Math.imul(xe, Be) | 0,
            A = Math.imul(xe, Ue),
            P = P + Math.imul(de, Te) | 0,
            y = y + Math.imul(de, He) | 0,
            y = y + Math.imul(me, Te) | 0,
            A = A + Math.imul(me, He) | 0,
            P = P + Math.imul(ae, $e) | 0,
            y = y + Math.imul(ae, Ve) | 0,
            y = y + Math.imul(le, $e) | 0,
            A = A + Math.imul(le, Ve) | 0,
            P = P + Math.imul(be, Me) | 0,
            y = y + Math.imul(be, Ge) | 0,
            y = y + Math.imul(Ae, Me) | 0,
            A = A + Math.imul(Ae, Ge) | 0,
            P = P + Math.imul(_e, Ie) | 0,
            y = y + Math.imul(_e, je) | 0,
            y = y + Math.imul(ce, Ie) | 0,
            A = A + Math.imul(ce, je) | 0,
            P = P + Math.imul(he, Pe) | 0,
            y = y + Math.imul(he, Oe) | 0,
            y = y + Math.imul(ve, Pe) | 0,
            A = A + Math.imul(ve, Oe) | 0,
            P = P + Math.imul(Z, Ce) | 0,
            y = y + Math.imul(Z, Xe) | 0,
            y = y + Math.imul(se, Ce) | 0,
            A = A + Math.imul(se, Xe) | 0,
            P = P + Math.imul(re, Re) | 0,
            y = y + Math.imul(re, tr) | 0,
            y = y + Math.imul(oe, Re) | 0,
            A = A + Math.imul(oe, tr) | 0,
            P = P + Math.imul(j, Ne) | 0,
            y = y + Math.imul(j, ir) | 0,
            y = y + Math.imul(F, Ne) | 0,
            A = A + Math.imul(F, ir) | 0;
            var _r = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (_r >>> 26) | 0,
            _r &= 67108863,
            P = Math.imul(pe, Te),
            y = Math.imul(pe, He),
            y = y + Math.imul(xe, Te) | 0,
            A = Math.imul(xe, He),
            P = P + Math.imul(de, $e) | 0,
            y = y + Math.imul(de, Ve) | 0,
            y = y + Math.imul(me, $e) | 0,
            A = A + Math.imul(me, Ve) | 0,
            P = P + Math.imul(ae, Me) | 0,
            y = y + Math.imul(ae, Ge) | 0,
            y = y + Math.imul(le, Me) | 0,
            A = A + Math.imul(le, Ge) | 0,
            P = P + Math.imul(be, Ie) | 0,
            y = y + Math.imul(be, je) | 0,
            y = y + Math.imul(Ae, Ie) | 0,
            A = A + Math.imul(Ae, je) | 0,
            P = P + Math.imul(_e, Pe) | 0,
            y = y + Math.imul(_e, Oe) | 0,
            y = y + Math.imul(ce, Pe) | 0,
            A = A + Math.imul(ce, Oe) | 0,
            P = P + Math.imul(he, Ce) | 0,
            y = y + Math.imul(he, Xe) | 0,
            y = y + Math.imul(ve, Ce) | 0,
            A = A + Math.imul(ve, Xe) | 0,
            P = P + Math.imul(Z, Re) | 0,
            y = y + Math.imul(Z, tr) | 0,
            y = y + Math.imul(se, Re) | 0,
            A = A + Math.imul(se, tr) | 0,
            P = P + Math.imul(re, Ne) | 0,
            y = y + Math.imul(re, ir) | 0,
            y = y + Math.imul(oe, Ne) | 0,
            A = A + Math.imul(oe, ir) | 0;
            var br = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (br >>> 26) | 0,
            br &= 67108863,
            P = Math.imul(pe, $e),
            y = Math.imul(pe, Ve),
            y = y + Math.imul(xe, $e) | 0,
            A = Math.imul(xe, Ve),
            P = P + Math.imul(de, Me) | 0,
            y = y + Math.imul(de, Ge) | 0,
            y = y + Math.imul(me, Me) | 0,
            A = A + Math.imul(me, Ge) | 0,
            P = P + Math.imul(ae, Ie) | 0,
            y = y + Math.imul(ae, je) | 0,
            y = y + Math.imul(le, Ie) | 0,
            A = A + Math.imul(le, je) | 0,
            P = P + Math.imul(be, Pe) | 0,
            y = y + Math.imul(be, Oe) | 0,
            y = y + Math.imul(Ae, Pe) | 0,
            A = A + Math.imul(Ae, Oe) | 0,
            P = P + Math.imul(_e, Ce) | 0,
            y = y + Math.imul(_e, Xe) | 0,
            y = y + Math.imul(ce, Ce) | 0,
            A = A + Math.imul(ce, Xe) | 0,
            P = P + Math.imul(he, Re) | 0,
            y = y + Math.imul(he, tr) | 0,
            y = y + Math.imul(ve, Re) | 0,
            A = A + Math.imul(ve, tr) | 0,
            P = P + Math.imul(Z, Ne) | 0,
            y = y + Math.imul(Z, ir) | 0,
            y = y + Math.imul(se, Ne) | 0,
            A = A + Math.imul(se, ir) | 0;
            var yr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (yr >>> 26) | 0,
            yr &= 67108863,
            P = Math.imul(pe, Me),
            y = Math.imul(pe, Ge),
            y = y + Math.imul(xe, Me) | 0,
            A = Math.imul(xe, Ge),
            P = P + Math.imul(de, Ie) | 0,
            y = y + Math.imul(de, je) | 0,
            y = y + Math.imul(me, Ie) | 0,
            A = A + Math.imul(me, je) | 0,
            P = P + Math.imul(ae, Pe) | 0,
            y = y + Math.imul(ae, Oe) | 0,
            y = y + Math.imul(le, Pe) | 0,
            A = A + Math.imul(le, Oe) | 0,
            P = P + Math.imul(be, Ce) | 0,
            y = y + Math.imul(be, Xe) | 0,
            y = y + Math.imul(Ae, Ce) | 0,
            A = A + Math.imul(Ae, Xe) | 0,
            P = P + Math.imul(_e, Re) | 0,
            y = y + Math.imul(_e, tr) | 0,
            y = y + Math.imul(ce, Re) | 0,
            A = A + Math.imul(ce, tr) | 0,
            P = P + Math.imul(he, Ne) | 0,
            y = y + Math.imul(he, ir) | 0,
            y = y + Math.imul(ve, Ne) | 0,
            A = A + Math.imul(ve, ir) | 0;
            var gr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (gr >>> 26) | 0,
            gr &= 67108863,
            P = Math.imul(pe, Ie),
            y = Math.imul(pe, je),
            y = y + Math.imul(xe, Ie) | 0,
            A = Math.imul(xe, je),
            P = P + Math.imul(de, Pe) | 0,
            y = y + Math.imul(de, Oe) | 0,
            y = y + Math.imul(me, Pe) | 0,
            A = A + Math.imul(me, Oe) | 0,
            P = P + Math.imul(ae, Ce) | 0,
            y = y + Math.imul(ae, Xe) | 0,
            y = y + Math.imul(le, Ce) | 0,
            A = A + Math.imul(le, Xe) | 0,
            P = P + Math.imul(be, Re) | 0,
            y = y + Math.imul(be, tr) | 0,
            y = y + Math.imul(Ae, Re) | 0,
            A = A + Math.imul(Ae, tr) | 0,
            P = P + Math.imul(_e, Ne) | 0,
            y = y + Math.imul(_e, ir) | 0,
            y = y + Math.imul(ce, Ne) | 0,
            A = A + Math.imul(ce, ir) | 0;
            var xr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (xr >>> 26) | 0,
            xr &= 67108863,
            P = Math.imul(pe, Pe),
            y = Math.imul(pe, Oe),
            y = y + Math.imul(xe, Pe) | 0,
            A = Math.imul(xe, Oe),
            P = P + Math.imul(de, Ce) | 0,
            y = y + Math.imul(de, Xe) | 0,
            y = y + Math.imul(me, Ce) | 0,
            A = A + Math.imul(me, Xe) | 0,
            P = P + Math.imul(ae, Re) | 0,
            y = y + Math.imul(ae, tr) | 0,
            y = y + Math.imul(le, Re) | 0,
            A = A + Math.imul(le, tr) | 0,
            P = P + Math.imul(be, Ne) | 0,
            y = y + Math.imul(be, ir) | 0,
            y = y + Math.imul(Ae, Ne) | 0,
            A = A + Math.imul(Ae, ir) | 0;
            var wr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (wr >>> 26) | 0,
            wr &= 67108863,
            P = Math.imul(pe, Ce),
            y = Math.imul(pe, Xe),
            y = y + Math.imul(xe, Ce) | 0,
            A = Math.imul(xe, Xe),
            P = P + Math.imul(de, Re) | 0,
            y = y + Math.imul(de, tr) | 0,
            y = y + Math.imul(me, Re) | 0,
            A = A + Math.imul(me, tr) | 0,
            P = P + Math.imul(ae, Ne) | 0,
            y = y + Math.imul(ae, ir) | 0,
            y = y + Math.imul(le, Ne) | 0,
            A = A + Math.imul(le, ir) | 0;
            var Sr = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (Sr >>> 26) | 0,
            Sr &= 67108863,
            P = Math.imul(pe, Re),
            y = Math.imul(pe, tr),
            y = y + Math.imul(xe, Re) | 0,
            A = Math.imul(xe, tr),
            P = P + Math.imul(de, Ne) | 0,
            y = y + Math.imul(de, ir) | 0,
            y = y + Math.imul(me, Ne) | 0,
            A = A + Math.imul(me, ir) | 0;
            var Er = (O + P | 0) + ((y & 8191) << 13) | 0;
            O = (A + (y >>> 13) | 0) + (Er >>> 26) | 0,
            Er &= 67108863,
            P = Math.imul(pe, Ne),
            y = Math.imul(pe, ir),
            y = y + Math.imul(xe, Ne) | 0,
            A = Math.imul(xe, ir);
            var Ar = (O + P | 0) + ((y & 8191) << 13) | 0;
            return O = (A + (y >>> 13) | 0) + (Ar >>> 26) | 0,
            Ar &= 67108863,
            C[0] = Je,
            C[1] = Qe,
            C[2] = ar,
            C[3] = lr,
            C[4] = cr,
            C[5] = ur,
            C[6] = fr,
            C[7] = dr,
            C[8] = pr,
            C[9] = vr,
            C[10] = _r,
            C[11] = br,
            C[12] = yr,
            C[13] = gr,
            C[14] = xr,
            C[15] = wr,
            C[16] = Sr,
            C[17] = Er,
            C[18] = Ar,
            O !== 0 && (C[19] = O,
            v.length++),
            v
        };
        Math.imul || (N = $);
        function I(V, w, x) {
            x.negative = w.negative ^ V.negative,
            x.length = V.length + w.length;
            for (var v = 0, S = 0, D = 0; D < x.length - 1; D++) {
                var C = S;
                S = 0;
                for (var O = v & 67108863, P = Math.min(D, w.length - 1), y = Math.max(0, D - V.length + 1); y <= P; y++) {
                    var A = D - y
                      , E = V.words[A] | 0
                      , k = w.words[y] | 0
                      , H = E * k
                      , J = H & 67108863;
                    C = C + (H / 67108864 | 0) | 0,
                    J = J + O | 0,
                    O = J & 67108863,
                    C = C + (J >>> 26) | 0,
                    S += C >>> 26,
                    C &= 67108863
                }
                x.words[D] = O,
                v = C,
                C = S
            }
            return v !== 0 ? x.words[D] = v : x.length--,
            x.strip()
        }
        function L(V, w, x) {
            var v = new T;
            return v.mulp(V, w, x)
        }
        a.prototype.mulTo = function(w, x) {
            var v, S = this.length + w.length;
            return this.length === 10 && w.length === 10 ? v = N(this, w, x) : S < 63 ? v = $(this, w, x) : S < 1024 ? v = I(this, w, x) : v = L(this, w, x),
            v
        }
        ;
        function T(V, w) {
            this.x = V,
            this.y = w
        }
        T.prototype.makeRBT = function(w) {
            for (var x = new Array(w), v = a.prototype._countBits(w) - 1, S = 0; S < w; S++)
                x[S] = this.revBin(S, v, w);
            return x
        }
        ,
        T.prototype.revBin = function(w, x, v) {
            if (w === 0 || w === v - 1)
                return w;
            for (var S = 0, D = 0; D < x; D++)
                S |= (w & 1) << x - D - 1,
                w >>= 1;
            return S
        }
        ,
        T.prototype.permute = function(w, x, v, S, D, C) {
            for (var O = 0; O < C; O++)
                S[O] = x[w[O]],
                D[O] = v[w[O]]
        }
        ,
        T.prototype.transform = function(w, x, v, S, D, C) {
            this.permute(C, w, x, v, S, D);
            for (var O = 1; O < D; O <<= 1)
                for (var P = O << 1, y = Math.cos(2 * Math.PI / P), A = Math.sin(2 * Math.PI / P), E = 0; E < D; E += P)
                    for (var k = y, H = A, J = 0; J < O; J++) {
                        var j = v[E + J]
                          , F = S[E + J]
                          , U = v[E + J + O]
                          , re = S[E + J + O]
                          , oe = k * U - H * re;
                        re = k * re + H * U,
                        U = oe,
                        v[E + J] = j + U,
                        S[E + J] = F + re,
                        v[E + J + O] = j - U,
                        S[E + J + O] = F - re,
                        J !== P && (oe = y * k - A * H,
                        H = y * H + A * k,
                        k = oe)
                    }
        }
        ,
        T.prototype.guessLen13b = function(w, x) {
            var v = Math.max(x, w) | 1
              , S = v & 1
              , D = 0;
            for (v = v / 2 | 0; v; v = v >>> 1)
                D++;
            return 1 << D + 1 + S
        }
        ,
        T.prototype.conjugate = function(w, x, v) {
            if (!(v <= 1))
                for (var S = 0; S < v / 2; S++) {
                    var D = w[S];
                    w[S] = w[v - S - 1],
                    w[v - S - 1] = D,
                    D = x[S],
                    x[S] = -x[v - S - 1],
                    x[v - S - 1] = -D
                }
        }
        ,
        T.prototype.normalize13b = function(w, x) {
            for (var v = 0, S = 0; S < x / 2; S++) {
                var D = Math.round(w[2 * S + 1] / x) * 8192 + Math.round(w[2 * S] / x) + v;
                w[S] = D & 67108863,
                D < 67108864 ? v = 0 : v = D / 67108864 | 0
            }
            return w
        }
        ,
        T.prototype.convert13b = function(w, x, v, S) {
            for (var D = 0, C = 0; C < x; C++)
                D = D + (w[C] | 0),
                v[2 * C] = D & 8191,
                D = D >>> 13,
                v[2 * C + 1] = D & 8191,
                D = D >>> 13;
            for (C = 2 * x; C < S; ++C)
                v[C] = 0;
            o(D === 0),
            o((D & -8192) === 0)
        }
        ,
        T.prototype.stub = function(w) {
            for (var x = new Array(w), v = 0; v < w; v++)
                x[v] = 0;
            return x
        }
        ,
        T.prototype.mulp = function(w, x, v) {
            var S = 2 * this.guessLen13b(w.length, x.length)
              , D = this.makeRBT(S)
              , C = this.stub(S)
              , O = new Array(S)
              , P = new Array(S)
              , y = new Array(S)
              , A = new Array(S)
              , E = new Array(S)
              , k = new Array(S)
              , H = v.words;
            H.length = S,
            this.convert13b(w.words, w.length, O, S),
            this.convert13b(x.words, x.length, A, S),
            this.transform(O, C, P, y, S, D),
            this.transform(A, C, E, k, S, D);
            for (var J = 0; J < S; J++) {
                var j = P[J] * E[J] - y[J] * k[J];
                y[J] = P[J] * k[J] + y[J] * E[J],
                P[J] = j
            }
            return this.conjugate(P, y, S),
            this.transform(P, y, H, C, S, D),
            this.conjugate(H, C, S),
            this.normalize13b(H, S),
            v.negative = w.negative ^ x.negative,
            v.length = w.length + x.length,
            v.strip()
        }
        ,
        a.prototype.mul = function(w) {
            var x = new a(null);
            return x.words = new Array(this.length + w.length),
            this.mulTo(w, x)
        }
        ,
        a.prototype.mulf = function(w) {
            var x = new a(null);
            return x.words = new Array(this.length + w.length),
            L(this, w, x)
        }
        ,
        a.prototype.imul = function(w) {
            return this.clone().mulTo(w, this)
        }
        ,
        a.prototype.imuln = function(w) {
            o(typeof w == "number"),
            o(w < 67108864);
            for (var x = 0, v = 0; v < this.length; v++) {
                var S = (this.words[v] | 0) * w
                  , D = (S & 67108863) + (x & 67108863);
                x >>= 26,
                x += S / 67108864 | 0,
                x += D >>> 26,
                this.words[v] = D & 67108863
            }
            return x !== 0 && (this.words[v] = x,
            this.length++),
            this.length = w === 0 ? 1 : this.length,
            this
        }
        ,
        a.prototype.muln = function(w) {
            return this.clone().imuln(w)
        }
        ,
        a.prototype.sqr = function() {
            return this.mul(this)
        }
        ,
        a.prototype.isqr = function() {
            return this.imul(this.clone())
        }
        ,
        a.prototype.pow = function(w) {
            var x = g(w);
            if (x.length === 0)
                return new a(1);
            for (var v = this, S = 0; S < x.length && x[S] === 0; S++,
            v = v.sqr())
                ;
            if (++S < x.length)
                for (var D = v.sqr(); S < x.length; S++,
                D = D.sqr())
                    x[S] !== 0 && (v = v.mul(D));
            return v
        }
        ,
        a.prototype.iushln = function(w) {
            o(typeof w == "number" && w >= 0);
            var x = w % 26, v = (w - x) / 26, S = 67108863 >>> 26 - x << 26 - x, D;
            if (x !== 0) {
                var C = 0;
                for (D = 0; D < this.length; D++) {
                    var O = this.words[D] & S
                      , P = (this.words[D] | 0) - O << x;
                    this.words[D] = P | C,
                    C = O >>> 26 - x
                }
                C && (this.words[D] = C,
                this.length++)
            }
            if (v !== 0) {
                for (D = this.length - 1; D >= 0; D--)
                    this.words[D + v] = this.words[D];
                for (D = 0; D < v; D++)
                    this.words[D] = 0;
                this.length += v
            }
            return this.strip()
        }
        ,
        a.prototype.ishln = function(w) {
            return o(this.negative === 0),
            this.iushln(w)
        }
        ,
        a.prototype.iushrn = function(w, x, v) {
            o(typeof w == "number" && w >= 0);
            var S;
            x ? S = (x - x % 26) / 26 : S = 0;
            var D = w % 26
              , C = Math.min((w - D) / 26, this.length)
              , O = 67108863 ^ 67108863 >>> D << D
              , P = v;
            if (S -= C,
            S = Math.max(0, S),
            P) {
                for (var y = 0; y < C; y++)
                    P.words[y] = this.words[y];
                P.length = C
            }
            if (C !== 0)
                if (this.length > C)
                    for (this.length -= C,
                    y = 0; y < this.length; y++)
                        this.words[y] = this.words[y + C];
                else
                    this.words[0] = 0,
                    this.length = 1;
            var A = 0;
            for (y = this.length - 1; y >= 0 && (A !== 0 || y >= S); y--) {
                var E = this.words[y] | 0;
                this.words[y] = A << 26 - D | E >>> D,
                A = E & O
            }
            return P && A !== 0 && (P.words[P.length++] = A),
            this.length === 0 && (this.words[0] = 0,
            this.length = 1),
            this.strip()
        }
        ,
        a.prototype.ishrn = function(w, x, v) {
            return o(this.negative === 0),
            this.iushrn(w, x, v)
        }
        ,
        a.prototype.shln = function(w) {
            return this.clone().ishln(w)
        }
        ,
        a.prototype.ushln = function(w) {
            return this.clone().iushln(w)
        }
        ,
        a.prototype.shrn = function(w) {
            return this.clone().ishrn(w)
        }
        ,
        a.prototype.ushrn = function(w) {
            return this.clone().iushrn(w)
        }
        ,
        a.prototype.testn = function(w) {
            o(typeof w == "number" && w >= 0);
            var x = w % 26
              , v = (w - x) / 26
              , S = 1 << x;
            if (this.length <= v)
                return !1;
            var D = this.words[v];
            return !!(D & S)
        }
        ,
        a.prototype.imaskn = function(w) {
            o(typeof w == "number" && w >= 0);
            var x = w % 26
              , v = (w - x) / 26;
            if (o(this.negative === 0, "imaskn works only with positive numbers"),
            this.length <= v)
                return this;
            if (x !== 0 && v++,
            this.length = Math.min(v, this.length),
            x !== 0) {
                var S = 67108863 ^ 67108863 >>> x << x;
                this.words[this.length - 1] &= S
            }
            return this.strip()
        }
        ,
        a.prototype.maskn = function(w) {
            return this.clone().imaskn(w)
        }
        ,
        a.prototype.iaddn = function(w) {
            return o(typeof w == "number"),
            o(w < 67108864),
            w < 0 ? this.isubn(-w) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < w ? (this.words[0] = w - (this.words[0] | 0),
            this.negative = 0,
            this) : (this.negative = 0,
            this.isubn(w),
            this.negative = 1,
            this) : this._iaddn(w)
        }
        ,
        a.prototype._iaddn = function(w) {
            this.words[0] += w;
            for (var x = 0; x < this.length && this.words[x] >= 67108864; x++)
                this.words[x] -= 67108864,
                x === this.length - 1 ? this.words[x + 1] = 1 : this.words[x + 1]++;
            return this.length = Math.max(this.length, x + 1),
            this
        }
        ,
        a.prototype.isubn = function(w) {
            if (o(typeof w == "number"),
            o(w < 67108864),
            w < 0)
                return this.iaddn(-w);
            if (this.negative !== 0)
                return this.negative = 0,
                this.iaddn(w),
                this.negative = 1,
                this;
            if (this.words[0] -= w,
            this.length === 1 && this.words[0] < 0)
                this.words[0] = -this.words[0],
                this.negative = 1;
            else
                for (var x = 0; x < this.length && this.words[x] < 0; x++)
                    this.words[x] += 67108864,
                    this.words[x + 1] -= 1;
            return this.strip()
        }
        ,
        a.prototype.addn = function(w) {
            return this.clone().iaddn(w)
        }
        ,
        a.prototype.subn = function(w) {
            return this.clone().isubn(w)
        }
        ,
        a.prototype.iabs = function() {
            return this.negative = 0,
            this
        }
        ,
        a.prototype.abs = function() {
            return this.clone().iabs()
        }
        ,
        a.prototype._ishlnsubmul = function(w, x, v) {
            var S = w.length + v, D;
            this._expand(S);
            var C, O = 0;
            for (D = 0; D < w.length; D++) {
                C = (this.words[D + v] | 0) + O;
                var P = (w.words[D] | 0) * x;
                C -= P & 67108863,
                O = (C >> 26) - (P / 67108864 | 0),
                this.words[D + v] = C & 67108863
            }
            for (; D < this.length - v; D++)
                C = (this.words[D + v] | 0) + O,
                O = C >> 26,
                this.words[D + v] = C & 67108863;
            if (O === 0)
                return this.strip();
            for (o(O === -1),
            O = 0,
            D = 0; D < this.length; D++)
                C = -(this.words[D] | 0) + O,
                O = C >> 26,
                this.words[D] = C & 67108863;
            return this.negative = 1,
            this.strip()
        }
        ,
        a.prototype._wordDiv = function(w, x) {
            var v = this.length - w.length
              , S = this.clone()
              , D = w
              , C = D.words[D.length - 1] | 0
              , O = this._countBits(C);
            v = 26 - O,
            v !== 0 && (D = D.ushln(v),
            S.iushln(v),
            C = D.words[D.length - 1] | 0);
            var P = S.length - D.length, y;
            if (x !== "mod") {
                y = new a(null),
                y.length = P + 1,
                y.words = new Array(y.length);
                for (var A = 0; A < y.length; A++)
                    y.words[A] = 0
            }
            var E = S.clone()._ishlnsubmul(D, 1, P);
            E.negative === 0 && (S = E,
            y && (y.words[P] = 1));
            for (var k = P - 1; k >= 0; k--) {
                var H = (S.words[D.length + k] | 0) * 67108864 + (S.words[D.length + k - 1] | 0);
                for (H = Math.min(H / C | 0, 67108863),
                S._ishlnsubmul(D, H, k); S.negative !== 0; )
                    H--,
                    S.negative = 0,
                    S._ishlnsubmul(D, 1, k),
                    S.isZero() || (S.negative ^= 1);
                y && (y.words[k] = H)
            }
            return y && y.strip(),
            S.strip(),
            x !== "div" && v !== 0 && S.iushrn(v),
            {
                div: y || null,
                mod: S
            }
        }
        ,
        a.prototype.divmod = function(w, x, v) {
            if (o(!w.isZero()),
            this.isZero())
                return {
                    div: new a(0),
                    mod: new a(0)
                };
            var S, D, C;
            return this.negative !== 0 && w.negative === 0 ? (C = this.neg().divmod(w, x),
            x !== "mod" && (S = C.div.neg()),
            x !== "div" && (D = C.mod.neg(),
            v && D.negative !== 0 && D.iadd(w)),
            {
                div: S,
                mod: D
            }) : this.negative === 0 && w.negative !== 0 ? (C = this.divmod(w.neg(), x),
            x !== "mod" && (S = C.div.neg()),
            {
                div: S,
                mod: C.mod
            }) : this.negative & w.negative ? (C = this.neg().divmod(w.neg(), x),
            x !== "div" && (D = C.mod.neg(),
            v && D.negative !== 0 && D.isub(w)),
            {
                div: C.div,
                mod: D
            }) : w.length > this.length || this.cmp(w) < 0 ? {
                div: new a(0),
                mod: this
            } : w.length === 1 ? x === "div" ? {
                div: this.divn(w.words[0]),
                mod: null
            } : x === "mod" ? {
                div: null,
                mod: new a(this.modn(w.words[0]))
            } : {
                div: this.divn(w.words[0]),
                mod: new a(this.modn(w.words[0]))
            } : this._wordDiv(w, x)
        }
        ,
        a.prototype.div = function(w) {
            return this.divmod(w, "div", !1).div
        }
        ,
        a.prototype.mod = function(w) {
            return this.divmod(w, "mod", !1).mod
        }
        ,
        a.prototype.umod = function(w) {
            return this.divmod(w, "mod", !0).mod
        }
        ,
        a.prototype.divRound = function(w) {
            var x = this.divmod(w);
            if (x.mod.isZero())
                return x.div;
            var v = x.div.negative !== 0 ? x.mod.isub(w) : x.mod
              , S = w.ushrn(1)
              , D = w.andln(1)
              , C = v.cmp(S);
            return C < 0 || D === 1 && C === 0 ? x.div : x.div.negative !== 0 ? x.div.isubn(1) : x.div.iaddn(1)
        }
        ,
        a.prototype.modn = function(w) {
            o(w <= 67108863);
            for (var x = (1 << 26) % w, v = 0, S = this.length - 1; S >= 0; S--)
                v = (x * v + (this.words[S] | 0)) % w;
            return v
        }
        ,
        a.prototype.idivn = function(w) {
            o(w <= 67108863);
            for (var x = 0, v = this.length - 1; v >= 0; v--) {
                var S = (this.words[v] | 0) + x * 67108864;
                this.words[v] = S / w | 0,
                x = S % w
            }
            return this.strip()
        }
        ,
        a.prototype.divn = function(w) {
            return this.clone().idivn(w)
        }
        ,
        a.prototype.egcd = function(w) {
            o(w.negative === 0),
            o(!w.isZero());
            var x = this
              , v = w.clone();
            x.negative !== 0 ? x = x.umod(w) : x = x.clone();
            for (var S = new a(1), D = new a(0), C = new a(0), O = new a(1), P = 0; x.isEven() && v.isEven(); )
                x.iushrn(1),
                v.iushrn(1),
                ++P;
            for (var y = v.clone(), A = x.clone(); !x.isZero(); ) {
                for (var E = 0, k = 1; !(x.words[0] & k) && E < 26; ++E,
                k <<= 1)
                    ;
                if (E > 0)
                    for (x.iushrn(E); E-- > 0; )
                        (S.isOdd() || D.isOdd()) && (S.iadd(y),
                        D.isub(A)),
                        S.iushrn(1),
                        D.iushrn(1);
                for (var H = 0, J = 1; !(v.words[0] & J) && H < 26; ++H,
                J <<= 1)
                    ;
                if (H > 0)
                    for (v.iushrn(H); H-- > 0; )
                        (C.isOdd() || O.isOdd()) && (C.iadd(y),
                        O.isub(A)),
                        C.iushrn(1),
                        O.iushrn(1);
                x.cmp(v) >= 0 ? (x.isub(v),
                S.isub(C),
                D.isub(O)) : (v.isub(x),
                C.isub(S),
                O.isub(D))
            }
            return {
                a: C,
                b: O,
                gcd: v.iushln(P)
            }
        }
        ,
        a.prototype._invmp = function(w) {
            o(w.negative === 0),
            o(!w.isZero());
            var x = this
              , v = w.clone();
            x.negative !== 0 ? x = x.umod(w) : x = x.clone();
            for (var S = new a(1), D = new a(0), C = v.clone(); x.cmpn(1) > 0 && v.cmpn(1) > 0; ) {
                for (var O = 0, P = 1; !(x.words[0] & P) && O < 26; ++O,
                P <<= 1)
                    ;
                if (O > 0)
                    for (x.iushrn(O); O-- > 0; )
                        S.isOdd() && S.iadd(C),
                        S.iushrn(1);
                for (var y = 0, A = 1; !(v.words[0] & A) && y < 26; ++y,
                A <<= 1)
                    ;
                if (y > 0)
                    for (v.iushrn(y); y-- > 0; )
                        D.isOdd() && D.iadd(C),
                        D.iushrn(1);
                x.cmp(v) >= 0 ? (x.isub(v),
                S.isub(D)) : (v.isub(x),
                D.isub(S))
            }
            var E;
            return x.cmpn(1) === 0 ? E = S : E = D,
            E.cmpn(0) < 0 && E.iadd(w),
            E
        }
        ,
        a.prototype.gcd = function(w) {
            if (this.isZero())
                return w.abs();
            if (w.isZero())
                return this.abs();
            var x = this.clone()
              , v = w.clone();
            x.negative = 0,
            v.negative = 0;
            for (var S = 0; x.isEven() && v.isEven(); S++)
                x.iushrn(1),
                v.iushrn(1);
            do {
                for (; x.isEven(); )
                    x.iushrn(1);
                for (; v.isEven(); )
                    v.iushrn(1);
                var D = x.cmp(v);
                if (D < 0) {
                    var C = x;
                    x = v,
                    v = C
                } else if (D === 0 || v.cmpn(1) === 0)
                    break;
                x.isub(v)
            } while (!0);
            return v.iushln(S)
        }
        ,
        a.prototype.invm = function(w) {
            return this.egcd(w).a.umod(w)
        }
        ,
        a.prototype.isEven = function() {
            return (this.words[0] & 1) === 0
        }
        ,
        a.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1
        }
        ,
        a.prototype.andln = function(w) {
            return this.words[0] & w
        }
        ,
        a.prototype.bincn = function(w) {
            o(typeof w == "number");
            var x = w % 26
              , v = (w - x) / 26
              , S = 1 << x;
            if (this.length <= v)
                return this._expand(v + 1),
                this.words[v] |= S,
                this;
            for (var D = S, C = v; D !== 0 && C < this.length; C++) {
                var O = this.words[C] | 0;
                O += D,
                D = O >>> 26,
                O &= 67108863,
                this.words[C] = O
            }
            return D !== 0 && (this.words[C] = D,
            this.length++),
            this
        }
        ,
        a.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0
        }
        ,
        a.prototype.cmpn = function(w) {
            var x = w < 0;
            if (this.negative !== 0 && !x)
                return -1;
            if (this.negative === 0 && x)
                return 1;
            this.strip();
            var v;
            if (this.length > 1)
                v = 1;
            else {
                x && (w = -w),
                o(w <= 67108863, "Number is too big");
                var S = this.words[0] | 0;
                v = S === w ? 0 : S < w ? -1 : 1
            }
            return this.negative !== 0 ? -v | 0 : v
        }
        ,
        a.prototype.cmp = function(w) {
            if (this.negative !== 0 && w.negative === 0)
                return -1;
            if (this.negative === 0 && w.negative !== 0)
                return 1;
            var x = this.ucmp(w);
            return this.negative !== 0 ? -x | 0 : x
        }
        ,
        a.prototype.ucmp = function(w) {
            if (this.length > w.length)
                return 1;
            if (this.length < w.length)
                return -1;
            for (var x = 0, v = this.length - 1; v >= 0; v--) {
                var S = this.words[v] | 0
                  , D = w.words[v] | 0;
                if (S !== D) {
                    S < D ? x = -1 : S > D && (x = 1);
                    break
                }
            }
            return x
        }
        ,
        a.prototype.gtn = function(w) {
            return this.cmpn(w) === 1
        }
        ,
        a.prototype.gt = function(w) {
            return this.cmp(w) === 1
        }
        ,
        a.prototype.gten = function(w) {
            return this.cmpn(w) >= 0
        }
        ,
        a.prototype.gte = function(w) {
            return this.cmp(w) >= 0
        }
        ,
        a.prototype.ltn = function(w) {
            return this.cmpn(w) === -1
        }
        ,
        a.prototype.lt = function(w) {
            return this.cmp(w) === -1
        }
        ,
        a.prototype.lten = function(w) {
            return this.cmpn(w) <= 0
        }
        ,
        a.prototype.lte = function(w) {
            return this.cmp(w) <= 0
        }
        ,
        a.prototype.eqn = function(w) {
            return this.cmpn(w) === 0
        }
        ,
        a.prototype.eq = function(w) {
            return this.cmp(w) === 0
        }
        ,
        a.red = function(w) {
            return new te(w)
        }
        ,
        a.prototype.toRed = function(w) {
            return o(!this.red, "Already a number in reduction context"),
            o(this.negative === 0, "red works only with positives"),
            w.convertTo(this)._forceRed(w)
        }
        ,
        a.prototype.fromRed = function() {
            return o(this.red, "fromRed works only with numbers in reduction context"),
            this.red.convertFrom(this)
        }
        ,
        a.prototype._forceRed = function(w) {
            return this.red = w,
            this
        }
        ,
        a.prototype.forceRed = function(w) {
            return o(!this.red, "Already a number in reduction context"),
            this._forceRed(w)
        }
        ,
        a.prototype.redAdd = function(w) {
            return o(this.red, "redAdd works only with red numbers"),
            this.red.add(this, w)
        }
        ,
        a.prototype.redIAdd = function(w) {
            return o(this.red, "redIAdd works only with red numbers"),
            this.red.iadd(this, w)
        }
        ,
        a.prototype.redSub = function(w) {
            return o(this.red, "redSub works only with red numbers"),
            this.red.sub(this, w)
        }
        ,
        a.prototype.redISub = function(w) {
            return o(this.red, "redISub works only with red numbers"),
            this.red.isub(this, w)
        }
        ,
        a.prototype.redShl = function(w) {
            return o(this.red, "redShl works only with red numbers"),
            this.red.shl(this, w)
        }
        ,
        a.prototype.redMul = function(w) {
            return o(this.red, "redMul works only with red numbers"),
            this.red._verify2(this, w),
            this.red.mul(this, w)
        }
        ,
        a.prototype.redIMul = function(w) {
            return o(this.red, "redMul works only with red numbers"),
            this.red._verify2(this, w),
            this.red.imul(this, w)
        }
        ,
        a.prototype.redSqr = function() {
            return o(this.red, "redSqr works only with red numbers"),
            this.red._verify1(this),
            this.red.sqr(this)
        }
        ,
        a.prototype.redISqr = function() {
            return o(this.red, "redISqr works only with red numbers"),
            this.red._verify1(this),
            this.red.isqr(this)
        }
        ,
        a.prototype.redSqrt = function() {
            return o(this.red, "redSqrt works only with red numbers"),
            this.red._verify1(this),
            this.red.sqrt(this)
        }
        ,
        a.prototype.redInvm = function() {
            return o(this.red, "redInvm works only with red numbers"),
            this.red._verify1(this),
            this.red.invm(this)
        }
        ,
        a.prototype.redNeg = function() {
            return o(this.red, "redNeg works only with red numbers"),
            this.red._verify1(this),
            this.red.neg(this)
        }
        ,
        a.prototype.redPow = function(w) {
            return o(this.red && !w.red, "redPow(normalNum)"),
            this.red._verify1(this),
            this.red.pow(this, w)
        }
        ;
        var M = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
        };
        function q(V, w) {
            this.name = V,
            this.p = new a(w,16),
            this.n = this.p.bitLength(),
            this.k = new a(1).iushln(this.n).isub(this.p),
            this.tmp = this._tmp()
        }
        q.prototype._tmp = function() {
            var w = new a(null);
            return w.words = new Array(Math.ceil(this.n / 13)),
            w
        }
        ,
        q.prototype.ireduce = function(w) {
            var x = w, v;
            do
                this.split(x, this.tmp),
                x = this.imulK(x),
                x = x.iadd(this.tmp),
                v = x.bitLength();
            while (v > this.n);
            var S = v < this.n ? -1 : x.ucmp(this.p);
            return S === 0 ? (x.words[0] = 0,
            x.length = 1) : S > 0 ? x.isub(this.p) : x.strip !== void 0 ? x.strip() : x._strip(),
            x
        }
        ,
        q.prototype.split = function(w, x) {
            w.iushrn(this.n, 0, x)
        }
        ,
        q.prototype.imulK = function(w) {
            return w.imul(this.k)
        }
        ;
        function Q() {
            q.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
        }
        l(Q, q),
        Q.prototype.split = function(w, x) {
            for (var v = 4194303, S = Math.min(w.length, 9), D = 0; D < S; D++)
                x.words[D] = w.words[D];
            if (x.length = S,
            w.length <= 9) {
                w.words[0] = 0,
                w.length = 1;
                return
            }
            var C = w.words[9];
            for (x.words[x.length++] = C & v,
            D = 10; D < w.length; D++) {
                var O = w.words[D] | 0;
                w.words[D - 10] = (O & v) << 4 | C >>> 22,
                C = O
            }
            C >>>= 22,
            w.words[D - 10] = C,
            C === 0 && w.length > 10 ? w.length -= 10 : w.length -= 9
        }
        ,
        Q.prototype.imulK = function(w) {
            w.words[w.length] = 0,
            w.words[w.length + 1] = 0,
            w.length += 2;
            for (var x = 0, v = 0; v < w.length; v++) {
                var S = w.words[v] | 0;
                x += S * 977,
                w.words[v] = x & 67108863,
                x = S * 64 + (x / 67108864 | 0)
            }
            return w.words[w.length - 1] === 0 && (w.length--,
            w.words[w.length - 1] === 0 && w.length--),
            w
        }
        ;
        function Y() {
            q.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
        }
        l(Y, q);
        function ee() {
            q.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
        }
        l(ee, q);
        function ie() {
            q.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
        }
        l(ie, q),
        ie.prototype.imulK = function(w) {
            for (var x = 0, v = 0; v < w.length; v++) {
                var S = (w.words[v] | 0) * 19 + x
                  , D = S & 67108863;
                S >>>= 26,
                w.words[v] = D,
                x = S
            }
            return x !== 0 && (w.words[w.length++] = x),
            w
        }
        ,
        a._prime = function(w) {
            if (M[w])
                return M[w];
            var x;
            if (w === "k256")
                x = new Q;
            else if (w === "p224")
                x = new Y;
            else if (w === "p192")
                x = new ee;
            else if (w === "p25519")
                x = new ie;
            else
                throw new Error("Unknown prime " + w);
            return M[w] = x,
            x
        }
        ;
        function te(V) {
            if (typeof V == "string") {
                var w = a._prime(V);
                this.m = w.p,
                this.prime = w
            } else
                o(V.gtn(1), "modulus must be greater than 1"),
                this.m = V,
                this.prime = null
        }
        te.prototype._verify1 = function(w) {
            o(w.negative === 0, "red works only with positives"),
            o(w.red, "red works only with red numbers")
        }
        ,
        te.prototype._verify2 = function(w, x) {
            o((w.negative | x.negative) === 0, "red works only with positives"),
            o(w.red && w.red === x.red, "red works only with red numbers")
        }
        ,
        te.prototype.imod = function(w) {
            return this.prime ? this.prime.ireduce(w)._forceRed(this) : w.umod(this.m)._forceRed(this)
        }
        ,
        te.prototype.neg = function(w) {
            return w.isZero() ? w.clone() : this.m.sub(w)._forceRed(this)
        }
        ,
        te.prototype.add = function(w, x) {
            this._verify2(w, x);
            var v = w.add(x);
            return v.cmp(this.m) >= 0 && v.isub(this.m),
            v._forceRed(this)
        }
        ,
        te.prototype.iadd = function(w, x) {
            this._verify2(w, x);
            var v = w.iadd(x);
            return v.cmp(this.m) >= 0 && v.isub(this.m),
            v
        }
        ,
        te.prototype.sub = function(w, x) {
            this._verify2(w, x);
            var v = w.sub(x);
            return v.cmpn(0) < 0 && v.iadd(this.m),
            v._forceRed(this)
        }
        ,
        te.prototype.isub = function(w, x) {
            this._verify2(w, x);
            var v = w.isub(x);
            return v.cmpn(0) < 0 && v.iadd(this.m),
            v
        }
        ,
        te.prototype.shl = function(w, x) {
            return this._verify1(w),
            this.imod(w.ushln(x))
        }
        ,
        te.prototype.imul = function(w, x) {
            return this._verify2(w, x),
            this.imod(w.imul(x))
        }
        ,
        te.prototype.mul = function(w, x) {
            return this._verify2(w, x),
            this.imod(w.mul(x))
        }
        ,
        te.prototype.isqr = function(w) {
            return this.imul(w, w.clone())
        }
        ,
        te.prototype.sqr = function(w) {
            return this.mul(w, w)
        }
        ,
        te.prototype.sqrt = function(w) {
            if (w.isZero())
                return w.clone();
            var x = this.m.andln(3);
            if (o(x % 2 === 1),
            x === 3) {
                var v = this.m.add(new a(1)).iushrn(2);
                return this.pow(w, v)
            }
            for (var S = this.m.subn(1), D = 0; !S.isZero() && S.andln(1) === 0; )
                D++,
                S.iushrn(1);
            o(!S.isZero());
            var C = new a(1).toRed(this)
              , O = C.redNeg()
              , P = this.m.subn(1).iushrn(1)
              , y = this.m.bitLength();
            for (y = new a(2 * y * y).toRed(this); this.pow(y, P).cmp(O) !== 0; )
                y.redIAdd(O);
            for (var A = this.pow(y, S), E = this.pow(w, S.addn(1).iushrn(1)), k = this.pow(w, S), H = D; k.cmp(C) !== 0; ) {
                for (var J = k, j = 0; J.cmp(C) !== 0; j++)
                    J = J.redSqr();
                o(j < H);
                var F = this.pow(A, new a(1).iushln(H - j - 1));
                E = E.redMul(F),
                A = F.redSqr(),
                k = k.redMul(A),
                H = j
            }
            return E
        }
        ,
        te.prototype.invm = function(w) {
            var x = w._invmp(this.m);
            return x.negative !== 0 ? (x.negative = 0,
            this.imod(x).redNeg()) : this.imod(x)
        }
        ,
        te.prototype.pow = function(w, x) {
            if (x.isZero())
                return new a(1).toRed(this);
            if (x.cmpn(1) === 0)
                return w.clone();
            var v = 4
              , S = new Array(1 << v);
            S[0] = new a(1).toRed(this),
            S[1] = w;
            for (var D = 2; D < S.length; D++)
                S[D] = this.mul(S[D - 1], w);
            var C = S[0]
              , O = 0
              , P = 0
              , y = x.bitLength() % 26;
            for (y === 0 && (y = 26),
            D = x.length - 1; D >= 0; D--) {
                for (var A = x.words[D], E = y - 1; E >= 0; E--) {
                    var k = A >> E & 1;
                    if (C !== S[0] && (C = this.sqr(C)),
                    k === 0 && O === 0) {
                        P = 0;
                        continue
                    }
                    O <<= 1,
                    O |= k,
                    P++,
                    !(P !== v && (D !== 0 || E !== 0)) && (C = this.mul(C, S[O]),
                    P = 0,
                    O = 0)
                }
                y = 26
            }
            return C
        }
        ,
        te.prototype.convertTo = function(w) {
            var x = w.umod(this.m);
            return x === w ? x.clone() : x
        }
        ,
        te.prototype.convertFrom = function(w) {
            var x = w.clone();
            return x.red = null,
            x
        }
        ,
        a.mont = function(w) {
            return new ne(w)
        }
        ;
        function ne(V) {
            te.call(this, V),
            this.shift = this.m.bitLength(),
            this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26),
            this.r = new a(1).iushln(this.shift),
            this.r2 = this.imod(this.r.sqr()),
            this.rinv = this.r._invmp(this.m),
            this.minv = this.rinv.mul(this.r).isubn(1).div(this.m),
            this.minv = this.minv.umod(this.r),
            this.minv = this.r.sub(this.minv)
        }
        l(ne, te),
        ne.prototype.convertTo = function(w) {
            return this.imod(w.ushln(this.shift))
        }
        ,
        ne.prototype.convertFrom = function(w) {
            var x = this.imod(w.mul(this.rinv));
            return x.red = null,
            x
        }
        ,
        ne.prototype.imul = function(w, x) {
            if (w.isZero() || x.isZero())
                return w.words[0] = 0,
                w.length = 1,
                w;
            var v = w.imul(x)
              , S = v.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
              , D = v.isub(S).iushrn(this.shift)
              , C = D;
            return D.cmp(this.m) >= 0 ? C = D.isub(this.m) : D.cmpn(0) < 0 && (C = D.iadd(this.m)),
            C._forceRed(this)
        }
        ,
        ne.prototype.mul = function(w, x) {
            if (w.isZero() || x.isZero())
                return new a(0)._forceRed(this);
            var v = w.mul(x)
              , S = v.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
              , D = v.isub(S).iushrn(this.shift)
              , C = D;
            return D.cmp(this.m) >= 0 ? C = D.isub(this.m) : D.cmpn(0) < 0 && (C = D.iadd(this.m)),
            C._forceRed(this)
        }
        ,
        ne.prototype.invm = function(w) {
            var x = this.imod(w._invmp(this.m).mul(this.r2));
            return x._forceRed(this)
        }
    }
    )(e, commonjsGlobal)
}
)(bn$1);
var bnExports$1 = bn$1.exports, brorand = {
    exports: {}
}, hasRequiredBrorand;
function requireBrorand() {
    if (hasRequiredBrorand)
        return brorand.exports;
    hasRequiredBrorand = 1;
    var e;
    brorand.exports = function(l) {
        return e || (e = new n(null)),
        e.generate(l)
    }
    ;
    function n(o) {
        this.rand = o
    }
    if (brorand.exports.Rand = n,
    n.prototype.generate = function(l) {
        return this._rand(l)
    }
    ,
    n.prototype._rand = function(l) {
        if (this.rand.getBytes)
            return this.rand.getBytes(l);
        for (var a = new Uint8Array(l), c = 0; c < a.length; c++)
            a[c] = this.rand.getByte();
        return a
    }
    ,
    typeof self == "object")
        self.crypto && self.crypto.getRandomValues ? n.prototype._rand = function(l) {
            var a = new Uint8Array(l);
            return self.crypto.getRandomValues(a),
            a
        }
        : self.msCrypto && self.msCrypto.getRandomValues ? n.prototype._rand = function(l) {
            var a = new Uint8Array(l);
            return self.msCrypto.getRandomValues(a),
            a
        }
        : typeof window == "object" && (n.prototype._rand = function() {
            throw new Error("Not implemented yet")
        }
        );
    else
        try {
            var i = requireCryptoBrowserify();
            if (typeof i.randomBytes != "function")
                throw new Error("Not supported");
            n.prototype._rand = function(l) {
                return i.randomBytes(l)
            }
        } catch {}
    return brorand.exports
}
var mr, hasRequiredMr;
function requireMr() {
    if (hasRequiredMr)
        return mr;
    hasRequiredMr = 1;
    var e = bnExports$1
      , n = requireBrorand();
    function i(o) {
        this.rand = o || new n.Rand
    }
    return mr = i,
    i.create = function(l) {
        return new i(l)
    }
    ,
    i.prototype._randbelow = function(l) {
        var a = l.bitLength()
          , c = Math.ceil(a / 8);
        do
            var u = new e(this.rand.generate(c));
        while (u.cmp(l) >= 0);
        return u
    }
    ,
    i.prototype._randrange = function(l, a) {
        var c = a.sub(l);
        return l.add(this._randbelow(c))
    }
    ,
    i.prototype.test = function(l, a, c) {
        var u = l.bitLength()
          , h = e.mont(l)
          , m = new e(1).toRed(h);
        a || (a = Math.max(1, u / 48 | 0));
        for (var d = l.subn(1), p = 0; !d.testn(p); p++)
            ;
        for (var b = l.shrn(p), g = d.toRed(h), $ = !0; a > 0; a--) {
            var N = this._randrange(new e(2), d);
            c && c(N);
            var I = N.toRed(h).redPow(b);
            if (!(I.cmp(m) === 0 || I.cmp(g) === 0)) {
                for (var L = 1; L < p; L++) {
                    if (I = I.redSqr(),
                    I.cmp(m) === 0)
                        return !1;
                    if (I.cmp(g) === 0)
                        break
                }
                if (L === p)
                    return !1
            }
        }
        return $
    }
    ,
    i.prototype.getDivisor = function(l, a) {
        var c = l.bitLength()
          , u = e.mont(l)
          , h = new e(1).toRed(u);
        a || (a = Math.max(1, c / 48 | 0));
        for (var m = l.subn(1), d = 0; !m.testn(d); d++)
            ;
        for (var p = l.shrn(d), b = m.toRed(u); a > 0; a--) {
            var g = this._randrange(new e(2), m)
              , $ = l.gcd(g);
            if ($.cmpn(1) !== 0)
                return $;
            var N = g.toRed(u).redPow(p);
            if (!(N.cmp(h) === 0 || N.cmp(b) === 0)) {
                for (var I = 1; I < d; I++) {
                    if (N = N.redSqr(),
                    N.cmp(h) === 0)
                        return N.fromRed().subn(1).gcd(l);
                    if (N.cmp(b) === 0)
                        break
                }
                if (I === d)
                    return N = N.redSqr(),
                    N.fromRed().subn(1).gcd(l)
            }
        }
        return !1
    }
    ,
    mr
}
var generatePrime, hasRequiredGeneratePrime;
function requireGeneratePrime() {
    if (hasRequiredGeneratePrime)
        return generatePrime;
    hasRequiredGeneratePrime = 1;
    var e = browserExports;
    generatePrime = I,
    I.simpleSieve = $,
    I.fermatTest = N;
    var n = bnExports$1
      , i = new n(24)
      , o = requireMr()
      , l = new o
      , a = new n(1)
      , c = new n(2)
      , u = new n(5);
    new n(16),
    new n(8);
    var h = new n(10)
      , m = new n(3);
    new n(7);
    var d = new n(11)
      , p = new n(4);
    new n(12);
    var b = null;
    function g() {
        if (b !== null)
            return b;
        var L = 1048576
          , T = [];
        T[0] = 2;
        for (var M = 1, q = 3; q < L; q += 2) {
            for (var Q = Math.ceil(Math.sqrt(q)), Y = 0; Y < M && T[Y] <= Q && q % T[Y] !== 0; Y++)
                ;
            M !== Y && T[Y] <= Q || (T[M++] = q)
        }
        return b = T,
        T
    }
    function $(L) {
        for (var T = g(), M = 0; M < T.length; M++)
            if (L.modn(T[M]) === 0)
                return L.cmpn(T[M]) === 0;
        return !0
    }
    function N(L) {
        var T = n.mont(L);
        return c.toRed(T).redPow(L.subn(1)).fromRed().cmpn(1) === 0
    }
    function I(L, T) {
        if (L < 16)
            return T === 2 || T === 5 ? new n([140, 123]) : new n([140, 39]);
        T = new n(T);
        for (var M, q; ; ) {
            for (M = new n(e(Math.ceil(L / 8))); M.bitLength() > L; )
                M.ishrn(1);
            if (M.isEven() && M.iadd(a),
            M.testn(1) || M.iadd(c),
            T.cmp(c)) {
                if (!T.cmp(u))
                    for (; M.mod(h).cmp(m); )
                        M.iadd(p)
            } else
                for (; M.mod(i).cmp(d); )
                    M.iadd(p);
            if (q = M.shrn(1),
            $(q) && $(M) && N(q) && N(M) && l.test(q) && l.test(M))
                return M
        }
    }
    return generatePrime
}
const modp1 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
}
  , modp2 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
}
  , modp5 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
}
  , modp14 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
}
  , modp15 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
}
  , modp16 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
}
  , modp17 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
}
  , modp18 = {
    gen: "02",
    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
}
  , require$$1$1 = {
    modp1,
    modp2,
    modp5,
    modp14,
    modp15,
    modp16,
    modp17,
    modp18
};
var dh, hasRequiredDh;
function requireDh() {
    if (hasRequiredDh)
        return dh;
    hasRequiredDh = 1;
    var e = bnExports$1
      , n = requireMr()
      , i = new n
      , o = new e(24)
      , l = new e(11)
      , a = new e(10)
      , c = new e(3)
      , u = new e(7)
      , h = requireGeneratePrime()
      , m = browserExports;
    dh = $;
    function d(I, L) {
        return L = L || "utf8",
        Buffer$G.isBuffer(I) || (I = new Buffer$G(I,L)),
        this._pub = new e(I),
        this
    }
    function p(I, L) {
        return L = L || "utf8",
        Buffer$G.isBuffer(I) || (I = new Buffer$G(I,L)),
        this._priv = new e(I),
        this
    }
    var b = {};
    function g(I, L) {
        var T = L.toString("hex")
          , M = [T, I.toString(16)].join("_");
        if (M in b)
            return b[M];
        var q = 0;
        if (I.isEven() || !h.simpleSieve || !h.fermatTest(I) || !i.test(I))
            return q += 1,
            T === "02" || T === "05" ? q += 8 : q += 4,
            b[M] = q,
            q;
        i.test(I.shrn(1)) || (q += 2);
        var Q;
        switch (T) {
        case "02":
            I.mod(o).cmp(l) && (q += 8);
            break;
        case "05":
            Q = I.mod(a),
            Q.cmp(c) && Q.cmp(u) && (q += 8);
            break;
        default:
            q += 4
        }
        return b[M] = q,
        q
    }
    function $(I, L, T) {
        this.setGenerator(L),
        this.__prime = new e(I),
        this._prime = e.mont(this.__prime),
        this._primeLen = I.length,
        this._pub = void 0,
        this._priv = void 0,
        this._primeCode = void 0,
        T ? (this.setPublicKey = d,
        this.setPrivateKey = p) : this._primeCode = 8
    }
    Object.defineProperty($.prototype, "verifyError", {
        enumerable: !0,
        get: function() {
            return typeof this._primeCode != "number" && (this._primeCode = g(this.__prime, this.__gen)),
            this._primeCode
        }
    }),
    $.prototype.generateKeys = function() {
        return this._priv || (this._priv = new e(m(this._primeLen))),
        this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(),
        this.getPublicKey()
    }
    ,
    $.prototype.computeSecret = function(I) {
        I = new e(I),
        I = I.toRed(this._prime);
        var L = I.redPow(this._priv).fromRed()
          , T = new Buffer$G(L.toArray())
          , M = this.getPrime();
        if (T.length < M.length) {
            var q = new Buffer$G(M.length - T.length);
            q.fill(0),
            T = Buffer$G.concat([q, T])
        }
        return T
    }
    ,
    $.prototype.getPublicKey = function(L) {
        return N(this._pub, L)
    }
    ,
    $.prototype.getPrivateKey = function(L) {
        return N(this._priv, L)
    }
    ,
    $.prototype.getPrime = function(I) {
        return N(this.__prime, I)
    }
    ,
    $.prototype.getGenerator = function(I) {
        return N(this._gen, I)
    }
    ,
    $.prototype.setGenerator = function(I, L) {
        return L = L || "utf8",
        Buffer$G.isBuffer(I) || (I = new Buffer$G(I,L)),
        this.__gen = I,
        this._gen = new e(I),
        this
    }
    ;
    function N(I, L) {
        var T = new Buffer$G(I.toArray());
        return L ? T.toString(L) : T
    }
    return dh
}
var hasRequiredBrowser$2;
function requireBrowser$2() {
    if (hasRequiredBrowser$2)
        return browser$4;
    hasRequiredBrowser$2 = 1;
    var e = requireGeneratePrime()
      , n = require$$1$1
      , i = requireDh();
    function o(c) {
        var u = new Buffer$G(n[c].prime,"hex")
          , h = new Buffer$G(n[c].gen,"hex");
        return new i(u,h)
    }
    var l = {
        binary: !0,
        hex: !0,
        base64: !0
    };
    function a(c, u, h, m) {
        return Buffer$G.isBuffer(u) || l[u] === void 0 ? a(c, "binary", u, h) : (u = u || "binary",
        m = m || "binary",
        h = h || new Buffer$G([2]),
        Buffer$G.isBuffer(h) || (h = new Buffer$G(h,m)),
        typeof c == "number" ? new i(e(c, h),h,!0) : (Buffer$G.isBuffer(c) || (c = new Buffer$G(c,u)),
        new i(c,h,!0)))
    }
    return browser$4.DiffieHellmanGroup = browser$4.createDiffieHellmanGroup = browser$4.getDiffieHellman = o,
    browser$4.createDiffieHellman = browser$4.DiffieHellman = a,
    browser$4
}
var readableBrowser = {
    exports: {}
}
  , processNextickArgs = {
    exports: {}
};
typeof process$1 > "u" || !process$1.version || process$1.version.indexOf("v0.") === 0 || process$1.version.indexOf("v1.") === 0 && process$1.version.indexOf("v1.8.") !== 0 ? processNextickArgs.exports = {
    nextTick
} : processNextickArgs.exports = process$1;
function nextTick(e, n, i, o) {
    if (typeof e != "function")
        throw new TypeError('"callback" argument must be a function');
    var l = arguments.length, a, c;
    switch (l) {
    case 0:
    case 1:
        return process$1.nextTick(e);
    case 2:
        return process$1.nextTick(function() {
            e.call(null, n)
        });
    case 3:
        return process$1.nextTick(function() {
            e.call(null, n, i)
        });
    case 4:
        return process$1.nextTick(function() {
            e.call(null, n, i, o)
        });
    default:
        for (a = new Array(l - 1),
        c = 0; c < a.length; )
            a[c++] = arguments[c];
        return process$1.nextTick(function() {
            e.apply(null, a)
        })
    }
}
var processNextickArgsExports = processNextickArgs.exports
  , toString = {}.toString
  , isarray = Array.isArray || function(e) {
    return toString.call(e) == "[object Array]"
}
  , streamBrowser = eventsExports.EventEmitter
  , safeBuffer$1 = {
    exports: {}
};
(function(e, n) {
    var i = require$$0$2
      , o = i.Buffer;
    function l(c, u) {
        for (var h in c)
            u[h] = c[h]
    }
    o.from && o.alloc && o.allocUnsafe && o.allocUnsafeSlow ? e.exports = i : (l(i, n),
    n.Buffer = a);
    function a(c, u, h) {
        return o(c, u, h)
    }
    l(o, a),
    a.from = function(c, u, h) {
        if (typeof c == "number")
            throw new TypeError("Argument must not be a number");
        return o(c, u, h)
    }
    ,
    a.alloc = function(c, u, h) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        var m = o(c);
        return u !== void 0 ? typeof h == "string" ? m.fill(u, h) : m.fill(u) : m.fill(0),
        m
    }
    ,
    a.allocUnsafe = function(c) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        return o(c)
    }
    ,
    a.allocUnsafeSlow = function(c) {
        if (typeof c != "number")
            throw new TypeError("Argument must be a number");
        return i.SlowBuffer(c)
    }
}
)(safeBuffer$1, safeBuffer$1.exports);
var safeBufferExports = safeBuffer$1.exports
  , util$2 = {};
function isArray(e) {
    return Array.isArray ? Array.isArray(e) : objectToString(e) === "[object Array]"
}
util$2.isArray = isArray;
function isBoolean(e) {
    return typeof e == "boolean"
}
util$2.isBoolean = isBoolean;
function isNull(e) {
    return e === null
}
util$2.isNull = isNull;
function isNullOrUndefined(e) {
    return e == null
}
util$2.isNullOrUndefined = isNullOrUndefined;
function isNumber(e) {
    return typeof e == "number"
}
util$2.isNumber = isNumber;
function isString(e) {
    return typeof e == "string"
}
util$2.isString = isString;
function isSymbol(e) {
    return typeof e == "symbol"
}
util$2.isSymbol = isSymbol;
function isUndefined(e) {
    return e === void 0
}
util$2.isUndefined = isUndefined;
function isRegExp(e) {
    return objectToString(e) === "[object RegExp]"
}
util$2.isRegExp = isRegExp;
function isObject(e) {
    return typeof e == "object" && e !== null
}
util$2.isObject = isObject;
function isDate(e) {
    return objectToString(e) === "[object Date]"
}
util$2.isDate = isDate;
function isError(e) {
    return objectToString(e) === "[object Error]" || e instanceof Error
}
util$2.isError = isError;
function isFunction(e) {
    return typeof e == "function"
}
util$2.isFunction = isFunction;
function isPrimitive$1(e) {
    return e === null || typeof e == "boolean" || typeof e == "number" || typeof e == "string" || typeof e == "symbol" || typeof e > "u"
}
util$2.isPrimitive = isPrimitive$1;
util$2.isBuffer = require$$0$2.Buffer.isBuffer;
function objectToString(e) {
    return Object.prototype.toString.call(e)
}
var BufferList = {
    exports: {}
}, hasRequiredBufferList;
function requireBufferList() {
    return hasRequiredBufferList || (hasRequiredBufferList = 1,
    function(e) {
        function n(a, c) {
            if (!(a instanceof c))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = safeBufferExports.Buffer
          , o = util$3;
        function l(a, c, u) {
            a.copy(c, u)
        }
        e.exports = function() {
            function a() {
                n(this, a),
                this.head = null,
                this.tail = null,
                this.length = 0
            }
            return a.prototype.push = function(u) {
                var h = {
                    data: u,
                    next: null
                };
                this.length > 0 ? this.tail.next = h : this.head = h,
                this.tail = h,
                ++this.length
            }
            ,
            a.prototype.unshift = function(u) {
                var h = {
                    data: u,
                    next: this.head
                };
                this.length === 0 && (this.tail = h),
                this.head = h,
                ++this.length
            }
            ,
            a.prototype.shift = function() {
                if (this.length !== 0) {
                    var u = this.head.data;
                    return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next,
                    --this.length,
                    u
                }
            }
            ,
            a.prototype.clear = function() {
                this.head = this.tail = null,
                this.length = 0
            }
            ,
            a.prototype.join = function(u) {
                if (this.length === 0)
                    return "";
                for (var h = this.head, m = "" + h.data; h = h.next; )
                    m += u + h.data;
                return m
            }
            ,
            a.prototype.concat = function(u) {
                if (this.length === 0)
                    return i.alloc(0);
                for (var h = i.allocUnsafe(u >>> 0), m = this.head, d = 0; m; )
                    l(m.data, h, d),
                    d += m.data.length,
                    m = m.next;
                return h
            }
            ,
            a
        }(),
        o && o.inspect && o.inspect.custom && (e.exports.prototype[o.inspect.custom] = function() {
            var a = o.inspect({
                length: this.length
            });
            return this.constructor.name + " " + a
        }
        )
    }(BufferList)),
    BufferList.exports
}
var pna = processNextickArgsExports;
function destroy(e, n) {
    var i = this
      , o = this._readableState && this._readableState.destroyed
      , l = this._writableState && this._writableState.destroyed;
    return o || l ? (n ? n(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0,
    pna.nextTick(emitErrorNT, this, e)) : pna.nextTick(emitErrorNT, this, e)),
    this) : (this._readableState && (this._readableState.destroyed = !0),
    this._writableState && (this._writableState.destroyed = !0),
    this._destroy(e || null, function(a) {
        !n && a ? i._writableState ? i._writableState.errorEmitted || (i._writableState.errorEmitted = !0,
        pna.nextTick(emitErrorNT, i, a)) : pna.nextTick(emitErrorNT, i, a) : n && n(a)
    }),
    this)
}
function undestroy() {
    this._readableState && (this._readableState.destroyed = !1,
    this._readableState.reading = !1,
    this._readableState.ended = !1,
    this._readableState.endEmitted = !1),
    this._writableState && (this._writableState.destroyed = !1,
    this._writableState.ended = !1,
    this._writableState.ending = !1,
    this._writableState.finalCalled = !1,
    this._writableState.prefinished = !1,
    this._writableState.finished = !1,
    this._writableState.errorEmitted = !1)
}
function emitErrorNT(e, n) {
    e.emit("error", n)
}
var destroy_1 = {
    destroy,
    undestroy
}, _stream_writable, hasRequired_stream_writable;
function require_stream_writable() {
    if (hasRequired_stream_writable)
        return _stream_writable;
    hasRequired_stream_writable = 1;
    var e = processNextickArgsExports;
    _stream_writable = N;
    function n(C) {
        var O = this;
        this.next = null,
        this.entry = null,
        this.finish = function() {
            D(O, C)
        }
    }
    var i = !process$1.browser && ["v0.10", "v0.9."].indexOf(process$1.version.slice(0, 5)) > -1 ? setImmediate : e.nextTick, o;
    N.WritableState = g;
    var l = Object.create(util$2);
    l.inherits = inherits_browserExports;
    var a = {
        deprecate: browser$a
    }
      , c = streamBrowser
      , u = safeBufferExports.Buffer
      , h = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {}
    ;
    function m(C) {
        return u.from(C)
    }
    function d(C) {
        return u.isBuffer(C) || C instanceof h
    }
    var p = destroy_1;
    l.inherits(N, c);
    function b() {}
    function g(C, O) {
        o = o || require_stream_duplex(),
        C = C || {};
        var P = O instanceof o;
        this.objectMode = !!C.objectMode,
        P && (this.objectMode = this.objectMode || !!C.writableObjectMode);
        var y = C.highWaterMark
          , A = C.writableHighWaterMark
          , E = this.objectMode ? 16 : 16 * 1024;
        y || y === 0 ? this.highWaterMark = y : P && (A || A === 0) ? this.highWaterMark = A : this.highWaterMark = E,
        this.highWaterMark = Math.floor(this.highWaterMark),
        this.finalCalled = !1,
        this.needDrain = !1,
        this.ending = !1,
        this.ended = !1,
        this.finished = !1,
        this.destroyed = !1;
        var k = C.decodeStrings === !1;
        this.decodeStrings = !k,
        this.defaultEncoding = C.defaultEncoding || "utf8",
        this.length = 0,
        this.writing = !1,
        this.corked = 0,
        this.sync = !0,
        this.bufferProcessing = !1,
        this.onwrite = function(H) {
            ee(O, H)
        }
        ,
        this.writecb = null,
        this.writelen = 0,
        this.bufferedRequest = null,
        this.lastBufferedRequest = null,
        this.pendingcb = 0,
        this.prefinished = !1,
        this.errorEmitted = !1,
        this.bufferedRequestCount = 0,
        this.corkedRequestsFree = new n(this)
    }
    g.prototype.getBuffer = function() {
        for (var O = this.bufferedRequest, P = []; O; )
            P.push(O),
            O = O.next;
        return P
    }
    ,
    function() {
        try {
            Object.defineProperty(g.prototype, "buffer", {
                get: a.deprecate(function() {
                    return this.getBuffer()
                }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
            })
        } catch {}
    }();
    var $;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? ($ = Function.prototype[Symbol.hasInstance],
    Object.defineProperty(N, Symbol.hasInstance, {
        value: function(C) {
            return $.call(this, C) ? !0 : this !== N ? !1 : C && C._writableState instanceof g
        }
    })) : $ = function(C) {
        return C instanceof this
    }
    ;
    function N(C) {
        if (o = o || require_stream_duplex(),
        !$.call(N, this) && !(this instanceof o))
            return new N(C);
        this._writableState = new g(C,this),
        this.writable = !0,
        C && (typeof C.write == "function" && (this._write = C.write),
        typeof C.writev == "function" && (this._writev = C.writev),
        typeof C.destroy == "function" && (this._destroy = C.destroy),
        typeof C.final == "function" && (this._final = C.final)),
        c.call(this)
    }
    N.prototype.pipe = function() {
        this.emit("error", new Error("Cannot pipe, not readable"))
    }
    ;
    function I(C, O) {
        var P = new Error("write after end");
        C.emit("error", P),
        e.nextTick(O, P)
    }
    function L(C, O, P, y) {
        var A = !0
          , E = !1;
        return P === null ? E = new TypeError("May not write null values to stream") : typeof P != "string" && P !== void 0 && !O.objectMode && (E = new TypeError("Invalid non-string/buffer chunk")),
        E && (C.emit("error", E),
        e.nextTick(y, E),
        A = !1),
        A
    }
    N.prototype.write = function(C, O, P) {
        var y = this._writableState
          , A = !1
          , E = !y.objectMode && d(C);
        return E && !u.isBuffer(C) && (C = m(C)),
        typeof O == "function" && (P = O,
        O = null),
        E ? O = "buffer" : O || (O = y.defaultEncoding),
        typeof P != "function" && (P = b),
        y.ended ? I(this, P) : (E || L(this, y, C, P)) && (y.pendingcb++,
        A = M(this, y, E, C, O, P)),
        A
    }
    ,
    N.prototype.cork = function() {
        var C = this._writableState;
        C.corked++
    }
    ,
    N.prototype.uncork = function() {
        var C = this._writableState;
        C.corked && (C.corked--,
        !C.writing && !C.corked && !C.bufferProcessing && C.bufferedRequest && ne(this, C))
    }
    ,
    N.prototype.setDefaultEncoding = function(O) {
        if (typeof O == "string" && (O = O.toLowerCase()),
        !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((O + "").toLowerCase()) > -1))
            throw new TypeError("Unknown encoding: " + O);
        return this._writableState.defaultEncoding = O,
        this
    }
    ;
    function T(C, O, P) {
        return !C.objectMode && C.decodeStrings !== !1 && typeof O == "string" && (O = u.from(O, P)),
        O
    }
    Object.defineProperty(N.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._writableState.highWaterMark
        }
    });
    function M(C, O, P, y, A, E) {
        if (!P) {
            var k = T(O, y, A);
            y !== k && (P = !0,
            A = "buffer",
            y = k)
        }
        var H = O.objectMode ? 1 : y.length;
        O.length += H;
        var J = O.length < O.highWaterMark;
        if (J || (O.needDrain = !0),
        O.writing || O.corked) {
            var j = O.lastBufferedRequest;
            O.lastBufferedRequest = {
                chunk: y,
                encoding: A,
                isBuf: P,
                callback: E,
                next: null
            },
            j ? j.next = O.lastBufferedRequest : O.bufferedRequest = O.lastBufferedRequest,
            O.bufferedRequestCount += 1
        } else
            q(C, O, !1, H, y, A, E);
        return J
    }
    function q(C, O, P, y, A, E, k) {
        O.writelen = y,
        O.writecb = k,
        O.writing = !0,
        O.sync = !0,
        P ? C._writev(A, O.onwrite) : C._write(A, E, O.onwrite),
        O.sync = !1
    }
    function Q(C, O, P, y, A) {
        --O.pendingcb,
        P ? (e.nextTick(A, y),
        e.nextTick(v, C, O),
        C._writableState.errorEmitted = !0,
        C.emit("error", y)) : (A(y),
        C._writableState.errorEmitted = !0,
        C.emit("error", y),
        v(C, O))
    }
    function Y(C) {
        C.writing = !1,
        C.writecb = null,
        C.length -= C.writelen,
        C.writelen = 0
    }
    function ee(C, O) {
        var P = C._writableState
          , y = P.sync
          , A = P.writecb;
        if (Y(P),
        O)
            Q(C, P, y, O, A);
        else {
            var E = V(P);
            !E && !P.corked && !P.bufferProcessing && P.bufferedRequest && ne(C, P),
            y ? i(ie, C, P, E, A) : ie(C, P, E, A)
        }
    }
    function ie(C, O, P, y) {
        P || te(C, O),
        O.pendingcb--,
        y(),
        v(C, O)
    }
    function te(C, O) {
        O.length === 0 && O.needDrain && (O.needDrain = !1,
        C.emit("drain"))
    }
    function ne(C, O) {
        O.bufferProcessing = !0;
        var P = O.bufferedRequest;
        if (C._writev && P && P.next) {
            var y = O.bufferedRequestCount
              , A = new Array(y)
              , E = O.corkedRequestsFree;
            E.entry = P;
            for (var k = 0, H = !0; P; )
                A[k] = P,
                P.isBuf || (H = !1),
                P = P.next,
                k += 1;
            A.allBuffers = H,
            q(C, O, !0, O.length, A, "", E.finish),
            O.pendingcb++,
            O.lastBufferedRequest = null,
            E.next ? (O.corkedRequestsFree = E.next,
            E.next = null) : O.corkedRequestsFree = new n(O),
            O.bufferedRequestCount = 0
        } else {
            for (; P; ) {
                var J = P.chunk
                  , j = P.encoding
                  , F = P.callback
                  , U = O.objectMode ? 1 : J.length;
                if (q(C, O, !1, U, J, j, F),
                P = P.next,
                O.bufferedRequestCount--,
                O.writing)
                    break
            }
            P === null && (O.lastBufferedRequest = null)
        }
        O.bufferedRequest = P,
        O.bufferProcessing = !1
    }
    N.prototype._write = function(C, O, P) {
        P(new Error("_write() is not implemented"))
    }
    ,
    N.prototype._writev = null,
    N.prototype.end = function(C, O, P) {
        var y = this._writableState;
        typeof C == "function" ? (P = C,
        C = null,
        O = null) : typeof O == "function" && (P = O,
        O = null),
        C != null && this.write(C, O),
        y.corked && (y.corked = 1,
        this.uncork()),
        y.ending || S(this, y, P)
    }
    ;
    function V(C) {
        return C.ending && C.length === 0 && C.bufferedRequest === null && !C.finished && !C.writing
    }
    function w(C, O) {
        C._final(function(P) {
            O.pendingcb--,
            P && C.emit("error", P),
            O.prefinished = !0,
            C.emit("prefinish"),
            v(C, O)
        })
    }
    function x(C, O) {
        !O.prefinished && !O.finalCalled && (typeof C._final == "function" ? (O.pendingcb++,
        O.finalCalled = !0,
        e.nextTick(w, C, O)) : (O.prefinished = !0,
        C.emit("prefinish")))
    }
    function v(C, O) {
        var P = V(O);
        return P && (x(C, O),
        O.pendingcb === 0 && (O.finished = !0,
        C.emit("finish"))),
        P
    }
    function S(C, O, P) {
        O.ending = !0,
        v(C, O),
        P && (O.finished ? e.nextTick(P) : C.once("finish", P)),
        O.ended = !0,
        C.writable = !1
    }
    function D(C, O, P) {
        var y = C.entry;
        for (C.entry = null; y; ) {
            var A = y.callback;
            O.pendingcb--,
            A(P),
            y = y.next
        }
        O.corkedRequestsFree.next = C
    }
    return Object.defineProperty(N.prototype, "destroyed", {
        get: function() {
            return this._writableState === void 0 ? !1 : this._writableState.destroyed
        },
        set: function(C) {
            this._writableState && (this._writableState.destroyed = C)
        }
    }),
    N.prototype.destroy = p.destroy,
    N.prototype._undestroy = p.undestroy,
    N.prototype._destroy = function(C, O) {
        this.end(),
        O(C)
    }
    ,
    _stream_writable
}
var _stream_duplex, hasRequired_stream_duplex;
function require_stream_duplex() {
    if (hasRequired_stream_duplex)
        return _stream_duplex;
    hasRequired_stream_duplex = 1;
    var e = processNextickArgsExports
      , n = Object.keys || function(p) {
        var b = [];
        for (var g in p)
            b.push(g);
        return b
    }
    ;
    _stream_duplex = h;
    var i = Object.create(util$2);
    i.inherits = inherits_browserExports;
    var o = require_stream_readable()
      , l = require_stream_writable();
    i.inherits(h, o);
    for (var a = n(l.prototype), c = 0; c < a.length; c++) {
        var u = a[c];
        h.prototype[u] || (h.prototype[u] = l.prototype[u])
    }
    function h(p) {
        if (!(this instanceof h))
            return new h(p);
        o.call(this, p),
        l.call(this, p),
        p && p.readable === !1 && (this.readable = !1),
        p && p.writable === !1 && (this.writable = !1),
        this.allowHalfOpen = !0,
        p && p.allowHalfOpen === !1 && (this.allowHalfOpen = !1),
        this.once("end", m)
    }
    Object.defineProperty(h.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._writableState.highWaterMark
        }
    });
    function m() {
        this.allowHalfOpen || this._writableState.ended || e.nextTick(d, this)
    }
    function d(p) {
        p.end()
    }
    return Object.defineProperty(h.prototype, "destroyed", {
        get: function() {
            return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed
        },
        set: function(p) {
            this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = p,
            this._writableState.destroyed = p)
        }
    }),
    h.prototype._destroy = function(p, b) {
        this.push(null),
        this.end(),
        e.nextTick(b, p)
    }
    ,
    _stream_duplex
}
var _stream_readable, hasRequired_stream_readable;
function require_stream_readable() {
    if (hasRequired_stream_readable)
        return _stream_readable;
    hasRequired_stream_readable = 1;
    var e = processNextickArgsExports;
    _stream_readable = T;
    var n = isarray, i;
    T.ReadableState = L,
    eventsExports.EventEmitter;
    var o = function(F, U) {
        return F.listeners(U).length
    }
      , l = streamBrowser
      , a = safeBufferExports.Buffer
      , c = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {}
    ;
    function u(F) {
        return a.from(F)
    }
    function h(F) {
        return a.isBuffer(F) || F instanceof c
    }
    var m = Object.create(util$2);
    m.inherits = inherits_browserExports;
    var d = util$3
      , p = void 0;
    d && d.debuglog ? p = d.debuglog("stream") : p = function() {}
    ;
    var b = requireBufferList(), g = destroy_1, $;
    m.inherits(T, l);
    var N = ["error", "close", "destroy", "pause", "resume"];
    function I(F, U, re) {
        if (typeof F.prependListener == "function")
            return F.prependListener(U, re);
        !F._events || !F._events[U] ? F.on(U, re) : n(F._events[U]) ? F._events[U].unshift(re) : F._events[U] = [re, F._events[U]]
    }
    function L(F, U) {
        i = i || require_stream_duplex(),
        F = F || {};
        var re = U instanceof i;
        this.objectMode = !!F.objectMode,
        re && (this.objectMode = this.objectMode || !!F.readableObjectMode);
        var oe = F.highWaterMark
          , X = F.readableHighWaterMark
          , Z = this.objectMode ? 16 : 16 * 1024;
        oe || oe === 0 ? this.highWaterMark = oe : re && (X || X === 0) ? this.highWaterMark = X : this.highWaterMark = Z,
        this.highWaterMark = Math.floor(this.highWaterMark),
        this.buffer = new b,
        this.length = 0,
        this.pipes = null,
        this.pipesCount = 0,
        this.flowing = null,
        this.ended = !1,
        this.endEmitted = !1,
        this.reading = !1,
        this.sync = !0,
        this.needReadable = !1,
        this.emittedReadable = !1,
        this.readableListening = !1,
        this.resumeScheduled = !1,
        this.destroyed = !1,
        this.defaultEncoding = F.defaultEncoding || "utf8",
        this.awaitDrain = 0,
        this.readingMore = !1,
        this.decoder = null,
        this.encoding = null,
        F.encoding && ($ || ($ = string_decoder.StringDecoder),
        this.decoder = new $(F.encoding),
        this.encoding = F.encoding)
    }
    function T(F) {
        if (i = i || require_stream_duplex(),
        !(this instanceof T))
            return new T(F);
        this._readableState = new L(F,this),
        this.readable = !0,
        F && (typeof F.read == "function" && (this._read = F.read),
        typeof F.destroy == "function" && (this._destroy = F.destroy)),
        l.call(this)
    }
    Object.defineProperty(T.prototype, "destroyed", {
        get: function() {
            return this._readableState === void 0 ? !1 : this._readableState.destroyed
        },
        set: function(F) {
            this._readableState && (this._readableState.destroyed = F)
        }
    }),
    T.prototype.destroy = g.destroy,
    T.prototype._undestroy = g.undestroy,
    T.prototype._destroy = function(F, U) {
        this.push(null),
        U(F)
    }
    ,
    T.prototype.push = function(F, U) {
        var re = this._readableState, oe;
        return re.objectMode ? oe = !0 : typeof F == "string" && (U = U || re.defaultEncoding,
        U !== re.encoding && (F = a.from(F, U),
        U = ""),
        oe = !0),
        M(this, F, U, !1, oe)
    }
    ,
    T.prototype.unshift = function(F) {
        return M(this, F, null, !0, !1)
    }
    ;
    function M(F, U, re, oe, X) {
        var Z = F._readableState;
        if (U === null)
            Z.reading = !1,
            ne(F, Z);
        else {
            var se;
            X || (se = Q(Z, U)),
            se ? F.emit("error", se) : Z.objectMode || U && U.length > 0 ? (typeof U != "string" && !Z.objectMode && Object.getPrototypeOf(U) !== a.prototype && (U = u(U)),
            oe ? Z.endEmitted ? F.emit("error", new Error("stream.unshift() after end event")) : q(F, Z, U, !0) : Z.ended ? F.emit("error", new Error("stream.push() after EOF")) : (Z.reading = !1,
            Z.decoder && !re ? (U = Z.decoder.write(U),
            Z.objectMode || U.length !== 0 ? q(F, Z, U, !1) : x(F, Z)) : q(F, Z, U, !1))) : oe || (Z.reading = !1)
        }
        return Y(Z)
    }
    function q(F, U, re, oe) {
        U.flowing && U.length === 0 && !U.sync ? (F.emit("data", re),
        F.read(0)) : (U.length += U.objectMode ? 1 : re.length,
        oe ? U.buffer.unshift(re) : U.buffer.push(re),
        U.needReadable && V(F)),
        x(F, U)
    }
    function Q(F, U) {
        var re;
        return !h(U) && typeof U != "string" && U !== void 0 && !F.objectMode && (re = new TypeError("Invalid non-string/buffer chunk")),
        re
    }
    function Y(F) {
        return !F.ended && (F.needReadable || F.length < F.highWaterMark || F.length === 0)
    }
    T.prototype.isPaused = function() {
        return this._readableState.flowing === !1
    }
    ,
    T.prototype.setEncoding = function(F) {
        return $ || ($ = string_decoder.StringDecoder),
        this._readableState.decoder = new $(F),
        this._readableState.encoding = F,
        this
    }
    ;
    var ee = 8388608;
    function ie(F) {
        return F >= ee ? F = ee : (F--,
        F |= F >>> 1,
        F |= F >>> 2,
        F |= F >>> 4,
        F |= F >>> 8,
        F |= F >>> 16,
        F++),
        F
    }
    function te(F, U) {
        return F <= 0 || U.length === 0 && U.ended ? 0 : U.objectMode ? 1 : F !== F ? U.flowing && U.length ? U.buffer.head.data.length : U.length : (F > U.highWaterMark && (U.highWaterMark = ie(F)),
        F <= U.length ? F : U.ended ? U.length : (U.needReadable = !0,
        0))
    }
    T.prototype.read = function(F) {
        p("read", F),
        F = parseInt(F, 10);
        var U = this._readableState
          , re = F;
        if (F !== 0 && (U.emittedReadable = !1),
        F === 0 && U.needReadable && (U.length >= U.highWaterMark || U.ended))
            return p("read: emitReadable", U.length, U.ended),
            U.length === 0 && U.ended ? H(this) : V(this),
            null;
        if (F = te(F, U),
        F === 0 && U.ended)
            return U.length === 0 && H(this),
            null;
        var oe = U.needReadable;
        p("need readable", oe),
        (U.length === 0 || U.length - F < U.highWaterMark) && (oe = !0,
        p("length less than watermark", oe)),
        U.ended || U.reading ? (oe = !1,
        p("reading or ended", oe)) : oe && (p("do read"),
        U.reading = !0,
        U.sync = !0,
        U.length === 0 && (U.needReadable = !0),
        this._read(U.highWaterMark),
        U.sync = !1,
        U.reading || (F = te(re, U)));
        var X;
        return F > 0 ? X = y(F, U) : X = null,
        X === null ? (U.needReadable = !0,
        F = 0) : U.length -= F,
        U.length === 0 && (U.ended || (U.needReadable = !0),
        re !== F && U.ended && H(this)),
        X !== null && this.emit("data", X),
        X
    }
    ;
    function ne(F, U) {
        if (!U.ended) {
            if (U.decoder) {
                var re = U.decoder.end();
                re && re.length && (U.buffer.push(re),
                U.length += U.objectMode ? 1 : re.length)
            }
            U.ended = !0,
            V(F)
        }
    }
    function V(F) {
        var U = F._readableState;
        U.needReadable = !1,
        U.emittedReadable || (p("emitReadable", U.flowing),
        U.emittedReadable = !0,
        U.sync ? e.nextTick(w, F) : w(F))
    }
    function w(F) {
        p("emit readable"),
        F.emit("readable"),
        P(F)
    }
    function x(F, U) {
        U.readingMore || (U.readingMore = !0,
        e.nextTick(v, F, U))
    }
    function v(F, U) {
        for (var re = U.length; !U.reading && !U.flowing && !U.ended && U.length < U.highWaterMark && (p("maybeReadMore read 0"),
        F.read(0),
        re !== U.length); )
            re = U.length;
        U.readingMore = !1
    }
    T.prototype._read = function(F) {
        this.emit("error", new Error("_read() is not implemented"))
    }
    ,
    T.prototype.pipe = function(F, U) {
        var re = this
          , oe = this._readableState;
        switch (oe.pipesCount) {
        case 0:
            oe.pipes = F;
            break;
        case 1:
            oe.pipes = [oe.pipes, F];
            break;
        default:
            oe.pipes.push(F);
            break
        }
        oe.pipesCount += 1,
        p("pipe count=%d opts=%j", oe.pipesCount, U);
        var X = (!U || U.end !== !1) && F !== process$1.stdout && F !== process$1.stderr
          , Z = X ? ue : Ee;
        oe.endEmitted ? e.nextTick(Z) : re.once("end", Z),
        F.on("unpipe", se);
        function se(ae, le) {
            p("onunpipe"),
            ae === re && le && le.hasUnpiped === !1 && (le.hasUnpiped = !0,
            ge())
        }
        function ue() {
            p("onend"),
            F.end()
        }
        var he = S(re);
        F.on("drain", he);
        var ve = !1;
        function ge() {
            p("cleanup"),
            F.removeListener("close", be),
            F.removeListener("finish", Ae),
            F.removeListener("drain", he),
            F.removeListener("error", De),
            F.removeListener("unpipe", se),
            re.removeListener("end", ue),
            re.removeListener("end", Ee),
            re.removeListener("data", ce),
            ve = !0,
            oe.awaitDrain && (!F._writableState || F._writableState.needDrain) && he()
        }
        var _e = !1;
        re.on("data", ce);
        function ce(ae) {
            p("ondata"),
            _e = !1;
            var le = F.write(ae);
            le === !1 && !_e && ((oe.pipesCount === 1 && oe.pipes === F || oe.pipesCount > 1 && j(oe.pipes, F) !== -1) && !ve && (p("false write response, pause", oe.awaitDrain),
            oe.awaitDrain++,
            _e = !0),
            re.pause())
        }
        function De(ae) {
            p("onerror", ae),
            Ee(),
            F.removeListener("error", De),
            o(F, "error") === 0 && F.emit("error", ae)
        }
        I(F, "error", De);
        function be() {
            F.removeListener("finish", Ae),
            Ee()
        }
        F.once("close", be);
        function Ae() {
            p("onfinish"),
            F.removeListener("close", be),
            Ee()
        }
        F.once("finish", Ae);
        function Ee() {
            p("unpipe"),
            re.unpipe(F)
        }
        return F.emit("pipe", re),
        oe.flowing || (p("pipe resume"),
        re.resume()),
        F
    }
    ;
    function S(F) {
        return function() {
            var U = F._readableState;
            p("pipeOnDrain", U.awaitDrain),
            U.awaitDrain && U.awaitDrain--,
            U.awaitDrain === 0 && o(F, "data") && (U.flowing = !0,
            P(F))
        }
    }
    T.prototype.unpipe = function(F) {
        var U = this._readableState
          , re = {
            hasUnpiped: !1
        };
        if (U.pipesCount === 0)
            return this;
        if (U.pipesCount === 1)
            return F && F !== U.pipes ? this : (F || (F = U.pipes),
            U.pipes = null,
            U.pipesCount = 0,
            U.flowing = !1,
            F && F.emit("unpipe", this, re),
            this);
        if (!F) {
            var oe = U.pipes
              , X = U.pipesCount;
            U.pipes = null,
            U.pipesCount = 0,
            U.flowing = !1;
            for (var Z = 0; Z < X; Z++)
                oe[Z].emit("unpipe", this, {
                    hasUnpiped: !1
                });
            return this
        }
        var se = j(U.pipes, F);
        return se === -1 ? this : (U.pipes.splice(se, 1),
        U.pipesCount -= 1,
        U.pipesCount === 1 && (U.pipes = U.pipes[0]),
        F.emit("unpipe", this, re),
        this)
    }
    ,
    T.prototype.on = function(F, U) {
        var re = l.prototype.on.call(this, F, U);
        if (F === "data")
            this._readableState.flowing !== !1 && this.resume();
        else if (F === "readable") {
            var oe = this._readableState;
            !oe.endEmitted && !oe.readableListening && (oe.readableListening = oe.needReadable = !0,
            oe.emittedReadable = !1,
            oe.reading ? oe.length && V(this) : e.nextTick(D, this))
        }
        return re
    }
    ,
    T.prototype.addListener = T.prototype.on;
    function D(F) {
        p("readable nexttick read 0"),
        F.read(0)
    }
    T.prototype.resume = function() {
        var F = this._readableState;
        return F.flowing || (p("resume"),
        F.flowing = !0,
        C(this, F)),
        this
    }
    ;
    function C(F, U) {
        U.resumeScheduled || (U.resumeScheduled = !0,
        e.nextTick(O, F, U))
    }
    function O(F, U) {
        U.reading || (p("resume read 0"),
        F.read(0)),
        U.resumeScheduled = !1,
        U.awaitDrain = 0,
        F.emit("resume"),
        P(F),
        U.flowing && !U.reading && F.read(0)
    }
    T.prototype.pause = function() {
        return p("call pause flowing=%j", this._readableState.flowing),
        this._readableState.flowing !== !1 && (p("pause"),
        this._readableState.flowing = !1,
        this.emit("pause")),
        this
    }
    ;
    function P(F) {
        var U = F._readableState;
        for (p("flow", U.flowing); U.flowing && F.read() !== null; )
            ;
    }
    T.prototype.wrap = function(F) {
        var U = this
          , re = this._readableState
          , oe = !1;
        F.on("end", function() {
            if (p("wrapped end"),
            re.decoder && !re.ended) {
                var se = re.decoder.end();
                se && se.length && U.push(se)
            }
            U.push(null)
        }),
        F.on("data", function(se) {
            if (p("wrapped data"),
            re.decoder && (se = re.decoder.write(se)),
            !(re.objectMode && se == null) && !(!re.objectMode && (!se || !se.length))) {
                var ue = U.push(se);
                ue || (oe = !0,
                F.pause())
            }
        });
        for (var X in F)
            this[X] === void 0 && typeof F[X] == "function" && (this[X] = function(se) {
                return function() {
                    return F[se].apply(F, arguments)
                }
            }(X));
        for (var Z = 0; Z < N.length; Z++)
            F.on(N[Z], this.emit.bind(this, N[Z]));
        return this._read = function(se) {
            p("wrapped _read", se),
            oe && (oe = !1,
            F.resume())
        }
        ,
        this
    }
    ,
    Object.defineProperty(T.prototype, "readableHighWaterMark", {
        enumerable: !1,
        get: function() {
            return this._readableState.highWaterMark
        }
    }),
    T._fromList = y;
    function y(F, U) {
        if (U.length === 0)
            return null;
        var re;
        return U.objectMode ? re = U.buffer.shift() : !F || F >= U.length ? (U.decoder ? re = U.buffer.join("") : U.buffer.length === 1 ? re = U.buffer.head.data : re = U.buffer.concat(U.length),
        U.buffer.clear()) : re = A(F, U.buffer, U.decoder),
        re
    }
    function A(F, U, re) {
        var oe;
        return F < U.head.data.length ? (oe = U.head.data.slice(0, F),
        U.head.data = U.head.data.slice(F)) : F === U.head.data.length ? oe = U.shift() : oe = re ? E(F, U) : k(F, U),
        oe
    }
    function E(F, U) {
        var re = U.head
          , oe = 1
          , X = re.data;
        for (F -= X.length; re = re.next; ) {
            var Z = re.data
              , se = F > Z.length ? Z.length : F;
            if (se === Z.length ? X += Z : X += Z.slice(0, F),
            F -= se,
            F === 0) {
                se === Z.length ? (++oe,
                re.next ? U.head = re.next : U.head = U.tail = null) : (U.head = re,
                re.data = Z.slice(se));
                break
            }
            ++oe
        }
        return U.length -= oe,
        X
    }
    function k(F, U) {
        var re = a.allocUnsafe(F)
          , oe = U.head
          , X = 1;
        for (oe.data.copy(re),
        F -= oe.data.length; oe = oe.next; ) {
            var Z = oe.data
              , se = F > Z.length ? Z.length : F;
            if (Z.copy(re, re.length - F, 0, se),
            F -= se,
            F === 0) {
                se === Z.length ? (++X,
                oe.next ? U.head = oe.next : U.head = U.tail = null) : (U.head = oe,
                oe.data = Z.slice(se));
                break
            }
            ++X
        }
        return U.length -= X,
        re
    }
    function H(F) {
        var U = F._readableState;
        if (U.length > 0)
            throw new Error('"endReadable()" called on non-empty stream');
        U.endEmitted || (U.ended = !0,
        e.nextTick(J, U, F))
    }
    function J(F, U) {
        !F.endEmitted && F.length === 0 && (F.endEmitted = !0,
        U.readable = !1,
        U.emit("end"))
    }
    function j(F, U) {
        for (var re = 0, oe = F.length; re < oe; re++)
            if (F[re] === U)
                return re;
        return -1
    }
    return _stream_readable
}
var _stream_transform = Transform$1
  , Duplex = require_stream_duplex()
  , util$1 = Object.create(util$2);
util$1.inherits = inherits_browserExports;
util$1.inherits(Transform$1, Duplex);
function afterTransform(e, n) {
    var i = this._transformState;
    i.transforming = !1;
    var o = i.writecb;
    if (!o)
        return this.emit("error", new Error("write callback called multiple times"));
    i.writechunk = null,
    i.writecb = null,
    n != null && this.push(n),
    o(e);
    var l = this._readableState;
    l.reading = !1,
    (l.needReadable || l.length < l.highWaterMark) && this._read(l.highWaterMark)
}
function Transform$1(e) {
    if (!(this instanceof Transform$1))
        return new Transform$1(e);
    Duplex.call(this, e),
    this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: !1,
        transforming: !1,
        writecb: null,
        writechunk: null,
        writeencoding: null
    },
    this._readableState.needReadable = !0,
    this._readableState.sync = !1,
    e && (typeof e.transform == "function" && (this._transform = e.transform),
    typeof e.flush == "function" && (this._flush = e.flush)),
    this.on("prefinish", prefinish)
}
function prefinish() {
    var e = this;
    typeof this._flush == "function" ? this._flush(function(n, i) {
        done(e, n, i)
    }) : done(this, null, null)
}
Transform$1.prototype.push = function(e, n) {
    return this._transformState.needTransform = !1,
    Duplex.prototype.push.call(this, e, n)
}
;
Transform$1.prototype._transform = function(e, n, i) {
    throw new Error("_transform() is not implemented")
}
;
Transform$1.prototype._write = function(e, n, i) {
    var o = this._transformState;
    if (o.writecb = i,
    o.writechunk = e,
    o.writeencoding = n,
    !o.transforming) {
        var l = this._readableState;
        (o.needTransform || l.needReadable || l.length < l.highWaterMark) && this._read(l.highWaterMark)
    }
}
;
Transform$1.prototype._read = function(e) {
    var n = this._transformState;
    n.writechunk !== null && n.writecb && !n.transforming ? (n.transforming = !0,
    this._transform(n.writechunk, n.writeencoding, n.afterTransform)) : n.needTransform = !0
}
;
Transform$1.prototype._destroy = function(e, n) {
    var i = this;
    Duplex.prototype._destroy.call(this, e, function(o) {
        n(o),
        i.emit("close")
    })
}
;
function done(e, n, i) {
    if (n)
        return e.emit("error", n);
    if (i != null && e.push(i),
    e._writableState.length)
        throw new Error("Calling transform done when ws.length != 0");
    if (e._transformState.transforming)
        throw new Error("Calling transform done when still transforming");
    return e.push(null)
}
var _stream_passthrough = PassThrough
  , Transform = _stream_transform
  , util = Object.create(util$2);
util.inherits = inherits_browserExports;
util.inherits(PassThrough, Transform);
function PassThrough(e) {
    if (!(this instanceof PassThrough))
        return new PassThrough(e);
    Transform.call(this, e)
}
PassThrough.prototype._transform = function(e, n, i) {
    i(null, e)
}
;
(function(e, n) {
    n = e.exports = require_stream_readable(),
    n.Stream = n,
    n.Readable = n,
    n.Writable = require_stream_writable(),
    n.Duplex = require_stream_duplex(),
    n.Transform = _stream_transform,
    n.PassThrough = _stream_passthrough
}
)(readableBrowser, readableBrowser.exports);
var readableBrowserExports = readableBrowser.exports
  , sign = {
    exports: {}
}
  , bn = {
    exports: {}
};
bn.exports;
(function(e) {
    (function(n, i) {
        function o(x, v) {
            if (!x)
                throw new Error(v || "Assertion failed")
        }
        function l(x, v) {
            x.super_ = v;
            var S = function() {};
            S.prototype = v.prototype,
            x.prototype = new S,
            x.prototype.constructor = x
        }
        function a(x, v, S) {
            if (a.isBN(x))
                return x;
            this.negative = 0,
            this.words = null,
            this.length = 0,
            this.red = null,
            x !== null && ((v === "le" || v === "be") && (S = v,
            v = 10),
            this._init(x || 0, v || 10, S || "be"))
        }
        typeof n == "object" ? n.exports = a : i.BN = a,
        a.BN = a,
        a.wordSize = 26;
        var c;
        try {
            typeof window < "u" && typeof window.Buffer < "u" ? c = window.Buffer : c = require$$0$2.Buffer
        } catch {}
        a.isBN = function(v) {
            return v instanceof a ? !0 : v !== null && typeof v == "object" && v.constructor.wordSize === a.wordSize && Array.isArray(v.words)
        }
        ,
        a.max = function(v, S) {
            return v.cmp(S) > 0 ? v : S
        }
        ,
        a.min = function(v, S) {
            return v.cmp(S) < 0 ? v : S
        }
        ,
        a.prototype._init = function(v, S, D) {
            if (typeof v == "number")
                return this._initNumber(v, S, D);
            if (typeof v == "object")
                return this._initArray(v, S, D);
            S === "hex" && (S = 16),
            o(S === (S | 0) && S >= 2 && S <= 36),
            v = v.toString().replace(/\s+/g, "");
            var C = 0;
            v[0] === "-" && (C++,
            this.negative = 1),
            C < v.length && (S === 16 ? this._parseHex(v, C, D) : (this._parseBase(v, S, C),
            D === "le" && this._initArray(this.toArray(), S, D)))
        }
        ,
        a.prototype._initNumber = function(v, S, D) {
            v < 0 && (this.negative = 1,
            v = -v),
            v < 67108864 ? (this.words = [v & 67108863],
            this.length = 1) : v < 4503599627370496 ? (this.words = [v & 67108863, v / 67108864 & 67108863],
            this.length = 2) : (o(v < 9007199254740992),
            this.words = [v & 67108863, v / 67108864 & 67108863, 1],
            this.length = 3),
            D === "le" && this._initArray(this.toArray(), S, D)
        }
        ,
        a.prototype._initArray = function(v, S, D) {
            if (o(typeof v.length == "number"),
            v.length <= 0)
                return this.words = [0],
                this.length = 1,
                this;
            this.length = Math.ceil(v.length / 3),
            this.words = new Array(this.length);
            for (var C = 0; C < this.length; C++)
                this.words[C] = 0;
            var O, P, y = 0;
            if (D === "be")
                for (C = v.length - 1,
                O = 0; C >= 0; C -= 3)
                    P = v[C] | v[C - 1] << 8 | v[C - 2] << 16,
                    this.words[O] |= P << y & 67108863,
                    this.words[O + 1] = P >>> 26 - y & 67108863,
                    y += 24,
                    y >= 26 && (y -= 26,
                    O++);
            else if (D === "le")
                for (C = 0,
                O = 0; C < v.length; C += 3)
                    P = v[C] | v[C + 1] << 8 | v[C + 2] << 16,
                    this.words[O] |= P << y & 67108863,
                    this.words[O + 1] = P >>> 26 - y & 67108863,
                    y += 24,
                    y >= 26 && (y -= 26,
                    O++);
            return this._strip()
        }
        ;
        function u(x, v) {
            var S = x.charCodeAt(v);
            if (S >= 48 && S <= 57)
                return S - 48;
            if (S >= 65 && S <= 70)
                return S - 55;
            if (S >= 97 && S <= 102)
                return S - 87;
            o(!1, "Invalid character in " + x)
        }
        function h(x, v, S) {
            var D = u(x, S);
            return S - 1 >= v && (D |= u(x, S - 1) << 4),
            D
        }
        a.prototype._parseHex = function(v, S, D) {
            this.length = Math.ceil((v.length - S) / 6),
            this.words = new Array(this.length);
            for (var C = 0; C < this.length; C++)
                this.words[C] = 0;
            var O = 0, P = 0, y;
            if (D === "be")
                for (C = v.length - 1; C >= S; C -= 2)
                    y = h(v, S, C) << O,
                    this.words[P] |= y & 67108863,
                    O >= 18 ? (O -= 18,
                    P += 1,
                    this.words[P] |= y >>> 26) : O += 8;
            else {
                var A = v.length - S;
                for (C = A % 2 === 0 ? S + 1 : S; C < v.length; C += 2)
                    y = h(v, S, C) << O,
                    this.words[P] |= y & 67108863,
                    O >= 18 ? (O -= 18,
                    P += 1,
                    this.words[P] |= y >>> 26) : O += 8
            }
            this._strip()
        }
        ;
        function m(x, v, S, D) {
            for (var C = 0, O = 0, P = Math.min(x.length, S), y = v; y < P; y++) {
                var A = x.charCodeAt(y) - 48;
                C *= D,
                A >= 49 ? O = A - 49 + 10 : A >= 17 ? O = A - 17 + 10 : O = A,
                o(A >= 0 && O < D, "Invalid character"),
                C += O
            }
            return C
        }
        a.prototype._parseBase = function(v, S, D) {
            this.words = [0],
            this.length = 1;
            for (var C = 0, O = 1; O <= 67108863; O *= S)
                C++;
            C--,
            O = O / S | 0;
            for (var P = v.length - D, y = P % C, A = Math.min(P, P - y) + D, E = 0, k = D; k < A; k += C)
                E = m(v, k, k + C, S),
                this.imuln(O),
                this.words[0] + E < 67108864 ? this.words[0] += E : this._iaddn(E);
            if (y !== 0) {
                var H = 1;
                for (E = m(v, k, v.length, S),
                k = 0; k < y; k++)
                    H *= S;
                this.imuln(H),
                this.words[0] + E < 67108864 ? this.words[0] += E : this._iaddn(E)
            }
            this._strip()
        }
        ,
        a.prototype.copy = function(v) {
            v.words = new Array(this.length);
            for (var S = 0; S < this.length; S++)
                v.words[S] = this.words[S];
            v.length = this.length,
            v.negative = this.negative,
            v.red = this.red
        }
        ;
        function d(x, v) {
            x.words = v.words,
            x.length = v.length,
            x.negative = v.negative,
            x.red = v.red
        }
        if (a.prototype._move = function(v) {
            d(v, this)
        }
        ,
        a.prototype.clone = function() {
            var v = new a(null);
            return this.copy(v),
            v
        }
        ,
        a.prototype._expand = function(v) {
            for (; this.length < v; )
                this.words[this.length++] = 0;
            return this
        }
        ,
        a.prototype._strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; )
                this.length--;
            return this._normSign()
        }
        ,
        a.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0),
            this
        }
        ,
        typeof Symbol < "u" && typeof Symbol.for == "function")
            try {
                a.prototype[Symbol.for("nodejs.util.inspect.custom")] = p
            } catch {
                a.prototype.inspect = p
            }
        else
            a.prototype.inspect = p;
        function p() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
        }
        var b = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]
          , g = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
          , $ = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        a.prototype.toString = function(v, S) {
            v = v || 10,
            S = S | 0 || 1;
            var D;
            if (v === 16 || v === "hex") {
                D = "";
                for (var C = 0, O = 0, P = 0; P < this.length; P++) {
                    var y = this.words[P]
                      , A = ((y << C | O) & 16777215).toString(16);
                    O = y >>> 24 - C & 16777215,
                    C += 2,
                    C >= 26 && (C -= 26,
                    P--),
                    O !== 0 || P !== this.length - 1 ? D = b[6 - A.length] + A + D : D = A + D
                }
                for (O !== 0 && (D = O.toString(16) + D); D.length % S !== 0; )
                    D = "0" + D;
                return this.negative !== 0 && (D = "-" + D),
                D
            }
            if (v === (v | 0) && v >= 2 && v <= 36) {
                var E = g[v]
                  , k = $[v];
                D = "";
                var H = this.clone();
                for (H.negative = 0; !H.isZero(); ) {
                    var J = H.modrn(k).toString(v);
                    H = H.idivn(k),
                    H.isZero() ? D = J + D : D = b[E - J.length] + J + D
                }
                for (this.isZero() && (D = "0" + D); D.length % S !== 0; )
                    D = "0" + D;
                return this.negative !== 0 && (D = "-" + D),
                D
            }
            o(!1, "Base should be between 2 and 36")
        }
        ,
        a.prototype.toNumber = function() {
            var v = this.words[0];
            return this.length === 2 ? v += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? v += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && o(!1, "Number can only safely store up to 53 bits"),
            this.negative !== 0 ? -v : v
        }
        ,
        a.prototype.toJSON = function() {
            return this.toString(16, 2)
        }
        ,
        c && (a.prototype.toBuffer = function(v, S) {
            return this.toArrayLike(c, v, S)
        }
        ),
        a.prototype.toArray = function(v, S) {
            return this.toArrayLike(Array, v, S)
        }
        ;
        var N = function(v, S) {
            return v.allocUnsafe ? v.allocUnsafe(S) : new v(S)
        };
        a.prototype.toArrayLike = function(v, S, D) {
            this._strip();
            var C = this.byteLength()
              , O = D || Math.max(1, C);
            o(C <= O, "byte array longer than desired length"),
            o(O > 0, "Requested array length <= 0");
            var P = N(v, O)
              , y = S === "le" ? "LE" : "BE";
            return this["_toArrayLike" + y](P, C),
            P
        }
        ,
        a.prototype._toArrayLikeLE = function(v, S) {
            for (var D = 0, C = 0, O = 0, P = 0; O < this.length; O++) {
                var y = this.words[O] << P | C;
                v[D++] = y & 255,
                D < v.length && (v[D++] = y >> 8 & 255),
                D < v.length && (v[D++] = y >> 16 & 255),
                P === 6 ? (D < v.length && (v[D++] = y >> 24 & 255),
                C = 0,
                P = 0) : (C = y >>> 24,
                P += 2)
            }
            if (D < v.length)
                for (v[D++] = C; D < v.length; )
                    v[D++] = 0
        }
        ,
        a.prototype._toArrayLikeBE = function(v, S) {
            for (var D = v.length - 1, C = 0, O = 0, P = 0; O < this.length; O++) {
                var y = this.words[O] << P | C;
                v[D--] = y & 255,
                D >= 0 && (v[D--] = y >> 8 & 255),
                D >= 0 && (v[D--] = y >> 16 & 255),
                P === 6 ? (D >= 0 && (v[D--] = y >> 24 & 255),
                C = 0,
                P = 0) : (C = y >>> 24,
                P += 2)
            }
            if (D >= 0)
                for (v[D--] = C; D >= 0; )
                    v[D--] = 0
        }
        ,
        Math.clz32 ? a.prototype._countBits = function(v) {
            return 32 - Math.clz32(v)
        }
        : a.prototype._countBits = function(v) {
            var S = v
              , D = 0;
            return S >= 4096 && (D += 13,
            S >>>= 13),
            S >= 64 && (D += 7,
            S >>>= 7),
            S >= 8 && (D += 4,
            S >>>= 4),
            S >= 2 && (D += 2,
            S >>>= 2),
            D + S
        }
        ,
        a.prototype._zeroBits = function(v) {
            if (v === 0)
                return 26;
            var S = v
              , D = 0;
            return S & 8191 || (D += 13,
            S >>>= 13),
            S & 127 || (D += 7,
            S >>>= 7),
            S & 15 || (D += 4,
            S >>>= 4),
            S & 3 || (D += 2,
            S >>>= 2),
            S & 1 || D++,
            D
        }
        ,
        a.prototype.bitLength = function() {
            var v = this.words[this.length - 1]
              , S = this._countBits(v);
            return (this.length - 1) * 26 + S
        }
        ;
        function I(x) {
            for (var v = new Array(x.bitLength()), S = 0; S < v.length; S++) {
                var D = S / 26 | 0
                  , C = S % 26;
                v[S] = x.words[D] >>> C & 1
            }
            return v
        }
        a.prototype.zeroBits = function() {
            if (this.isZero())
                return 0;
            for (var v = 0, S = 0; S < this.length; S++) {
                var D = this._zeroBits(this.words[S]);
                if (v += D,
                D !== 26)
                    break
            }
            return v
        }
        ,
        a.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8)
        }
        ,
        a.prototype.toTwos = function(v) {
            return this.negative !== 0 ? this.abs().inotn(v).iaddn(1) : this.clone()
        }
        ,
        a.prototype.fromTwos = function(v) {
            return this.testn(v - 1) ? this.notn(v).iaddn(1).ineg() : this.clone()
        }
        ,
        a.prototype.isNeg = function() {
            return this.negative !== 0
        }
        ,
        a.prototype.neg = function() {
            return this.clone().ineg()
        }
        ,
        a.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1),
            this
        }
        ,
        a.prototype.iuor = function(v) {
            for (; this.length < v.length; )
                this.words[this.length++] = 0;
            for (var S = 0; S < v.length; S++)
                this.words[S] = this.words[S] | v.words[S];
            return this._strip()
        }
        ,
        a.prototype.ior = function(v) {
            return o((this.negative | v.negative) === 0),
            this.iuor(v)
        }
        ,
        a.prototype.or = function(v) {
            return this.length > v.length ? this.clone().ior(v) : v.clone().ior(this)
        }
        ,
        a.prototype.uor = function(v) {
            return this.length > v.length ? this.clone().iuor(v) : v.clone().iuor(this)
        }
        ,
        a.prototype.iuand = function(v) {
            var S;
            this.length > v.length ? S = v : S = this;
            for (var D = 0; D < S.length; D++)
                this.words[D] = this.words[D] & v.words[D];
            return this.length = S.length,
            this._strip()
        }
        ,
        a.prototype.iand = function(v) {
            return o((this.negative | v.negative) === 0),
            this.iuand(v)
        }
        ,
        a.prototype.and = function(v) {
            return this.length > v.length ? this.clone().iand(v) : v.clone().iand(this)
        }
        ,
        a.prototype.uand = function(v) {
            return this.length > v.length ? this.clone().iuand(v) : v.clone().iuand(this)
        }
        ,
        a.prototype.iuxor = function(v) {
            var S, D;
            this.length > v.length ? (S = this,
            D = v) : (S = v,
            D = this);
            for (var C = 0; C < D.length; C++)
                this.words[C] = S.words[C] ^ D.words[C];
            if (this !== S)
                for (; C < S.length; C++)
                    this.words[C] = S.words[C];
            return this.length = S.length,
            this._strip()
        }
        ,
        a.prototype.ixor = function(v) {
            return o((this.negative | v.negative) === 0),
            this.iuxor(v)
        }
        ,
        a.prototype.xor = function(v) {
            return this.length > v.length ? this.clone().ixor(v) : v.clone().ixor(this)
        }
        ,
        a.prototype.uxor = function(v) {
            return this.length > v.length ? this.clone().iuxor(v) : v.clone().iuxor(this)
        }
        ,
        a.prototype.inotn = function(v) {
            o(typeof v == "number" && v >= 0);
            var S = Math.ceil(v / 26) | 0
              , D = v % 26;
            this._expand(S),
            D > 0 && S--;
            for (var C = 0; C < S; C++)
                this.words[C] = ~this.words[C] & 67108863;
            return D > 0 && (this.words[C] = ~this.words[C] & 67108863 >> 26 - D),
            this._strip()
        }
        ,
        a.prototype.notn = function(v) {
            return this.clone().inotn(v)
        }
        ,
        a.prototype.setn = function(v, S) {
            o(typeof v == "number" && v >= 0);
            var D = v / 26 | 0
              , C = v % 26;
            return this._expand(D + 1),
            S ? this.words[D] = this.words[D] | 1 << C : this.words[D] = this.words[D] & ~(1 << C),
            this._strip()
        }
        ,
        a.prototype.iadd = function(v) {
            var S;
            if (this.negative !== 0 && v.negative === 0)
                return this.negative = 0,
                S = this.isub(v),
                this.negative ^= 1,
                this._normSign();
            if (this.negative === 0 && v.negative !== 0)
                return v.negative = 0,
                S = this.isub(v),
                v.negative = 1,
                S._normSign();
            var D, C;
            this.length > v.length ? (D = this,
            C = v) : (D = v,
            C = this);
            for (var O = 0, P = 0; P < C.length; P++)
                S = (D.words[P] | 0) + (C.words[P] | 0) + O,
                this.words[P] = S & 67108863,
                O = S >>> 26;
            for (; O !== 0 && P < D.length; P++)
                S = (D.words[P] | 0) + O,
                this.words[P] = S & 67108863,
                O = S >>> 26;
            if (this.length = D.length,
            O !== 0)
                this.words[this.length] = O,
                this.length++;
            else if (D !== this)
                for (; P < D.length; P++)
                    this.words[P] = D.words[P];
            return this
        }
        ,
        a.prototype.add = function(v) {
            var S;
            return v.negative !== 0 && this.negative === 0 ? (v.negative = 0,
            S = this.sub(v),
            v.negative ^= 1,
            S) : v.negative === 0 && this.negative !== 0 ? (this.negative = 0,
            S = v.sub(this),
            this.negative = 1,
            S) : this.length > v.length ? this.clone().iadd(v) : v.clone().iadd(this)
        }
        ,
        a.prototype.isub = function(v) {
            if (v.negative !== 0) {
                v.negative = 0;
                var S = this.iadd(v);
                return v.negative = 1,
                S._normSign()
            } else if (this.negative !== 0)
                return this.negative = 0,
                this.iadd(v),
                this.negative = 1,
                this._normSign();
            var D = this.cmp(v);
            if (D === 0)
                return this.negative = 0,
                this.length = 1,
                this.words[0] = 0,
                this;
            var C, O;
            D > 0 ? (C = this,
            O = v) : (C = v,
            O = this);
            for (var P = 0, y = 0; y < O.length; y++)
                S = (C.words[y] | 0) - (O.words[y] | 0) + P,
                P = S >> 26,
                this.words[y] = S & 67108863;
            for (; P !== 0 && y < C.length; y++)
                S = (C.words[y] | 0) + P,
                P = S >> 26,
                this.words[y] = S & 67108863;
            if (P === 0 && y < C.length && C !== this)
                for (; y < C.length; y++)
                    this.words[y] = C.words[y];
            return this.length = Math.max(this.length, y),
            C !== this && (this.negative = 1),
            this._strip()
        }
        ,
        a.prototype.sub = function(v) {
            return this.clone().isub(v)
        }
        ;
        function L(x, v, S) {
            S.negative = v.negative ^ x.negative;
            var D = x.length + v.length | 0;
            S.length = D,
            D = D - 1 | 0;
            var C = x.words[0] | 0
              , O = v.words[0] | 0
              , P = C * O
              , y = P & 67108863
              , A = P / 67108864 | 0;
            S.words[0] = y;
            for (var E = 1; E < D; E++) {
                for (var k = A >>> 26, H = A & 67108863, J = Math.min(E, v.length - 1), j = Math.max(0, E - x.length + 1); j <= J; j++) {
                    var F = E - j | 0;
                    C = x.words[F] | 0,
                    O = v.words[j] | 0,
                    P = C * O + H,
                    k += P / 67108864 | 0,
                    H = P & 67108863
                }
                S.words[E] = H | 0,
                A = k | 0
            }
            return A !== 0 ? S.words[E] = A | 0 : S.length--,
            S._strip()
        }
        var T = function(v, S, D) {
            var C = v.words, O = S.words, P = D.words, y = 0, A, E, k, H = C[0] | 0, J = H & 8191, j = H >>> 13, F = C[1] | 0, U = F & 8191, re = F >>> 13, oe = C[2] | 0, X = oe & 8191, Z = oe >>> 13, se = C[3] | 0, ue = se & 8191, he = se >>> 13, ve = C[4] | 0, ge = ve & 8191, _e = ve >>> 13, ce = C[5] | 0, De = ce & 8191, be = ce >>> 13, Ae = C[6] | 0, Ee = Ae & 8191, ae = Ae >>> 13, le = C[7] | 0, fe = le & 8191, de = le >>> 13, me = C[8] | 0, ze = me & 8191, pe = me >>> 13, xe = C[9] | 0, Se = xe & 8191, we = xe >>> 13, ke = O[0] | 0, Le = ke & 8191, Be = ke >>> 13, Ue = O[1] | 0, Fe = Ue & 8191, Te = Ue >>> 13, He = O[2] | 0, We = He & 8191, $e = He >>> 13, Ve = O[3] | 0, Ke = Ve & 8191, Me = Ve >>> 13, Ge = O[4] | 0, Ye = Ge & 8191, Ie = Ge >>> 13, je = O[5] | 0, Ze = je & 8191, Pe = je >>> 13, Oe = O[6] | 0, qe = Oe & 8191, Ce = Oe >>> 13, Xe = O[7] | 0, er = Xe & 8191, Re = Xe >>> 13, tr = O[8] | 0, nr = tr & 8191, Ne = tr >>> 13, ir = O[9] | 0, Je = ir & 8191, Qe = ir >>> 13;
            D.negative = v.negative ^ S.negative,
            D.length = 19,
            A = Math.imul(J, Le),
            E = Math.imul(J, Be),
            E = E + Math.imul(j, Le) | 0,
            k = Math.imul(j, Be);
            var ar = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (ar >>> 26) | 0,
            ar &= 67108863,
            A = Math.imul(U, Le),
            E = Math.imul(U, Be),
            E = E + Math.imul(re, Le) | 0,
            k = Math.imul(re, Be),
            A = A + Math.imul(J, Fe) | 0,
            E = E + Math.imul(J, Te) | 0,
            E = E + Math.imul(j, Fe) | 0,
            k = k + Math.imul(j, Te) | 0;
            var lr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (lr >>> 26) | 0,
            lr &= 67108863,
            A = Math.imul(X, Le),
            E = Math.imul(X, Be),
            E = E + Math.imul(Z, Le) | 0,
            k = Math.imul(Z, Be),
            A = A + Math.imul(U, Fe) | 0,
            E = E + Math.imul(U, Te) | 0,
            E = E + Math.imul(re, Fe) | 0,
            k = k + Math.imul(re, Te) | 0,
            A = A + Math.imul(J, We) | 0,
            E = E + Math.imul(J, $e) | 0,
            E = E + Math.imul(j, We) | 0,
            k = k + Math.imul(j, $e) | 0;
            var cr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (cr >>> 26) | 0,
            cr &= 67108863,
            A = Math.imul(ue, Le),
            E = Math.imul(ue, Be),
            E = E + Math.imul(he, Le) | 0,
            k = Math.imul(he, Be),
            A = A + Math.imul(X, Fe) | 0,
            E = E + Math.imul(X, Te) | 0,
            E = E + Math.imul(Z, Fe) | 0,
            k = k + Math.imul(Z, Te) | 0,
            A = A + Math.imul(U, We) | 0,
            E = E + Math.imul(U, $e) | 0,
            E = E + Math.imul(re, We) | 0,
            k = k + Math.imul(re, $e) | 0,
            A = A + Math.imul(J, Ke) | 0,
            E = E + Math.imul(J, Me) | 0,
            E = E + Math.imul(j, Ke) | 0,
            k = k + Math.imul(j, Me) | 0;
            var ur = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (ur >>> 26) | 0,
            ur &= 67108863,
            A = Math.imul(ge, Le),
            E = Math.imul(ge, Be),
            E = E + Math.imul(_e, Le) | 0,
            k = Math.imul(_e, Be),
            A = A + Math.imul(ue, Fe) | 0,
            E = E + Math.imul(ue, Te) | 0,
            E = E + Math.imul(he, Fe) | 0,
            k = k + Math.imul(he, Te) | 0,
            A = A + Math.imul(X, We) | 0,
            E = E + Math.imul(X, $e) | 0,
            E = E + Math.imul(Z, We) | 0,
            k = k + Math.imul(Z, $e) | 0,
            A = A + Math.imul(U, Ke) | 0,
            E = E + Math.imul(U, Me) | 0,
            E = E + Math.imul(re, Ke) | 0,
            k = k + Math.imul(re, Me) | 0,
            A = A + Math.imul(J, Ye) | 0,
            E = E + Math.imul(J, Ie) | 0,
            E = E + Math.imul(j, Ye) | 0,
            k = k + Math.imul(j, Ie) | 0;
            var fr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (fr >>> 26) | 0,
            fr &= 67108863,
            A = Math.imul(De, Le),
            E = Math.imul(De, Be),
            E = E + Math.imul(be, Le) | 0,
            k = Math.imul(be, Be),
            A = A + Math.imul(ge, Fe) | 0,
            E = E + Math.imul(ge, Te) | 0,
            E = E + Math.imul(_e, Fe) | 0,
            k = k + Math.imul(_e, Te) | 0,
            A = A + Math.imul(ue, We) | 0,
            E = E + Math.imul(ue, $e) | 0,
            E = E + Math.imul(he, We) | 0,
            k = k + Math.imul(he, $e) | 0,
            A = A + Math.imul(X, Ke) | 0,
            E = E + Math.imul(X, Me) | 0,
            E = E + Math.imul(Z, Ke) | 0,
            k = k + Math.imul(Z, Me) | 0,
            A = A + Math.imul(U, Ye) | 0,
            E = E + Math.imul(U, Ie) | 0,
            E = E + Math.imul(re, Ye) | 0,
            k = k + Math.imul(re, Ie) | 0,
            A = A + Math.imul(J, Ze) | 0,
            E = E + Math.imul(J, Pe) | 0,
            E = E + Math.imul(j, Ze) | 0,
            k = k + Math.imul(j, Pe) | 0;
            var dr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (dr >>> 26) | 0,
            dr &= 67108863,
            A = Math.imul(Ee, Le),
            E = Math.imul(Ee, Be),
            E = E + Math.imul(ae, Le) | 0,
            k = Math.imul(ae, Be),
            A = A + Math.imul(De, Fe) | 0,
            E = E + Math.imul(De, Te) | 0,
            E = E + Math.imul(be, Fe) | 0,
            k = k + Math.imul(be, Te) | 0,
            A = A + Math.imul(ge, We) | 0,
            E = E + Math.imul(ge, $e) | 0,
            E = E + Math.imul(_e, We) | 0,
            k = k + Math.imul(_e, $e) | 0,
            A = A + Math.imul(ue, Ke) | 0,
            E = E + Math.imul(ue, Me) | 0,
            E = E + Math.imul(he, Ke) | 0,
            k = k + Math.imul(he, Me) | 0,
            A = A + Math.imul(X, Ye) | 0,
            E = E + Math.imul(X, Ie) | 0,
            E = E + Math.imul(Z, Ye) | 0,
            k = k + Math.imul(Z, Ie) | 0,
            A = A + Math.imul(U, Ze) | 0,
            E = E + Math.imul(U, Pe) | 0,
            E = E + Math.imul(re, Ze) | 0,
            k = k + Math.imul(re, Pe) | 0,
            A = A + Math.imul(J, qe) | 0,
            E = E + Math.imul(J, Ce) | 0,
            E = E + Math.imul(j, qe) | 0,
            k = k + Math.imul(j, Ce) | 0;
            var pr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (pr >>> 26) | 0,
            pr &= 67108863,
            A = Math.imul(fe, Le),
            E = Math.imul(fe, Be),
            E = E + Math.imul(de, Le) | 0,
            k = Math.imul(de, Be),
            A = A + Math.imul(Ee, Fe) | 0,
            E = E + Math.imul(Ee, Te) | 0,
            E = E + Math.imul(ae, Fe) | 0,
            k = k + Math.imul(ae, Te) | 0,
            A = A + Math.imul(De, We) | 0,
            E = E + Math.imul(De, $e) | 0,
            E = E + Math.imul(be, We) | 0,
            k = k + Math.imul(be, $e) | 0,
            A = A + Math.imul(ge, Ke) | 0,
            E = E + Math.imul(ge, Me) | 0,
            E = E + Math.imul(_e, Ke) | 0,
            k = k + Math.imul(_e, Me) | 0,
            A = A + Math.imul(ue, Ye) | 0,
            E = E + Math.imul(ue, Ie) | 0,
            E = E + Math.imul(he, Ye) | 0,
            k = k + Math.imul(he, Ie) | 0,
            A = A + Math.imul(X, Ze) | 0,
            E = E + Math.imul(X, Pe) | 0,
            E = E + Math.imul(Z, Ze) | 0,
            k = k + Math.imul(Z, Pe) | 0,
            A = A + Math.imul(U, qe) | 0,
            E = E + Math.imul(U, Ce) | 0,
            E = E + Math.imul(re, qe) | 0,
            k = k + Math.imul(re, Ce) | 0,
            A = A + Math.imul(J, er) | 0,
            E = E + Math.imul(J, Re) | 0,
            E = E + Math.imul(j, er) | 0,
            k = k + Math.imul(j, Re) | 0;
            var vr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (vr >>> 26) | 0,
            vr &= 67108863,
            A = Math.imul(ze, Le),
            E = Math.imul(ze, Be),
            E = E + Math.imul(pe, Le) | 0,
            k = Math.imul(pe, Be),
            A = A + Math.imul(fe, Fe) | 0,
            E = E + Math.imul(fe, Te) | 0,
            E = E + Math.imul(de, Fe) | 0,
            k = k + Math.imul(de, Te) | 0,
            A = A + Math.imul(Ee, We) | 0,
            E = E + Math.imul(Ee, $e) | 0,
            E = E + Math.imul(ae, We) | 0,
            k = k + Math.imul(ae, $e) | 0,
            A = A + Math.imul(De, Ke) | 0,
            E = E + Math.imul(De, Me) | 0,
            E = E + Math.imul(be, Ke) | 0,
            k = k + Math.imul(be, Me) | 0,
            A = A + Math.imul(ge, Ye) | 0,
            E = E + Math.imul(ge, Ie) | 0,
            E = E + Math.imul(_e, Ye) | 0,
            k = k + Math.imul(_e, Ie) | 0,
            A = A + Math.imul(ue, Ze) | 0,
            E = E + Math.imul(ue, Pe) | 0,
            E = E + Math.imul(he, Ze) | 0,
            k = k + Math.imul(he, Pe) | 0,
            A = A + Math.imul(X, qe) | 0,
            E = E + Math.imul(X, Ce) | 0,
            E = E + Math.imul(Z, qe) | 0,
            k = k + Math.imul(Z, Ce) | 0,
            A = A + Math.imul(U, er) | 0,
            E = E + Math.imul(U, Re) | 0,
            E = E + Math.imul(re, er) | 0,
            k = k + Math.imul(re, Re) | 0,
            A = A + Math.imul(J, nr) | 0,
            E = E + Math.imul(J, Ne) | 0,
            E = E + Math.imul(j, nr) | 0,
            k = k + Math.imul(j, Ne) | 0;
            var _r = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (_r >>> 26) | 0,
            _r &= 67108863,
            A = Math.imul(Se, Le),
            E = Math.imul(Se, Be),
            E = E + Math.imul(we, Le) | 0,
            k = Math.imul(we, Be),
            A = A + Math.imul(ze, Fe) | 0,
            E = E + Math.imul(ze, Te) | 0,
            E = E + Math.imul(pe, Fe) | 0,
            k = k + Math.imul(pe, Te) | 0,
            A = A + Math.imul(fe, We) | 0,
            E = E + Math.imul(fe, $e) | 0,
            E = E + Math.imul(de, We) | 0,
            k = k + Math.imul(de, $e) | 0,
            A = A + Math.imul(Ee, Ke) | 0,
            E = E + Math.imul(Ee, Me) | 0,
            E = E + Math.imul(ae, Ke) | 0,
            k = k + Math.imul(ae, Me) | 0,
            A = A + Math.imul(De, Ye) | 0,
            E = E + Math.imul(De, Ie) | 0,
            E = E + Math.imul(be, Ye) | 0,
            k = k + Math.imul(be, Ie) | 0,
            A = A + Math.imul(ge, Ze) | 0,
            E = E + Math.imul(ge, Pe) | 0,
            E = E + Math.imul(_e, Ze) | 0,
            k = k + Math.imul(_e, Pe) | 0,
            A = A + Math.imul(ue, qe) | 0,
            E = E + Math.imul(ue, Ce) | 0,
            E = E + Math.imul(he, qe) | 0,
            k = k + Math.imul(he, Ce) | 0,
            A = A + Math.imul(X, er) | 0,
            E = E + Math.imul(X, Re) | 0,
            E = E + Math.imul(Z, er) | 0,
            k = k + Math.imul(Z, Re) | 0,
            A = A + Math.imul(U, nr) | 0,
            E = E + Math.imul(U, Ne) | 0,
            E = E + Math.imul(re, nr) | 0,
            k = k + Math.imul(re, Ne) | 0,
            A = A + Math.imul(J, Je) | 0,
            E = E + Math.imul(J, Qe) | 0,
            E = E + Math.imul(j, Je) | 0,
            k = k + Math.imul(j, Qe) | 0;
            var br = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (br >>> 26) | 0,
            br &= 67108863,
            A = Math.imul(Se, Fe),
            E = Math.imul(Se, Te),
            E = E + Math.imul(we, Fe) | 0,
            k = Math.imul(we, Te),
            A = A + Math.imul(ze, We) | 0,
            E = E + Math.imul(ze, $e) | 0,
            E = E + Math.imul(pe, We) | 0,
            k = k + Math.imul(pe, $e) | 0,
            A = A + Math.imul(fe, Ke) | 0,
            E = E + Math.imul(fe, Me) | 0,
            E = E + Math.imul(de, Ke) | 0,
            k = k + Math.imul(de, Me) | 0,
            A = A + Math.imul(Ee, Ye) | 0,
            E = E + Math.imul(Ee, Ie) | 0,
            E = E + Math.imul(ae, Ye) | 0,
            k = k + Math.imul(ae, Ie) | 0,
            A = A + Math.imul(De, Ze) | 0,
            E = E + Math.imul(De, Pe) | 0,
            E = E + Math.imul(be, Ze) | 0,
            k = k + Math.imul(be, Pe) | 0,
            A = A + Math.imul(ge, qe) | 0,
            E = E + Math.imul(ge, Ce) | 0,
            E = E + Math.imul(_e, qe) | 0,
            k = k + Math.imul(_e, Ce) | 0,
            A = A + Math.imul(ue, er) | 0,
            E = E + Math.imul(ue, Re) | 0,
            E = E + Math.imul(he, er) | 0,
            k = k + Math.imul(he, Re) | 0,
            A = A + Math.imul(X, nr) | 0,
            E = E + Math.imul(X, Ne) | 0,
            E = E + Math.imul(Z, nr) | 0,
            k = k + Math.imul(Z, Ne) | 0,
            A = A + Math.imul(U, Je) | 0,
            E = E + Math.imul(U, Qe) | 0,
            E = E + Math.imul(re, Je) | 0,
            k = k + Math.imul(re, Qe) | 0;
            var yr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (yr >>> 26) | 0,
            yr &= 67108863,
            A = Math.imul(Se, We),
            E = Math.imul(Se, $e),
            E = E + Math.imul(we, We) | 0,
            k = Math.imul(we, $e),
            A = A + Math.imul(ze, Ke) | 0,
            E = E + Math.imul(ze, Me) | 0,
            E = E + Math.imul(pe, Ke) | 0,
            k = k + Math.imul(pe, Me) | 0,
            A = A + Math.imul(fe, Ye) | 0,
            E = E + Math.imul(fe, Ie) | 0,
            E = E + Math.imul(de, Ye) | 0,
            k = k + Math.imul(de, Ie) | 0,
            A = A + Math.imul(Ee, Ze) | 0,
            E = E + Math.imul(Ee, Pe) | 0,
            E = E + Math.imul(ae, Ze) | 0,
            k = k + Math.imul(ae, Pe) | 0,
            A = A + Math.imul(De, qe) | 0,
            E = E + Math.imul(De, Ce) | 0,
            E = E + Math.imul(be, qe) | 0,
            k = k + Math.imul(be, Ce) | 0,
            A = A + Math.imul(ge, er) | 0,
            E = E + Math.imul(ge, Re) | 0,
            E = E + Math.imul(_e, er) | 0,
            k = k + Math.imul(_e, Re) | 0,
            A = A + Math.imul(ue, nr) | 0,
            E = E + Math.imul(ue, Ne) | 0,
            E = E + Math.imul(he, nr) | 0,
            k = k + Math.imul(he, Ne) | 0,
            A = A + Math.imul(X, Je) | 0,
            E = E + Math.imul(X, Qe) | 0,
            E = E + Math.imul(Z, Je) | 0,
            k = k + Math.imul(Z, Qe) | 0;
            var gr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (gr >>> 26) | 0,
            gr &= 67108863,
            A = Math.imul(Se, Ke),
            E = Math.imul(Se, Me),
            E = E + Math.imul(we, Ke) | 0,
            k = Math.imul(we, Me),
            A = A + Math.imul(ze, Ye) | 0,
            E = E + Math.imul(ze, Ie) | 0,
            E = E + Math.imul(pe, Ye) | 0,
            k = k + Math.imul(pe, Ie) | 0,
            A = A + Math.imul(fe, Ze) | 0,
            E = E + Math.imul(fe, Pe) | 0,
            E = E + Math.imul(de, Ze) | 0,
            k = k + Math.imul(de, Pe) | 0,
            A = A + Math.imul(Ee, qe) | 0,
            E = E + Math.imul(Ee, Ce) | 0,
            E = E + Math.imul(ae, qe) | 0,
            k = k + Math.imul(ae, Ce) | 0,
            A = A + Math.imul(De, er) | 0,
            E = E + Math.imul(De, Re) | 0,
            E = E + Math.imul(be, er) | 0,
            k = k + Math.imul(be, Re) | 0,
            A = A + Math.imul(ge, nr) | 0,
            E = E + Math.imul(ge, Ne) | 0,
            E = E + Math.imul(_e, nr) | 0,
            k = k + Math.imul(_e, Ne) | 0,
            A = A + Math.imul(ue, Je) | 0,
            E = E + Math.imul(ue, Qe) | 0,
            E = E + Math.imul(he, Je) | 0,
            k = k + Math.imul(he, Qe) | 0;
            var xr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (xr >>> 26) | 0,
            xr &= 67108863,
            A = Math.imul(Se, Ye),
            E = Math.imul(Se, Ie),
            E = E + Math.imul(we, Ye) | 0,
            k = Math.imul(we, Ie),
            A = A + Math.imul(ze, Ze) | 0,
            E = E + Math.imul(ze, Pe) | 0,
            E = E + Math.imul(pe, Ze) | 0,
            k = k + Math.imul(pe, Pe) | 0,
            A = A + Math.imul(fe, qe) | 0,
            E = E + Math.imul(fe, Ce) | 0,
            E = E + Math.imul(de, qe) | 0,
            k = k + Math.imul(de, Ce) | 0,
            A = A + Math.imul(Ee, er) | 0,
            E = E + Math.imul(Ee, Re) | 0,
            E = E + Math.imul(ae, er) | 0,
            k = k + Math.imul(ae, Re) | 0,
            A = A + Math.imul(De, nr) | 0,
            E = E + Math.imul(De, Ne) | 0,
            E = E + Math.imul(be, nr) | 0,
            k = k + Math.imul(be, Ne) | 0,
            A = A + Math.imul(ge, Je) | 0,
            E = E + Math.imul(ge, Qe) | 0,
            E = E + Math.imul(_e, Je) | 0,
            k = k + Math.imul(_e, Qe) | 0;
            var wr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (wr >>> 26) | 0,
            wr &= 67108863,
            A = Math.imul(Se, Ze),
            E = Math.imul(Se, Pe),
            E = E + Math.imul(we, Ze) | 0,
            k = Math.imul(we, Pe),
            A = A + Math.imul(ze, qe) | 0,
            E = E + Math.imul(ze, Ce) | 0,
            E = E + Math.imul(pe, qe) | 0,
            k = k + Math.imul(pe, Ce) | 0,
            A = A + Math.imul(fe, er) | 0,
            E = E + Math.imul(fe, Re) | 0,
            E = E + Math.imul(de, er) | 0,
            k = k + Math.imul(de, Re) | 0,
            A = A + Math.imul(Ee, nr) | 0,
            E = E + Math.imul(Ee, Ne) | 0,
            E = E + Math.imul(ae, nr) | 0,
            k = k + Math.imul(ae, Ne) | 0,
            A = A + Math.imul(De, Je) | 0,
            E = E + Math.imul(De, Qe) | 0,
            E = E + Math.imul(be, Je) | 0,
            k = k + Math.imul(be, Qe) | 0;
            var Sr = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (Sr >>> 26) | 0,
            Sr &= 67108863,
            A = Math.imul(Se, qe),
            E = Math.imul(Se, Ce),
            E = E + Math.imul(we, qe) | 0,
            k = Math.imul(we, Ce),
            A = A + Math.imul(ze, er) | 0,
            E = E + Math.imul(ze, Re) | 0,
            E = E + Math.imul(pe, er) | 0,
            k = k + Math.imul(pe, Re) | 0,
            A = A + Math.imul(fe, nr) | 0,
            E = E + Math.imul(fe, Ne) | 0,
            E = E + Math.imul(de, nr) | 0,
            k = k + Math.imul(de, Ne) | 0,
            A = A + Math.imul(Ee, Je) | 0,
            E = E + Math.imul(Ee, Qe) | 0,
            E = E + Math.imul(ae, Je) | 0,
            k = k + Math.imul(ae, Qe) | 0;
            var Er = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (Er >>> 26) | 0,
            Er &= 67108863,
            A = Math.imul(Se, er),
            E = Math.imul(Se, Re),
            E = E + Math.imul(we, er) | 0,
            k = Math.imul(we, Re),
            A = A + Math.imul(ze, nr) | 0,
            E = E + Math.imul(ze, Ne) | 0,
            E = E + Math.imul(pe, nr) | 0,
            k = k + Math.imul(pe, Ne) | 0,
            A = A + Math.imul(fe, Je) | 0,
            E = E + Math.imul(fe, Qe) | 0,
            E = E + Math.imul(de, Je) | 0,
            k = k + Math.imul(de, Qe) | 0;
            var Ar = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + (Ar >>> 26) | 0,
            Ar &= 67108863,
            A = Math.imul(Se, nr),
            E = Math.imul(Se, Ne),
            E = E + Math.imul(we, nr) | 0,
            k = Math.imul(we, Ne),
            A = A + Math.imul(ze, Je) | 0,
            E = E + Math.imul(ze, Qe) | 0,
            E = E + Math.imul(pe, Je) | 0,
            k = k + Math.imul(pe, Qe) | 0;
            var $r = (y + A | 0) + ((E & 8191) << 13) | 0;
            y = (k + (E >>> 13) | 0) + ($r >>> 26) | 0,
            $r &= 67108863,
            A = Math.imul(Se, Je),
            E = Math.imul(Se, Qe),
            E = E + Math.imul(we, Je) | 0,
            k = Math.imul(we, Qe);
            var Pr = (y + A | 0) + ((E & 8191) << 13) | 0;
            return y = (k + (E >>> 13) | 0) + (Pr >>> 26) | 0,
            Pr &= 67108863,
            P[0] = ar,
            P[1] = lr,
            P[2] = cr,
            P[3] = ur,
            P[4] = fr,
            P[5] = dr,
            P[6] = pr,
            P[7] = vr,
            P[8] = _r,
            P[9] = br,
            P[10] = yr,
            P[11] = gr,
            P[12] = xr,
            P[13] = wr,
            P[14] = Sr,
            P[15] = Er,
            P[16] = Ar,
            P[17] = $r,
            P[18] = Pr,
            y !== 0 && (P[19] = y,
            D.length++),
            D
        };
        Math.imul || (T = L);
        function M(x, v, S) {
            S.negative = v.negative ^ x.negative,
            S.length = x.length + v.length;
            for (var D = 0, C = 0, O = 0; O < S.length - 1; O++) {
                var P = C;
                C = 0;
                for (var y = D & 67108863, A = Math.min(O, v.length - 1), E = Math.max(0, O - x.length + 1); E <= A; E++) {
                    var k = O - E
                      , H = x.words[k] | 0
                      , J = v.words[E] | 0
                      , j = H * J
                      , F = j & 67108863;
                    P = P + (j / 67108864 | 0) | 0,
                    F = F + y | 0,
                    y = F & 67108863,
                    P = P + (F >>> 26) | 0,
                    C += P >>> 26,
                    P &= 67108863
                }
                S.words[O] = y,
                D = P,
                P = C
            }
            return D !== 0 ? S.words[O] = D : S.length--,
            S._strip()
        }
        function q(x, v, S) {
            return M(x, v, S)
        }
        a.prototype.mulTo = function(v, S) {
            var D, C = this.length + v.length;
            return this.length === 10 && v.length === 10 ? D = T(this, v, S) : C < 63 ? D = L(this, v, S) : C < 1024 ? D = M(this, v, S) : D = q(this, v, S),
            D
        }
        ,
        a.prototype.mul = function(v) {
            var S = new a(null);
            return S.words = new Array(this.length + v.length),
            this.mulTo(v, S)
        }
        ,
        a.prototype.mulf = function(v) {
            var S = new a(null);
            return S.words = new Array(this.length + v.length),
            q(this, v, S)
        }
        ,
        a.prototype.imul = function(v) {
            return this.clone().mulTo(v, this)
        }
        ,
        a.prototype.imuln = function(v) {
            var S = v < 0;
            S && (v = -v),
            o(typeof v == "number"),
            o(v < 67108864);
            for (var D = 0, C = 0; C < this.length; C++) {
                var O = (this.words[C] | 0) * v
                  , P = (O & 67108863) + (D & 67108863);
                D >>= 26,
                D += O / 67108864 | 0,
                D += P >>> 26,
                this.words[C] = P & 67108863
            }
            return D !== 0 && (this.words[C] = D,
            this.length++),
            this.length = v === 0 ? 1 : this.length,
            S ? this.ineg() : this
        }
        ,
        a.prototype.muln = function(v) {
            return this.clone().imuln(v)
        }
        ,
        a.prototype.sqr = function() {
            return this.mul(this)
        }
        ,
        a.prototype.isqr = function() {
            return this.imul(this.clone())
        }
        ,
        a.prototype.pow = function(v) {
            var S = I(v);
            if (S.length === 0)
                return new a(1);
            for (var D = this, C = 0; C < S.length && S[C] === 0; C++,
            D = D.sqr())
                ;
            if (++C < S.length)
                for (var O = D.sqr(); C < S.length; C++,
                O = O.sqr())
                    S[C] !== 0 && (D = D.mul(O));
            return D
        }
        ,
        a.prototype.iushln = function(v) {
            o(typeof v == "number" && v >= 0);
            var S = v % 26, D = (v - S) / 26, C = 67108863 >>> 26 - S << 26 - S, O;
            if (S !== 0) {
                var P = 0;
                for (O = 0; O < this.length; O++) {
                    var y = this.words[O] & C
                      , A = (this.words[O] | 0) - y << S;
                    this.words[O] = A | P,
                    P = y >>> 26 - S
                }
                P && (this.words[O] = P,
                this.length++)
            }
            if (D !== 0) {
                for (O = this.length - 1; O >= 0; O--)
                    this.words[O + D] = this.words[O];
                for (O = 0; O < D; O++)
                    this.words[O] = 0;
                this.length += D
            }
            return this._strip()
        }
        ,
        a.prototype.ishln = function(v) {
            return o(this.negative === 0),
            this.iushln(v)
        }
        ,
        a.prototype.iushrn = function(v, S, D) {
            o(typeof v == "number" && v >= 0);
            var C;
            S ? C = (S - S % 26) / 26 : C = 0;
            var O = v % 26
              , P = Math.min((v - O) / 26, this.length)
              , y = 67108863 ^ 67108863 >>> O << O
              , A = D;
            if (C -= P,
            C = Math.max(0, C),
            A) {
                for (var E = 0; E < P; E++)
                    A.words[E] = this.words[E];
                A.length = P
            }
            if (P !== 0)
                if (this.length > P)
                    for (this.length -= P,
                    E = 0; E < this.length; E++)
                        this.words[E] = this.words[E + P];
                else
                    this.words[0] = 0,
                    this.length = 1;
            var k = 0;
            for (E = this.length - 1; E >= 0 && (k !== 0 || E >= C); E--) {
                var H = this.words[E] | 0;
                this.words[E] = k << 26 - O | H >>> O,
                k = H & y
            }
            return A && k !== 0 && (A.words[A.length++] = k),
            this.length === 0 && (this.words[0] = 0,
            this.length = 1),
            this._strip()
        }
        ,
        a.prototype.ishrn = function(v, S, D) {
            return o(this.negative === 0),
            this.iushrn(v, S, D)
        }
        ,
        a.prototype.shln = function(v) {
            return this.clone().ishln(v)
        }
        ,
        a.prototype.ushln = function(v) {
            return this.clone().iushln(v)
        }
        ,
        a.prototype.shrn = function(v) {
            return this.clone().ishrn(v)
        }
        ,
        a.prototype.ushrn = function(v) {
            return this.clone().iushrn(v)
        }
        ,
        a.prototype.testn = function(v) {
            o(typeof v == "number" && v >= 0);
            var S = v % 26
              , D = (v - S) / 26
              , C = 1 << S;
            if (this.length <= D)
                return !1;
            var O = this.words[D];
            return !!(O & C)
        }
        ,
        a.prototype.imaskn = function(v) {
            o(typeof v == "number" && v >= 0);
            var S = v % 26
              , D = (v - S) / 26;
            if (o(this.negative === 0, "imaskn works only with positive numbers"),
            this.length <= D)
                return this;
            if (S !== 0 && D++,
            this.length = Math.min(D, this.length),
            S !== 0) {
                var C = 67108863 ^ 67108863 >>> S << S;
                this.words[this.length - 1] &= C
            }
            return this._strip()
        }
        ,
        a.prototype.maskn = function(v) {
            return this.clone().imaskn(v)
        }
        ,
        a.prototype.iaddn = function(v) {
            return o(typeof v == "number"),
            o(v < 67108864),
            v < 0 ? this.isubn(-v) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= v ? (this.words[0] = v - (this.words[0] | 0),
            this.negative = 0,
            this) : (this.negative = 0,
            this.isubn(v),
            this.negative = 1,
            this) : this._iaddn(v)
        }
        ,
        a.prototype._iaddn = function(v) {
            this.words[0] += v;
            for (var S = 0; S < this.length && this.words[S] >= 67108864; S++)
                this.words[S] -= 67108864,
                S === this.length - 1 ? this.words[S + 1] = 1 : this.words[S + 1]++;
            return this.length = Math.max(this.length, S + 1),
            this
        }
        ,
        a.prototype.isubn = function(v) {
            if (o(typeof v == "number"),
            o(v < 67108864),
            v < 0)
                return this.iaddn(-v);
            if (this.negative !== 0)
                return this.negative = 0,
                this.iaddn(v),
                this.negative = 1,
                this;
            if (this.words[0] -= v,
            this.length === 1 && this.words[0] < 0)
                this.words[0] = -this.words[0],
                this.negative = 1;
            else
                for (var S = 0; S < this.length && this.words[S] < 0; S++)
                    this.words[S] += 67108864,
                    this.words[S + 1] -= 1;
            return this._strip()
        }
        ,
        a.prototype.addn = function(v) {
            return this.clone().iaddn(v)
        }
        ,
        a.prototype.subn = function(v) {
            return this.clone().isubn(v)
        }
        ,
        a.prototype.iabs = function() {
            return this.negative = 0,
            this
        }
        ,
        a.prototype.abs = function() {
            return this.clone().iabs()
        }
        ,
        a.prototype._ishlnsubmul = function(v, S, D) {
            var C = v.length + D, O;
            this._expand(C);
            var P, y = 0;
            for (O = 0; O < v.length; O++) {
                P = (this.words[O + D] | 0) + y;
                var A = (v.words[O] | 0) * S;
                P -= A & 67108863,
                y = (P >> 26) - (A / 67108864 | 0),
                this.words[O + D] = P & 67108863
            }
            for (; O < this.length - D; O++)
                P = (this.words[O + D] | 0) + y,
                y = P >> 26,
                this.words[O + D] = P & 67108863;
            if (y === 0)
                return this._strip();
            for (o(y === -1),
            y = 0,
            O = 0; O < this.length; O++)
                P = -(this.words[O] | 0) + y,
                y = P >> 26,
                this.words[O] = P & 67108863;
            return this.negative = 1,
            this._strip()
        }
        ,
        a.prototype._wordDiv = function(v, S) {
            var D = this.length - v.length
              , C = this.clone()
              , O = v
              , P = O.words[O.length - 1] | 0
              , y = this._countBits(P);
            D = 26 - y,
            D !== 0 && (O = O.ushln(D),
            C.iushln(D),
            P = O.words[O.length - 1] | 0);
            var A = C.length - O.length, E;
            if (S !== "mod") {
                E = new a(null),
                E.length = A + 1,
                E.words = new Array(E.length);
                for (var k = 0; k < E.length; k++)
                    E.words[k] = 0
            }
            var H = C.clone()._ishlnsubmul(O, 1, A);
            H.negative === 0 && (C = H,
            E && (E.words[A] = 1));
            for (var J = A - 1; J >= 0; J--) {
                var j = (C.words[O.length + J] | 0) * 67108864 + (C.words[O.length + J - 1] | 0);
                for (j = Math.min(j / P | 0, 67108863),
                C._ishlnsubmul(O, j, J); C.negative !== 0; )
                    j--,
                    C.negative = 0,
                    C._ishlnsubmul(O, 1, J),
                    C.isZero() || (C.negative ^= 1);
                E && (E.words[J] = j)
            }
            return E && E._strip(),
            C._strip(),
            S !== "div" && D !== 0 && C.iushrn(D),
            {
                div: E || null,
                mod: C
            }
        }
        ,
        a.prototype.divmod = function(v, S, D) {
            if (o(!v.isZero()),
            this.isZero())
                return {
                    div: new a(0),
                    mod: new a(0)
                };
            var C, O, P;
            return this.negative !== 0 && v.negative === 0 ? (P = this.neg().divmod(v, S),
            S !== "mod" && (C = P.div.neg()),
            S !== "div" && (O = P.mod.neg(),
            D && O.negative !== 0 && O.iadd(v)),
            {
                div: C,
                mod: O
            }) : this.negative === 0 && v.negative !== 0 ? (P = this.divmod(v.neg(), S),
            S !== "mod" && (C = P.div.neg()),
            {
                div: C,
                mod: P.mod
            }) : this.negative & v.negative ? (P = this.neg().divmod(v.neg(), S),
            S !== "div" && (O = P.mod.neg(),
            D && O.negative !== 0 && O.isub(v)),
            {
                div: P.div,
                mod: O
            }) : v.length > this.length || this.cmp(v) < 0 ? {
                div: new a(0),
                mod: this
            } : v.length === 1 ? S === "div" ? {
                div: this.divn(v.words[0]),
                mod: null
            } : S === "mod" ? {
                div: null,
                mod: new a(this.modrn(v.words[0]))
            } : {
                div: this.divn(v.words[0]),
                mod: new a(this.modrn(v.words[0]))
            } : this._wordDiv(v, S)
        }
        ,
        a.prototype.div = function(v) {
            return this.divmod(v, "div", !1).div
        }
        ,
        a.prototype.mod = function(v) {
            return this.divmod(v, "mod", !1).mod
        }
        ,
        a.prototype.umod = function(v) {
            return this.divmod(v, "mod", !0).mod
        }
        ,
        a.prototype.divRound = function(v) {
            var S = this.divmod(v);
            if (S.mod.isZero())
                return S.div;
            var D = S.div.negative !== 0 ? S.mod.isub(v) : S.mod
              , C = v.ushrn(1)
              , O = v.andln(1)
              , P = D.cmp(C);
            return P < 0 || O === 1 && P === 0 ? S.div : S.div.negative !== 0 ? S.div.isubn(1) : S.div.iaddn(1)
        }
        ,
        a.prototype.modrn = function(v) {
            var S = v < 0;
            S && (v = -v),
            o(v <= 67108863);
            for (var D = (1 << 26) % v, C = 0, O = this.length - 1; O >= 0; O--)
                C = (D * C + (this.words[O] | 0)) % v;
            return S ? -C : C
        }
        ,
        a.prototype.modn = function(v) {
            return this.modrn(v)
        }
        ,
        a.prototype.idivn = function(v) {
            var S = v < 0;
            S && (v = -v),
            o(v <= 67108863);
            for (var D = 0, C = this.length - 1; C >= 0; C--) {
                var O = (this.words[C] | 0) + D * 67108864;
                this.words[C] = O / v | 0,
                D = O % v
            }
            return this._strip(),
            S ? this.ineg() : this
        }
        ,
        a.prototype.divn = function(v) {
            return this.clone().idivn(v)
        }
        ,
        a.prototype.egcd = function(v) {
            o(v.negative === 0),
            o(!v.isZero());
            var S = this
              , D = v.clone();
            S.negative !== 0 ? S = S.umod(v) : S = S.clone();
            for (var C = new a(1), O = new a(0), P = new a(0), y = new a(1), A = 0; S.isEven() && D.isEven(); )
                S.iushrn(1),
                D.iushrn(1),
                ++A;
            for (var E = D.clone(), k = S.clone(); !S.isZero(); ) {
                for (var H = 0, J = 1; !(S.words[0] & J) && H < 26; ++H,
                J <<= 1)
                    ;
                if (H > 0)
                    for (S.iushrn(H); H-- > 0; )
                        (C.isOdd() || O.isOdd()) && (C.iadd(E),
                        O.isub(k)),
                        C.iushrn(1),
                        O.iushrn(1);
                for (var j = 0, F = 1; !(D.words[0] & F) && j < 26; ++j,
                F <<= 1)
                    ;
                if (j > 0)
                    for (D.iushrn(j); j-- > 0; )
                        (P.isOdd() || y.isOdd()) && (P.iadd(E),
                        y.isub(k)),
                        P.iushrn(1),
                        y.iushrn(1);
                S.cmp(D) >= 0 ? (S.isub(D),
                C.isub(P),
                O.isub(y)) : (D.isub(S),
                P.isub(C),
                y.isub(O))
            }
            return {
                a: P,
                b: y,
                gcd: D.iushln(A)
            }
        }
        ,
        a.prototype._invmp = function(v) {
            o(v.negative === 0),
            o(!v.isZero());
            var S = this
              , D = v.clone();
            S.negative !== 0 ? S = S.umod(v) : S = S.clone();
            for (var C = new a(1), O = new a(0), P = D.clone(); S.cmpn(1) > 0 && D.cmpn(1) > 0; ) {
                for (var y = 0, A = 1; !(S.words[0] & A) && y < 26; ++y,
                A <<= 1)
                    ;
                if (y > 0)
                    for (S.iushrn(y); y-- > 0; )
                        C.isOdd() && C.iadd(P),
                        C.iushrn(1);
                for (var E = 0, k = 1; !(D.words[0] & k) && E < 26; ++E,
                k <<= 1)
                    ;
                if (E > 0)
                    for (D.iushrn(E); E-- > 0; )
                        O.isOdd() && O.iadd(P),
                        O.iushrn(1);
                S.cmp(D) >= 0 ? (S.isub(D),
                C.isub(O)) : (D.isub(S),
                O.isub(C))
            }
            var H;
            return S.cmpn(1) === 0 ? H = C : H = O,
            H.cmpn(0) < 0 && H.iadd(v),
            H
        }
        ,
        a.prototype.gcd = function(v) {
            if (this.isZero())
                return v.abs();
            if (v.isZero())
                return this.abs();
            var S = this.clone()
              , D = v.clone();
            S.negative = 0,
            D.negative = 0;
            for (var C = 0; S.isEven() && D.isEven(); C++)
                S.iushrn(1),
                D.iushrn(1);
            do {
                for (; S.isEven(); )
                    S.iushrn(1);
                for (; D.isEven(); )
                    D.iushrn(1);
                var O = S.cmp(D);
                if (O < 0) {
                    var P = S;
                    S = D,
                    D = P
                } else if (O === 0 || D.cmpn(1) === 0)
                    break;
                S.isub(D)
            } while (!0);
            return D.iushln(C)
        }
        ,
        a.prototype.invm = function(v) {
            return this.egcd(v).a.umod(v)
        }
        ,
        a.prototype.isEven = function() {
            return (this.words[0] & 1) === 0
        }
        ,
        a.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1
        }
        ,
        a.prototype.andln = function(v) {
            return this.words[0] & v
        }
        ,
        a.prototype.bincn = function(v) {
            o(typeof v == "number");
            var S = v % 26
              , D = (v - S) / 26
              , C = 1 << S;
            if (this.length <= D)
                return this._expand(D + 1),
                this.words[D] |= C,
                this;
            for (var O = C, P = D; O !== 0 && P < this.length; P++) {
                var y = this.words[P] | 0;
                y += O,
                O = y >>> 26,
                y &= 67108863,
                this.words[P] = y
            }
            return O !== 0 && (this.words[P] = O,
            this.length++),
            this
        }
        ,
        a.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0
        }
        ,
        a.prototype.cmpn = function(v) {
            var S = v < 0;
            if (this.negative !== 0 && !S)
                return -1;
            if (this.negative === 0 && S)
                return 1;
            this._strip();
            var D;
            if (this.length > 1)
                D = 1;
            else {
                S && (v = -v),
                o(v <= 67108863, "Number is too big");
                var C = this.words[0] | 0;
                D = C === v ? 0 : C < v ? -1 : 1
            }
            return this.negative !== 0 ? -D | 0 : D
        }
        ,
        a.prototype.cmp = function(v) {
            if (this.negative !== 0 && v.negative === 0)
                return -1;
            if (this.negative === 0 && v.negative !== 0)
                return 1;
            var S = this.ucmp(v);
            return this.negative !== 0 ? -S | 0 : S
        }
        ,
        a.prototype.ucmp = function(v) {
            if (this.length > v.length)
                return 1;
            if (this.length < v.length)
                return -1;
            for (var S = 0, D = this.length - 1; D >= 0; D--) {
                var C = this.words[D] | 0
                  , O = v.words[D] | 0;
                if (C !== O) {
                    C < O ? S = -1 : C > O && (S = 1);
                    break
                }
            }
            return S
        }
        ,
        a.prototype.gtn = function(v) {
            return this.cmpn(v) === 1
        }
        ,
        a.prototype.gt = function(v) {
            return this.cmp(v) === 1
        }
        ,
        a.prototype.gten = function(v) {
            return this.cmpn(v) >= 0
        }
        ,
        a.prototype.gte = function(v) {
            return this.cmp(v) >= 0
        }
        ,
        a.prototype.ltn = function(v) {
            return this.cmpn(v) === -1
        }
        ,
        a.prototype.lt = function(v) {
            return this.cmp(v) === -1
        }
        ,
        a.prototype.lten = function(v) {
            return this.cmpn(v) <= 0
        }
        ,
        a.prototype.lte = function(v) {
            return this.cmp(v) <= 0
        }
        ,
        a.prototype.eqn = function(v) {
            return this.cmpn(v) === 0
        }
        ,
        a.prototype.eq = function(v) {
            return this.cmp(v) === 0
        }
        ,
        a.red = function(v) {
            return new V(v)
        }
        ,
        a.prototype.toRed = function(v) {
            return o(!this.red, "Already a number in reduction context"),
            o(this.negative === 0, "red works only with positives"),
            v.convertTo(this)._forceRed(v)
        }
        ,
        a.prototype.fromRed = function() {
            return o(this.red, "fromRed works only with numbers in reduction context"),
            this.red.convertFrom(this)
        }
        ,
        a.prototype._forceRed = function(v) {
            return this.red = v,
            this
        }
        ,
        a.prototype.forceRed = function(v) {
            return o(!this.red, "Already a number in reduction context"),
            this._forceRed(v)
        }
        ,
        a.prototype.redAdd = function(v) {
            return o(this.red, "redAdd works only with red numbers"),
            this.red.add(this, v)
        }
        ,
        a.prototype.redIAdd = function(v) {
            return o(this.red, "redIAdd works only with red numbers"),
            this.red.iadd(this, v)
        }
        ,
        a.prototype.redSub = function(v) {
            return o(this.red, "redSub works only with red numbers"),
            this.red.sub(this, v)
        }
        ,
        a.prototype.redISub = function(v) {
            return o(this.red, "redISub works only with red numbers"),
            this.red.isub(this, v)
        }
        ,
        a.prototype.redShl = function(v) {
            return o(this.red, "redShl works only with red numbers"),
            this.red.shl(this, v)
        }
        ,
        a.prototype.redMul = function(v) {
            return o(this.red, "redMul works only with red numbers"),
            this.red._verify2(this, v),
            this.red.mul(this, v)
        }
        ,
        a.prototype.redIMul = function(v) {
            return o(this.red, "redMul works only with red numbers"),
            this.red._verify2(this, v),
            this.red.imul(this, v)
        }
        ,
        a.prototype.redSqr = function() {
            return o(this.red, "redSqr works only with red numbers"),
            this.red._verify1(this),
            this.red.sqr(this)
        }
        ,
        a.prototype.redISqr = function() {
            return o(this.red, "redISqr works only with red numbers"),
            this.red._verify1(this),
            this.red.isqr(this)
        }
        ,
        a.prototype.redSqrt = function() {
            return o(this.red, "redSqrt works only with red numbers"),
            this.red._verify1(this),
            this.red.sqrt(this)
        }
        ,
        a.prototype.redInvm = function() {
            return o(this.red, "redInvm works only with red numbers"),
            this.red._verify1(this),
            this.red.invm(this)
        }
        ,
        a.prototype.redNeg = function() {
            return o(this.red, "redNeg works only with red numbers"),
            this.red._verify1(this),
            this.red.neg(this)
        }
        ,
        a.prototype.redPow = function(v) {
            return o(this.red && !v.red, "redPow(normalNum)"),
            this.red._verify1(this),
            this.red.pow(this, v)
        }
        ;
        var Q = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
        };
        function Y(x, v) {
            this.name = x,
            this.p = new a(v,16),
            this.n = this.p.bitLength(),
            this.k = new a(1).iushln(this.n).isub(this.p),
            this.tmp = this._tmp()
        }
        Y.prototype._tmp = function() {
            var v = new a(null);
            return v.words = new Array(Math.ceil(this.n / 13)),
            v
        }
        ,
        Y.prototype.ireduce = function(v) {
            var S = v, D;
            do
                this.split(S, this.tmp),
                S = this.imulK(S),
                S = S.iadd(this.tmp),
                D = S.bitLength();
            while (D > this.n);
            var C = D < this.n ? -1 : S.ucmp(this.p);
            return C === 0 ? (S.words[0] = 0,
            S.length = 1) : C > 0 ? S.isub(this.p) : S.strip !== void 0 ? S.strip() : S._strip(),
            S
        }
        ,
        Y.prototype.split = function(v, S) {
            v.iushrn(this.n, 0, S)
        }
        ,
        Y.prototype.imulK = function(v) {
            return v.imul(this.k)
        }
        ;
        function ee() {
            Y.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
        }
        l(ee, Y),
        ee.prototype.split = function(v, S) {
            for (var D = 4194303, C = Math.min(v.length, 9), O = 0; O < C; O++)
                S.words[O] = v.words[O];
            if (S.length = C,
            v.length <= 9) {
                v.words[0] = 0,
                v.length = 1;
                return
            }
            var P = v.words[9];
            for (S.words[S.length++] = P & D,
            O = 10; O < v.length; O++) {
                var y = v.words[O] | 0;
                v.words[O - 10] = (y & D) << 4 | P >>> 22,
                P = y
            }
            P >>>= 22,
            v.words[O - 10] = P,
            P === 0 && v.length > 10 ? v.length -= 10 : v.length -= 9
        }
        ,
        ee.prototype.imulK = function(v) {
            v.words[v.length] = 0,
            v.words[v.length + 1] = 0,
            v.length += 2;
            for (var S = 0, D = 0; D < v.length; D++) {
                var C = v.words[D] | 0;
                S += C * 977,
                v.words[D] = S & 67108863,
                S = C * 64 + (S / 67108864 | 0)
            }
            return v.words[v.length - 1] === 0 && (v.length--,
            v.words[v.length - 1] === 0 && v.length--),
            v
        }
        ;
        function ie() {
            Y.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
        }
        l(ie, Y);
        function te() {
            Y.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
        }
        l(te, Y);
        function ne() {
            Y.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
        }
        l(ne, Y),
        ne.prototype.imulK = function(v) {
            for (var S = 0, D = 0; D < v.length; D++) {
                var C = (v.words[D] | 0) * 19 + S
                  , O = C & 67108863;
                C >>>= 26,
                v.words[D] = O,
                S = C
            }
            return S !== 0 && (v.words[v.length++] = S),
            v
        }
        ,
        a._prime = function(v) {
            if (Q[v])
                return Q[v];
            var S;
            if (v === "k256")
                S = new ee;
            else if (v === "p224")
                S = new ie;
            else if (v === "p192")
                S = new te;
            else if (v === "p25519")
                S = new ne;
            else
                throw new Error("Unknown prime " + v);
            return Q[v] = S,
            S
        }
        ;
        function V(x) {
            if (typeof x == "string") {
                var v = a._prime(x);
                this.m = v.p,
                this.prime = v
            } else
                o(x.gtn(1), "modulus must be greater than 1"),
                this.m = x,
                this.prime = null
        }
        V.prototype._verify1 = function(v) {
            o(v.negative === 0, "red works only with positives"),
            o(v.red, "red works only with red numbers")
        }
        ,
        V.prototype._verify2 = function(v, S) {
            o((v.negative | S.negative) === 0, "red works only with positives"),
            o(v.red && v.red === S.red, "red works only with red numbers")
        }
        ,
        V.prototype.imod = function(v) {
            return this.prime ? this.prime.ireduce(v)._forceRed(this) : (d(v, v.umod(this.m)._forceRed(this)),
            v)
        }
        ,
        V.prototype.neg = function(v) {
            return v.isZero() ? v.clone() : this.m.sub(v)._forceRed(this)
        }
        ,
        V.prototype.add = function(v, S) {
            this._verify2(v, S);
            var D = v.add(S);
            return D.cmp(this.m) >= 0 && D.isub(this.m),
            D._forceRed(this)
        }
        ,
        V.prototype.iadd = function(v, S) {
            this._verify2(v, S);
            var D = v.iadd(S);
            return D.cmp(this.m) >= 0 && D.isub(this.m),
            D
        }
        ,
        V.prototype.sub = function(v, S) {
            this._verify2(v, S);
            var D = v.sub(S);
            return D.cmpn(0) < 0 && D.iadd(this.m),
            D._forceRed(this)
        }
        ,
        V.prototype.isub = function(v, S) {
            this._verify2(v, S);
            var D = v.isub(S);
            return D.cmpn(0) < 0 && D.iadd(this.m),
            D
        }
        ,
        V.prototype.shl = function(v, S) {
            return this._verify1(v),
            this.imod(v.ushln(S))
        }
        ,
        V.prototype.imul = function(v, S) {
            return this._verify2(v, S),
            this.imod(v.imul(S))
        }
        ,
        V.prototype.mul = function(v, S) {
            return this._verify2(v, S),
            this.imod(v.mul(S))
        }
        ,
        V.prototype.isqr = function(v) {
            return this.imul(v, v.clone())
        }
        ,
        V.prototype.sqr = function(v) {
            return this.mul(v, v)
        }
        ,
        V.prototype.sqrt = function(v) {
            if (v.isZero())
                return v.clone();
            var S = this.m.andln(3);
            if (o(S % 2 === 1),
            S === 3) {
                var D = this.m.add(new a(1)).iushrn(2);
                return this.pow(v, D)
            }
            for (var C = this.m.subn(1), O = 0; !C.isZero() && C.andln(1) === 0; )
                O++,
                C.iushrn(1);
            o(!C.isZero());
            var P = new a(1).toRed(this)
              , y = P.redNeg()
              , A = this.m.subn(1).iushrn(1)
              , E = this.m.bitLength();
            for (E = new a(2 * E * E).toRed(this); this.pow(E, A).cmp(y) !== 0; )
                E.redIAdd(y);
            for (var k = this.pow(E, C), H = this.pow(v, C.addn(1).iushrn(1)), J = this.pow(v, C), j = O; J.cmp(P) !== 0; ) {
                for (var F = J, U = 0; F.cmp(P) !== 0; U++)
                    F = F.redSqr();
                o(U < j);
                var re = this.pow(k, new a(1).iushln(j - U - 1));
                H = H.redMul(re),
                k = re.redSqr(),
                J = J.redMul(k),
                j = U
            }
            return H
        }
        ,
        V.prototype.invm = function(v) {
            var S = v._invmp(this.m);
            return S.negative !== 0 ? (S.negative = 0,
            this.imod(S).redNeg()) : this.imod(S)
        }
        ,
        V.prototype.pow = function(v, S) {
            if (S.isZero())
                return new a(1).toRed(this);
            if (S.cmpn(1) === 0)
                return v.clone();
            var D = 4
              , C = new Array(1 << D);
            C[0] = new a(1).toRed(this),
            C[1] = v;
            for (var O = 2; O < C.length; O++)
                C[O] = this.mul(C[O - 1], v);
            var P = C[0]
              , y = 0
              , A = 0
              , E = S.bitLength() % 26;
            for (E === 0 && (E = 26),
            O = S.length - 1; O >= 0; O--) {
                for (var k = S.words[O], H = E - 1; H >= 0; H--) {
                    var J = k >> H & 1;
                    if (P !== C[0] && (P = this.sqr(P)),
                    J === 0 && y === 0) {
                        A = 0;
                        continue
                    }
                    y <<= 1,
                    y |= J,
                    A++,
                    !(A !== D && (O !== 0 || H !== 0)) && (P = this.mul(P, C[y]),
                    A = 0,
                    y = 0)
                }
                E = 26
            }
            return P
        }
        ,
        V.prototype.convertTo = function(v) {
            var S = v.umod(this.m);
            return S === v ? S.clone() : S
        }
        ,
        V.prototype.convertFrom = function(v) {
            var S = v.clone();
            return S.red = null,
            S
        }
        ,
        a.mont = function(v) {
            return new w(v)
        }
        ;
        function w(x) {
            V.call(this, x),
            this.shift = this.m.bitLength(),
            this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26),
            this.r = new a(1).iushln(this.shift),
            this.r2 = this.imod(this.r.sqr()),
            this.rinv = this.r._invmp(this.m),
            this.minv = this.rinv.mul(this.r).isubn(1).div(this.m),
            this.minv = this.minv.umod(this.r),
            this.minv = this.r.sub(this.minv)
        }
        l(w, V),
        w.prototype.convertTo = function(v) {
            return this.imod(v.ushln(this.shift))
        }
        ,
        w.prototype.convertFrom = function(v) {
            var S = this.imod(v.mul(this.rinv));
            return S.red = null,
            S
        }
        ,
        w.prototype.imul = function(v, S) {
            if (v.isZero() || S.isZero())
                return v.words[0] = 0,
                v.length = 1,
                v;
            var D = v.imul(S)
              , C = D.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
              , O = D.isub(C).iushrn(this.shift)
              , P = O;
            return O.cmp(this.m) >= 0 ? P = O.isub(this.m) : O.cmpn(0) < 0 && (P = O.iadd(this.m)),
            P._forceRed(this)
        }
        ,
        w.prototype.mul = function(v, S) {
            if (v.isZero() || S.isZero())
                return new a(0)._forceRed(this);
            var D = v.mul(S)
              , C = D.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
              , O = D.isub(C).iushrn(this.shift)
              , P = O;
            return O.cmp(this.m) >= 0 ? P = O.isub(this.m) : O.cmpn(0) < 0 && (P = O.iadd(this.m)),
            P._forceRed(this)
        }
        ,
        w.prototype.invm = function(v) {
            var S = this.imod(v._invmp(this.m).mul(this.r2));
            return S._forceRed(this)
        }
    }
    )(e, commonjsGlobal)
}
)(bn);
var bnExports = bn.exports
  , BN$a = bnExports
  , randomBytes$1 = browserExports
  , Buffer$a = safeBufferExports$1.Buffer;
function getr(e) {
    var n = e.modulus.byteLength(), i;
    do
        i = new BN$a(randomBytes$1(n));
    while (i.cmp(e.modulus) >= 0 || !i.umod(e.prime1) || !i.umod(e.prime2));
    return i
}
function blind(e) {
    var n = getr(e)
      , i = n.toRed(BN$a.mont(e.modulus)).redPow(new BN$a(e.publicExponent)).fromRed();
    return {
        blinder: i,
        unblinder: n.invm(e.modulus)
    }
}
function crt$2(e, n) {
    var i = blind(n)
      , o = n.modulus.byteLength()
      , l = new BN$a(e).mul(i.blinder).umod(n.modulus)
      , a = l.toRed(BN$a.mont(n.prime1))
      , c = l.toRed(BN$a.mont(n.prime2))
      , u = n.coefficient
      , h = n.prime1
      , m = n.prime2
      , d = a.redPow(n.exponent1).fromRed()
      , p = c.redPow(n.exponent2).fromRed()
      , b = d.isub(p).imul(u).umod(h).imul(m);
    return p.iadd(b).imul(i.unblinder).umod(n.modulus).toArrayLike(Buffer$a, "be", o)
}
crt$2.getr = getr;
var browserifyRsa = crt$2
  , elliptic = {};
const version = "6.6.1"
  , require$$0$1 = {
    version
};
var utils$o = {}
  , utils$n = {};
(function(e) {
    var n = e;
    function i(a, c) {
        if (Array.isArray(a))
            return a.slice();
        if (!a)
            return [];
        var u = [];
        if (typeof a != "string") {
            for (var h = 0; h < a.length; h++)
                u[h] = a[h] | 0;
            return u
        }
        if (c === "hex") {
            a = a.replace(/[^a-z0-9]+/ig, ""),
            a.length % 2 !== 0 && (a = "0" + a);
            for (var h = 0; h < a.length; h += 2)
                u.push(parseInt(a[h] + a[h + 1], 16))
        } else
            for (var h = 0; h < a.length; h++) {
                var m = a.charCodeAt(h)
                  , d = m >> 8
                  , p = m & 255;
                d ? u.push(d, p) : u.push(p)
            }
        return u
    }
    n.toArray = i;
    function o(a) {
        return a.length === 1 ? "0" + a : a
    }
    n.zero2 = o;
    function l(a) {
        for (var c = "", u = 0; u < a.length; u++)
            c += o(a[u].toString(16));
        return c
    }
    n.toHex = l,
    n.encode = function(c, u) {
        return u === "hex" ? l(c) : c
    }
}
)(utils$n);
(function(e) {
    var n = e
      , i = bnExports$1
      , o = minimalisticAssert
      , l = utils$n;
    n.assert = o,
    n.toArray = l.toArray,
    n.zero2 = l.zero2,
    n.toHex = l.toHex,
    n.encode = l.encode;
    function a(d, p, b) {
        var g = new Array(Math.max(d.bitLength(), b) + 1), $;
        for ($ = 0; $ < g.length; $ += 1)
            g[$] = 0;
        var N = 1 << p + 1
          , I = d.clone();
        for ($ = 0; $ < g.length; $++) {
            var L, T = I.andln(N - 1);
            I.isOdd() ? (T > (N >> 1) - 1 ? L = (N >> 1) - T : L = T,
            I.isubn(L)) : L = 0,
            g[$] = L,
            I.iushrn(1)
        }
        return g
    }
    n.getNAF = a;
    function c(d, p) {
        var b = [[], []];
        d = d.clone(),
        p = p.clone();
        for (var g = 0, $ = 0, N; d.cmpn(-g) > 0 || p.cmpn(-$) > 0; ) {
            var I = d.andln(3) + g & 3
              , L = p.andln(3) + $ & 3;
            I === 3 && (I = -1),
            L === 3 && (L = -1);
            var T;
            I & 1 ? (N = d.andln(7) + g & 7,
            (N === 3 || N === 5) && L === 2 ? T = -I : T = I) : T = 0,
            b[0].push(T);
            var M;
            L & 1 ? (N = p.andln(7) + $ & 7,
            (N === 3 || N === 5) && I === 2 ? M = -L : M = L) : M = 0,
            b[1].push(M),
            2 * g === T + 1 && (g = 1 - g),
            2 * $ === M + 1 && ($ = 1 - $),
            d.iushrn(1),
            p.iushrn(1)
        }
        return b
    }
    n.getJSF = c;
    function u(d, p, b) {
        var g = "_" + p;
        d.prototype[p] = function() {
            return this[g] !== void 0 ? this[g] : this[g] = b.call(this)
        }
    }
    n.cachedProperty = u;
    function h(d) {
        return typeof d == "string" ? n.toArray(d, "hex") : d
    }
    n.parseBytes = h;
    function m(d) {
        return new i(d,"hex","le")
    }
    n.intFromLE = m
}
)(utils$o);
var curve = {}
  , BN$9 = bnExports$1
  , utils$m = utils$o
  , getNAF = utils$m.getNAF
  , getJSF = utils$m.getJSF
  , assert$g = utils$m.assert;
function BaseCurve(e, n) {
    this.type = e,
    this.p = new BN$9(n.p,16),
    this.red = n.prime ? BN$9.red(n.prime) : BN$9.mont(this.p),
    this.zero = new BN$9(0).toRed(this.red),
    this.one = new BN$9(1).toRed(this.red),
    this.two = new BN$9(2).toRed(this.red),
    this.n = n.n && new BN$9(n.n,16),
    this.g = n.g && this.pointFromJSON(n.g, n.gRed),
    this._wnafT1 = new Array(4),
    this._wnafT2 = new Array(4),
    this._wnafT3 = new Array(4),
    this._wnafT4 = new Array(4),
    this._bitLength = this.n ? this.n.bitLength() : 0;
    var i = this.n && this.p.div(this.n);
    !i || i.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0,
    this.redN = this.n.toRed(this.red))
}
var base$1 = BaseCurve;
BaseCurve.prototype.point = function() {
    throw new Error("Not implemented")
}
;
BaseCurve.prototype.validate = function() {
    throw new Error("Not implemented")
}
;
BaseCurve.prototype._fixedNafMul = function(n, i) {
    assert$g(n.precomputed);
    var o = n._getDoubles()
      , l = getNAF(i, 1, this._bitLength)
      , a = (1 << o.step + 1) - (o.step % 2 === 0 ? 2 : 1);
    a /= 3;
    var c = [], u, h;
    for (u = 0; u < l.length; u += o.step) {
        h = 0;
        for (var m = u + o.step - 1; m >= u; m--)
            h = (h << 1) + l[m];
        c.push(h)
    }
    for (var d = this.jpoint(null, null, null), p = this.jpoint(null, null, null), b = a; b > 0; b--) {
        for (u = 0; u < c.length; u++)
            h = c[u],
            h === b ? p = p.mixedAdd(o.points[u]) : h === -b && (p = p.mixedAdd(o.points[u].neg()));
        d = d.add(p)
    }
    return d.toP()
}
;
BaseCurve.prototype._wnafMul = function(n, i) {
    var o = 4
      , l = n._getNAFPoints(o);
    o = l.wnd;
    for (var a = l.points, c = getNAF(i, o, this._bitLength), u = this.jpoint(null, null, null), h = c.length - 1; h >= 0; h--) {
        for (var m = 0; h >= 0 && c[h] === 0; h--)
            m++;
        if (h >= 0 && m++,
        u = u.dblp(m),
        h < 0)
            break;
        var d = c[h];
        assert$g(d !== 0),
        n.type === "affine" ? d > 0 ? u = u.mixedAdd(a[d - 1 >> 1]) : u = u.mixedAdd(a[-d - 1 >> 1].neg()) : d > 0 ? u = u.add(a[d - 1 >> 1]) : u = u.add(a[-d - 1 >> 1].neg())
    }
    return n.type === "affine" ? u.toP() : u
}
;
BaseCurve.prototype._wnafMulAdd = function(n, i, o, l, a) {
    var c = this._wnafT1, u = this._wnafT2, h = this._wnafT3, m = 0, d, p, b;
    for (d = 0; d < l; d++) {
        b = i[d];
        var g = b._getNAFPoints(n);
        c[d] = g.wnd,
        u[d] = g.points
    }
    for (d = l - 1; d >= 1; d -= 2) {
        var $ = d - 1
          , N = d;
        if (c[$] !== 1 || c[N] !== 1) {
            h[$] = getNAF(o[$], c[$], this._bitLength),
            h[N] = getNAF(o[N], c[N], this._bitLength),
            m = Math.max(h[$].length, m),
            m = Math.max(h[N].length, m);
            continue
        }
        var I = [i[$], null, null, i[N]];
        i[$].y.cmp(i[N].y) === 0 ? (I[1] = i[$].add(i[N]),
        I[2] = i[$].toJ().mixedAdd(i[N].neg())) : i[$].y.cmp(i[N].y.redNeg()) === 0 ? (I[1] = i[$].toJ().mixedAdd(i[N]),
        I[2] = i[$].add(i[N].neg())) : (I[1] = i[$].toJ().mixedAdd(i[N]),
        I[2] = i[$].toJ().mixedAdd(i[N].neg()));
        var L = [-3, -1, -5, -7, 0, 7, 5, 1, 3]
          , T = getJSF(o[$], o[N]);
        for (m = Math.max(T[0].length, m),
        h[$] = new Array(m),
        h[N] = new Array(m),
        p = 0; p < m; p++) {
            var M = T[0][p] | 0
              , q = T[1][p] | 0;
            h[$][p] = L[(M + 1) * 3 + (q + 1)],
            h[N][p] = 0,
            u[$] = I
        }
    }
    var Q = this.jpoint(null, null, null)
      , Y = this._wnafT4;
    for (d = m; d >= 0; d--) {
        for (var ee = 0; d >= 0; ) {
            var ie = !0;
            for (p = 0; p < l; p++)
                Y[p] = h[p][d] | 0,
                Y[p] !== 0 && (ie = !1);
            if (!ie)
                break;
            ee++,
            d--
        }
        if (d >= 0 && ee++,
        Q = Q.dblp(ee),
        d < 0)
            break;
        for (p = 0; p < l; p++) {
            var te = Y[p];
            te !== 0 && (te > 0 ? b = u[p][te - 1 >> 1] : te < 0 && (b = u[p][-te - 1 >> 1].neg()),
            b.type === "affine" ? Q = Q.mixedAdd(b) : Q = Q.add(b))
        }
    }
    for (d = 0; d < l; d++)
        u[d] = null;
    return a ? Q : Q.toP()
}
;
function BasePoint(e, n) {
    this.curve = e,
    this.type = n,
    this.precomputed = null
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function() {
    throw new Error("Not implemented")
}
;
BasePoint.prototype.validate = function() {
    return this.curve.validate(this)
}
;
BaseCurve.prototype.decodePoint = function(n, i) {
    n = utils$m.toArray(n, i);
    var o = this.p.byteLength();
    if ((n[0] === 4 || n[0] === 6 || n[0] === 7) && n.length - 1 === 2 * o) {
        n[0] === 6 ? assert$g(n[n.length - 1] % 2 === 0) : n[0] === 7 && assert$g(n[n.length - 1] % 2 === 1);
        var l = this.point(n.slice(1, 1 + o), n.slice(1 + o, 1 + 2 * o));
        return l
    } else if ((n[0] === 2 || n[0] === 3) && n.length - 1 === o)
        return this.pointFromX(n.slice(1, 1 + o), n[0] === 3);
    throw new Error("Unknown point format")
}
;
BasePoint.prototype.encodeCompressed = function(n) {
    return this.encode(n, !0)
}
;
BasePoint.prototype._encode = function(n) {
    var i = this.curve.p.byteLength()
      , o = this.getX().toArray("be", i);
    return n ? [this.getY().isEven() ? 2 : 3].concat(o) : [4].concat(o, this.getY().toArray("be", i))
}
;
BasePoint.prototype.encode = function(n, i) {
    return utils$m.encode(this._encode(i), n)
}
;
BasePoint.prototype.precompute = function(n) {
    if (this.precomputed)
        return this;
    var i = {
        doubles: null,
        naf: null,
        beta: null
    };
    return i.naf = this._getNAFPoints(8),
    i.doubles = this._getDoubles(4, n),
    i.beta = this._getBeta(),
    this.precomputed = i,
    this
}
;
BasePoint.prototype._hasDoubles = function(n) {
    if (!this.precomputed)
        return !1;
    var i = this.precomputed.doubles;
    return i ? i.points.length >= Math.ceil((n.bitLength() + 1) / i.step) : !1
}
;
BasePoint.prototype._getDoubles = function(n, i) {
    if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
    for (var o = [this], l = this, a = 0; a < i; a += n) {
        for (var c = 0; c < n; c++)
            l = l.dbl();
        o.push(l)
    }
    return {
        step: n,
        points: o
    }
}
;
BasePoint.prototype._getNAFPoints = function(n) {
    if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
    for (var i = [this], o = (1 << n) - 1, l = o === 1 ? null : this.dbl(), a = 1; a < o; a++)
        i[a] = i[a - 1].add(l);
    return {
        wnd: n,
        points: i
    }
}
;
BasePoint.prototype._getBeta = function() {
    return null
}
;
BasePoint.prototype.dblp = function(n) {
    for (var i = this, o = 0; o < n; o++)
        i = i.dbl();
    return i
}
;
var utils$l = utils$o
  , BN$8 = bnExports$1
  , inherits$4 = inherits_browserExports
  , Base$2 = base$1
  , assert$f = utils$l.assert;
function ShortCurve(e) {
    Base$2.call(this, "short", e),
    this.a = new BN$8(e.a,16).toRed(this.red),
    this.b = new BN$8(e.b,16).toRed(this.red),
    this.tinv = this.two.redInvm(),
    this.zeroA = this.a.fromRed().cmpn(0) === 0,
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0,
    this.endo = this._getEndomorphism(e),
    this._endoWnafT1 = new Array(4),
    this._endoWnafT2 = new Array(4)
}
inherits$4(ShortCurve, Base$2);
var short = ShortCurve;
ShortCurve.prototype._getEndomorphism = function(n) {
    if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
        var i, o;
        if (n.beta)
            i = new BN$8(n.beta,16).toRed(this.red);
        else {
            var l = this._getEndoRoots(this.p);
            i = l[0].cmp(l[1]) < 0 ? l[0] : l[1],
            i = i.toRed(this.red)
        }
        if (n.lambda)
            o = new BN$8(n.lambda,16);
        else {
            var a = this._getEndoRoots(this.n);
            this.g.mul(a[0]).x.cmp(this.g.x.redMul(i)) === 0 ? o = a[0] : (o = a[1],
            assert$f(this.g.mul(o).x.cmp(this.g.x.redMul(i)) === 0))
        }
        var c;
        return n.basis ? c = n.basis.map(function(u) {
            return {
                a: new BN$8(u.a,16),
                b: new BN$8(u.b,16)
            }
        }) : c = this._getEndoBasis(o),
        {
            beta: i,
            lambda: o,
            basis: c
        }
    }
}
;
ShortCurve.prototype._getEndoRoots = function(n) {
    var i = n === this.p ? this.red : BN$8.mont(n)
      , o = new BN$8(2).toRed(i).redInvm()
      , l = o.redNeg()
      , a = new BN$8(3).toRed(i).redNeg().redSqrt().redMul(o)
      , c = l.redAdd(a).fromRed()
      , u = l.redSub(a).fromRed();
    return [c, u]
}
;
ShortCurve.prototype._getEndoBasis = function(n) {
    for (var i = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), o = n, l = this.n.clone(), a = new BN$8(1), c = new BN$8(0), u = new BN$8(0), h = new BN$8(1), m, d, p, b, g, $, N, I = 0, L, T; o.cmpn(0) !== 0; ) {
        var M = l.div(o);
        L = l.sub(M.mul(o)),
        T = u.sub(M.mul(a));
        var q = h.sub(M.mul(c));
        if (!p && L.cmp(i) < 0)
            m = N.neg(),
            d = a,
            p = L.neg(),
            b = T;
        else if (p && ++I === 2)
            break;
        N = L,
        l = o,
        o = L,
        u = a,
        a = T,
        h = c,
        c = q
    }
    g = L.neg(),
    $ = T;
    var Q = p.sqr().add(b.sqr())
      , Y = g.sqr().add($.sqr());
    return Y.cmp(Q) >= 0 && (g = m,
    $ = d),
    p.negative && (p = p.neg(),
    b = b.neg()),
    g.negative && (g = g.neg(),
    $ = $.neg()),
    [{
        a: p,
        b
    }, {
        a: g,
        b: $
    }]
}
;
ShortCurve.prototype._endoSplit = function(n) {
    var i = this.endo.basis
      , o = i[0]
      , l = i[1]
      , a = l.b.mul(n).divRound(this.n)
      , c = o.b.neg().mul(n).divRound(this.n)
      , u = a.mul(o.a)
      , h = c.mul(l.a)
      , m = a.mul(o.b)
      , d = c.mul(l.b)
      , p = n.sub(u).sub(h)
      , b = m.add(d).neg();
    return {
        k1: p,
        k2: b
    }
}
;
ShortCurve.prototype.pointFromX = function(n, i) {
    n = new BN$8(n,16),
    n.red || (n = n.toRed(this.red));
    var o = n.redSqr().redMul(n).redIAdd(n.redMul(this.a)).redIAdd(this.b)
      , l = o.redSqrt();
    if (l.redSqr().redSub(o).cmp(this.zero) !== 0)
        throw new Error("invalid point");
    var a = l.fromRed().isOdd();
    return (i && !a || !i && a) && (l = l.redNeg()),
    this.point(n, l)
}
;
ShortCurve.prototype.validate = function(n) {
    if (n.inf)
        return !0;
    var i = n.x
      , o = n.y
      , l = this.a.redMul(i)
      , a = i.redSqr().redMul(i).redIAdd(l).redIAdd(this.b);
    return o.redSqr().redISub(a).cmpn(0) === 0
}
;
ShortCurve.prototype._endoWnafMulAdd = function(n, i, o) {
    for (var l = this._endoWnafT1, a = this._endoWnafT2, c = 0; c < n.length; c++) {
        var u = this._endoSplit(i[c])
          , h = n[c]
          , m = h._getBeta();
        u.k1.negative && (u.k1.ineg(),
        h = h.neg(!0)),
        u.k2.negative && (u.k2.ineg(),
        m = m.neg(!0)),
        l[c * 2] = h,
        l[c * 2 + 1] = m,
        a[c * 2] = u.k1,
        a[c * 2 + 1] = u.k2
    }
    for (var d = this._wnafMulAdd(1, l, a, c * 2, o), p = 0; p < c * 2; p++)
        l[p] = null,
        a[p] = null;
    return d
}
;
function Point$2(e, n, i, o) {
    Base$2.BasePoint.call(this, e, "affine"),
    n === null && i === null ? (this.x = null,
    this.y = null,
    this.inf = !0) : (this.x = new BN$8(n,16),
    this.y = new BN$8(i,16),
    o && (this.x.forceRed(this.curve.red),
    this.y.forceRed(this.curve.red)),
    this.x.red || (this.x = this.x.toRed(this.curve.red)),
    this.y.red || (this.y = this.y.toRed(this.curve.red)),
    this.inf = !1)
}
inherits$4(Point$2, Base$2.BasePoint);
ShortCurve.prototype.point = function(n, i, o) {
    return new Point$2(this,n,i,o)
}
;
ShortCurve.prototype.pointFromJSON = function(n, i) {
    return Point$2.fromJSON(this, n, i)
}
;
Point$2.prototype._getBeta = function() {
    if (this.curve.endo) {
        var n = this.precomputed;
        if (n && n.beta)
            return n.beta;
        var i = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (n) {
            var o = this.curve
              , l = function(a) {
                return o.point(a.x.redMul(o.endo.beta), a.y)
            };
            n.beta = i,
            i.precomputed = {
                beta: null,
                naf: n.naf && {
                    wnd: n.naf.wnd,
                    points: n.naf.points.map(l)
                },
                doubles: n.doubles && {
                    step: n.doubles.step,
                    points: n.doubles.points.map(l)
                }
            }
        }
        return i
    }
}
;
Point$2.prototype.toJSON = function() {
    return this.precomputed ? [this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
            step: this.precomputed.doubles.step,
            points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
            wnd: this.precomputed.naf.wnd,
            points: this.precomputed.naf.points.slice(1)
        }
    }] : [this.x, this.y]
}
;
Point$2.fromJSON = function(n, i, o) {
    typeof i == "string" && (i = JSON.parse(i));
    var l = n.point(i[0], i[1], o);
    if (!i[2])
        return l;
    function a(u) {
        return n.point(u[0], u[1], o)
    }
    var c = i[2];
    return l.precomputed = {
        beta: null,
        doubles: c.doubles && {
            step: c.doubles.step,
            points: [l].concat(c.doubles.points.map(a))
        },
        naf: c.naf && {
            wnd: c.naf.wnd,
            points: [l].concat(c.naf.points.map(a))
        }
    },
    l
}
;
Point$2.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
}
;
Point$2.prototype.isInfinity = function() {
    return this.inf
}
;
Point$2.prototype.add = function(n) {
    if (this.inf)
        return n;
    if (n.inf)
        return this;
    if (this.eq(n))
        return this.dbl();
    if (this.neg().eq(n))
        return this.curve.point(null, null);
    if (this.x.cmp(n.x) === 0)
        return this.curve.point(null, null);
    var i = this.y.redSub(n.y);
    i.cmpn(0) !== 0 && (i = i.redMul(this.x.redSub(n.x).redInvm()));
    var o = i.redSqr().redISub(this.x).redISub(n.x)
      , l = i.redMul(this.x.redSub(o)).redISub(this.y);
    return this.curve.point(o, l)
}
;
Point$2.prototype.dbl = function() {
    if (this.inf)
        return this;
    var n = this.y.redAdd(this.y);
    if (n.cmpn(0) === 0)
        return this.curve.point(null, null);
    var i = this.curve.a
      , o = this.x.redSqr()
      , l = n.redInvm()
      , a = o.redAdd(o).redIAdd(o).redIAdd(i).redMul(l)
      , c = a.redSqr().redISub(this.x.redAdd(this.x))
      , u = a.redMul(this.x.redSub(c)).redISub(this.y);
    return this.curve.point(c, u)
}
;
Point$2.prototype.getX = function() {
    return this.x.fromRed()
}
;
Point$2.prototype.getY = function() {
    return this.y.fromRed()
}
;
Point$2.prototype.mul = function(n) {
    return n = new BN$8(n,16),
    this.isInfinity() ? this : this._hasDoubles(n) ? this.curve._fixedNafMul(this, n) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [n]) : this.curve._wnafMul(this, n)
}
;
Point$2.prototype.mulAdd = function(n, i, o) {
    var l = [this, i]
      , a = [n, o];
    return this.curve.endo ? this.curve._endoWnafMulAdd(l, a) : this.curve._wnafMulAdd(1, l, a, 2)
}
;
Point$2.prototype.jmulAdd = function(n, i, o) {
    var l = [this, i]
      , a = [n, o];
    return this.curve.endo ? this.curve._endoWnafMulAdd(l, a, !0) : this.curve._wnafMulAdd(1, l, a, 2, !0)
}
;
Point$2.prototype.eq = function(n) {
    return this === n || this.inf === n.inf && (this.inf || this.x.cmp(n.x) === 0 && this.y.cmp(n.y) === 0)
}
;
Point$2.prototype.neg = function(n) {
    if (this.inf)
        return this;
    var i = this.curve.point(this.x, this.y.redNeg());
    if (n && this.precomputed) {
        var o = this.precomputed
          , l = function(a) {
            return a.neg()
        };
        i.precomputed = {
            naf: o.naf && {
                wnd: o.naf.wnd,
                points: o.naf.points.map(l)
            },
            doubles: o.doubles && {
                step: o.doubles.step,
                points: o.doubles.points.map(l)
            }
        }
    }
    return i
}
;
Point$2.prototype.toJ = function() {
    if (this.inf)
        return this.curve.jpoint(null, null, null);
    var n = this.curve.jpoint(this.x, this.y, this.curve.one);
    return n
}
;
function JPoint(e, n, i, o) {
    Base$2.BasePoint.call(this, e, "jacobian"),
    n === null && i === null && o === null ? (this.x = this.curve.one,
    this.y = this.curve.one,
    this.z = new BN$8(0)) : (this.x = new BN$8(n,16),
    this.y = new BN$8(i,16),
    this.z = new BN$8(o,16)),
    this.x.red || (this.x = this.x.toRed(this.curve.red)),
    this.y.red || (this.y = this.y.toRed(this.curve.red)),
    this.z.red || (this.z = this.z.toRed(this.curve.red)),
    this.zOne = this.z === this.curve.one
}
inherits$4(JPoint, Base$2.BasePoint);
ShortCurve.prototype.jpoint = function(n, i, o) {
    return new JPoint(this,n,i,o)
}
;
JPoint.prototype.toP = function() {
    if (this.isInfinity())
        return this.curve.point(null, null);
    var n = this.z.redInvm()
      , i = n.redSqr()
      , o = this.x.redMul(i)
      , l = this.y.redMul(i).redMul(n);
    return this.curve.point(o, l)
}
;
JPoint.prototype.neg = function() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
}
;
JPoint.prototype.add = function(n) {
    if (this.isInfinity())
        return n;
    if (n.isInfinity())
        return this;
    var i = n.z.redSqr()
      , o = this.z.redSqr()
      , l = this.x.redMul(i)
      , a = n.x.redMul(o)
      , c = this.y.redMul(i.redMul(n.z))
      , u = n.y.redMul(o.redMul(this.z))
      , h = l.redSub(a)
      , m = c.redSub(u);
    if (h.cmpn(0) === 0)
        return m.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
    var d = h.redSqr()
      , p = d.redMul(h)
      , b = l.redMul(d)
      , g = m.redSqr().redIAdd(p).redISub(b).redISub(b)
      , $ = m.redMul(b.redISub(g)).redISub(c.redMul(p))
      , N = this.z.redMul(n.z).redMul(h);
    return this.curve.jpoint(g, $, N)
}
;
JPoint.prototype.mixedAdd = function(n) {
    if (this.isInfinity())
        return n.toJ();
    if (n.isInfinity())
        return this;
    var i = this.z.redSqr()
      , o = this.x
      , l = n.x.redMul(i)
      , a = this.y
      , c = n.y.redMul(i).redMul(this.z)
      , u = o.redSub(l)
      , h = a.redSub(c);
    if (u.cmpn(0) === 0)
        return h.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
    var m = u.redSqr()
      , d = m.redMul(u)
      , p = o.redMul(m)
      , b = h.redSqr().redIAdd(d).redISub(p).redISub(p)
      , g = h.redMul(p.redISub(b)).redISub(a.redMul(d))
      , $ = this.z.redMul(u);
    return this.curve.jpoint(b, g, $)
}
;
JPoint.prototype.dblp = function(n) {
    if (n === 0)
        return this;
    if (this.isInfinity())
        return this;
    if (!n)
        return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
        var o = this;
        for (i = 0; i < n; i++)
            o = o.dbl();
        return o
    }
    var l = this.curve.a
      , a = this.curve.tinv
      , c = this.x
      , u = this.y
      , h = this.z
      , m = h.redSqr().redSqr()
      , d = u.redAdd(u);
    for (i = 0; i < n; i++) {
        var p = c.redSqr()
          , b = d.redSqr()
          , g = b.redSqr()
          , $ = p.redAdd(p).redIAdd(p).redIAdd(l.redMul(m))
          , N = c.redMul(b)
          , I = $.redSqr().redISub(N.redAdd(N))
          , L = N.redISub(I)
          , T = $.redMul(L);
        T = T.redIAdd(T).redISub(g);
        var M = d.redMul(h);
        i + 1 < n && (m = m.redMul(g)),
        c = I,
        h = M,
        d = T
    }
    return this.curve.jpoint(c, d.redMul(a), h)
}
;
JPoint.prototype.dbl = function() {
    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
}
;
JPoint.prototype._zeroDbl = function() {
    var n, i, o;
    if (this.zOne) {
        var l = this.x.redSqr()
          , a = this.y.redSqr()
          , c = a.redSqr()
          , u = this.x.redAdd(a).redSqr().redISub(l).redISub(c);
        u = u.redIAdd(u);
        var h = l.redAdd(l).redIAdd(l)
          , m = h.redSqr().redISub(u).redISub(u)
          , d = c.redIAdd(c);
        d = d.redIAdd(d),
        d = d.redIAdd(d),
        n = m,
        i = h.redMul(u.redISub(m)).redISub(d),
        o = this.y.redAdd(this.y)
    } else {
        var p = this.x.redSqr()
          , b = this.y.redSqr()
          , g = b.redSqr()
          , $ = this.x.redAdd(b).redSqr().redISub(p).redISub(g);
        $ = $.redIAdd($);
        var N = p.redAdd(p).redIAdd(p)
          , I = N.redSqr()
          , L = g.redIAdd(g);
        L = L.redIAdd(L),
        L = L.redIAdd(L),
        n = I.redISub($).redISub($),
        i = N.redMul($.redISub(n)).redISub(L),
        o = this.y.redMul(this.z),
        o = o.redIAdd(o)
    }
    return this.curve.jpoint(n, i, o)
}
;
JPoint.prototype._threeDbl = function() {
    var n, i, o;
    if (this.zOne) {
        var l = this.x.redSqr()
          , a = this.y.redSqr()
          , c = a.redSqr()
          , u = this.x.redAdd(a).redSqr().redISub(l).redISub(c);
        u = u.redIAdd(u);
        var h = l.redAdd(l).redIAdd(l).redIAdd(this.curve.a)
          , m = h.redSqr().redISub(u).redISub(u);
        n = m;
        var d = c.redIAdd(c);
        d = d.redIAdd(d),
        d = d.redIAdd(d),
        i = h.redMul(u.redISub(m)).redISub(d),
        o = this.y.redAdd(this.y)
    } else {
        var p = this.z.redSqr()
          , b = this.y.redSqr()
          , g = this.x.redMul(b)
          , $ = this.x.redSub(p).redMul(this.x.redAdd(p));
        $ = $.redAdd($).redIAdd($);
        var N = g.redIAdd(g);
        N = N.redIAdd(N);
        var I = N.redAdd(N);
        n = $.redSqr().redISub(I),
        o = this.y.redAdd(this.z).redSqr().redISub(b).redISub(p);
        var L = b.redSqr();
        L = L.redIAdd(L),
        L = L.redIAdd(L),
        L = L.redIAdd(L),
        i = $.redMul(N.redISub(n)).redISub(L)
    }
    return this.curve.jpoint(n, i, o)
}
;
JPoint.prototype._dbl = function() {
    var n = this.curve.a
      , i = this.x
      , o = this.y
      , l = this.z
      , a = l.redSqr().redSqr()
      , c = i.redSqr()
      , u = o.redSqr()
      , h = c.redAdd(c).redIAdd(c).redIAdd(n.redMul(a))
      , m = i.redAdd(i);
    m = m.redIAdd(m);
    var d = m.redMul(u)
      , p = h.redSqr().redISub(d.redAdd(d))
      , b = d.redISub(p)
      , g = u.redSqr();
    g = g.redIAdd(g),
    g = g.redIAdd(g),
    g = g.redIAdd(g);
    var $ = h.redMul(b).redISub(g)
      , N = o.redAdd(o).redMul(l);
    return this.curve.jpoint(p, $, N)
}
;
JPoint.prototype.trpl = function() {
    if (!this.curve.zeroA)
        return this.dbl().add(this);
    var n = this.x.redSqr()
      , i = this.y.redSqr()
      , o = this.z.redSqr()
      , l = i.redSqr()
      , a = n.redAdd(n).redIAdd(n)
      , c = a.redSqr()
      , u = this.x.redAdd(i).redSqr().redISub(n).redISub(l);
    u = u.redIAdd(u),
    u = u.redAdd(u).redIAdd(u),
    u = u.redISub(c);
    var h = u.redSqr()
      , m = l.redIAdd(l);
    m = m.redIAdd(m),
    m = m.redIAdd(m),
    m = m.redIAdd(m);
    var d = a.redIAdd(u).redSqr().redISub(c).redISub(h).redISub(m)
      , p = i.redMul(d);
    p = p.redIAdd(p),
    p = p.redIAdd(p);
    var b = this.x.redMul(h).redISub(p);
    b = b.redIAdd(b),
    b = b.redIAdd(b);
    var g = this.y.redMul(d.redMul(m.redISub(d)).redISub(u.redMul(h)));
    g = g.redIAdd(g),
    g = g.redIAdd(g),
    g = g.redIAdd(g);
    var $ = this.z.redAdd(u).redSqr().redISub(o).redISub(h);
    return this.curve.jpoint(b, g, $)
}
;
JPoint.prototype.mul = function(n, i) {
    return n = new BN$8(n,i),
    this.curve._wnafMul(this, n)
}
;
JPoint.prototype.eq = function(n) {
    if (n.type === "affine")
        return this.eq(n.toJ());
    if (this === n)
        return !0;
    var i = this.z.redSqr()
      , o = n.z.redSqr();
    if (this.x.redMul(o).redISub(n.x.redMul(i)).cmpn(0) !== 0)
        return !1;
    var l = i.redMul(this.z)
      , a = o.redMul(n.z);
    return this.y.redMul(a).redISub(n.y.redMul(l)).cmpn(0) === 0
}
;
JPoint.prototype.eqXToP = function(n) {
    var i = this.z.redSqr()
      , o = n.toRed(this.curve.red).redMul(i);
    if (this.x.cmp(o) === 0)
        return !0;
    for (var l = n.clone(), a = this.curve.redN.redMul(i); ; ) {
        if (l.iadd(this.curve.n),
        l.cmp(this.curve.p) >= 0)
            return !1;
        if (o.redIAdd(a),
        this.x.cmp(o) === 0)
            return !0
    }
}
;
JPoint.prototype.inspect = function() {
    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
}
;
JPoint.prototype.isInfinity = function() {
    return this.z.cmpn(0) === 0
}
;
var BN$7 = bnExports$1
  , inherits$3 = inherits_browserExports
  , Base$1 = base$1
  , utils$k = utils$o;
function MontCurve(e) {
    Base$1.call(this, "mont", e),
    this.a = new BN$7(e.a,16).toRed(this.red),
    this.b = new BN$7(e.b,16).toRed(this.red),
    this.i4 = new BN$7(4).toRed(this.red).redInvm(),
    this.two = new BN$7(2).toRed(this.red),
    this.a24 = this.i4.redMul(this.a.redAdd(this.two))
}
inherits$3(MontCurve, Base$1);
var mont = MontCurve;
MontCurve.prototype.validate = function(n) {
    var i = n.normalize().x
      , o = i.redSqr()
      , l = o.redMul(i).redAdd(o.redMul(this.a)).redAdd(i)
      , a = l.redSqrt();
    return a.redSqr().cmp(l) === 0
}
;
function Point$1(e, n, i) {
    Base$1.BasePoint.call(this, e, "projective"),
    n === null && i === null ? (this.x = this.curve.one,
    this.z = this.curve.zero) : (this.x = new BN$7(n,16),
    this.z = new BN$7(i,16),
    this.x.red || (this.x = this.x.toRed(this.curve.red)),
    this.z.red || (this.z = this.z.toRed(this.curve.red)))
}
inherits$3(Point$1, Base$1.BasePoint);
MontCurve.prototype.decodePoint = function(n, i) {
    return this.point(utils$k.toArray(n, i), 1)
}
;
MontCurve.prototype.point = function(n, i) {
    return new Point$1(this,n,i)
}
;
MontCurve.prototype.pointFromJSON = function(n) {
    return Point$1.fromJSON(this, n)
}
;
Point$1.prototype.precompute = function() {}
;
Point$1.prototype._encode = function() {
    return this.getX().toArray("be", this.curve.p.byteLength())
}
;
Point$1.fromJSON = function(n, i) {
    return new Point$1(n,i[0],i[1] || n.one)
}
;
Point$1.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
}
;
Point$1.prototype.isInfinity = function() {
    return this.z.cmpn(0) === 0
}
;
Point$1.prototype.dbl = function() {
    var n = this.x.redAdd(this.z)
      , i = n.redSqr()
      , o = this.x.redSub(this.z)
      , l = o.redSqr()
      , a = i.redSub(l)
      , c = i.redMul(l)
      , u = a.redMul(l.redAdd(this.curve.a24.redMul(a)));
    return this.curve.point(c, u)
}
;
Point$1.prototype.add = function() {
    throw new Error("Not supported on Montgomery curve")
}
;
Point$1.prototype.diffAdd = function(n, i) {
    var o = this.x.redAdd(this.z)
      , l = this.x.redSub(this.z)
      , a = n.x.redAdd(n.z)
      , c = n.x.redSub(n.z)
      , u = c.redMul(o)
      , h = a.redMul(l)
      , m = i.z.redMul(u.redAdd(h).redSqr())
      , d = i.x.redMul(u.redISub(h).redSqr());
    return this.curve.point(m, d)
}
;
Point$1.prototype.mul = function(n) {
    for (var i = n.clone(), o = this, l = this.curve.point(null, null), a = this, c = []; i.cmpn(0) !== 0; i.iushrn(1))
        c.push(i.andln(1));
    for (var u = c.length - 1; u >= 0; u--)
        c[u] === 0 ? (o = o.diffAdd(l, a),
        l = l.dbl()) : (l = o.diffAdd(l, a),
        o = o.dbl());
    return l
}
;
Point$1.prototype.mulAdd = function() {
    throw new Error("Not supported on Montgomery curve")
}
;
Point$1.prototype.jumlAdd = function() {
    throw new Error("Not supported on Montgomery curve")
}
;
Point$1.prototype.eq = function(n) {
    return this.getX().cmp(n.getX()) === 0
}
;
Point$1.prototype.normalize = function() {
    return this.x = this.x.redMul(this.z.redInvm()),
    this.z = this.curve.one,
    this
}
;
Point$1.prototype.getX = function() {
    return this.normalize(),
    this.x.fromRed()
}
;
var utils$j = utils$o
  , BN$6 = bnExports$1
  , inherits$2 = inherits_browserExports
  , Base = base$1
  , assert$e = utils$j.assert;
function EdwardsCurve(e) {
    this.twisted = (e.a | 0) !== 1,
    this.mOneA = this.twisted && (e.a | 0) === -1,
    this.extended = this.mOneA,
    Base.call(this, "edwards", e),
    this.a = new BN$6(e.a,16).umod(this.red.m),
    this.a = this.a.toRed(this.red),
    this.c = new BN$6(e.c,16).toRed(this.red),
    this.c2 = this.c.redSqr(),
    this.d = new BN$6(e.d,16).toRed(this.red),
    this.dd = this.d.redAdd(this.d),
    assert$e(!this.twisted || this.c.fromRed().cmpn(1) === 0),
    this.oneC = (e.c | 0) === 1
}
inherits$2(EdwardsCurve, Base);
var edwards = EdwardsCurve;
EdwardsCurve.prototype._mulA = function(n) {
    return this.mOneA ? n.redNeg() : this.a.redMul(n)
}
;
EdwardsCurve.prototype._mulC = function(n) {
    return this.oneC ? n : this.c.redMul(n)
}
;
EdwardsCurve.prototype.jpoint = function(n, i, o, l) {
    return this.point(n, i, o, l)
}
;
EdwardsCurve.prototype.pointFromX = function(n, i) {
    n = new BN$6(n,16),
    n.red || (n = n.toRed(this.red));
    var o = n.redSqr()
      , l = this.c2.redSub(this.a.redMul(o))
      , a = this.one.redSub(this.c2.redMul(this.d).redMul(o))
      , c = l.redMul(a.redInvm())
      , u = c.redSqrt();
    if (u.redSqr().redSub(c).cmp(this.zero) !== 0)
        throw new Error("invalid point");
    var h = u.fromRed().isOdd();
    return (i && !h || !i && h) && (u = u.redNeg()),
    this.point(n, u)
}
;
EdwardsCurve.prototype.pointFromY = function(n, i) {
    n = new BN$6(n,16),
    n.red || (n = n.toRed(this.red));
    var o = n.redSqr()
      , l = o.redSub(this.c2)
      , a = o.redMul(this.d).redMul(this.c2).redSub(this.a)
      , c = l.redMul(a.redInvm());
    if (c.cmp(this.zero) === 0) {
        if (i)
            throw new Error("invalid point");
        return this.point(this.zero, n)
    }
    var u = c.redSqrt();
    if (u.redSqr().redSub(c).cmp(this.zero) !== 0)
        throw new Error("invalid point");
    return u.fromRed().isOdd() !== i && (u = u.redNeg()),
    this.point(u, n)
}
;
EdwardsCurve.prototype.validate = function(n) {
    if (n.isInfinity())
        return !0;
    n.normalize();
    var i = n.x.redSqr()
      , o = n.y.redSqr()
      , l = i.redMul(this.a).redAdd(o)
      , a = this.c2.redMul(this.one.redAdd(this.d.redMul(i).redMul(o)));
    return l.cmp(a) === 0
}
;
function Point(e, n, i, o, l) {
    Base.BasePoint.call(this, e, "projective"),
    n === null && i === null && o === null ? (this.x = this.curve.zero,
    this.y = this.curve.one,
    this.z = this.curve.one,
    this.t = this.curve.zero,
    this.zOne = !0) : (this.x = new BN$6(n,16),
    this.y = new BN$6(i,16),
    this.z = o ? new BN$6(o,16) : this.curve.one,
    this.t = l && new BN$6(l,16),
    this.x.red || (this.x = this.x.toRed(this.curve.red)),
    this.y.red || (this.y = this.y.toRed(this.curve.red)),
    this.z.red || (this.z = this.z.toRed(this.curve.red)),
    this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
    this.zOne = this.z === this.curve.one,
    this.curve.extended && !this.t && (this.t = this.x.redMul(this.y),
    this.zOne || (this.t = this.t.redMul(this.z.redInvm()))))
}
inherits$2(Point, Base.BasePoint);
EdwardsCurve.prototype.pointFromJSON = function(n) {
    return Point.fromJSON(this, n)
}
;
EdwardsCurve.prototype.point = function(n, i, o, l) {
    return new Point(this,n,i,o,l)
}
;
Point.fromJSON = function(n, i) {
    return new Point(n,i[0],i[1],i[2])
}
;
Point.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
}
;
Point.prototype.isInfinity = function() {
    return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0)
}
;
Point.prototype._extDbl = function() {
    var n = this.x.redSqr()
      , i = this.y.redSqr()
      , o = this.z.redSqr();
    o = o.redIAdd(o);
    var l = this.curve._mulA(n)
      , a = this.x.redAdd(this.y).redSqr().redISub(n).redISub(i)
      , c = l.redAdd(i)
      , u = c.redSub(o)
      , h = l.redSub(i)
      , m = a.redMul(u)
      , d = c.redMul(h)
      , p = a.redMul(h)
      , b = u.redMul(c);
    return this.curve.point(m, d, b, p)
}
;
Point.prototype._projDbl = function() {
    var n = this.x.redAdd(this.y).redSqr(), i = this.x.redSqr(), o = this.y.redSqr(), l, a, c, u, h, m;
    if (this.curve.twisted) {
        u = this.curve._mulA(i);
        var d = u.redAdd(o);
        this.zOne ? (l = n.redSub(i).redSub(o).redMul(d.redSub(this.curve.two)),
        a = d.redMul(u.redSub(o)),
        c = d.redSqr().redSub(d).redSub(d)) : (h = this.z.redSqr(),
        m = d.redSub(h).redISub(h),
        l = n.redSub(i).redISub(o).redMul(m),
        a = d.redMul(u.redSub(o)),
        c = d.redMul(m))
    } else
        u = i.redAdd(o),
        h = this.curve._mulC(this.z).redSqr(),
        m = u.redSub(h).redSub(h),
        l = this.curve._mulC(n.redISub(u)).redMul(m),
        a = this.curve._mulC(u).redMul(i.redISub(o)),
        c = u.redMul(m);
    return this.curve.point(l, a, c)
}
;
Point.prototype.dbl = function() {
    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl()
}
;
Point.prototype._extAdd = function(n) {
    var i = this.y.redSub(this.x).redMul(n.y.redSub(n.x))
      , o = this.y.redAdd(this.x).redMul(n.y.redAdd(n.x))
      , l = this.t.redMul(this.curve.dd).redMul(n.t)
      , a = this.z.redMul(n.z.redAdd(n.z))
      , c = o.redSub(i)
      , u = a.redSub(l)
      , h = a.redAdd(l)
      , m = o.redAdd(i)
      , d = c.redMul(u)
      , p = h.redMul(m)
      , b = c.redMul(m)
      , g = u.redMul(h);
    return this.curve.point(d, p, g, b)
}
;
Point.prototype._projAdd = function(n) {
    var i = this.z.redMul(n.z), o = i.redSqr(), l = this.x.redMul(n.x), a = this.y.redMul(n.y), c = this.curve.d.redMul(l).redMul(a), u = o.redSub(c), h = o.redAdd(c), m = this.x.redAdd(this.y).redMul(n.x.redAdd(n.y)).redISub(l).redISub(a), d = i.redMul(u).redMul(m), p, b;
    return this.curve.twisted ? (p = i.redMul(h).redMul(a.redSub(this.curve._mulA(l))),
    b = u.redMul(h)) : (p = i.redMul(h).redMul(a.redSub(l)),
    b = this.curve._mulC(u).redMul(h)),
    this.curve.point(d, p, b)
}
;
Point.prototype.add = function(n) {
    return this.isInfinity() ? n : n.isInfinity() ? this : this.curve.extended ? this._extAdd(n) : this._projAdd(n)
}
;
Point.prototype.mul = function(n) {
    return this._hasDoubles(n) ? this.curve._fixedNafMul(this, n) : this.curve._wnafMul(this, n)
}
;
Point.prototype.mulAdd = function(n, i, o) {
    return this.curve._wnafMulAdd(1, [this, i], [n, o], 2, !1)
}
;
Point.prototype.jmulAdd = function(n, i, o) {
    return this.curve._wnafMulAdd(1, [this, i], [n, o], 2, !0)
}
;
Point.prototype.normalize = function() {
    if (this.zOne)
        return this;
    var n = this.z.redInvm();
    return this.x = this.x.redMul(n),
    this.y = this.y.redMul(n),
    this.t && (this.t = this.t.redMul(n)),
    this.z = this.curve.one,
    this.zOne = !0,
    this
}
;
Point.prototype.neg = function() {
    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg())
}
;
Point.prototype.getX = function() {
    return this.normalize(),
    this.x.fromRed()
}
;
Point.prototype.getY = function() {
    return this.normalize(),
    this.y.fromRed()
}
;
Point.prototype.eq = function(n) {
    return this === n || this.getX().cmp(n.getX()) === 0 && this.getY().cmp(n.getY()) === 0
}
;
Point.prototype.eqXToP = function(n) {
    var i = n.toRed(this.curve.red).redMul(this.z);
    if (this.x.cmp(i) === 0)
        return !0;
    for (var o = n.clone(), l = this.curve.redN.redMul(this.z); ; ) {
        if (o.iadd(this.curve.n),
        o.cmp(this.curve.p) >= 0)
            return !1;
        if (i.redIAdd(l),
        this.x.cmp(i) === 0)
            return !0
    }
}
;
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;
(function(e) {
    var n = e;
    n.base = base$1,
    n.short = short,
    n.mont = mont,
    n.edwards = edwards
}
)(curve);
var curves$1 = {}
  , hash$2 = {}
  , utils$i = {}
  , assert$d = minimalisticAssert
  , inherits$1 = inherits_browserExports;
utils$i.inherits = inherits$1;
function isSurrogatePair(e, n) {
    return (e.charCodeAt(n) & 64512) !== 55296 || n < 0 || n + 1 >= e.length ? !1 : (e.charCodeAt(n + 1) & 64512) === 56320
}
function toArray(e, n) {
    if (Array.isArray(e))
        return e.slice();
    if (!e)
        return [];
    var i = [];
    if (typeof e == "string")
        if (n) {
            if (n === "hex")
                for (e = e.replace(/[^a-z0-9]+/ig, ""),
                e.length % 2 !== 0 && (e = "0" + e),
                l = 0; l < e.length; l += 2)
                    i.push(parseInt(e[l] + e[l + 1], 16))
        } else
            for (var o = 0, l = 0; l < e.length; l++) {
                var a = e.charCodeAt(l);
                a < 128 ? i[o++] = a : a < 2048 ? (i[o++] = a >> 6 | 192,
                i[o++] = a & 63 | 128) : isSurrogatePair(e, l) ? (a = 65536 + ((a & 1023) << 10) + (e.charCodeAt(++l) & 1023),
                i[o++] = a >> 18 | 240,
                i[o++] = a >> 12 & 63 | 128,
                i[o++] = a >> 6 & 63 | 128,
                i[o++] = a & 63 | 128) : (i[o++] = a >> 12 | 224,
                i[o++] = a >> 6 & 63 | 128,
                i[o++] = a & 63 | 128)
            }
    else
        for (l = 0; l < e.length; l++)
            i[l] = e[l] | 0;
    return i
}
utils$i.toArray = toArray;
function toHex(e) {
    for (var n = "", i = 0; i < e.length; i++)
        n += zero2(e[i].toString(16));
    return n
}
utils$i.toHex = toHex;
function htonl(e) {
    var n = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;
    return n >>> 0
}
utils$i.htonl = htonl;
function toHex32(e, n) {
    for (var i = "", o = 0; o < e.length; o++) {
        var l = e[o];
        n === "little" && (l = htonl(l)),
        i += zero8(l.toString(16))
    }
    return i
}
utils$i.toHex32 = toHex32;
function zero2(e) {
    return e.length === 1 ? "0" + e : e
}
utils$i.zero2 = zero2;
function zero8(e) {
    return e.length === 7 ? "0" + e : e.length === 6 ? "00" + e : e.length === 5 ? "000" + e : e.length === 4 ? "0000" + e : e.length === 3 ? "00000" + e : e.length === 2 ? "000000" + e : e.length === 1 ? "0000000" + e : e
}
utils$i.zero8 = zero8;
function join32(e, n, i, o) {
    var l = i - n;
    assert$d(l % 4 === 0);
    for (var a = new Array(l / 4), c = 0, u = n; c < a.length; c++,
    u += 4) {
        var h;
        o === "big" ? h = e[u] << 24 | e[u + 1] << 16 | e[u + 2] << 8 | e[u + 3] : h = e[u + 3] << 24 | e[u + 2] << 16 | e[u + 1] << 8 | e[u],
        a[c] = h >>> 0
    }
    return a
}
utils$i.join32 = join32;
function split32(e, n) {
    for (var i = new Array(e.length * 4), o = 0, l = 0; o < e.length; o++,
    l += 4) {
        var a = e[o];
        n === "big" ? (i[l] = a >>> 24,
        i[l + 1] = a >>> 16 & 255,
        i[l + 2] = a >>> 8 & 255,
        i[l + 3] = a & 255) : (i[l + 3] = a >>> 24,
        i[l + 2] = a >>> 16 & 255,
        i[l + 1] = a >>> 8 & 255,
        i[l] = a & 255)
    }
    return i
}
utils$i.split32 = split32;
function rotr32$1(e, n) {
    return e >>> n | e << 32 - n
}
utils$i.rotr32 = rotr32$1;
function rotl32$2(e, n) {
    return e << n | e >>> 32 - n
}
utils$i.rotl32 = rotl32$2;
function sum32$3(e, n) {
    return e + n >>> 0
}
utils$i.sum32 = sum32$3;
function sum32_3$1(e, n, i) {
    return e + n + i >>> 0
}
utils$i.sum32_3 = sum32_3$1;
function sum32_4$2(e, n, i, o) {
    return e + n + i + o >>> 0
}
utils$i.sum32_4 = sum32_4$2;
function sum32_5$2(e, n, i, o, l) {
    return e + n + i + o + l >>> 0
}
utils$i.sum32_5 = sum32_5$2;
function sum64$1(e, n, i, o) {
    var l = e[n]
      , a = e[n + 1]
      , c = o + a >>> 0
      , u = (c < o ? 1 : 0) + i + l;
    e[n] = u >>> 0,
    e[n + 1] = c
}
utils$i.sum64 = sum64$1;
function sum64_hi$1(e, n, i, o) {
    var l = n + o >>> 0
      , a = (l < n ? 1 : 0) + e + i;
    return a >>> 0
}
utils$i.sum64_hi = sum64_hi$1;
function sum64_lo$1(e, n, i, o) {
    var l = n + o;
    return l >>> 0
}
utils$i.sum64_lo = sum64_lo$1;
function sum64_4_hi$1(e, n, i, o, l, a, c, u) {
    var h = 0
      , m = n;
    m = m + o >>> 0,
    h += m < n ? 1 : 0,
    m = m + a >>> 0,
    h += m < a ? 1 : 0,
    m = m + u >>> 0,
    h += m < u ? 1 : 0;
    var d = e + i + l + c + h;
    return d >>> 0
}
utils$i.sum64_4_hi = sum64_4_hi$1;
function sum64_4_lo$1(e, n, i, o, l, a, c, u) {
    var h = n + o + a + u;
    return h >>> 0
}
utils$i.sum64_4_lo = sum64_4_lo$1;
function sum64_5_hi$1(e, n, i, o, l, a, c, u, h, m) {
    var d = 0
      , p = n;
    p = p + o >>> 0,
    d += p < n ? 1 : 0,
    p = p + a >>> 0,
    d += p < a ? 1 : 0,
    p = p + u >>> 0,
    d += p < u ? 1 : 0,
    p = p + m >>> 0,
    d += p < m ? 1 : 0;
    var b = e + i + l + c + h + d;
    return b >>> 0
}
utils$i.sum64_5_hi = sum64_5_hi$1;
function sum64_5_lo$1(e, n, i, o, l, a, c, u, h, m) {
    var d = n + o + a + u + m;
    return d >>> 0
}
utils$i.sum64_5_lo = sum64_5_lo$1;
function rotr64_hi$1(e, n, i) {
    var o = n << 32 - i | e >>> i;
    return o >>> 0
}
utils$i.rotr64_hi = rotr64_hi$1;
function rotr64_lo$1(e, n, i) {
    var o = e << 32 - i | n >>> i;
    return o >>> 0
}
utils$i.rotr64_lo = rotr64_lo$1;
function shr64_hi$1(e, n, i) {
    return e >>> i
}
utils$i.shr64_hi = shr64_hi$1;
function shr64_lo$1(e, n, i) {
    var o = e << 32 - i | n >>> i;
    return o >>> 0
}
utils$i.shr64_lo = shr64_lo$1;
var common$5 = {}
  , utils$h = utils$i
  , assert$c = minimalisticAssert;
function BlockHash$4() {
    this.pending = null,
    this.pendingTotal = 0,
    this.blockSize = this.constructor.blockSize,
    this.outSize = this.constructor.outSize,
    this.hmacStrength = this.constructor.hmacStrength,
    this.padLength = this.constructor.padLength / 8,
    this.endian = "big",
    this._delta8 = this.blockSize / 8,
    this._delta32 = this.blockSize / 32
}
common$5.BlockHash = BlockHash$4;
BlockHash$4.prototype.update = function(n, i) {
    if (n = utils$h.toArray(n, i),
    this.pending ? this.pending = this.pending.concat(n) : this.pending = n,
    this.pendingTotal += n.length,
    this.pending.length >= this._delta8) {
        n = this.pending;
        var o = n.length % this._delta8;
        this.pending = n.slice(n.length - o, n.length),
        this.pending.length === 0 && (this.pending = null),
        n = utils$h.join32(n, 0, n.length - o, this.endian);
        for (var l = 0; l < n.length; l += this._delta32)
            this._update(n, l, l + this._delta32)
    }
    return this
}
;
BlockHash$4.prototype.digest = function(n) {
    return this.update(this._pad()),
    assert$c(this.pending === null),
    this._digest(n)
}
;
BlockHash$4.prototype._pad = function() {
    var n = this.pendingTotal
      , i = this._delta8
      , o = i - (n + this.padLength) % i
      , l = new Array(o + this.padLength);
    l[0] = 128;
    for (var a = 1; a < o; a++)
        l[a] = 0;
    if (n <<= 3,
    this.endian === "big") {
        for (var c = 8; c < this.padLength; c++)
            l[a++] = 0;
        l[a++] = 0,
        l[a++] = 0,
        l[a++] = 0,
        l[a++] = 0,
        l[a++] = n >>> 24 & 255,
        l[a++] = n >>> 16 & 255,
        l[a++] = n >>> 8 & 255,
        l[a++] = n & 255
    } else
        for (l[a++] = n & 255,
        l[a++] = n >>> 8 & 255,
        l[a++] = n >>> 16 & 255,
        l[a++] = n >>> 24 & 255,
        l[a++] = 0,
        l[a++] = 0,
        l[a++] = 0,
        l[a++] = 0,
        c = 8; c < this.padLength; c++)
            l[a++] = 0;
    return l
}
;
var sha = {}
  , common$4 = {}
  , utils$g = utils$i
  , rotr32 = utils$g.rotr32;
function ft_1$1(e, n, i, o) {
    if (e === 0)
        return ch32$1(n, i, o);
    if (e === 1 || e === 3)
        return p32(n, i, o);
    if (e === 2)
        return maj32$1(n, i, o)
}
common$4.ft_1 = ft_1$1;
function ch32$1(e, n, i) {
    return e & n ^ ~e & i
}
common$4.ch32 = ch32$1;
function maj32$1(e, n, i) {
    return e & n ^ e & i ^ n & i
}
common$4.maj32 = maj32$1;
function p32(e, n, i) {
    return e ^ n ^ i
}
common$4.p32 = p32;
function s0_256$1(e) {
    return rotr32(e, 2) ^ rotr32(e, 13) ^ rotr32(e, 22)
}
common$4.s0_256 = s0_256$1;
function s1_256$1(e) {
    return rotr32(e, 6) ^ rotr32(e, 11) ^ rotr32(e, 25)
}
common$4.s1_256 = s1_256$1;
function g0_256$1(e) {
    return rotr32(e, 7) ^ rotr32(e, 18) ^ e >>> 3
}
common$4.g0_256 = g0_256$1;
function g1_256$1(e) {
    return rotr32(e, 17) ^ rotr32(e, 19) ^ e >>> 10
}
common$4.g1_256 = g1_256$1;
var utils$f = utils$i
  , common$3 = common$5
  , shaCommon$1 = common$4
  , rotl32$1 = utils$f.rotl32
  , sum32$2 = utils$f.sum32
  , sum32_5$1 = utils$f.sum32_5
  , ft_1 = shaCommon$1.ft_1
  , BlockHash$3 = common$3.BlockHash
  , sha1_K = [1518500249, 1859775393, 2400959708, 3395469782];
function SHA1() {
    if (!(this instanceof SHA1))
        return new SHA1;
    BlockHash$3.call(this),
    this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
    this.W = new Array(80)
}
utils$f.inherits(SHA1, BlockHash$3);
var _1 = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;
SHA1.prototype._update = function(n, i) {
    for (var o = this.W, l = 0; l < 16; l++)
        o[l] = n[i + l];
    for (; l < o.length; l++)
        o[l] = rotl32$1(o[l - 3] ^ o[l - 8] ^ o[l - 14] ^ o[l - 16], 1);
    var a = this.h[0]
      , c = this.h[1]
      , u = this.h[2]
      , h = this.h[3]
      , m = this.h[4];
    for (l = 0; l < o.length; l++) {
        var d = ~~(l / 20)
          , p = sum32_5$1(rotl32$1(a, 5), ft_1(d, c, u, h), m, o[l], sha1_K[d]);
        m = h,
        h = u,
        u = rotl32$1(c, 30),
        c = a,
        a = p
    }
    this.h[0] = sum32$2(this.h[0], a),
    this.h[1] = sum32$2(this.h[1], c),
    this.h[2] = sum32$2(this.h[2], u),
    this.h[3] = sum32$2(this.h[3], h),
    this.h[4] = sum32$2(this.h[4], m)
}
;
SHA1.prototype._digest = function(n) {
    return n === "hex" ? utils$f.toHex32(this.h, "big") : utils$f.split32(this.h, "big")
}
;
var utils$e = utils$i
  , common$2 = common$5
  , shaCommon = common$4
  , assert$b = minimalisticAssert
  , sum32$1 = utils$e.sum32
  , sum32_4$1 = utils$e.sum32_4
  , sum32_5 = utils$e.sum32_5
  , ch32 = shaCommon.ch32
  , maj32 = shaCommon.maj32
  , s0_256 = shaCommon.s0_256
  , s1_256 = shaCommon.s1_256
  , g0_256 = shaCommon.g0_256
  , g1_256 = shaCommon.g1_256
  , BlockHash$2 = common$2.BlockHash
  , sha256_K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function SHA256$1() {
    if (!(this instanceof SHA256$1))
        return new SHA256$1;
    BlockHash$2.call(this),
    this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
    this.k = sha256_K,
    this.W = new Array(64)
}
utils$e.inherits(SHA256$1, BlockHash$2);
var _256 = SHA256$1;
SHA256$1.blockSize = 512;
SHA256$1.outSize = 256;
SHA256$1.hmacStrength = 192;
SHA256$1.padLength = 64;
SHA256$1.prototype._update = function(n, i) {
    for (var o = this.W, l = 0; l < 16; l++)
        o[l] = n[i + l];
    for (; l < o.length; l++)
        o[l] = sum32_4$1(g1_256(o[l - 2]), o[l - 7], g0_256(o[l - 15]), o[l - 16]);
    var a = this.h[0]
      , c = this.h[1]
      , u = this.h[2]
      , h = this.h[3]
      , m = this.h[4]
      , d = this.h[5]
      , p = this.h[6]
      , b = this.h[7];
    for (assert$b(this.k.length === o.length),
    l = 0; l < o.length; l++) {
        var g = sum32_5(b, s1_256(m), ch32(m, d, p), this.k[l], o[l])
          , $ = sum32$1(s0_256(a), maj32(a, c, u));
        b = p,
        p = d,
        d = m,
        m = sum32$1(h, g),
        h = u,
        u = c,
        c = a,
        a = sum32$1(g, $)
    }
    this.h[0] = sum32$1(this.h[0], a),
    this.h[1] = sum32$1(this.h[1], c),
    this.h[2] = sum32$1(this.h[2], u),
    this.h[3] = sum32$1(this.h[3], h),
    this.h[4] = sum32$1(this.h[4], m),
    this.h[5] = sum32$1(this.h[5], d),
    this.h[6] = sum32$1(this.h[6], p),
    this.h[7] = sum32$1(this.h[7], b)
}
;
SHA256$1.prototype._digest = function(n) {
    return n === "hex" ? utils$e.toHex32(this.h, "big") : utils$e.split32(this.h, "big")
}
;
var utils$d = utils$i
  , SHA256 = _256;
function SHA224() {
    if (!(this instanceof SHA224))
        return new SHA224;
    SHA256.call(this),
    this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
}
utils$d.inherits(SHA224, SHA256);
var _224 = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;
SHA224.prototype._digest = function(n) {
    return n === "hex" ? utils$d.toHex32(this.h.slice(0, 7), "big") : utils$d.split32(this.h.slice(0, 7), "big")
}
;
var utils$c = utils$i
  , common$1 = common$5
  , assert$a = minimalisticAssert
  , rotr64_hi = utils$c.rotr64_hi
  , rotr64_lo = utils$c.rotr64_lo
  , shr64_hi = utils$c.shr64_hi
  , shr64_lo = utils$c.shr64_lo
  , sum64 = utils$c.sum64
  , sum64_hi = utils$c.sum64_hi
  , sum64_lo = utils$c.sum64_lo
  , sum64_4_hi = utils$c.sum64_4_hi
  , sum64_4_lo = utils$c.sum64_4_lo
  , sum64_5_hi = utils$c.sum64_5_hi
  , sum64_5_lo = utils$c.sum64_5_lo
  , BlockHash$1 = common$1.BlockHash
  , sha512_K = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function SHA512$1() {
    if (!(this instanceof SHA512$1))
        return new SHA512$1;
    BlockHash$1.call(this),
    this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209],
    this.k = sha512_K,
    this.W = new Array(160)
}
utils$c.inherits(SHA512$1, BlockHash$1);
var _512 = SHA512$1;
SHA512$1.blockSize = 1024;
SHA512$1.outSize = 512;
SHA512$1.hmacStrength = 192;
SHA512$1.padLength = 128;
SHA512$1.prototype._prepareBlock = function(n, i) {
    for (var o = this.W, l = 0; l < 32; l++)
        o[l] = n[i + l];
    for (; l < o.length; l += 2) {
        var a = g1_512_hi(o[l - 4], o[l - 3])
          , c = g1_512_lo(o[l - 4], o[l - 3])
          , u = o[l - 14]
          , h = o[l - 13]
          , m = g0_512_hi(o[l - 30], o[l - 29])
          , d = g0_512_lo(o[l - 30], o[l - 29])
          , p = o[l - 32]
          , b = o[l - 31];
        o[l] = sum64_4_hi(a, c, u, h, m, d, p, b),
        o[l + 1] = sum64_4_lo(a, c, u, h, m, d, p, b)
    }
}
;
SHA512$1.prototype._update = function(n, i) {
    this._prepareBlock(n, i);
    var o = this.W
      , l = this.h[0]
      , a = this.h[1]
      , c = this.h[2]
      , u = this.h[3]
      , h = this.h[4]
      , m = this.h[5]
      , d = this.h[6]
      , p = this.h[7]
      , b = this.h[8]
      , g = this.h[9]
      , $ = this.h[10]
      , N = this.h[11]
      , I = this.h[12]
      , L = this.h[13]
      , T = this.h[14]
      , M = this.h[15];
    assert$a(this.k.length === o.length);
    for (var q = 0; q < o.length; q += 2) {
        var Q = T
          , Y = M
          , ee = s1_512_hi(b, g)
          , ie = s1_512_lo(b, g)
          , te = ch64_hi(b, g, $, N, I)
          , ne = ch64_lo(b, g, $, N, I, L)
          , V = this.k[q]
          , w = this.k[q + 1]
          , x = o[q]
          , v = o[q + 1]
          , S = sum64_5_hi(Q, Y, ee, ie, te, ne, V, w, x, v)
          , D = sum64_5_lo(Q, Y, ee, ie, te, ne, V, w, x, v);
        Q = s0_512_hi(l, a),
        Y = s0_512_lo(l, a),
        ee = maj64_hi(l, a, c, u, h),
        ie = maj64_lo(l, a, c, u, h, m);
        var C = sum64_hi(Q, Y, ee, ie)
          , O = sum64_lo(Q, Y, ee, ie);
        T = I,
        M = L,
        I = $,
        L = N,
        $ = b,
        N = g,
        b = sum64_hi(d, p, S, D),
        g = sum64_lo(p, p, S, D),
        d = h,
        p = m,
        h = c,
        m = u,
        c = l,
        u = a,
        l = sum64_hi(S, D, C, O),
        a = sum64_lo(S, D, C, O)
    }
    sum64(this.h, 0, l, a),
    sum64(this.h, 2, c, u),
    sum64(this.h, 4, h, m),
    sum64(this.h, 6, d, p),
    sum64(this.h, 8, b, g),
    sum64(this.h, 10, $, N),
    sum64(this.h, 12, I, L),
    sum64(this.h, 14, T, M)
}
;
SHA512$1.prototype._digest = function(n) {
    return n === "hex" ? utils$c.toHex32(this.h, "big") : utils$c.split32(this.h, "big")
}
;
function ch64_hi(e, n, i, o, l) {
    var a = e & i ^ ~e & l;
    return a < 0 && (a += 4294967296),
    a
}
function ch64_lo(e, n, i, o, l, a) {
    var c = n & o ^ ~n & a;
    return c < 0 && (c += 4294967296),
    c
}
function maj64_hi(e, n, i, o, l) {
    var a = e & i ^ e & l ^ i & l;
    return a < 0 && (a += 4294967296),
    a
}
function maj64_lo(e, n, i, o, l, a) {
    var c = n & o ^ n & a ^ o & a;
    return c < 0 && (c += 4294967296),
    c
}
function s0_512_hi(e, n) {
    var i = rotr64_hi(e, n, 28)
      , o = rotr64_hi(n, e, 2)
      , l = rotr64_hi(n, e, 7)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function s0_512_lo(e, n) {
    var i = rotr64_lo(e, n, 28)
      , o = rotr64_lo(n, e, 2)
      , l = rotr64_lo(n, e, 7)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function s1_512_hi(e, n) {
    var i = rotr64_hi(e, n, 14)
      , o = rotr64_hi(e, n, 18)
      , l = rotr64_hi(n, e, 9)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function s1_512_lo(e, n) {
    var i = rotr64_lo(e, n, 14)
      , o = rotr64_lo(e, n, 18)
      , l = rotr64_lo(n, e, 9)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function g0_512_hi(e, n) {
    var i = rotr64_hi(e, n, 1)
      , o = rotr64_hi(e, n, 8)
      , l = shr64_hi(e, n, 7)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function g0_512_lo(e, n) {
    var i = rotr64_lo(e, n, 1)
      , o = rotr64_lo(e, n, 8)
      , l = shr64_lo(e, n, 7)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function g1_512_hi(e, n) {
    var i = rotr64_hi(e, n, 19)
      , o = rotr64_hi(n, e, 29)
      , l = shr64_hi(e, n, 6)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
function g1_512_lo(e, n) {
    var i = rotr64_lo(e, n, 19)
      , o = rotr64_lo(n, e, 29)
      , l = shr64_lo(e, n, 6)
      , a = i ^ o ^ l;
    return a < 0 && (a += 4294967296),
    a
}
var utils$b = utils$i
  , SHA512 = _512;
function SHA384() {
    if (!(this instanceof SHA384))
        return new SHA384;
    SHA512.call(this),
    this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
}
utils$b.inherits(SHA384, SHA512);
var _384 = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;
SHA384.prototype._digest = function(n) {
    return n === "hex" ? utils$b.toHex32(this.h.slice(0, 12), "big") : utils$b.split32(this.h.slice(0, 12), "big")
}
;
sha.sha1 = _1;
sha.sha224 = _224;
sha.sha256 = _256;
sha.sha384 = _384;
sha.sha512 = _512;
var ripemd = {}
  , utils$a = utils$i
  , common = common$5
  , rotl32 = utils$a.rotl32
  , sum32 = utils$a.sum32
  , sum32_3 = utils$a.sum32_3
  , sum32_4 = utils$a.sum32_4
  , BlockHash = common.BlockHash;
function RIPEMD160() {
    if (!(this instanceof RIPEMD160))
        return new RIPEMD160;
    BlockHash.call(this),
    this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
    this.endian = "little"
}
utils$a.inherits(RIPEMD160, BlockHash);
ripemd.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;
RIPEMD160.prototype._update = function(n, i) {
    for (var o = this.h[0], l = this.h[1], a = this.h[2], c = this.h[3], u = this.h[4], h = o, m = l, d = a, p = c, b = u, g = 0; g < 80; g++) {
        var $ = sum32(rotl32(sum32_4(o, f(g, l, a, c), n[r[g] + i], K(g)), s[g]), u);
        o = u,
        u = c,
        c = rotl32(a, 10),
        a = l,
        l = $,
        $ = sum32(rotl32(sum32_4(h, f(79 - g, m, d, p), n[rh[g] + i], Kh(g)), sh[g]), b),
        h = b,
        b = p,
        p = rotl32(d, 10),
        d = m,
        m = $
    }
    $ = sum32_3(this.h[1], a, p),
    this.h[1] = sum32_3(this.h[2], c, b),
    this.h[2] = sum32_3(this.h[3], u, h),
    this.h[3] = sum32_3(this.h[4], o, m),
    this.h[4] = sum32_3(this.h[0], l, d),
    this.h[0] = $
}
;
RIPEMD160.prototype._digest = function(n) {
    return n === "hex" ? utils$a.toHex32(this.h, "little") : utils$a.split32(this.h, "little")
}
;
function f(e, n, i, o) {
    return e <= 15 ? n ^ i ^ o : e <= 31 ? n & i | ~n & o : e <= 47 ? (n | ~i) ^ o : e <= 63 ? n & o | i & ~o : n ^ (i | ~o)
}
function K(e) {
    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838
}
function Kh(e) {
    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0
}
var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]
  , rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]
  , s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]
  , sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
  , utils$9 = utils$i
  , assert$9 = minimalisticAssert;
function Hmac(e, n, i) {
    if (!(this instanceof Hmac))
        return new Hmac(e,n,i);
    this.Hash = e,
    this.blockSize = e.blockSize / 8,
    this.outSize = e.outSize / 8,
    this.inner = null,
    this.outer = null,
    this._init(utils$9.toArray(n, i))
}
var hmac$1 = Hmac;
Hmac.prototype._init = function(n) {
    n.length > this.blockSize && (n = new this.Hash().update(n).digest()),
    assert$9(n.length <= this.blockSize);
    for (var i = n.length; i < this.blockSize; i++)
        n.push(0);
    for (i = 0; i < n.length; i++)
        n[i] ^= 54;
    for (this.inner = new this.Hash().update(n),
    i = 0; i < n.length; i++)
        n[i] ^= 106;
    this.outer = new this.Hash().update(n)
}
;
Hmac.prototype.update = function(n, i) {
    return this.inner.update(n, i),
    this
}
;
Hmac.prototype.digest = function(n) {
    return this.outer.update(this.inner.digest()),
    this.outer.digest(n)
}
;
(function(e) {
    var n = e;
    n.utils = utils$i,
    n.common = common$5,
    n.sha = sha,
    n.ripemd = ripemd,
    n.hmac = hmac$1,
    n.sha1 = n.sha.sha1,
    n.sha256 = n.sha.sha256,
    n.sha224 = n.sha.sha224,
    n.sha384 = n.sha.sha384,
    n.sha512 = n.sha.sha512,
    n.ripemd160 = n.ripemd.ripemd160
}
)(hash$2);
var secp256k1, hasRequiredSecp256k1;
function requireSecp256k1() {
    return hasRequiredSecp256k1 || (hasRequiredSecp256k1 = 1,
    secp256k1 = {
        doubles: {
            step: 4,
            points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]
        },
        naf: {
            wnd: 7,
            points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]
        }
    }),
    secp256k1
}
(function(e) {
    var n = e
      , i = hash$2
      , o = curve
      , l = utils$o
      , a = l.assert;
    function c(m) {
        m.type === "short" ? this.curve = new o.short(m) : m.type === "edwards" ? this.curve = new o.edwards(m) : this.curve = new o.mont(m),
        this.g = this.curve.g,
        this.n = this.curve.n,
        this.hash = m.hash,
        a(this.g.validate(), "Invalid curve"),
        a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
    }
    n.PresetCurve = c;
    function u(m, d) {
        Object.defineProperty(n, m, {
            configurable: !0,
            enumerable: !0,
            get: function() {
                var p = new c(d);
                return Object.defineProperty(n, m, {
                    configurable: !0,
                    enumerable: !0,
                    value: p
                }),
                p
            }
        })
    }
    u("p192", {
        type: "short",
        prime: "p192",
        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
        hash: i.sha256,
        gRed: !1,
        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
    }),
    u("p224", {
        type: "short",
        prime: "p224",
        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
        hash: i.sha256,
        gRed: !1,
        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
    }),
    u("p256", {
        type: "short",
        prime: null,
        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
        hash: i.sha256,
        gRed: !1,
        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
    }),
    u("p384", {
        type: "short",
        prime: null,
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
        hash: i.sha384,
        gRed: !1,
        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
    }),
    u("p521", {
        type: "short",
        prime: null,
        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
        hash: i.sha512,
        gRed: !1,
        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
    }),
    u("curve25519", {
        type: "mont",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "76d06",
        b: "1",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: i.sha256,
        gRed: !1,
        g: ["9"]
    }),
    u("ed25519", {
        type: "edwards",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "-1",
        c: "1",
        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: i.sha256,
        gRed: !1,
        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
    });
    var h;
    try {
        h = requireSecp256k1()
    } catch {
        h = void 0
    }
    u("secp256k1", {
        type: "short",
        prime: "k256",
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: i.sha256,
        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [{
            a: "3086d221a7d46bcde86c90e49284eb15",
            b: "-e4437ed6010e88286f547fa90abfe4c3"
        }, {
            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
            b: "3086d221a7d46bcde86c90e49284eb15"
        }],
        gRed: !1,
        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", h]
    })
}
)(curves$1);
var hash$1 = hash$2
  , utils$8 = utils$n
  , assert$8 = minimalisticAssert;
function HmacDRBG(e) {
    if (!(this instanceof HmacDRBG))
        return new HmacDRBG(e);
    this.hash = e.hash,
    this.predResist = !!e.predResist,
    this.outLen = this.hash.outSize,
    this.minEntropy = e.minEntropy || this.hash.hmacStrength,
    this._reseed = null,
    this.reseedInterval = null,
    this.K = null,
    this.V = null;
    var n = utils$8.toArray(e.entropy, e.entropyEnc || "hex")
      , i = utils$8.toArray(e.nonce, e.nonceEnc || "hex")
      , o = utils$8.toArray(e.pers, e.persEnc || "hex");
    assert$8(n.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
    this._init(n, i, o)
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function(n, i, o) {
    var l = n.concat(i).concat(o);
    this.K = new Array(this.outLen / 8),
    this.V = new Array(this.outLen / 8);
    for (var a = 0; a < this.V.length; a++)
        this.K[a] = 0,
        this.V[a] = 1;
    this._update(l),
    this._reseed = 1,
    this.reseedInterval = 281474976710656
}
;
HmacDRBG.prototype._hmac = function() {
    return new hash$1.hmac(this.hash,this.K)
}
;
HmacDRBG.prototype._update = function(n) {
    var i = this._hmac().update(this.V).update([0]);
    n && (i = i.update(n)),
    this.K = i.digest(),
    this.V = this._hmac().update(this.V).digest(),
    n && (this.K = this._hmac().update(this.V).update([1]).update(n).digest(),
    this.V = this._hmac().update(this.V).digest())
}
;
HmacDRBG.prototype.reseed = function(n, i, o, l) {
    typeof i != "string" && (l = o,
    o = i,
    i = null),
    n = utils$8.toArray(n, i),
    o = utils$8.toArray(o, l),
    assert$8(n.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
    this._update(n.concat(o || [])),
    this._reseed = 1
}
;
HmacDRBG.prototype.generate = function(n, i, o, l) {
    if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
    typeof i != "string" && (l = o,
    o = i,
    i = null),
    o && (o = utils$8.toArray(o, l || "hex"),
    this._update(o));
    for (var a = []; a.length < n; )
        this.V = this._hmac().update(this.V).digest(),
        a = a.concat(this.V);
    var c = a.slice(0, n);
    return this._update(o),
    this._reseed++,
    utils$8.encode(c, i)
}
;
var BN$5 = bnExports$1
  , utils$7 = utils$o
  , assert$7 = utils$7.assert;
function KeyPair$2(e, n) {
    this.ec = e,
    this.priv = null,
    this.pub = null,
    n.priv && this._importPrivate(n.priv, n.privEnc),
    n.pub && this._importPublic(n.pub, n.pubEnc)
}
var key$2 = KeyPair$2;
KeyPair$2.fromPublic = function(n, i, o) {
    return i instanceof KeyPair$2 ? i : new KeyPair$2(n,{
        pub: i,
        pubEnc: o
    })
}
;
KeyPair$2.fromPrivate = function(n, i, o) {
    return i instanceof KeyPair$2 ? i : new KeyPair$2(n,{
        priv: i,
        privEnc: o
    })
}
;
KeyPair$2.prototype.validate = function() {
    var n = this.getPublic();
    return n.isInfinity() ? {
        result: !1,
        reason: "Invalid public key"
    } : n.validate() ? n.mul(this.ec.curve.n).isInfinity() ? {
        result: !0,
        reason: null
    } : {
        result: !1,
        reason: "Public key * N != O"
    } : {
        result: !1,
        reason: "Public key is not a point"
    }
}
;
KeyPair$2.prototype.getPublic = function(n, i) {
    return typeof n == "string" && (i = n,
    n = null),
    this.pub || (this.pub = this.ec.g.mul(this.priv)),
    i ? this.pub.encode(i, n) : this.pub
}
;
KeyPair$2.prototype.getPrivate = function(n) {
    return n === "hex" ? this.priv.toString(16, 2) : this.priv
}
;
KeyPair$2.prototype._importPrivate = function(n, i) {
    this.priv = new BN$5(n,i || 16),
    this.priv = this.priv.umod(this.ec.curve.n)
}
;
KeyPair$2.prototype._importPublic = function(n, i) {
    if (n.x || n.y) {
        this.ec.curve.type === "mont" ? assert$7(n.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && assert$7(n.x && n.y, "Need both x and y coordinate"),
        this.pub = this.ec.curve.point(n.x, n.y);
        return
    }
    this.pub = this.ec.curve.decodePoint(n, i)
}
;
KeyPair$2.prototype.derive = function(n) {
    return n.validate() || assert$7(n.validate(), "public point not validated"),
    n.mul(this.priv).getX()
}
;
KeyPair$2.prototype.sign = function(n, i, o) {
    return this.ec.sign(n, this, i, o)
}
;
KeyPair$2.prototype.verify = function(n, i, o) {
    return this.ec.verify(n, i, this, void 0, o)
}
;
KeyPair$2.prototype.inspect = function() {
    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
}
;
var BN$4 = bnExports$1
  , utils$6 = utils$o
  , assert$6 = utils$6.assert;
function Signature$2(e, n) {
    if (e instanceof Signature$2)
        return e;
    this._importDER(e, n) || (assert$6(e.r && e.s, "Signature without r or s"),
    this.r = new BN$4(e.r,16),
    this.s = new BN$4(e.s,16),
    e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
}
var signature$1 = Signature$2;
function Position() {
    this.place = 0
}
function getLength(e, n) {
    var i = e[n.place++];
    if (!(i & 128))
        return i;
    var o = i & 15;
    if (o === 0 || o > 4 || e[n.place] === 0)
        return !1;
    for (var l = 0, a = 0, c = n.place; a < o; a++,
    c++)
        l <<= 8,
        l |= e[c],
        l >>>= 0;
    return l <= 127 ? !1 : (n.place = c,
    l)
}
function rmPadding(e) {
    for (var n = 0, i = e.length - 1; !e[n] && !(e[n + 1] & 128) && n < i; )
        n++;
    return n === 0 ? e : e.slice(n)
}
Signature$2.prototype._importDER = function(n, i) {
    n = utils$6.toArray(n, i);
    var o = new Position;
    if (n[o.place++] !== 48)
        return !1;
    var l = getLength(n, o);
    if (l === !1 || l + o.place !== n.length || n[o.place++] !== 2)
        return !1;
    var a = getLength(n, o);
    if (a === !1 || n[o.place] & 128)
        return !1;
    var c = n.slice(o.place, a + o.place);
    if (o.place += a,
    n[o.place++] !== 2)
        return !1;
    var u = getLength(n, o);
    if (u === !1 || n.length !== u + o.place || n[o.place] & 128)
        return !1;
    var h = n.slice(o.place, u + o.place);
    if (c[0] === 0)
        if (c[1] & 128)
            c = c.slice(1);
        else
            return !1;
    if (h[0] === 0)
        if (h[1] & 128)
            h = h.slice(1);
        else
            return !1;
    return this.r = new BN$4(c),
    this.s = new BN$4(h),
    this.recoveryParam = null,
    !0
}
;
function constructLength(e, n) {
    if (n < 128) {
        e.push(n);
        return
    }
    var i = 1 + (Math.log(n) / Math.LN2 >>> 3);
    for (e.push(i | 128); --i; )
        e.push(n >>> (i << 3) & 255);
    e.push(n)
}
Signature$2.prototype.toDER = function(n) {
    var i = this.r.toArray()
      , o = this.s.toArray();
    for (i[0] & 128 && (i = [0].concat(i)),
    o[0] & 128 && (o = [0].concat(o)),
    i = rmPadding(i),
    o = rmPadding(o); !o[0] && !(o[1] & 128); )
        o = o.slice(1);
    var l = [2];
    constructLength(l, i.length),
    l = l.concat(i),
    l.push(2),
    constructLength(l, o.length);
    var a = l.concat(o)
      , c = [48];
    return constructLength(c, a.length),
    c = c.concat(a),
    utils$6.encode(c, n)
}
;
var ec, hasRequiredEc;
function requireEc() {
    if (hasRequiredEc)
        return ec;
    hasRequiredEc = 1;
    var e = bnExports$1
      , n = hmacDrbg
      , i = utils$o
      , o = curves$1
      , l = requireBrorand()
      , a = i.assert
      , c = key$2
      , u = signature$1;
    function h(m) {
        if (!(this instanceof h))
            return new h(m);
        typeof m == "string" && (a(Object.prototype.hasOwnProperty.call(o, m), "Unknown curve " + m),
        m = o[m]),
        m instanceof o.PresetCurve && (m = {
            curve: m
        }),
        this.curve = m.curve.curve,
        this.n = this.curve.n,
        this.nh = this.n.ushrn(1),
        this.g = this.curve.g,
        this.g = m.curve.g,
        this.g.precompute(m.curve.n.bitLength() + 1),
        this.hash = m.hash || m.curve.hash
    }
    return ec = h,
    h.prototype.keyPair = function(d) {
        return new c(this,d)
    }
    ,
    h.prototype.keyFromPrivate = function(d, p) {
        return c.fromPrivate(this, d, p)
    }
    ,
    h.prototype.keyFromPublic = function(d, p) {
        return c.fromPublic(this, d, p)
    }
    ,
    h.prototype.genKeyPair = function(d) {
        d || (d = {});
        for (var p = new n({
            hash: this.hash,
            pers: d.pers,
            persEnc: d.persEnc || "utf8",
            entropy: d.entropy || l(this.hash.hmacStrength),
            entropyEnc: d.entropy && d.entropyEnc || "utf8",
            nonce: this.n.toArray()
        }), b = this.n.byteLength(), g = this.n.sub(new e(2)); ; ) {
            var $ = new e(p.generate(b));
            if (!($.cmp(g) > 0))
                return $.iaddn(1),
                this.keyFromPrivate($)
        }
    }
    ,
    h.prototype._truncateToN = function(d, p, b) {
        var g;
        if (e.isBN(d) || typeof d == "number")
            d = new e(d,16),
            g = d.byteLength();
        else if (typeof d == "object")
            g = d.length,
            d = new e(d,16);
        else {
            var $ = d.toString();
            g = $.length + 1 >>> 1,
            d = new e($,16)
        }
        typeof b != "number" && (b = g * 8);
        var N = b - this.n.bitLength();
        return N > 0 && (d = d.ushrn(N)),
        !p && d.cmp(this.n) >= 0 ? d.sub(this.n) : d
    }
    ,
    h.prototype.sign = function(d, p, b, g) {
        if (typeof b == "object" && (g = b,
        b = null),
        g || (g = {}),
        typeof d != "string" && typeof d != "number" && !e.isBN(d)) {
            a(typeof d == "object" && d && typeof d.length == "number", "Expected message to be an array-like, a hex string, or a BN instance"),
            a(d.length >>> 0 === d.length);
            for (var $ = 0; $ < d.length; $++)
                a((d[$] & 255) === d[$])
        }
        p = this.keyFromPrivate(p, b),
        d = this._truncateToN(d, !1, g.msgBitLength),
        a(!d.isNeg(), "Can not sign a negative message");
        var N = this.n.byteLength()
          , I = p.getPrivate().toArray("be", N)
          , L = d.toArray("be", N);
        a(new e(L).eq(d), "Can not sign message");
        for (var T = new n({
            hash: this.hash,
            entropy: I,
            nonce: L,
            pers: g.pers,
            persEnc: g.persEnc || "utf8"
        }), M = this.n.sub(new e(1)), q = 0; ; q++) {
            var Q = g.k ? g.k(q) : new e(T.generate(this.n.byteLength()));
            if (Q = this._truncateToN(Q, !0),
            !(Q.cmpn(1) <= 0 || Q.cmp(M) >= 0)) {
                var Y = this.g.mul(Q);
                if (!Y.isInfinity()) {
                    var ee = Y.getX()
                      , ie = ee.umod(this.n);
                    if (ie.cmpn(0) !== 0) {
                        var te = Q.invm(this.n).mul(ie.mul(p.getPrivate()).iadd(d));
                        if (te = te.umod(this.n),
                        te.cmpn(0) !== 0) {
                            var ne = (Y.getY().isOdd() ? 1 : 0) | (ee.cmp(ie) !== 0 ? 2 : 0);
                            return g.canonical && te.cmp(this.nh) > 0 && (te = this.n.sub(te),
                            ne ^= 1),
                            new u({
                                r: ie,
                                s: te,
                                recoveryParam: ne
                            })
                        }
                    }
                }
            }
        }
    }
    ,
    h.prototype.verify = function(d, p, b, g, $) {
        $ || ($ = {}),
        d = this._truncateToN(d, !1, $.msgBitLength),
        b = this.keyFromPublic(b, g),
        p = new u(p,"hex");
        var N = p.r
          , I = p.s;
        if (N.cmpn(1) < 0 || N.cmp(this.n) >= 0 || I.cmpn(1) < 0 || I.cmp(this.n) >= 0)
            return !1;
        var L = I.invm(this.n), T = L.mul(d).umod(this.n), M = L.mul(N).umod(this.n), q;
        return this.curve._maxwellTrick ? (q = this.g.jmulAdd(T, b.getPublic(), M),
        q.isInfinity() ? !1 : q.eqXToP(N)) : (q = this.g.mulAdd(T, b.getPublic(), M),
        q.isInfinity() ? !1 : q.getX().umod(this.n).cmp(N) === 0)
    }
    ,
    h.prototype.recoverPubKey = function(m, d, p, b) {
        a((3 & p) === p, "The recovery param is more than two bits"),
        d = new u(d,b);
        var g = this.n
          , $ = new e(m)
          , N = d.r
          , I = d.s
          , L = p & 1
          , T = p >> 1;
        if (N.cmp(this.curve.p.umod(this.curve.n)) >= 0 && T)
            throw new Error("Unable to find sencond key candinate");
        T ? N = this.curve.pointFromX(N.add(this.curve.n), L) : N = this.curve.pointFromX(N, L);
        var M = d.r.invm(g)
          , q = g.sub($).mul(M).umod(g)
          , Q = I.mul(M).umod(g);
        return this.g.mulAdd(q, N, Q)
    }
    ,
    h.prototype.getKeyRecoveryParam = function(m, d, p, b) {
        if (d = new u(d,b),
        d.recoveryParam !== null)
            return d.recoveryParam;
        for (var g = 0; g < 4; g++) {
            var $;
            try {
                $ = this.recoverPubKey(m, d, g)
            } catch {
                continue
            }
            if ($.eq(p))
                return g
        }
        throw new Error("Unable to find valid recovery factor")
    }
    ,
    ec
}
var utils$5 = utils$o
  , assert$5 = utils$5.assert
  , parseBytes$2 = utils$5.parseBytes
  , cachedProperty$1 = utils$5.cachedProperty;
function KeyPair$1(e, n) {
    this.eddsa = e,
    this._secret = parseBytes$2(n.secret),
    e.isPoint(n.pub) ? this._pub = n.pub : this._pubBytes = parseBytes$2(n.pub)
}
KeyPair$1.fromPublic = function(n, i) {
    return i instanceof KeyPair$1 ? i : new KeyPair$1(n,{
        pub: i
    })
}
;
KeyPair$1.fromSecret = function(n, i) {
    return i instanceof KeyPair$1 ? i : new KeyPair$1(n,{
        secret: i
    })
}
;
KeyPair$1.prototype.secret = function() {
    return this._secret
}
;
cachedProperty$1(KeyPair$1, "pubBytes", function() {
    return this.eddsa.encodePoint(this.pub())
});
cachedProperty$1(KeyPair$1, "pub", function() {
    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv())
});
cachedProperty$1(KeyPair$1, "privBytes", function() {
    var n = this.eddsa
      , i = this.hash()
      , o = n.encodingLength - 1
      , l = i.slice(0, n.encodingLength);
    return l[0] &= 248,
    l[o] &= 127,
    l[o] |= 64,
    l
});
cachedProperty$1(KeyPair$1, "priv", function() {
    return this.eddsa.decodeInt(this.privBytes())
});
cachedProperty$1(KeyPair$1, "hash", function() {
    return this.eddsa.hash().update(this.secret()).digest()
});
cachedProperty$1(KeyPair$1, "messagePrefix", function() {
    return this.hash().slice(this.eddsa.encodingLength)
});
KeyPair$1.prototype.sign = function(n) {
    return assert$5(this._secret, "KeyPair can only verify"),
    this.eddsa.sign(n, this)
}
;
KeyPair$1.prototype.verify = function(n, i) {
    return this.eddsa.verify(n, i, this)
}
;
KeyPair$1.prototype.getSecret = function(n) {
    return assert$5(this._secret, "KeyPair is public only"),
    utils$5.encode(this.secret(), n)
}
;
KeyPair$1.prototype.getPublic = function(n) {
    return utils$5.encode(this.pubBytes(), n)
}
;
var key$1 = KeyPair$1
  , BN$3 = bnExports$1
  , utils$4 = utils$o
  , assert$4 = utils$4.assert
  , cachedProperty = utils$4.cachedProperty
  , parseBytes$1 = utils$4.parseBytes;
function Signature$1(e, n) {
    this.eddsa = e,
    typeof n != "object" && (n = parseBytes$1(n)),
    Array.isArray(n) && (assert$4(n.length === e.encodingLength * 2, "Signature has invalid size"),
    n = {
        R: n.slice(0, e.encodingLength),
        S: n.slice(e.encodingLength)
    }),
    assert$4(n.R && n.S, "Signature without R or S"),
    e.isPoint(n.R) && (this._R = n.R),
    n.S instanceof BN$3 && (this._S = n.S),
    this._Rencoded = Array.isArray(n.R) ? n.R : n.Rencoded,
    this._Sencoded = Array.isArray(n.S) ? n.S : n.Sencoded
}
cachedProperty(Signature$1, "S", function() {
    return this.eddsa.decodeInt(this.Sencoded())
});
cachedProperty(Signature$1, "R", function() {
    return this.eddsa.decodePoint(this.Rencoded())
});
cachedProperty(Signature$1, "Rencoded", function() {
    return this.eddsa.encodePoint(this.R())
});
cachedProperty(Signature$1, "Sencoded", function() {
    return this.eddsa.encodeInt(this.S())
});
Signature$1.prototype.toBytes = function() {
    return this.Rencoded().concat(this.Sencoded())
}
;
Signature$1.prototype.toHex = function() {
    return utils$4.encode(this.toBytes(), "hex").toUpperCase()
}
;
var signature = Signature$1
  , hash = hash$2
  , curves = curves$1
  , utils$3 = utils$o
  , assert$3 = utils$3.assert
  , parseBytes = utils$3.parseBytes
  , KeyPair = key$1
  , Signature = signature;
function EDDSA(e) {
    if (assert$3(e === "ed25519", "only tested with ed25519 so far"),
    !(this instanceof EDDSA))
        return new EDDSA(e);
    e = curves[e].curve,
    this.curve = e,
    this.g = e.g,
    this.g.precompute(e.n.bitLength() + 1),
    this.pointClass = e.point().constructor,
    this.encodingLength = Math.ceil(e.n.bitLength() / 8),
    this.hash = hash.sha512
}
var eddsa = EDDSA;
EDDSA.prototype.sign = function(n, i) {
    n = parseBytes(n);
    var o = this.keyFromSecret(i)
      , l = this.hashInt(o.messagePrefix(), n)
      , a = this.g.mul(l)
      , c = this.encodePoint(a)
      , u = this.hashInt(c, o.pubBytes(), n).mul(o.priv())
      , h = l.add(u).umod(this.curve.n);
    return this.makeSignature({
        R: a,
        S: h,
        Rencoded: c
    })
}
;
EDDSA.prototype.verify = function(n, i, o) {
    if (n = parseBytes(n),
    i = this.makeSignature(i),
    i.S().gte(i.eddsa.curve.n) || i.S().isNeg())
        return !1;
    var l = this.keyFromPublic(o)
      , a = this.hashInt(i.Rencoded(), l.pubBytes(), n)
      , c = this.g.mul(i.S())
      , u = i.R().add(l.pub().mul(a));
    return u.eq(c)
}
;
EDDSA.prototype.hashInt = function() {
    for (var n = this.hash(), i = 0; i < arguments.length; i++)
        n.update(arguments[i]);
    return utils$3.intFromLE(n.digest()).umod(this.curve.n)
}
;
EDDSA.prototype.keyFromPublic = function(n) {
    return KeyPair.fromPublic(this, n)
}
;
EDDSA.prototype.keyFromSecret = function(n) {
    return KeyPair.fromSecret(this, n)
}
;
EDDSA.prototype.makeSignature = function(n) {
    return n instanceof Signature ? n : new Signature(this,n)
}
;
EDDSA.prototype.encodePoint = function(n) {
    var i = n.getY().toArray("le", this.encodingLength);
    return i[this.encodingLength - 1] |= n.getX().isOdd() ? 128 : 0,
    i
}
;
EDDSA.prototype.decodePoint = function(n) {
    n = utils$3.parseBytes(n);
    var i = n.length - 1
      , o = n.slice(0, i).concat(n[i] & -129)
      , l = (n[i] & 128) !== 0
      , a = utils$3.intFromLE(o);
    return this.curve.pointFromY(a, l)
}
;
EDDSA.prototype.encodeInt = function(n) {
    return n.toArray("le", this.encodingLength)
}
;
EDDSA.prototype.decodeInt = function(n) {
    return utils$3.intFromLE(n)
}
;
EDDSA.prototype.isPoint = function(n) {
    return n instanceof this.pointClass
}
;
var hasRequiredElliptic;
function requireElliptic() {
    return hasRequiredElliptic || (hasRequiredElliptic = 1,
    function(e) {
        var n = e;
        n.version = require$$0$1.version,
        n.utils = utils$o,
        n.rand = requireBrorand(),
        n.curve = curve,
        n.curves = curves$1,
        n.ec = requireEc(),
        n.eddsa = eddsa
    }(elliptic)),
    elliptic
}
var asn1$3 = {}, asn1$2 = {}, api = {}, vmBrowserify = {}, hasRequiredVmBrowserify;
function requireVmBrowserify() {
    return hasRequiredVmBrowserify || (hasRequiredVmBrowserify = 1,
    function(exports) {
        var indexOf = function(e, n) {
            if (e.indexOf)
                return e.indexOf(n);
            for (var i = 0; i < e.length; i++)
                if (e[i] === n)
                    return i;
            return -1
        }
          , Object_keys = function(e) {
            if (Object.keys)
                return Object.keys(e);
            var n = [];
            for (var i in e)
                n.push(i);
            return n
        }
          , forEach = function(e, n) {
            if (e.forEach)
                return e.forEach(n);
            for (var i = 0; i < e.length; i++)
                n(e[i], i, e)
        }
          , defineProp = function() {
            try {
                return Object.defineProperty({}, "_", {}),
                function(e, n, i) {
                    Object.defineProperty(e, n, {
                        writable: !0,
                        enumerable: !1,
                        configurable: !0,
                        value: i
                    })
                }
            } catch {
                return function(n, i, o) {
                    n[i] = o
                }
            }
        }()
          , globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];
        function Context() {}
        Context.prototype = {};
        var Script = exports.Script = function(n) {
            if (!(this instanceof Script))
                return new Script(n);
            this.code = n
        }
        ;
        Script.prototype.runInContext = function(e) {
            if (!(e instanceof Context))
                throw new TypeError("needs a 'context' argument.");
            var n = document.createElement("iframe");
            n.style || (n.style = {}),
            n.style.display = "none",
            document.body.appendChild(n);
            var i = n.contentWindow
              , o = i.eval
              , l = i.execScript;
            !o && l && (l.call(i, "null"),
            o = i.eval),
            forEach(Object_keys(e), function(u) {
                i[u] = e[u]
            }),
            forEach(globals, function(u) {
                e[u] && (i[u] = e[u])
            });
            var a = Object_keys(i)
              , c = o.call(i, this.code);
            return forEach(Object_keys(i), function(u) {
                (u in e || indexOf(a, u) === -1) && (e[u] = i[u])
            }),
            forEach(globals, function(u) {
                u in e || defineProp(e, u, i[u])
            }),
            document.body.removeChild(n),
            c
        }
        ,
        Script.prototype.runInThisContext = function() {
            return eval(this.code)
        }
        ,
        Script.prototype.runInNewContext = function(e) {
            var n = Script.createContext(e)
              , i = this.runInContext(n);
            return e && forEach(Object_keys(n), function(o) {
                e[o] = n[o]
            }),
            i
        }
        ,
        forEach(Object_keys(Script.prototype), function(e) {
            exports[e] = Script[e] = function(n) {
                var i = Script(n);
                return i[e].apply(i, [].slice.call(arguments, 1))
            }
        }),
        exports.isContext = function(e) {
            return e instanceof Context
        }
        ,
        exports.createScript = function(e) {
            return exports.Script(e)
        }
        ,
        exports.createContext = Script.createContext = function(e) {
            var n = new Context;
            return typeof e == "object" && forEach(Object_keys(e), function(i) {
                n[i] = e[i]
            }),
            n
        }
    }(vmBrowserify)),
    vmBrowserify
}
var hasRequiredApi;
function requireApi() {
    return hasRequiredApi || (hasRequiredApi = 1,
    function(e) {
        var n = requireAsn1()
          , i = inherits_browserExports
          , o = e;
        o.define = function(c, u) {
            return new l(c,u)
        }
        ;
        function l(a, c) {
            this.name = a,
            this.body = c,
            this.decoders = {},
            this.encoders = {}
        }
        l.prototype._createNamed = function(c) {
            var u;
            try {
                u = requireVmBrowserify().runInThisContext("(function " + this.name + `(entity) {
  this._initNamed(entity);
})`)
            } catch {
                u = function(m) {
                    this._initNamed(m)
                }
            }
            return i(u, c),
            u.prototype._initNamed = function(m) {
                c.call(this, m)
            }
            ,
            new u(this)
        }
        ,
        l.prototype._getDecoder = function(c) {
            return c = c || "der",
            this.decoders.hasOwnProperty(c) || (this.decoders[c] = this._createNamed(n.decoders[c])),
            this.decoders[c]
        }
        ,
        l.prototype.decode = function(c, u, h) {
            return this._getDecoder(u).decode(c, h)
        }
        ,
        l.prototype._getEncoder = function(c) {
            return c = c || "der",
            this.encoders.hasOwnProperty(c) || (this.encoders[c] = this._createNamed(n.encoders[c])),
            this.encoders[c]
        }
        ,
        l.prototype.encode = function(c, u, h) {
            return this._getEncoder(u).encode(c, h)
        }
    }(api)),
    api
}
var base = {}
  , reporter = {}
  , inherits = inherits_browserExports;
function Reporter(e) {
    this._reporterState = {
        obj: null,
        path: [],
        options: e || {},
        errors: []
    }
}
reporter.Reporter = Reporter;
Reporter.prototype.isError = function e(n) {
    return n instanceof ReporterError
}
;
Reporter.prototype.save = function e() {
    var n = this._reporterState;
    return {
        obj: n.obj,
        pathLen: n.path.length
    }
}
;
Reporter.prototype.restore = function e(n) {
    var i = this._reporterState;
    i.obj = n.obj,
    i.path = i.path.slice(0, n.pathLen)
}
;
Reporter.prototype.enterKey = function e(n) {
    return this._reporterState.path.push(n)
}
;
Reporter.prototype.exitKey = function e(n) {
    var i = this._reporterState;
    i.path = i.path.slice(0, n - 1)
}
;
Reporter.prototype.leaveKey = function e(n, i, o) {
    var l = this._reporterState;
    this.exitKey(n),
    l.obj !== null && (l.obj[i] = o)
}
;
Reporter.prototype.path = function e() {
    return this._reporterState.path.join("/")
}
;
Reporter.prototype.enterObject = function e() {
    var n = this._reporterState
      , i = n.obj;
    return n.obj = {},
    i
}
;
Reporter.prototype.leaveObject = function e(n) {
    var i = this._reporterState
      , o = i.obj;
    return i.obj = n,
    o
}
;
Reporter.prototype.error = function e(n) {
    var i, o = this._reporterState, l = n instanceof ReporterError;
    if (l ? i = n : i = new ReporterError(o.path.map(function(a) {
        return "[" + JSON.stringify(a) + "]"
    }).join(""),n.message || n,n.stack),
    !o.options.partial)
        throw i;
    return l || o.errors.push(i),
    i
}
;
Reporter.prototype.wrapResult = function e(n) {
    var i = this._reporterState;
    return i.options.partial ? {
        result: this.isError(n) ? null : n,
        errors: i.errors
    } : n
}
;
function ReporterError(e, n) {
    this.path = e,
    this.rethrow(n)
}
inherits(ReporterError, Error);
ReporterError.prototype.rethrow = function e(n) {
    if (this.message = n + " at: " + (this.path || "(shallow)"),
    Error.captureStackTrace && Error.captureStackTrace(this, ReporterError),
    !this.stack)
        try {
            throw new Error(this.message)
        } catch (i) {
            this.stack = i.stack
        }
    return this
}
;
var buffer$1 = {}, hasRequiredBuffer;
function requireBuffer() {
    if (hasRequiredBuffer)
        return buffer$1;
    hasRequiredBuffer = 1;
    var e = inherits_browserExports
      , n = requireBase().Reporter
      , i = require$$0$2.Buffer;
    function o(a, c) {
        if (n.call(this, c),
        !i.isBuffer(a)) {
            this.error("Input not Buffer");
            return
        }
        this.base = a,
        this.offset = 0,
        this.length = a.length
    }
    e(o, n),
    buffer$1.DecoderBuffer = o,
    o.prototype.save = function() {
        return {
            offset: this.offset,
            reporter: n.prototype.save.call(this)
        }
    }
    ,
    o.prototype.restore = function(c) {
        var u = new o(this.base);
        return u.offset = c.offset,
        u.length = this.offset,
        this.offset = c.offset,
        n.prototype.restore.call(this, c.reporter),
        u
    }
    ,
    o.prototype.isEmpty = function() {
        return this.offset === this.length
    }
    ,
    o.prototype.readUInt8 = function(c) {
        return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(c || "DecoderBuffer overrun")
    }
    ,
    o.prototype.skip = function(c, u) {
        if (!(this.offset + c <= this.length))
            return this.error(u || "DecoderBuffer overrun");
        var h = new o(this.base);
        return h._reporterState = this._reporterState,
        h.offset = this.offset,
        h.length = this.offset + c,
        this.offset += c,
        h
    }
    ,
    o.prototype.raw = function(c) {
        return this.base.slice(c ? c.offset : this.offset, this.length)
    }
    ;
    function l(a, c) {
        if (Array.isArray(a))
            this.length = 0,
            this.value = a.map(function(u) {
                return u instanceof l || (u = new l(u,c)),
                this.length += u.length,
                u
            }, this);
        else if (typeof a == "number") {
            if (!(0 <= a && a <= 255))
                return c.error("non-byte EncoderBuffer value");
            this.value = a,
            this.length = 1
        } else if (typeof a == "string")
            this.value = a,
            this.length = i.byteLength(a);
        else if (i.isBuffer(a))
            this.value = a,
            this.length = a.length;
        else
            return c.error("Unsupported type: " + typeof a)
    }
    return buffer$1.EncoderBuffer = l,
    l.prototype.join = function(c, u) {
        return c || (c = new i(this.length)),
        u || (u = 0),
        this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(h) {
            h.join(c, u),
            u += h.length
        }) : (typeof this.value == "number" ? c[u] = this.value : typeof this.value == "string" ? c.write(this.value, u) : i.isBuffer(this.value) && this.value.copy(c, u),
        u += this.length)),
        c
    }
    ,
    buffer$1
}
var node, hasRequiredNode;
function requireNode() {
    if (hasRequiredNode)
        return node;
    hasRequiredNode = 1;
    var e = requireBase().Reporter
      , n = requireBase().EncoderBuffer
      , i = requireBase().DecoderBuffer
      , o = minimalisticAssert
      , l = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"]
      , a = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(l)
      , c = ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"];
    function u(m, d) {
        var p = {};
        this._baseState = p,
        p.enc = m,
        p.parent = d || null,
        p.children = null,
        p.tag = null,
        p.args = null,
        p.reverseArgs = null,
        p.choice = null,
        p.optional = !1,
        p.any = !1,
        p.obj = !1,
        p.use = null,
        p.useDecoder = null,
        p.key = null,
        p.default = null,
        p.explicit = null,
        p.implicit = null,
        p.contains = null,
        p.parent || (p.children = [],
        this._wrap())
    }
    node = u;
    var h = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
    return u.prototype.clone = function() {
        var d = this._baseState
          , p = {};
        h.forEach(function(g) {
            p[g] = d[g]
        });
        var b = new this.constructor(p.parent);
        return b._baseState = p,
        b
    }
    ,
    u.prototype._wrap = function() {
        var d = this._baseState;
        a.forEach(function(p) {
            this[p] = function() {
                var g = new this.constructor(this);
                return d.children.push(g),
                g[p].apply(g, arguments)
            }
        }, this)
    }
    ,
    u.prototype._init = function(d) {
        var p = this._baseState;
        o(p.parent === null),
        d.call(this),
        p.children = p.children.filter(function(b) {
            return b._baseState.parent === this
        }, this),
        o.equal(p.children.length, 1, "Root node can have only one child")
    }
    ,
    u.prototype._useArgs = function(d) {
        var p = this._baseState
          , b = d.filter(function(g) {
            return g instanceof this.constructor
        }, this);
        d = d.filter(function(g) {
            return !(g instanceof this.constructor)
        }, this),
        b.length !== 0 && (o(p.children === null),
        p.children = b,
        b.forEach(function(g) {
            g._baseState.parent = this
        }, this)),
        d.length !== 0 && (o(p.args === null),
        p.args = d,
        p.reverseArgs = d.map(function(g) {
            if (typeof g != "object" || g.constructor !== Object)
                return g;
            var $ = {};
            return Object.keys(g).forEach(function(N) {
                N == (N | 0) && (N |= 0);
                var I = g[N];
                $[I] = N
            }),
            $
        }))
    }
    ,
    c.forEach(function(m) {
        u.prototype[m] = function() {
            var p = this._baseState;
            throw new Error(m + " not implemented for encoding: " + p.enc)
        }
    }),
    l.forEach(function(m) {
        u.prototype[m] = function() {
            var p = this._baseState
              , b = Array.prototype.slice.call(arguments);
            return o(p.tag === null),
            p.tag = m,
            this._useArgs(b),
            this
        }
    }),
    u.prototype.use = function(d) {
        o(d);
        var p = this._baseState;
        return o(p.use === null),
        p.use = d,
        this
    }
    ,
    u.prototype.optional = function() {
        var d = this._baseState;
        return d.optional = !0,
        this
    }
    ,
    u.prototype.def = function(d) {
        var p = this._baseState;
        return o(p.default === null),
        p.default = d,
        p.optional = !0,
        this
    }
    ,
    u.prototype.explicit = function(d) {
        var p = this._baseState;
        return o(p.explicit === null && p.implicit === null),
        p.explicit = d,
        this
    }
    ,
    u.prototype.implicit = function(d) {
        var p = this._baseState;
        return o(p.explicit === null && p.implicit === null),
        p.implicit = d,
        this
    }
    ,
    u.prototype.obj = function() {
        var d = this._baseState
          , p = Array.prototype.slice.call(arguments);
        return d.obj = !0,
        p.length !== 0 && this._useArgs(p),
        this
    }
    ,
    u.prototype.key = function(d) {
        var p = this._baseState;
        return o(p.key === null),
        p.key = d,
        this
    }
    ,
    u.prototype.any = function() {
        var d = this._baseState;
        return d.any = !0,
        this
    }
    ,
    u.prototype.choice = function(d) {
        var p = this._baseState;
        return o(p.choice === null),
        p.choice = d,
        this._useArgs(Object.keys(d).map(function(b) {
            return d[b]
        })),
        this
    }
    ,
    u.prototype.contains = function(d) {
        var p = this._baseState;
        return o(p.use === null),
        p.contains = d,
        this
    }
    ,
    u.prototype._decode = function(d, p) {
        var b = this._baseState;
        if (b.parent === null)
            return d.wrapResult(b.children[0]._decode(d, p));
        var g = b.default
          , $ = !0
          , N = null;
        if (b.key !== null && (N = d.enterKey(b.key)),
        b.optional) {
            var I = null;
            if (b.explicit !== null ? I = b.explicit : b.implicit !== null ? I = b.implicit : b.tag !== null && (I = b.tag),
            I === null && !b.any) {
                var L = d.save();
                try {
                    b.choice === null ? this._decodeGeneric(b.tag, d, p) : this._decodeChoice(d, p),
                    $ = !0
                } catch {
                    $ = !1
                }
                d.restore(L)
            } else if ($ = this._peekTag(d, I, b.any),
            d.isError($))
                return $
        }
        var T;
        if (b.obj && $ && (T = d.enterObject()),
        $) {
            if (b.explicit !== null) {
                var M = this._decodeTag(d, b.explicit);
                if (d.isError(M))
                    return M;
                d = M
            }
            var q = d.offset;
            if (b.use === null && b.choice === null) {
                if (b.any)
                    var L = d.save();
                var Q = this._decodeTag(d, b.implicit !== null ? b.implicit : b.tag, b.any);
                if (d.isError(Q))
                    return Q;
                b.any ? g = d.raw(L) : d = Q
            }
            if (p && p.track && b.tag !== null && p.track(d.path(), q, d.length, "tagged"),
            p && p.track && b.tag !== null && p.track(d.path(), d.offset, d.length, "content"),
            b.any ? g = g : b.choice === null ? g = this._decodeGeneric(b.tag, d, p) : g = this._decodeChoice(d, p),
            d.isError(g))
                return g;
            if (!b.any && b.choice === null && b.children !== null && b.children.forEach(function(ie) {
                ie._decode(d, p)
            }),
            b.contains && (b.tag === "octstr" || b.tag === "bitstr")) {
                var Y = new i(g);
                g = this._getUse(b.contains, d._reporterState.obj)._decode(Y, p)
            }
        }
        return b.obj && $ && (g = d.leaveObject(T)),
        b.key !== null && (g !== null || $ === !0) ? d.leaveKey(N, b.key, g) : N !== null && d.exitKey(N),
        g
    }
    ,
    u.prototype._decodeGeneric = function(d, p, b) {
        var g = this._baseState;
        return d === "seq" || d === "set" ? null : d === "seqof" || d === "setof" ? this._decodeList(p, d, g.args[0], b) : /str$/.test(d) ? this._decodeStr(p, d, b) : d === "objid" && g.args ? this._decodeObjid(p, g.args[0], g.args[1], b) : d === "objid" ? this._decodeObjid(p, null, null, b) : d === "gentime" || d === "utctime" ? this._decodeTime(p, d, b) : d === "null_" ? this._decodeNull(p, b) : d === "bool" ? this._decodeBool(p, b) : d === "objDesc" ? this._decodeStr(p, d, b) : d === "int" || d === "enum" ? this._decodeInt(p, g.args && g.args[0], b) : g.use !== null ? this._getUse(g.use, p._reporterState.obj)._decode(p, b) : p.error("unknown tag: " + d)
    }
    ,
    u.prototype._getUse = function(d, p) {
        var b = this._baseState;
        return b.useDecoder = this._use(d, p),
        o(b.useDecoder._baseState.parent === null),
        b.useDecoder = b.useDecoder._baseState.children[0],
        b.implicit !== b.useDecoder._baseState.implicit && (b.useDecoder = b.useDecoder.clone(),
        b.useDecoder._baseState.implicit = b.implicit),
        b.useDecoder
    }
    ,
    u.prototype._decodeChoice = function(d, p) {
        var b = this._baseState
          , g = null
          , $ = !1;
        return Object.keys(b.choice).some(function(N) {
            var I = d.save()
              , L = b.choice[N];
            try {
                var T = L._decode(d, p);
                if (d.isError(T))
                    return !1;
                g = {
                    type: N,
                    value: T
                },
                $ = !0
            } catch {
                return d.restore(I),
                !1
            }
            return !0
        }, this),
        $ ? g : d.error("Choice not matched")
    }
    ,
    u.prototype._createEncoderBuffer = function(d) {
        return new n(d,this.reporter)
    }
    ,
    u.prototype._encode = function(d, p, b) {
        var g = this._baseState;
        if (!(g.default !== null && g.default === d)) {
            var $ = this._encodeValue(d, p, b);
            if ($ !== void 0 && !this._skipDefault($, p, b))
                return $
        }
    }
    ,
    u.prototype._encodeValue = function(d, p, b) {
        var g = this._baseState;
        if (g.parent === null)
            return g.children[0]._encode(d, p || new e);
        var L = null;
        if (this.reporter = p,
        g.optional && d === void 0)
            if (g.default !== null)
                d = g.default;
            else
                return;
        var $ = null
          , N = !1;
        if (g.any)
            L = this._createEncoderBuffer(d);
        else if (g.choice)
            L = this._encodeChoice(d, p);
        else if (g.contains)
            $ = this._getUse(g.contains, b)._encode(d, p),
            N = !0;
        else if (g.children)
            $ = g.children.map(function(q) {
                if (q._baseState.tag === "null_")
                    return q._encode(null, p, d);
                if (q._baseState.key === null)
                    return p.error("Child should have a key");
                var Q = p.enterKey(q._baseState.key);
                if (typeof d != "object")
                    return p.error("Child expected, but input is not object");
                var Y = q._encode(d[q._baseState.key], p, d);
                return p.leaveKey(Q),
                Y
            }, this).filter(function(q) {
                return q
            }),
            $ = this._createEncoderBuffer($);
        else if (g.tag === "seqof" || g.tag === "setof") {
            if (!(g.args && g.args.length === 1))
                return p.error("Too many args for : " + g.tag);
            if (!Array.isArray(d))
                return p.error("seqof/setof, but data is not Array");
            var I = this.clone();
            I._baseState.implicit = null,
            $ = this._createEncoderBuffer(d.map(function(q) {
                var Q = this._baseState;
                return this._getUse(Q.args[0], d)._encode(q, p)
            }, I))
        } else
            g.use !== null ? L = this._getUse(g.use, b)._encode(d, p) : ($ = this._encodePrimitive(g.tag, d),
            N = !0);
        var L;
        if (!g.any && g.choice === null) {
            var T = g.implicit !== null ? g.implicit : g.tag
              , M = g.implicit === null ? "universal" : "context";
            T === null ? g.use === null && p.error("Tag could be omitted only for .use()") : g.use === null && (L = this._encodeComposite(T, N, M, $))
        }
        return g.explicit !== null && (L = this._encodeComposite(g.explicit, !1, "context", L)),
        L
    }
    ,
    u.prototype._encodeChoice = function(d, p) {
        var b = this._baseState
          , g = b.choice[d.type];
        return g || o(!1, d.type + " not found in " + JSON.stringify(Object.keys(b.choice))),
        g._encode(d.value, p)
    }
    ,
    u.prototype._encodePrimitive = function(d, p) {
        var b = this._baseState;
        if (/str$/.test(d))
            return this._encodeStr(p, d);
        if (d === "objid" && b.args)
            return this._encodeObjid(p, b.reverseArgs[0], b.args[1]);
        if (d === "objid")
            return this._encodeObjid(p, null, null);
        if (d === "gentime" || d === "utctime")
            return this._encodeTime(p, d);
        if (d === "null_")
            return this._encodeNull();
        if (d === "int" || d === "enum")
            return this._encodeInt(p, b.args && b.reverseArgs[0]);
        if (d === "bool")
            return this._encodeBool(p);
        if (d === "objDesc")
            return this._encodeStr(p, d);
        throw new Error("Unsupported tag: " + d)
    }
    ,
    u.prototype._isNumstr = function(d) {
        return /^[0-9 ]*$/.test(d)
    }
    ,
    u.prototype._isPrintstr = function(d) {
        return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(d)
    }
    ,
    node
}
var hasRequiredBase;
function requireBase() {
    return hasRequiredBase || (hasRequiredBase = 1,
    function(e) {
        var n = e;
        n.Reporter = reporter.Reporter,
        n.DecoderBuffer = requireBuffer().DecoderBuffer,
        n.EncoderBuffer = requireBuffer().EncoderBuffer,
        n.Node = requireNode()
    }(base)),
    base
}
var constants$1 = {}, der = {}, hasRequiredDer$2;
function requireDer$2() {
    return hasRequiredDer$2 || (hasRequiredDer$2 = 1,
    function(e) {
        var n = requireConstants();
        e.tagClass = {
            0: "universal",
            1: "application",
            2: "context",
            3: "private"
        },
        e.tagClassByName = n._reverse(e.tagClass),
        e.tag = {
            0: "end",
            1: "bool",
            2: "int",
            3: "bitstr",
            4: "octstr",
            5: "null_",
            6: "objid",
            7: "objDesc",
            8: "external",
            9: "real",
            10: "enum",
            11: "embed",
            12: "utf8str",
            13: "relativeOid",
            16: "seq",
            17: "set",
            18: "numstr",
            19: "printstr",
            20: "t61str",
            21: "videostr",
            22: "ia5str",
            23: "utctime",
            24: "gentime",
            25: "graphstr",
            26: "iso646str",
            27: "genstr",
            28: "unistr",
            29: "charstr",
            30: "bmpstr"
        },
        e.tagByName = n._reverse(e.tag)
    }(der)),
    der
}
var hasRequiredConstants;
function requireConstants() {
    return hasRequiredConstants || (hasRequiredConstants = 1,
    function(e) {
        var n = e;
        n._reverse = function(o) {
            var l = {};
            return Object.keys(o).forEach(function(a) {
                (a | 0) == a && (a = a | 0);
                var c = o[a];
                l[c] = a
            }),
            l
        }
        ,
        n.der = requireDer$2()
    }(constants$1)),
    constants$1
}
var decoders = {}, der_1$1, hasRequiredDer$1;
function requireDer$1() {
    if (hasRequiredDer$1)
        return der_1$1;
    hasRequiredDer$1 = 1;
    var e = inherits_browserExports
      , n = requireAsn1()
      , i = n.base
      , o = n.bignum
      , l = n.constants.der;
    function a(m) {
        this.enc = "der",
        this.name = m.name,
        this.entity = m,
        this.tree = new c,
        this.tree._init(m.body)
    }
    der_1$1 = a,
    a.prototype.decode = function(d, p) {
        return d instanceof i.DecoderBuffer || (d = new i.DecoderBuffer(d,p)),
        this.tree._decode(d, p)
    }
    ;
    function c(m) {
        i.Node.call(this, "der", m)
    }
    e(c, i.Node),
    c.prototype._peekTag = function(d, p, b) {
        if (d.isEmpty())
            return !1;
        var g = d.save()
          , $ = u(d, 'Failed to peek tag: "' + p + '"');
        return d.isError($) ? $ : (d.restore(g),
        $.tag === p || $.tagStr === p || $.tagStr + "of" === p || b)
    }
    ,
    c.prototype._decodeTag = function(d, p, b) {
        var g = u(d, 'Failed to decode tag of "' + p + '"');
        if (d.isError(g))
            return g;
        var $ = h(d, g.primitive, 'Failed to get length of "' + p + '"');
        if (d.isError($))
            return $;
        if (!b && g.tag !== p && g.tagStr !== p && g.tagStr + "of" !== p)
            return d.error('Failed to match tag: "' + p + '"');
        if (g.primitive || $ !== null)
            return d.skip($, 'Failed to match body of: "' + p + '"');
        var N = d.save()
          , I = this._skipUntilEnd(d, 'Failed to skip indefinite length body: "' + this.tag + '"');
        return d.isError(I) ? I : ($ = d.offset - N.offset,
        d.restore(N),
        d.skip($, 'Failed to match body of: "' + p + '"'))
    }
    ,
    c.prototype._skipUntilEnd = function(d, p) {
        for (; ; ) {
            var b = u(d, p);
            if (d.isError(b))
                return b;
            var g = h(d, b.primitive, p);
            if (d.isError(g))
                return g;
            var $;
            if (b.primitive || g !== null ? $ = d.skip(g) : $ = this._skipUntilEnd(d, p),
            d.isError($))
                return $;
            if (b.tagStr === "end")
                break
        }
    }
    ,
    c.prototype._decodeList = function(d, p, b, g) {
        for (var $ = []; !d.isEmpty(); ) {
            var N = this._peekTag(d, "end");
            if (d.isError(N))
                return N;
            var I = b.decode(d, "der", g);
            if (d.isError(I) && N)
                break;
            $.push(I)
        }
        return $
    }
    ,
    c.prototype._decodeStr = function(d, p) {
        if (p === "bitstr") {
            var b = d.readUInt8();
            return d.isError(b) ? b : {
                unused: b,
                data: d.raw()
            }
        } else if (p === "bmpstr") {
            var g = d.raw();
            if (g.length % 2 === 1)
                return d.error("Decoding of string type: bmpstr length mismatch");
            for (var $ = "", N = 0; N < g.length / 2; N++)
                $ += String.fromCharCode(g.readUInt16BE(N * 2));
            return $
        } else if (p === "numstr") {
            var I = d.raw().toString("ascii");
            return this._isNumstr(I) ? I : d.error("Decoding of string type: numstr unsupported characters")
        } else {
            if (p === "octstr")
                return d.raw();
            if (p === "objDesc")
                return d.raw();
            if (p === "printstr") {
                var L = d.raw().toString("ascii");
                return this._isPrintstr(L) ? L : d.error("Decoding of string type: printstr unsupported characters")
            } else
                return /str$/.test(p) ? d.raw().toString() : d.error("Decoding of string type: " + p + " unsupported")
        }
    }
    ,
    c.prototype._decodeObjid = function(d, p, b) {
        for (var g, $ = [], N = 0; !d.isEmpty(); ) {
            var I = d.readUInt8();
            N <<= 7,
            N |= I & 127,
            I & 128 || ($.push(N),
            N = 0)
        }
        I & 128 && $.push(N);
        var L = $[0] / 40 | 0
          , T = $[0] % 40;
        if (b ? g = $ : g = [L, T].concat($.slice(1)),
        p) {
            var M = p[g.join(" ")];
            M === void 0 && (M = p[g.join(".")]),
            M !== void 0 && (g = M)
        }
        return g
    }
    ,
    c.prototype._decodeTime = function(d, p) {
        var b = d.raw().toString();
        if (p === "gentime")
            var g = b.slice(0, 4) | 0
              , $ = b.slice(4, 6) | 0
              , N = b.slice(6, 8) | 0
              , I = b.slice(8, 10) | 0
              , L = b.slice(10, 12) | 0
              , T = b.slice(12, 14) | 0;
        else if (p === "utctime") {
            var g = b.slice(0, 2) | 0
              , $ = b.slice(2, 4) | 0
              , N = b.slice(4, 6) | 0
              , I = b.slice(6, 8) | 0
              , L = b.slice(8, 10) | 0
              , T = b.slice(10, 12) | 0;
            g < 70 ? g = 2e3 + g : g = 1900 + g
        } else
            return d.error("Decoding " + p + " time is not supported yet");
        return Date.UTC(g, $ - 1, N, I, L, T, 0)
    }
    ,
    c.prototype._decodeNull = function(d) {
        return null
    }
    ,
    c.prototype._decodeBool = function(d) {
        var p = d.readUInt8();
        return d.isError(p) ? p : p !== 0
    }
    ,
    c.prototype._decodeInt = function(d, p) {
        var b = d.raw()
          , g = new o(b);
        return p && (g = p[g.toString(10)] || g),
        g
    }
    ,
    c.prototype._use = function(d, p) {
        return typeof d == "function" && (d = d(p)),
        d._getDecoder("der").tree
    }
    ;
    function u(m, d) {
        var p = m.readUInt8(d);
        if (m.isError(p))
            return p;
        var b = l.tagClass[p >> 6]
          , g = (p & 32) === 0;
        if ((p & 31) === 31) {
            var $ = p;
            for (p = 0; ($ & 128) === 128; ) {
                if ($ = m.readUInt8(d),
                m.isError($))
                    return $;
                p <<= 7,
                p |= $ & 127
            }
        } else
            p &= 31;
        var N = l.tag[p];
        return {
            cls: b,
            primitive: g,
            tag: p,
            tagStr: N
        }
    }
    function h(m, d, p) {
        var b = m.readUInt8(p);
        if (m.isError(b))
            return b;
        if (!d && b === 128)
            return null;
        if (!(b & 128))
            return b;
        var g = b & 127;
        if (g > 4)
            return m.error("length octect is too long");
        b = 0;
        for (var $ = 0; $ < g; $++) {
            b <<= 8;
            var N = m.readUInt8(p);
            if (m.isError(N))
                return N;
            b |= N
        }
        return b
    }
    return der_1$1
}
var pem$1, hasRequiredPem$1;
function requirePem$1() {
    if (hasRequiredPem$1)
        return pem$1;
    hasRequiredPem$1 = 1;
    var e = inherits_browserExports
      , n = require$$0$2.Buffer
      , i = requireDer$1();
    function o(l) {
        i.call(this, l),
        this.enc = "pem"
    }
    return e(o, i),
    pem$1 = o,
    o.prototype.decode = function(a, c) {
        for (var u = a.toString().split(/[\r\n]+/g), h = c.label.toUpperCase(), m = /^-----(BEGIN|END) ([^-]+)-----$/, d = -1, p = -1, b = 0; b < u.length; b++) {
            var g = u[b].match(m);
            if (g !== null && g[2] === h)
                if (d === -1) {
                    if (g[1] !== "BEGIN")
                        break;
                    d = b
                } else {
                    if (g[1] !== "END")
                        break;
                    p = b;
                    break
                }
        }
        if (d === -1 || p === -1)
            throw new Error("PEM section not found for: " + h);
        var $ = u.slice(d + 1, p).join("");
        $.replace(/[^a-z0-9\+\/=]+/gi, "");
        var N = new n($,"base64");
        return i.prototype.decode.call(this, N, c)
    }
    ,
    pem$1
}
var hasRequiredDecoders;
function requireDecoders() {
    return hasRequiredDecoders || (hasRequiredDecoders = 1,
    function(e) {
        var n = e;
        n.der = requireDer$1(),
        n.pem = requirePem$1()
    }(decoders)),
    decoders
}
var encoders = {}, der_1, hasRequiredDer;
function requireDer() {
    if (hasRequiredDer)
        return der_1;
    hasRequiredDer = 1;
    var e = inherits_browserExports
      , n = require$$0$2.Buffer
      , i = requireAsn1()
      , o = i.base
      , l = i.constants.der;
    function a(m) {
        this.enc = "der",
        this.name = m.name,
        this.entity = m,
        this.tree = new c,
        this.tree._init(m.body)
    }
    der_1 = a,
    a.prototype.encode = function(d, p) {
        return this.tree._encode(d, p).join()
    }
    ;
    function c(m) {
        o.Node.call(this, "der", m)
    }
    e(c, o.Node),
    c.prototype._encodeComposite = function(d, p, b, g) {
        var $ = h(d, p, b, this.reporter);
        if (g.length < 128) {
            var L = new n(2);
            return L[0] = $,
            L[1] = g.length,
            this._createEncoderBuffer([L, g])
        }
        for (var N = 1, I = g.length; I >= 256; I >>= 8)
            N++;
        var L = new n(2 + N);
        L[0] = $,
        L[1] = 128 | N;
        for (var I = 1 + N, T = g.length; T > 0; I--,
        T >>= 8)
            L[I] = T & 255;
        return this._createEncoderBuffer([L, g])
    }
    ,
    c.prototype._encodeStr = function(d, p) {
        if (p === "bitstr")
            return this._createEncoderBuffer([d.unused | 0, d.data]);
        if (p === "bmpstr") {
            for (var b = new n(d.length * 2), g = 0; g < d.length; g++)
                b.writeUInt16BE(d.charCodeAt(g), g * 2);
            return this._createEncoderBuffer(b)
        } else
            return p === "numstr" ? this._isNumstr(d) ? this._createEncoderBuffer(d) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : p === "printstr" ? this._isPrintstr(d) ? this._createEncoderBuffer(d) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(p) ? this._createEncoderBuffer(d) : p === "objDesc" ? this._createEncoderBuffer(d) : this.reporter.error("Encoding of string type: " + p + " unsupported")
    }
    ,
    c.prototype._encodeObjid = function(d, p, b) {
        if (typeof d == "string") {
            if (!p)
                return this.reporter.error("string objid given, but no values map found");
            if (!p.hasOwnProperty(d))
                return this.reporter.error("objid not found in values map");
            d = p[d].split(/[\s\.]+/g);
            for (var g = 0; g < d.length; g++)
                d[g] |= 0
        } else if (Array.isArray(d)) {
            d = d.slice();
            for (var g = 0; g < d.length; g++)
                d[g] |= 0
        }
        if (!Array.isArray(d))
            return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(d));
        if (!b) {
            if (d[1] >= 40)
                return this.reporter.error("Second objid identifier OOB");
            d.splice(0, 2, d[0] * 40 + d[1])
        }
        for (var $ = 0, g = 0; g < d.length; g++) {
            var N = d[g];
            for ($++; N >= 128; N >>= 7)
                $++
        }
        for (var I = new n($), L = I.length - 1, g = d.length - 1; g >= 0; g--) {
            var N = d[g];
            for (I[L--] = N & 127; (N >>= 7) > 0; )
                I[L--] = 128 | N & 127
        }
        return this._createEncoderBuffer(I)
    }
    ;
    function u(m) {
        return m < 10 ? "0" + m : m
    }
    c.prototype._encodeTime = function(d, p) {
        var b, g = new Date(d);
        return p === "gentime" ? b = [u(g.getFullYear()), u(g.getUTCMonth() + 1), u(g.getUTCDate()), u(g.getUTCHours()), u(g.getUTCMinutes()), u(g.getUTCSeconds()), "Z"].join("") : p === "utctime" ? b = [u(g.getFullYear() % 100), u(g.getUTCMonth() + 1), u(g.getUTCDate()), u(g.getUTCHours()), u(g.getUTCMinutes()), u(g.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + p + " time is not supported yet"),
        this._encodeStr(b, "octstr")
    }
    ,
    c.prototype._encodeNull = function() {
        return this._createEncoderBuffer("")
    }
    ,
    c.prototype._encodeInt = function(d, p) {
        if (typeof d == "string") {
            if (!p)
                return this.reporter.error("String int or enum given, but no values map");
            if (!p.hasOwnProperty(d))
                return this.reporter.error("Values map doesn't contain: " + JSON.stringify(d));
            d = p[d]
        }
        if (typeof d != "number" && !n.isBuffer(d)) {
            var b = d.toArray();
            !d.sign && b[0] & 128 && b.unshift(0),
            d = new n(b)
        }
        if (n.isBuffer(d)) {
            var g = d.length;
            d.length === 0 && g++;
            var N = new n(g);
            return d.copy(N),
            d.length === 0 && (N[0] = 0),
            this._createEncoderBuffer(N)
        }
        if (d < 128)
            return this._createEncoderBuffer(d);
        if (d < 256)
            return this._createEncoderBuffer([0, d]);
        for (var g = 1, $ = d; $ >= 256; $ >>= 8)
            g++;
        for (var N = new Array(g), $ = N.length - 1; $ >= 0; $--)
            N[$] = d & 255,
            d >>= 8;
        return N[0] & 128 && N.unshift(0),
        this._createEncoderBuffer(new n(N))
    }
    ,
    c.prototype._encodeBool = function(d) {
        return this._createEncoderBuffer(d ? 255 : 0)
    }
    ,
    c.prototype._use = function(d, p) {
        return typeof d == "function" && (d = d(p)),
        d._getEncoder("der").tree
    }
    ,
    c.prototype._skipDefault = function(d, p, b) {
        var g = this._baseState, $;
        if (g.default === null)
            return !1;
        var N = d.join();
        if (g.defaultBuffer === void 0 && (g.defaultBuffer = this._encodeValue(g.default, p, b).join()),
        N.length !== g.defaultBuffer.length)
            return !1;
        for ($ = 0; $ < N.length; $++)
            if (N[$] !== g.defaultBuffer[$])
                return !1;
        return !0
    }
    ;
    function h(m, d, p, b) {
        var g;
        if (m === "seqof" ? m = "seq" : m === "setof" && (m = "set"),
        l.tagByName.hasOwnProperty(m))
            g = l.tagByName[m];
        else if (typeof m == "number" && (m | 0) === m)
            g = m;
        else
            return b.error("Unknown tag: " + m);
        return g >= 31 ? b.error("Multi-octet tag encoding unsupported") : (d || (g |= 32),
        g |= l.tagClassByName[p || "universal"] << 6,
        g)
    }
    return der_1
}
var pem, hasRequiredPem;
function requirePem() {
    if (hasRequiredPem)
        return pem;
    hasRequiredPem = 1;
    var e = inherits_browserExports
      , n = requireDer();
    function i(o) {
        n.call(this, o),
        this.enc = "pem"
    }
    return e(i, n),
    pem = i,
    i.prototype.encode = function(l, a) {
        for (var c = n.prototype.encode.call(this, l), u = c.toString("base64"), h = ["-----BEGIN " + a.label + "-----"], m = 0; m < u.length; m += 64)
            h.push(u.slice(m, m + 64));
        return h.push("-----END " + a.label + "-----"),
        h.join(`
`)
    }
    ,
    pem
}
var hasRequiredEncoders;
function requireEncoders() {
    return hasRequiredEncoders || (hasRequiredEncoders = 1,
    function(e) {
        var n = e;
        n.der = requireDer(),
        n.pem = requirePem()
    }(encoders)),
    encoders
}
var hasRequiredAsn1;
function requireAsn1() {
    return hasRequiredAsn1 || (hasRequiredAsn1 = 1,
    function(e) {
        var n = e;
        n.bignum = bnExports$1,
        n.define = requireApi().define,
        n.base = requireBase(),
        n.constants = requireConstants(),
        n.decoders = requireDecoders(),
        n.encoders = requireEncoders()
    }(asn1$2)),
    asn1$2
}
var asn = requireAsn1()
  , Time = asn.define("Time", function() {
    this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
    })
})
  , AttributeTypeValue = asn.define("AttributeTypeValue", function() {
    this.seq().obj(this.key("type").objid(), this.key("value").any())
})
  , AlgorithmIdentifier$1 = asn.define("AlgorithmIdentifier", function() {
    this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional())
})
  , SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function() {
    this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier$1), this.key("subjectPublicKey").bitstr())
})
  , RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function() {
    this.setof(AttributeTypeValue)
})
  , RDNSequence = asn.define("RDNSequence", function() {
    this.seqof(RelativeDistinguishedName)
})
  , Name = asn.define("Name", function() {
    this.choice({
        rdnSequence: this.use(RDNSequence)
    })
})
  , Validity = asn.define("Validity", function() {
    this.seq().obj(this.key("notBefore").use(Time), this.key("notAfter").use(Time))
})
  , Extension = asn.define("Extension", function() {
    this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr())
})
  , TBSCertificate = asn.define("TBSCertificate", function() {
    this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(AlgorithmIdentifier$1), this.key("issuer").use(Name), this.key("validity").use(Validity), this.key("subject").use(Name), this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(Extension).optional())
})
  , X509Certificate = asn.define("X509Certificate", function() {
    this.seq().obj(this.key("tbsCertificate").use(TBSCertificate), this.key("signatureAlgorithm").use(AlgorithmIdentifier$1), this.key("signatureValue").bitstr())
})
  , certificate = X509Certificate
  , asn1$1 = requireAsn1();
asn1$3.certificate = certificate;
var RSAPrivateKey = asn1$1.define("RSAPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int())
});
asn1$3.RSAPrivateKey = RSAPrivateKey;
var RSAPublicKey = asn1$1.define("RSAPublicKey", function() {
    this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int())
});
asn1$3.RSAPublicKey = RSAPublicKey;
var AlgorithmIdentifier = asn1$1.define("AlgorithmIdentifier", function() {
    this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional())
})
  , PublicKey = asn1$1.define("SubjectPublicKeyInfo", function() {
    this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr())
});
asn1$3.PublicKey = PublicKey;
var PrivateKeyInfo = asn1$1.define("PrivateKeyInfo", function() {
    this.seq().obj(this.key("version").int(), this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPrivateKey").octstr())
});
asn1$3.PrivateKey = PrivateKeyInfo;
var EncryptedPrivateKeyInfo = asn1$1.define("EncryptedPrivateKeyInfo", function() {
    this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr())
});
asn1$3.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
var DSAPrivateKey = asn1$1.define("DSAPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int())
});
asn1$3.DSAPrivateKey = DSAPrivateKey;
asn1$3.DSAparam = asn1$1.define("DSAparam", function() {
    this.int()
});
var ECParameters = asn1$1.define("ECParameters", function() {
    this.choice({
        namedCurve: this.objid()
    })
})
  , ECPrivateKey = asn1$1.define("ECPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(ECParameters), this.key("publicKey").optional().explicit(1).bitstr())
});
asn1$3.ECPrivateKey = ECPrivateKey;
asn1$3.signature = asn1$1.define("signature", function() {
    this.seq().obj(this.key("r").int(), this.key("s").int())
});
const require$$1 = {
    "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
    "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
    "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
    "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
    "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
    "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
    "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
    "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
    "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
    "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
    "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
    "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
};
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
  , startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
  , fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
  , evp = evp_bytestokey
  , ciphers$1 = browser$5
  , Buffer$9 = safeBufferExports$1.Buffer
  , fixProc$1 = function(e, n) {
    var i = e.toString(), o = i.match(findProc), l;
    if (o) {
        var c = "aes" + o[1]
          , u = Buffer$9.from(o[2], "hex")
          , h = Buffer$9.from(o[3].replace(/[\r\n]/g, ""), "base64")
          , m = evp(n, u.slice(0, 8), parseInt(o[1], 10)).key
          , d = []
          , p = ciphers$1.createDecipheriv(c, m, u);
        d.push(p.update(h)),
        d.push(p.final()),
        l = Buffer$9.concat(d)
    } else {
        var a = i.match(fullRegex);
        l = Buffer$9.from(a[2].replace(/[\r\n]/g, ""), "base64")
    }
    var b = i.match(startRegex)[1];
    return {
        tag: b,
        data: l
    }
}
  , asn1 = asn1$3
  , aesid = require$$1
  , fixProc = fixProc$1
  , ciphers = browser$5
  , compat = browser$7
  , Buffer$8 = safeBufferExports$1.Buffer;
function decrypt$1(e, n) {
    var i = e.algorithm.decrypt.kde.kdeparams.salt
      , o = parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
      , l = aesid[e.algorithm.decrypt.cipher.algo.join(".")]
      , a = e.algorithm.decrypt.cipher.iv
      , c = e.subjectPrivateKey
      , u = parseInt(l.split("-")[1], 10) / 8
      , h = compat.pbkdf2Sync(n, i, o, u, "sha1")
      , m = ciphers.createDecipheriv(l, h, a)
      , d = [];
    return d.push(m.update(c)),
    d.push(m.final()),
    Buffer$8.concat(d)
}
function parseKeys$2(e) {
    var n;
    typeof e == "object" && !Buffer$8.isBuffer(e) && (n = e.passphrase,
    e = e.key),
    typeof e == "string" && (e = Buffer$8.from(e));
    var i = fixProc(e, n), o = i.tag, l = i.data, a, c;
    switch (o) {
    case "CERTIFICATE":
        c = asn1.certificate.decode(l, "der").tbsCertificate.subjectPublicKeyInfo;
    case "PUBLIC KEY":
        switch (c || (c = asn1.PublicKey.decode(l, "der")),
        a = c.algorithm.algorithm.join("."),
        a) {
        case "1.2.840.113549.1.1.1":
            return asn1.RSAPublicKey.decode(c.subjectPublicKey.data, "der");
        case "1.2.840.10045.2.1":
            return c.subjectPrivateKey = c.subjectPublicKey,
            {
                type: "ec",
                data: c
            };
        case "1.2.840.10040.4.1":
            return c.algorithm.params.pub_key = asn1.DSAparam.decode(c.subjectPublicKey.data, "der"),
            {
                type: "dsa",
                data: c.algorithm.params
            };
        default:
            throw new Error("unknown key id " + a)
        }
    case "ENCRYPTED PRIVATE KEY":
        l = asn1.EncryptedPrivateKey.decode(l, "der"),
        l = decrypt$1(l, n);
    case "PRIVATE KEY":
        switch (c = asn1.PrivateKey.decode(l, "der"),
        a = c.algorithm.algorithm.join("."),
        a) {
        case "1.2.840.113549.1.1.1":
            return asn1.RSAPrivateKey.decode(c.subjectPrivateKey, "der");
        case "1.2.840.10045.2.1":
            return {
                curve: c.algorithm.curve,
                privateKey: asn1.ECPrivateKey.decode(c.subjectPrivateKey, "der").privateKey
            };
        case "1.2.840.10040.4.1":
            return c.algorithm.params.priv_key = asn1.DSAparam.decode(c.subjectPrivateKey, "der"),
            {
                type: "dsa",
                params: c.algorithm.params
            };
        default:
            throw new Error("unknown key id " + a)
        }
    case "RSA PUBLIC KEY":
        return asn1.RSAPublicKey.decode(l, "der");
    case "RSA PRIVATE KEY":
        return asn1.RSAPrivateKey.decode(l, "der");
    case "DSA PRIVATE KEY":
        return {
            type: "dsa",
            params: asn1.DSAPrivateKey.decode(l, "der")
        };
    case "EC PRIVATE KEY":
        return l = asn1.ECPrivateKey.decode(l, "der"),
        {
            curve: l.parameters.value,
            privateKey: l.privateKey
        };
    default:
        throw new Error("unknown key type " + o)
    }
}
parseKeys$2.signature = asn1.signature;
var parseAsn1 = parseKeys$2;
const require$$4 = {
    "1.3.132.0.10": "secp256k1",
    "1.3.132.0.33": "p224",
    "1.2.840.10045.3.1.1": "p192",
    "1.2.840.10045.3.1.7": "p256",
    "1.3.132.0.34": "p384",
    "1.3.132.0.35": "p521"
};
var hasRequiredSign;
function requireSign() {
    if (hasRequiredSign)
        return sign.exports;
    hasRequiredSign = 1;
    var e = safeBufferExports$1.Buffer
      , n = browser$8
      , i = browserifyRsa
      , o = requireElliptic().ec
      , l = bnExports
      , a = parseAsn1
      , c = require$$4
      , u = 1;
    function h(L, T, M, q, Q) {
        var Y = a(T);
        if (Y.curve) {
            if (q !== "ecdsa" && q !== "ecdsa/rsa")
                throw new Error("wrong private key type");
            return m(L, Y)
        } else if (Y.type === "dsa") {
            if (q !== "dsa")
                throw new Error("wrong private key type");
            return d(L, Y, M)
        }
        if (q !== "rsa" && q !== "ecdsa/rsa")
            throw new Error("wrong private key type");
        if (T.padding !== void 0 && T.padding !== u)
            throw new Error("illegal or unsupported padding mode");
        L = e.concat([Q, L]);
        for (var ee = Y.modulus.byteLength(), ie = [0, 1]; L.length + ie.length + 1 < ee; )
            ie.push(255);
        ie.push(0);
        for (var te = -1; ++te < L.length; )
            ie.push(L[te]);
        var ne = i(ie, Y);
        return ne
    }
    function m(L, T) {
        var M = c[T.curve.join(".")];
        if (!M)
            throw new Error("unknown curve " + T.curve.join("."));
        var q = new o(M)
          , Q = q.keyFromPrivate(T.privateKey)
          , Y = Q.sign(L);
        return e.from(Y.toDER())
    }
    function d(L, T, M) {
        for (var q = T.params.priv_key, Q = T.params.p, Y = T.params.q, ee = T.params.g, ie = new l(0), te, ne = g(L, Y).mod(Y), V = !1, w = b(q, Y, L, M); V === !1; )
            te = N(Y, w, M),
            ie = I(ee, te, Q, Y),
            V = te.invm(Y).imul(ne.add(q.mul(ie))).mod(Y),
            V.cmpn(0) === 0 && (V = !1,
            ie = new l(0));
        return p(ie, V)
    }
    function p(L, T) {
        L = L.toArray(),
        T = T.toArray(),
        L[0] & 128 && (L = [0].concat(L)),
        T[0] & 128 && (T = [0].concat(T));
        var M = L.length + T.length + 4
          , q = [48, M, 2, L.length];
        return q = q.concat(L, [2, T.length], T),
        e.from(q)
    }
    function b(L, T, M, q) {
        if (L = e.from(L.toArray()),
        L.length < T.byteLength()) {
            var Q = e.alloc(T.byteLength() - L.length);
            L = e.concat([Q, L])
        }
        var Y = M.length
          , ee = $(M, T)
          , ie = e.alloc(Y);
        ie.fill(1);
        var te = e.alloc(Y);
        return te = n(q, te).update(ie).update(e.from([0])).update(L).update(ee).digest(),
        ie = n(q, te).update(ie).digest(),
        te = n(q, te).update(ie).update(e.from([1])).update(L).update(ee).digest(),
        ie = n(q, te).update(ie).digest(),
        {
            k: te,
            v: ie
        }
    }
    function g(L, T) {
        var M = new l(L)
          , q = (L.length << 3) - T.bitLength();
        return q > 0 && M.ishrn(q),
        M
    }
    function $(L, T) {
        L = g(L, T),
        L = L.mod(T);
        var M = e.from(L.toArray());
        if (M.length < T.byteLength()) {
            var q = e.alloc(T.byteLength() - M.length);
            M = e.concat([q, M])
        }
        return M
    }
    function N(L, T, M) {
        var q, Q;
        do {
            for (q = e.alloc(0); q.length * 8 < L.bitLength(); )
                T.v = n(M, T.k).update(T.v).digest(),
                q = e.concat([q, T.v]);
            Q = g(q, L),
            T.k = n(M, T.k).update(T.v).update(e.from([0])).digest(),
            T.v = n(M, T.k).update(T.v).digest()
        } while (Q.cmp(L) !== -1);
        return Q
    }
    function I(L, T, M, q) {
        return L.toRed(l.mont(M)).redPow(T).fromRed().mod(q)
    }
    return sign.exports = h,
    sign.exports.getKey = b,
    sign.exports.makeKey = N,
    sign.exports
}
var verify_1, hasRequiredVerify;
function requireVerify() {
    if (hasRequiredVerify)
        return verify_1;
    hasRequiredVerify = 1;
    var e = safeBufferExports$1.Buffer
      , n = bnExports
      , i = requireElliptic().ec
      , o = parseAsn1
      , l = require$$4;
    function a(m, d, p, b, g) {
        var $ = o(p);
        if ($.type === "ec") {
            if (b !== "ecdsa" && b !== "ecdsa/rsa")
                throw new Error("wrong public key type");
            return c(m, d, $)
        } else if ($.type === "dsa") {
            if (b !== "dsa")
                throw new Error("wrong public key type");
            return u(m, d, $)
        }
        if (b !== "rsa" && b !== "ecdsa/rsa")
            throw new Error("wrong public key type");
        d = e.concat([g, d]);
        for (var N = $.modulus.byteLength(), I = [1], L = 0; d.length + I.length + 2 < N; )
            I.push(255),
            L += 1;
        I.push(0);
        for (var T = -1; ++T < d.length; )
            I.push(d[T]);
        I = e.from(I);
        var M = n.mont($.modulus);
        m = new n(m).toRed(M),
        m = m.redPow(new n($.publicExponent)),
        m = e.from(m.fromRed().toArray());
        var q = L < 8 ? 1 : 0;
        for (N = Math.min(m.length, I.length),
        m.length !== I.length && (q = 1),
        T = -1; ++T < N; )
            q |= m[T] ^ I[T];
        return q === 0
    }
    function c(m, d, p) {
        var b = l[p.data.algorithm.curve.join(".")];
        if (!b)
            throw new Error("unknown curve " + p.data.algorithm.curve.join("."));
        var g = new i(b)
          , $ = p.data.subjectPrivateKey.data;
        return g.verify(d, m, $)
    }
    function u(m, d, p) {
        var b = p.data.p
          , g = p.data.q
          , $ = p.data.g
          , N = p.data.pub_key
          , I = o.signature.decode(m, "der")
          , L = I.s
          , T = I.r;
        h(L, g),
        h(T, g);
        var M = n.mont(b)
          , q = L.invm(g)
          , Q = $.toRed(M).redPow(new n(d).mul(q).mod(g)).fromRed().mul(N.toRed(M).redPow(T.mul(q).mod(g)).fromRed()).mod(b).mod(g);
        return Q.cmp(T) === 0
    }
    function h(m, d) {
        if (m.cmpn(0) <= 0)
            throw new Error("invalid sig");
        if (m.cmp(d) >= 0)
            throw new Error("invalid sig")
    }
    return verify_1 = a,
    verify_1
}
var browser$3, hasRequiredBrowser$1;
function requireBrowser$1() {
    if (hasRequiredBrowser$1)
        return browser$3;
    hasRequiredBrowser$1 = 1;
    var e = safeBufferExports$1.Buffer
      , n = browser$9
      , i = readableBrowserExports
      , o = inherits_browserExports
      , l = requireSign()
      , a = requireVerify()
      , c = require$$6;
    Object.keys(c).forEach(function(p) {
        c[p].id = e.from(c[p].id, "hex"),
        c[p.toLowerCase()] = c[p]
    });
    function u(p) {
        i.Writable.call(this);
        var b = c[p];
        if (!b)
            throw new Error("Unknown message digest");
        this._hashType = b.hash,
        this._hash = n(b.hash),
        this._tag = b.id,
        this._signType = b.sign
    }
    o(u, i.Writable),
    u.prototype._write = function(b, g, $) {
        this._hash.update(b),
        $()
    }
    ,
    u.prototype.update = function(b, g) {
        return this._hash.update(typeof b == "string" ? e.from(b, g) : b),
        this
    }
    ,
    u.prototype.sign = function(b, g) {
        this.end();
        var $ = this._hash.digest()
          , N = l($, b, this._hashType, this._signType, this._tag);
        return g ? N.toString(g) : N
    }
    ;
    function h(p) {
        i.Writable.call(this);
        var b = c[p];
        if (!b)
            throw new Error("Unknown message digest");
        this._hash = n(b.hash),
        this._tag = b.id,
        this._signType = b.sign
    }
    o(h, i.Writable),
    h.prototype._write = function(b, g, $) {
        this._hash.update(b),
        $()
    }
    ,
    h.prototype.update = function(b, g) {
        return this._hash.update(typeof b == "string" ? e.from(b, g) : b),
        this
    }
    ,
    h.prototype.verify = function(b, g, $) {
        var N = typeof g == "string" ? e.from(g, $) : g;
        this.end();
        var I = this._hash.digest();
        return a(N, I, b, this._signType, this._tag)
    }
    ;
    function m(p) {
        return new u(p)
    }
    function d(p) {
        return new h(p)
    }
    return browser$3 = {
        Sign: m,
        Verify: d,
        createSign: m,
        createVerify: d
    },
    browser$3
}
var browser$2, hasRequiredBrowser;
function requireBrowser() {
    if (hasRequiredBrowser)
        return browser$2;
    hasRequiredBrowser = 1;
    var e = requireElliptic()
      , n = bnExports$1;
    browser$2 = function(c) {
        return new o(c)
    }
    ;
    var i = {
        secp256k1: {
            name: "secp256k1",
            byteLength: 32
        },
        secp224r1: {
            name: "p224",
            byteLength: 28
        },
        prime256v1: {
            name: "p256",
            byteLength: 32
        },
        prime192v1: {
            name: "p192",
            byteLength: 24
        },
        ed25519: {
            name: "ed25519",
            byteLength: 32
        },
        secp384r1: {
            name: "p384",
            byteLength: 48
        },
        secp521r1: {
            name: "p521",
            byteLength: 66
        }
    };
    i.p224 = i.secp224r1,
    i.p256 = i.secp256r1 = i.prime256v1,
    i.p192 = i.secp192r1 = i.prime192v1,
    i.p384 = i.secp384r1,
    i.p521 = i.secp521r1;
    function o(a) {
        this.curveType = i[a],
        this.curveType || (this.curveType = {
            name: a
        }),
        this.curve = new e.ec(this.curveType.name),
        this.keys = void 0
    }
    o.prototype.generateKeys = function(a, c) {
        return this.keys = this.curve.genKeyPair(),
        this.getPublicKey(a, c)
    }
    ,
    o.prototype.computeSecret = function(a, c, u) {
        c = c || "utf8",
        Buffer$G.isBuffer(a) || (a = new Buffer$G(a,c));
        var h = this.curve.keyFromPublic(a).getPublic()
          , m = h.mul(this.keys.getPrivate()).getX();
        return l(m, u, this.curveType.byteLength)
    }
    ,
    o.prototype.getPublicKey = function(a, c) {
        var u = this.keys.getPublic(c === "compressed", !0);
        return c === "hybrid" && (u[u.length - 1] % 2 ? u[0] = 7 : u[0] = 6),
        l(u, a)
    }
    ,
    o.prototype.getPrivateKey = function(a) {
        return l(this.keys.getPrivate(), a)
    }
    ,
    o.prototype.setPublicKey = function(a, c) {
        return c = c || "utf8",
        Buffer$G.isBuffer(a) || (a = new Buffer$G(a,c)),
        this.keys._importPublic(a),
        this
    }
    ,
    o.prototype.setPrivateKey = function(a, c) {
        c = c || "utf8",
        Buffer$G.isBuffer(a) || (a = new Buffer$G(a,c));
        var u = new n(a);
        return u = u.toString(16),
        this.keys = this.curve.genKeyPair(),
        this.keys._importPrivate(u),
        this
    }
    ;
    function l(a, c, u) {
        Array.isArray(a) || (a = a.toArray());
        var h = new Buffer$G(a);
        if (u && h.length < u) {
            var m = new Buffer$G(u - h.length);
            m.fill(0),
            h = Buffer$G.concat([m, h])
        }
        return c ? h.toString(c) : h
    }
    return browser$2
}
var browser$1 = {}
  , createHash$2 = browser$9
  , Buffer$7 = safeBufferExports$1.Buffer
  , mgf$2 = function(e, n) {
    for (var i = Buffer$7.alloc(0), o = 0, l; i.length < n; )
        l = i2ops(o++),
        i = Buffer$7.concat([i, createHash$2("sha1").update(e).update(l).digest()]);
    return i.slice(0, n)
};
function i2ops(e) {
    var n = Buffer$7.allocUnsafe(4);
    return n.writeUInt32BE(e, 0),
    n
}
var xor$2 = function e(n, i) {
    for (var o = n.length, l = -1; ++l < o; )
        n[l] ^= i[l];
    return n
}
  , BN$2 = bnExports$1
  , Buffer$6 = safeBufferExports$1.Buffer;
function withPublic$2(e, n) {
    return Buffer$6.from(e.toRed(BN$2.mont(n.modulus)).redPow(new BN$2(n.publicExponent)).fromRed().toArray())
}
var withPublic_1 = withPublic$2
  , parseKeys$1 = parseAsn1
  , randomBytes = browserExports
  , createHash$1 = browser$9
  , mgf$1 = mgf$2
  , xor$1 = xor$2
  , BN$1 = bnExports$1
  , withPublic$1 = withPublic_1
  , crt$1 = browserifyRsa
  , Buffer$5 = safeBufferExports$1.Buffer
  , publicEncrypt = function e(n, i, o) {
    var l;
    n.padding ? l = n.padding : o ? l = 1 : l = 4;
    var a = parseKeys$1(n), c;
    if (l === 4)
        c = oaep$2(a, i);
    else if (l === 1)
        c = pkcs1$3(a, i, o);
    else if (l === 3) {
        if (c = new BN$1(i),
        c.cmp(a.modulus) >= 0)
            throw new Error("data too long for modulus")
    } else
        throw new Error("unknown padding");
    return o ? crt$1(c, a) : withPublic$1(c, a)
};
function oaep$2(e, n) {
    var i = e.modulus.byteLength()
      , o = n.length
      , l = createHash$1("sha1").update(Buffer$5.alloc(0)).digest()
      , a = l.length
      , c = 2 * a;
    if (o > i - c - 2)
        throw new Error("message too long");
    var u = Buffer$5.alloc(i - o - c - 2)
      , h = i - a - 1
      , m = randomBytes(a)
      , d = xor$1(Buffer$5.concat([l, u, Buffer$5.alloc(1, 1), n], h), mgf$1(m, h))
      , p = xor$1(m, mgf$1(d, a));
    return new BN$1(Buffer$5.concat([Buffer$5.alloc(1), p, d], i))
}
function pkcs1$3(e, n, i) {
    var o = n.length
      , l = e.modulus.byteLength();
    if (o > l - 11)
        throw new Error("message too long");
    var a;
    return i ? a = Buffer$5.alloc(l - o - 3, 255) : a = nonZero(l - o - 3),
    new BN$1(Buffer$5.concat([Buffer$5.from([0, i ? 1 : 2]), a, Buffer$5.alloc(1), n], l))
}
function nonZero(e) {
    for (var n = Buffer$5.allocUnsafe(e), i = 0, o = randomBytes(e * 2), l = 0, a; i < e; )
        l === o.length && (o = randomBytes(e * 2),
        l = 0),
        a = o[l++],
        a && (n[i++] = a);
    return n
}
var parseKeys = parseAsn1
  , mgf = mgf$2
  , xor = xor$2
  , BN = bnExports$1
  , crt = browserifyRsa
  , createHash = browser$9
  , withPublic = withPublic_1
  , Buffer$4 = safeBufferExports$1.Buffer
  , privateDecrypt = function e(n, i, o) {
    var l;
    n.padding ? l = n.padding : o ? l = 1 : l = 4;
    var a = parseKeys(n)
      , c = a.modulus.byteLength();
    if (i.length > c || new BN(i).cmp(a.modulus) >= 0)
        throw new Error("decryption error");
    var u;
    o ? u = withPublic(new BN(i), a) : u = crt(i, a);
    var h = Buffer$4.alloc(c - u.length);
    if (u = Buffer$4.concat([h, u], c),
    l === 4)
        return oaep$1(a, u);
    if (l === 1)
        return pkcs1$2(a, u, o);
    if (l === 3)
        return u;
    throw new Error("unknown padding")
};
function oaep$1(e, n) {
    var i = e.modulus.byteLength()
      , o = createHash("sha1").update(Buffer$4.alloc(0)).digest()
      , l = o.length;
    if (n[0] !== 0)
        throw new Error("decryption error");
    var a = n.slice(1, l + 1)
      , c = n.slice(l + 1)
      , u = xor(a, mgf(c, l))
      , h = xor(c, mgf(u, i - l - 1));
    if (compare(o, h.slice(0, l)))
        throw new Error("decryption error");
    for (var m = l; h[m] === 0; )
        m++;
    if (h[m++] !== 1)
        throw new Error("decryption error");
    return h.slice(m)
}
function pkcs1$2(e, n, i) {
    for (var o = n.slice(0, 2), l = 2, a = 0; n[l++] !== 0; )
        if (l >= n.length) {
            a++;
            break
        }
    var c = n.slice(2, l - 1);
    if ((o.toString("hex") !== "0002" && !i || o.toString("hex") !== "0001" && i) && a++,
    c.length < 8 && a++,
    a)
        throw new Error("decryption error");
    return n.slice(l)
}
function compare(e, n) {
    e = Buffer$4.from(e),
    n = Buffer$4.from(n);
    var i = 0
      , o = e.length;
    e.length !== n.length && (i++,
    o = Math.min(e.length, n.length));
    for (var l = -1; ++l < o; )
        i += e[l] ^ n[l];
    return i
}
(function(e) {
    e.publicEncrypt = publicEncrypt,
    e.privateDecrypt = privateDecrypt,
    e.privateEncrypt = function(i, o) {
        return e.publicEncrypt(i, o, !0)
    }
    ,
    e.publicDecrypt = function(i, o) {
        return e.privateDecrypt(i, o, !0)
    }
}
)(browser$1);
var browser = {};
function oldBrowser() {
    throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`)
}
var safeBuffer = safeBufferExports$1
  , randombytes = browserExports
  , Buffer$3 = safeBuffer.Buffer
  , kBufferMaxLength = safeBuffer.kMaxLength
  , crypto = commonjsGlobal.crypto || commonjsGlobal.msCrypto
  , kMaxUint32 = Math.pow(2, 32) - 1;
function assertOffset(e, n) {
    if (typeof e != "number" || e !== e)
        throw new TypeError("offset must be a number");
    if (e > kMaxUint32 || e < 0)
        throw new TypeError("offset must be a uint32");
    if (e > kBufferMaxLength || e > n)
        throw new RangeError("offset out of range")
}
function assertSize(e, n, i) {
    if (typeof e != "number" || e !== e)
        throw new TypeError("size must be a number");
    if (e > kMaxUint32 || e < 0)
        throw new TypeError("size must be a uint32");
    if (e + n > i || e > kBufferMaxLength)
        throw new RangeError("buffer too small")
}
crypto && crypto.getRandomValues || !process$1.browser ? (browser.randomFill = randomFill,
browser.randomFillSync = randomFillSync) : (browser.randomFill = oldBrowser,
browser.randomFillSync = oldBrowser);
function randomFill(e, n, i, o) {
    if (!Buffer$3.isBuffer(e) && !(e instanceof commonjsGlobal.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    if (typeof n == "function")
        o = n,
        n = 0,
        i = e.length;
    else if (typeof i == "function")
        o = i,
        i = e.length - n;
    else if (typeof o != "function")
        throw new TypeError('"cb" argument must be a function');
    return assertOffset(n, e.length),
    assertSize(i, n, e.length),
    actualFill(e, n, i, o)
}
function actualFill(e, n, i, o) {
    if (process$1.browser) {
        var l = e.buffer
          , a = new Uint8Array(l,n,i);
        if (crypto.getRandomValues(a),
        o) {
            process$1.nextTick(function() {
                o(null, e)
            });
            return
        }
        return e
    }
    if (o) {
        randombytes(i, function(u, h) {
            if (u)
                return o(u);
            h.copy(e, n),
            o(null, e)
        });
        return
    }
    var c = randombytes(i);
    return c.copy(e, n),
    e
}
function randomFillSync(e, n, i) {
    if (typeof n > "u" && (n = 0),
    !Buffer$3.isBuffer(e) && !(e instanceof commonjsGlobal.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    return assertOffset(n, e.length),
    i === void 0 && (i = e.length - n),
    assertSize(i, n, e.length),
    actualFill(e, n, i)
}
var hasRequiredCryptoBrowserify;
function requireCryptoBrowserify() {
    if (hasRequiredCryptoBrowserify)
        return cryptoBrowserify;
    hasRequiredCryptoBrowserify = 1,
    cryptoBrowserify.randomBytes = cryptoBrowserify.rng = cryptoBrowserify.pseudoRandomBytes = cryptoBrowserify.prng = browserExports,
    cryptoBrowserify.createHash = cryptoBrowserify.Hash = browser$9,
    cryptoBrowserify.createHmac = cryptoBrowserify.Hmac = browser$8;
    var e = algos
      , n = Object.keys(e)
      , i = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(n);
    cryptoBrowserify.getHashes = function() {
        return i
    }
    ;
    var o = browser$7;
    cryptoBrowserify.pbkdf2 = o.pbkdf2,
    cryptoBrowserify.pbkdf2Sync = o.pbkdf2Sync;
    var l = browser$6;
    cryptoBrowserify.Cipher = l.Cipher,
    cryptoBrowserify.createCipher = l.createCipher,
    cryptoBrowserify.Cipheriv = l.Cipheriv,
    cryptoBrowserify.createCipheriv = l.createCipheriv,
    cryptoBrowserify.Decipher = l.Decipher,
    cryptoBrowserify.createDecipher = l.createDecipher,
    cryptoBrowserify.Decipheriv = l.Decipheriv,
    cryptoBrowserify.createDecipheriv = l.createDecipheriv,
    cryptoBrowserify.getCiphers = l.getCiphers,
    cryptoBrowserify.listCiphers = l.listCiphers;
    var a = requireBrowser$2();
    cryptoBrowserify.DiffieHellmanGroup = a.DiffieHellmanGroup,
    cryptoBrowserify.createDiffieHellmanGroup = a.createDiffieHellmanGroup,
    cryptoBrowserify.getDiffieHellman = a.getDiffieHellman,
    cryptoBrowserify.createDiffieHellman = a.createDiffieHellman,
    cryptoBrowserify.DiffieHellman = a.DiffieHellman;
    var c = requireBrowser$1();
    cryptoBrowserify.createSign = c.createSign,
    cryptoBrowserify.Sign = c.Sign,
    cryptoBrowserify.createVerify = c.createVerify,
    cryptoBrowserify.Verify = c.Verify,
    cryptoBrowserify.createECDH = requireBrowser();
    var u = browser$1;
    cryptoBrowserify.publicEncrypt = u.publicEncrypt,
    cryptoBrowserify.privateEncrypt = u.privateEncrypt,
    cryptoBrowserify.publicDecrypt = u.publicDecrypt,
    cryptoBrowserify.privateDecrypt = u.privateDecrypt;
    var h = browser;
    return cryptoBrowserify.randomFill = h.randomFill,
    cryptoBrowserify.randomFillSync = h.randomFillSync,
    cryptoBrowserify.createCredentials = function() {
        throw new Error(`sorry, createCredentials is not implemented yet
we accept pull requests
https://github.com/browserify/crypto-browserify`)
    }
    ,
    cryptoBrowserify.constants = {
        DH_CHECK_P_NOT_SAFE_PRIME: 2,
        DH_CHECK_P_NOT_PRIME: 1,
        DH_UNABLE_TO_CHECK_GENERATOR: 4,
        DH_NOT_SUITABLE_GENERATOR: 8,
        NPN_ENABLED: 1,
        ALPN_ENABLED: 1,
        RSA_PKCS1_PADDING: 1,
        RSA_SSLV23_PADDING: 2,
        RSA_NO_PADDING: 3,
        RSA_PKCS1_OAEP_PADDING: 4,
        RSA_X931_PADDING: 5,
        RSA_PKCS1_PSS_PADDING: 6,
        POINT_CONVERSION_COMPRESSED: 2,
        POINT_CONVERSION_UNCOMPRESSED: 4,
        POINT_CONVERSION_HYBRID: 6
    },
    cryptoBrowserify
}
var hasRequiredCore;
function requireCore() {
    return hasRequiredCore || (hasRequiredCore = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o()
        }
        )(commonjsGlobal, function() {
            var i = i || function(o, l) {
                var a;
                if (typeof window < "u" && window.crypto && (a = window.crypto),
                typeof self < "u" && self.crypto && (a = self.crypto),
                typeof globalThis < "u" && globalThis.crypto && (a = globalThis.crypto),
                !a && typeof window < "u" && window.msCrypto && (a = window.msCrypto),
                !a && typeof commonjsGlobal < "u" && commonjsGlobal.crypto && (a = commonjsGlobal.crypto),
                !a && typeof commonjsRequire == "function")
                    try {
                        a = requireCryptoBrowserify()
                    } catch {}
                var c = function() {
                    if (a) {
                        if (typeof a.getRandomValues == "function")
                            try {
                                return a.getRandomValues(new Uint32Array(1))[0]
                            } catch {}
                        if (typeof a.randomBytes == "function")
                            try {
                                return a.randomBytes(4).readInt32LE()
                            } catch {}
                    }
                    throw new Error("Native crypto module could not be used to get secure random number.")
                }
                  , u = Object.create || function() {
                    function T() {}
                    return function(M) {
                        var q;
                        return T.prototype = M,
                        q = new T,
                        T.prototype = null,
                        q
                    }
                }()
                  , h = {}
                  , m = h.lib = {}
                  , d = m.Base = function() {
                    return {
                        extend: function(T) {
                            var M = u(this);
                            return T && M.mixIn(T),
                            (!M.hasOwnProperty("init") || this.init === M.init) && (M.init = function() {
                                M.$super.init.apply(this, arguments)
                            }
                            ),
                            M.init.prototype = M,
                            M.$super = this,
                            M
                        },
                        create: function() {
                            var T = this.extend();
                            return T.init.apply(T, arguments),
                            T
                        },
                        init: function() {},
                        mixIn: function(T) {
                            for (var M in T)
                                T.hasOwnProperty(M) && (this[M] = T[M]);
                            T.hasOwnProperty("toString") && (this.toString = T.toString)
                        },
                        clone: function() {
                            return this.init.prototype.extend(this)
                        }
                    }
                }()
                  , p = m.WordArray = d.extend({
                    init: function(T, M) {
                        T = this.words = T || [],
                        M != l ? this.sigBytes = M : this.sigBytes = T.length * 4
                    },
                    toString: function(T) {
                        return (T || g).stringify(this)
                    },
                    concat: function(T) {
                        var M = this.words
                          , q = T.words
                          , Q = this.sigBytes
                          , Y = T.sigBytes;
                        if (this.clamp(),
                        Q % 4)
                            for (var ee = 0; ee < Y; ee++) {
                                var ie = q[ee >>> 2] >>> 24 - ee % 4 * 8 & 255;
                                M[Q + ee >>> 2] |= ie << 24 - (Q + ee) % 4 * 8
                            }
                        else
                            for (var te = 0; te < Y; te += 4)
                                M[Q + te >>> 2] = q[te >>> 2];
                        return this.sigBytes += Y,
                        this
                    },
                    clamp: function() {
                        var T = this.words
                          , M = this.sigBytes;
                        T[M >>> 2] &= 4294967295 << 32 - M % 4 * 8,
                        T.length = o.ceil(M / 4)
                    },
                    clone: function() {
                        var T = d.clone.call(this);
                        return T.words = this.words.slice(0),
                        T
                    },
                    random: function(T) {
                        for (var M = [], q = 0; q < T; q += 4)
                            M.push(c());
                        return new p.init(M,T)
                    }
                })
                  , b = h.enc = {}
                  , g = b.Hex = {
                    stringify: function(T) {
                        for (var M = T.words, q = T.sigBytes, Q = [], Y = 0; Y < q; Y++) {
                            var ee = M[Y >>> 2] >>> 24 - Y % 4 * 8 & 255;
                            Q.push((ee >>> 4).toString(16)),
                            Q.push((ee & 15).toString(16))
                        }
                        return Q.join("")
                    },
                    parse: function(T) {
                        for (var M = T.length, q = [], Q = 0; Q < M; Q += 2)
                            q[Q >>> 3] |= parseInt(T.substr(Q, 2), 16) << 24 - Q % 8 * 4;
                        return new p.init(q,M / 2)
                    }
                }
                  , $ = b.Latin1 = {
                    stringify: function(T) {
                        for (var M = T.words, q = T.sigBytes, Q = [], Y = 0; Y < q; Y++) {
                            var ee = M[Y >>> 2] >>> 24 - Y % 4 * 8 & 255;
                            Q.push(String.fromCharCode(ee))
                        }
                        return Q.join("")
                    },
                    parse: function(T) {
                        for (var M = T.length, q = [], Q = 0; Q < M; Q++)
                            q[Q >>> 2] |= (T.charCodeAt(Q) & 255) << 24 - Q % 4 * 8;
                        return new p.init(q,M)
                    }
                }
                  , N = b.Utf8 = {
                    stringify: function(T) {
                        try {
                            return decodeURIComponent(escape($.stringify(T)))
                        } catch {
                            const q = escape($.stringify(T))
                              , Q = /(%[A-Z|0-9|a-z]{2})+/gi
                              , Y = q.match(Q);
                            let ee = q;
                            for (let ie = 0, te = Y.length; ie < te; ie++)
                                try {
                                    const ne = decodeURIComponent(Y[ie]);
                                    ee = ee.replace(Y[ie], ne)
                                } catch {
                                    const V = unescape(Y[ie]);
                                    ee = ee.replace(Y[ie], V)
                                }
                            return ee
                        }
                    },
                    parse: function(T) {
                        return $.parse(unescape(encodeURIComponent(T)))
                    }
                }
                  , I = m.BufferedBlockAlgorithm = d.extend({
                    reset: function() {
                        this._data = new p.init,
                        this._nDataBytes = 0
                    },
                    _append: function(T) {
                        typeof T == "string" && (T = N.parse(T)),
                        this._data.concat(T),
                        this._nDataBytes += T.sigBytes
                    },
                    _process: function(T) {
                        var M, q = this._data, Q = q.words, Y = q.sigBytes, ee = this.blockSize, ie = ee * 4, te = Y / ie;
                        T ? te = o.ceil(te) : te = o.max((te | 0) - this._minBufferSize, 0);
                        var ne = te * ee
                          , V = o.min(ne * 4, Y);
                        if (ne) {
                            for (var w = 0; w < ne; w += ee)
                                this._doProcessBlock(Q, w);
                            M = Q.splice(0, ne),
                            q.sigBytes -= V
                        }
                        return new p.init(M,V)
                    },
                    clone: function() {
                        var T = d.clone.call(this);
                        return T._data = this._data.clone(),
                        T
                    },
                    _minBufferSize: 0
                });
                m.Hasher = I.extend({
                    cfg: d.extend(),
                    init: function(T) {
                        this.cfg = this.cfg.extend(T),
                        this.reset()
                    },
                    reset: function() {
                        I.reset.call(this),
                        this._doReset()
                    },
                    update: function(T) {
                        return this._append(T),
                        this._process(),
                        this
                    },
                    finalize: function(T) {
                        T && this._append(T);
                        var M = this._doFinalize();
                        return M
                    },
                    blockSize: 16,
                    _createHelper: function(T) {
                        return function(M, q) {
                            return new T.init(q).finalize(M)
                        }
                    },
                    _createHmacHelper: function(T) {
                        return function(M, q) {
                            return new L.HMAC.init(T,q).finalize(M)
                        }
                    }
                });
                var L = h.algo = {};
                return h
            }(Math);
            return i
        })
    }(core)),
    core.exports
}
var x64Core = {
    exports: {}
}, hasRequiredX64Core;
function requireX64Core() {
    return hasRequiredX64Core || (hasRequiredX64Core = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.Base
                  , u = a.WordArray
                  , h = l.x64 = {};
                h.Word = c.extend({
                    init: function(m, d) {
                        this.high = m,
                        this.low = d
                    }
                }),
                h.WordArray = c.extend({
                    init: function(m, d) {
                        m = this.words = m || [],
                        d != o ? this.sigBytes = d : this.sigBytes = m.length * 8
                    },
                    toX32: function() {
                        for (var m = this.words, d = m.length, p = [], b = 0; b < d; b++) {
                            var g = m[b];
                            p.push(g.high),
                            p.push(g.low)
                        }
                        return u.create(p, this.sigBytes)
                    },
                    clone: function() {
                        for (var m = c.clone.call(this), d = m.words = this.words.slice(0), p = d.length, b = 0; b < p; b++)
                            d[b] = d[b].clone();
                        return m
                    }
                })
            }(),
            i
        })
    }(x64Core)),
    x64Core.exports
}
var libTypedarrays = {
    exports: {}
}, hasRequiredLibTypedarrays;
function requireLibTypedarrays() {
    return hasRequiredLibTypedarrays || (hasRequiredLibTypedarrays = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                if (typeof ArrayBuffer == "function") {
                    var o = i
                      , l = o.lib
                      , a = l.WordArray
                      , c = a.init
                      , u = a.init = function(h) {
                        if (h instanceof ArrayBuffer && (h = new Uint8Array(h)),
                        (h instanceof Int8Array || typeof Uint8ClampedArray < "u" && h instanceof Uint8ClampedArray || h instanceof Int16Array || h instanceof Uint16Array || h instanceof Int32Array || h instanceof Uint32Array || h instanceof Float32Array || h instanceof Float64Array) && (h = new Uint8Array(h.buffer,h.byteOffset,h.byteLength)),
                        h instanceof Uint8Array) {
                            for (var m = h.byteLength, d = [], p = 0; p < m; p++)
                                d[p >>> 2] |= h[p] << 24 - p % 4 * 8;
                            c.call(this, d, m)
                        } else
                            c.apply(this, arguments)
                    }
                    ;
                    u.prototype = a
                }
            }(),
            i.lib.WordArray
        })
    }(libTypedarrays)),
    libTypedarrays.exports
}
var encUtf16 = {
    exports: {}
}, hasRequiredEncUtf16;
function requireEncUtf16() {
    return hasRequiredEncUtf16 || (hasRequiredEncUtf16 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = o.enc;
                c.Utf16 = c.Utf16BE = {
                    stringify: function(h) {
                        for (var m = h.words, d = h.sigBytes, p = [], b = 0; b < d; b += 2) {
                            var g = m[b >>> 2] >>> 16 - b % 4 * 8 & 65535;
                            p.push(String.fromCharCode(g))
                        }
                        return p.join("")
                    },
                    parse: function(h) {
                        for (var m = h.length, d = [], p = 0; p < m; p++)
                            d[p >>> 1] |= h.charCodeAt(p) << 16 - p % 2 * 16;
                        return a.create(d, m * 2)
                    }
                },
                c.Utf16LE = {
                    stringify: function(h) {
                        for (var m = h.words, d = h.sigBytes, p = [], b = 0; b < d; b += 2) {
                            var g = u(m[b >>> 2] >>> 16 - b % 4 * 8 & 65535);
                            p.push(String.fromCharCode(g))
                        }
                        return p.join("")
                    },
                    parse: function(h) {
                        for (var m = h.length, d = [], p = 0; p < m; p++)
                            d[p >>> 1] |= u(h.charCodeAt(p) << 16 - p % 2 * 16);
                        return a.create(d, m * 2)
                    }
                };
                function u(h) {
                    return h << 8 & 4278255360 | h >>> 8 & 16711935
                }
            }(),
            i.enc.Utf16
        })
    }(encUtf16)),
    encUtf16.exports
}
var encBase64 = {
    exports: {}
}, hasRequiredEncBase64;
function requireEncBase64() {
    return hasRequiredEncBase64 || (hasRequiredEncBase64 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = o.enc;
                c.Base64 = {
                    stringify: function(h) {
                        var m = h.words
                          , d = h.sigBytes
                          , p = this._map;
                        h.clamp();
                        for (var b = [], g = 0; g < d; g += 3)
                            for (var $ = m[g >>> 2] >>> 24 - g % 4 * 8 & 255, N = m[g + 1 >>> 2] >>> 24 - (g + 1) % 4 * 8 & 255, I = m[g + 2 >>> 2] >>> 24 - (g + 2) % 4 * 8 & 255, L = $ << 16 | N << 8 | I, T = 0; T < 4 && g + T * .75 < d; T++)
                                b.push(p.charAt(L >>> 6 * (3 - T) & 63));
                        var M = p.charAt(64);
                        if (M)
                            for (; b.length % 4; )
                                b.push(M);
                        return b.join("")
                    },
                    parse: function(h) {
                        var m = h.length
                          , d = this._map
                          , p = this._reverseMap;
                        if (!p) {
                            p = this._reverseMap = [];
                            for (var b = 0; b < d.length; b++)
                                p[d.charCodeAt(b)] = b
                        }
                        var g = d.charAt(64);
                        if (g) {
                            var $ = h.indexOf(g);
                            $ !== -1 && (m = $)
                        }
                        return u(h, m, p)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                };
                function u(h, m, d) {
                    for (var p = [], b = 0, g = 0; g < m; g++)
                        if (g % 4) {
                            var $ = d[h.charCodeAt(g - 1)] << g % 4 * 2
                              , N = d[h.charCodeAt(g)] >>> 6 - g % 4 * 2
                              , I = $ | N;
                            p[b >>> 2] |= I << 24 - b % 4 * 8,
                            b++
                        }
                    return a.create(p, b)
                }
            }(),
            i.enc.Base64
        })
    }(encBase64)),
    encBase64.exports
}
var encBase64url = {
    exports: {}
}, hasRequiredEncBase64url;
function requireEncBase64url() {
    return hasRequiredEncBase64url || (hasRequiredEncBase64url = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = o.enc;
                c.Base64url = {
                    stringify: function(h, m) {
                        m === void 0 && (m = !0);
                        var d = h.words
                          , p = h.sigBytes
                          , b = m ? this._safe_map : this._map;
                        h.clamp();
                        for (var g = [], $ = 0; $ < p; $ += 3)
                            for (var N = d[$ >>> 2] >>> 24 - $ % 4 * 8 & 255, I = d[$ + 1 >>> 2] >>> 24 - ($ + 1) % 4 * 8 & 255, L = d[$ + 2 >>> 2] >>> 24 - ($ + 2) % 4 * 8 & 255, T = N << 16 | I << 8 | L, M = 0; M < 4 && $ + M * .75 < p; M++)
                                g.push(b.charAt(T >>> 6 * (3 - M) & 63));
                        var q = b.charAt(64);
                        if (q)
                            for (; g.length % 4; )
                                g.push(q);
                        return g.join("")
                    },
                    parse: function(h, m) {
                        m === void 0 && (m = !0);
                        var d = h.length
                          , p = m ? this._safe_map : this._map
                          , b = this._reverseMap;
                        if (!b) {
                            b = this._reverseMap = [];
                            for (var g = 0; g < p.length; g++)
                                b[p.charCodeAt(g)] = g
                        }
                        var $ = p.charAt(64);
                        if ($) {
                            var N = h.indexOf($);
                            N !== -1 && (d = N)
                        }
                        return u(h, d, b)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                };
                function u(h, m, d) {
                    for (var p = [], b = 0, g = 0; g < m; g++)
                        if (g % 4) {
                            var $ = d[h.charCodeAt(g - 1)] << g % 4 * 2
                              , N = d[h.charCodeAt(g)] >>> 6 - g % 4 * 2
                              , I = $ | N;
                            p[b >>> 2] |= I << 24 - b % 4 * 8,
                            b++
                        }
                    return a.create(p, b)
                }
            }(),
            i.enc.Base64url
        })
    }(encBase64url)),
    encBase64url.exports
}
var md5 = {
    exports: {}
}, hasRequiredMd5;
function requireMd5() {
    return hasRequiredMd5 || (hasRequiredMd5 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.WordArray
                  , u = a.Hasher
                  , h = l.algo
                  , m = [];
                (function() {
                    for (var N = 0; N < 64; N++)
                        m[N] = o.abs(o.sin(N + 1)) * 4294967296 | 0
                }
                )();
                var d = h.MD5 = u.extend({
                    _doReset: function() {
                        this._hash = new c.init([1732584193, 4023233417, 2562383102, 271733878])
                    },
                    _doProcessBlock: function(N, I) {
                        for (var L = 0; L < 16; L++) {
                            var T = I + L
                              , M = N[T];
                            N[T] = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360
                        }
                        var q = this._hash.words
                          , Q = N[I + 0]
                          , Y = N[I + 1]
                          , ee = N[I + 2]
                          , ie = N[I + 3]
                          , te = N[I + 4]
                          , ne = N[I + 5]
                          , V = N[I + 6]
                          , w = N[I + 7]
                          , x = N[I + 8]
                          , v = N[I + 9]
                          , S = N[I + 10]
                          , D = N[I + 11]
                          , C = N[I + 12]
                          , O = N[I + 13]
                          , P = N[I + 14]
                          , y = N[I + 15]
                          , A = q[0]
                          , E = q[1]
                          , k = q[2]
                          , H = q[3];
                        A = p(A, E, k, H, Q, 7, m[0]),
                        H = p(H, A, E, k, Y, 12, m[1]),
                        k = p(k, H, A, E, ee, 17, m[2]),
                        E = p(E, k, H, A, ie, 22, m[3]),
                        A = p(A, E, k, H, te, 7, m[4]),
                        H = p(H, A, E, k, ne, 12, m[5]),
                        k = p(k, H, A, E, V, 17, m[6]),
                        E = p(E, k, H, A, w, 22, m[7]),
                        A = p(A, E, k, H, x, 7, m[8]),
                        H = p(H, A, E, k, v, 12, m[9]),
                        k = p(k, H, A, E, S, 17, m[10]),
                        E = p(E, k, H, A, D, 22, m[11]),
                        A = p(A, E, k, H, C, 7, m[12]),
                        H = p(H, A, E, k, O, 12, m[13]),
                        k = p(k, H, A, E, P, 17, m[14]),
                        E = p(E, k, H, A, y, 22, m[15]),
                        A = b(A, E, k, H, Y, 5, m[16]),
                        H = b(H, A, E, k, V, 9, m[17]),
                        k = b(k, H, A, E, D, 14, m[18]),
                        E = b(E, k, H, A, Q, 20, m[19]),
                        A = b(A, E, k, H, ne, 5, m[20]),
                        H = b(H, A, E, k, S, 9, m[21]),
                        k = b(k, H, A, E, y, 14, m[22]),
                        E = b(E, k, H, A, te, 20, m[23]),
                        A = b(A, E, k, H, v, 5, m[24]),
                        H = b(H, A, E, k, P, 9, m[25]),
                        k = b(k, H, A, E, ie, 14, m[26]),
                        E = b(E, k, H, A, x, 20, m[27]),
                        A = b(A, E, k, H, O, 5, m[28]),
                        H = b(H, A, E, k, ee, 9, m[29]),
                        k = b(k, H, A, E, w, 14, m[30]),
                        E = b(E, k, H, A, C, 20, m[31]),
                        A = g(A, E, k, H, ne, 4, m[32]),
                        H = g(H, A, E, k, x, 11, m[33]),
                        k = g(k, H, A, E, D, 16, m[34]),
                        E = g(E, k, H, A, P, 23, m[35]),
                        A = g(A, E, k, H, Y, 4, m[36]),
                        H = g(H, A, E, k, te, 11, m[37]),
                        k = g(k, H, A, E, w, 16, m[38]),
                        E = g(E, k, H, A, S, 23, m[39]),
                        A = g(A, E, k, H, O, 4, m[40]),
                        H = g(H, A, E, k, Q, 11, m[41]),
                        k = g(k, H, A, E, ie, 16, m[42]),
                        E = g(E, k, H, A, V, 23, m[43]),
                        A = g(A, E, k, H, v, 4, m[44]),
                        H = g(H, A, E, k, C, 11, m[45]),
                        k = g(k, H, A, E, y, 16, m[46]),
                        E = g(E, k, H, A, ee, 23, m[47]),
                        A = $(A, E, k, H, Q, 6, m[48]),
                        H = $(H, A, E, k, w, 10, m[49]),
                        k = $(k, H, A, E, P, 15, m[50]),
                        E = $(E, k, H, A, ne, 21, m[51]),
                        A = $(A, E, k, H, C, 6, m[52]),
                        H = $(H, A, E, k, ie, 10, m[53]),
                        k = $(k, H, A, E, S, 15, m[54]),
                        E = $(E, k, H, A, Y, 21, m[55]),
                        A = $(A, E, k, H, x, 6, m[56]),
                        H = $(H, A, E, k, y, 10, m[57]),
                        k = $(k, H, A, E, V, 15, m[58]),
                        E = $(E, k, H, A, O, 21, m[59]),
                        A = $(A, E, k, H, te, 6, m[60]),
                        H = $(H, A, E, k, D, 10, m[61]),
                        k = $(k, H, A, E, ee, 15, m[62]),
                        E = $(E, k, H, A, v, 21, m[63]),
                        q[0] = q[0] + A | 0,
                        q[1] = q[1] + E | 0,
                        q[2] = q[2] + k | 0,
                        q[3] = q[3] + H | 0
                    },
                    _doFinalize: function() {
                        var N = this._data
                          , I = N.words
                          , L = this._nDataBytes * 8
                          , T = N.sigBytes * 8;
                        I[T >>> 5] |= 128 << 24 - T % 32;
                        var M = o.floor(L / 4294967296)
                          , q = L;
                        I[(T + 64 >>> 9 << 4) + 15] = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360,
                        I[(T + 64 >>> 9 << 4) + 14] = (q << 8 | q >>> 24) & 16711935 | (q << 24 | q >>> 8) & 4278255360,
                        N.sigBytes = (I.length + 1) * 4,
                        this._process();
                        for (var Q = this._hash, Y = Q.words, ee = 0; ee < 4; ee++) {
                            var ie = Y[ee];
                            Y[ee] = (ie << 8 | ie >>> 24) & 16711935 | (ie << 24 | ie >>> 8) & 4278255360
                        }
                        return Q
                    },
                    clone: function() {
                        var N = u.clone.call(this);
                        return N._hash = this._hash.clone(),
                        N
                    }
                });
                function p(N, I, L, T, M, q, Q) {
                    var Y = N + (I & L | ~I & T) + M + Q;
                    return (Y << q | Y >>> 32 - q) + I
                }
                function b(N, I, L, T, M, q, Q) {
                    var Y = N + (I & T | L & ~T) + M + Q;
                    return (Y << q | Y >>> 32 - q) + I
                }
                function g(N, I, L, T, M, q, Q) {
                    var Y = N + (I ^ L ^ T) + M + Q;
                    return (Y << q | Y >>> 32 - q) + I
                }
                function $(N, I, L, T, M, q, Q) {
                    var Y = N + (L ^ (I | ~T)) + M + Q;
                    return (Y << q | Y >>> 32 - q) + I
                }
                l.MD5 = u._createHelper(d),
                l.HmacMD5 = u._createHmacHelper(d)
            }(Math),
            i.MD5
        })
    }(md5)),
    md5.exports
}
var sha1 = {
    exports: {}
}, hasRequiredSha1;
function requireSha1() {
    return hasRequiredSha1 || (hasRequiredSha1 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = l.Hasher
                  , u = o.algo
                  , h = []
                  , m = u.SHA1 = c.extend({
                    _doReset: function() {
                        this._hash = new a.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                    },
                    _doProcessBlock: function(d, p) {
                        for (var b = this._hash.words, g = b[0], $ = b[1], N = b[2], I = b[3], L = b[4], T = 0; T < 80; T++) {
                            if (T < 16)
                                h[T] = d[p + T] | 0;
                            else {
                                var M = h[T - 3] ^ h[T - 8] ^ h[T - 14] ^ h[T - 16];
                                h[T] = M << 1 | M >>> 31
                            }
                            var q = (g << 5 | g >>> 27) + L + h[T];
                            T < 20 ? q += ($ & N | ~$ & I) + 1518500249 : T < 40 ? q += ($ ^ N ^ I) + 1859775393 : T < 60 ? q += ($ & N | $ & I | N & I) - 1894007588 : q += ($ ^ N ^ I) - 899497514,
                            L = I,
                            I = N,
                            N = $ << 30 | $ >>> 2,
                            $ = g,
                            g = q
                        }
                        b[0] = b[0] + g | 0,
                        b[1] = b[1] + $ | 0,
                        b[2] = b[2] + N | 0,
                        b[3] = b[3] + I | 0,
                        b[4] = b[4] + L | 0
                    },
                    _doFinalize: function() {
                        var d = this._data
                          , p = d.words
                          , b = this._nDataBytes * 8
                          , g = d.sigBytes * 8;
                        return p[g >>> 5] |= 128 << 24 - g % 32,
                        p[(g + 64 >>> 9 << 4) + 14] = Math.floor(b / 4294967296),
                        p[(g + 64 >>> 9 << 4) + 15] = b,
                        d.sigBytes = p.length * 4,
                        this._process(),
                        this._hash
                    },
                    clone: function() {
                        var d = c.clone.call(this);
                        return d._hash = this._hash.clone(),
                        d
                    }
                });
                o.SHA1 = c._createHelper(m),
                o.HmacSHA1 = c._createHmacHelper(m)
            }(),
            i.SHA1
        })
    }(sha1)),
    sha1.exports
}
var sha256 = {
    exports: {}
}, hasRequiredSha256;
function requireSha256() {
    return hasRequiredSha256 || (hasRequiredSha256 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.WordArray
                  , u = a.Hasher
                  , h = l.algo
                  , m = []
                  , d = [];
                (function() {
                    function g(L) {
                        for (var T = o.sqrt(L), M = 2; M <= T; M++)
                            if (!(L % M))
                                return !1;
                        return !0
                    }
                    function $(L) {
                        return (L - (L | 0)) * 4294967296 | 0
                    }
                    for (var N = 2, I = 0; I < 64; )
                        g(N) && (I < 8 && (m[I] = $(o.pow(N, 1 / 2))),
                        d[I] = $(o.pow(N, 1 / 3)),
                        I++),
                        N++
                }
                )();
                var p = []
                  , b = h.SHA256 = u.extend({
                    _doReset: function() {
                        this._hash = new c.init(m.slice(0))
                    },
                    _doProcessBlock: function(g, $) {
                        for (var N = this._hash.words, I = N[0], L = N[1], T = N[2], M = N[3], q = N[4], Q = N[5], Y = N[6], ee = N[7], ie = 0; ie < 64; ie++) {
                            if (ie < 16)
                                p[ie] = g[$ + ie] | 0;
                            else {
                                var te = p[ie - 15]
                                  , ne = (te << 25 | te >>> 7) ^ (te << 14 | te >>> 18) ^ te >>> 3
                                  , V = p[ie - 2]
                                  , w = (V << 15 | V >>> 17) ^ (V << 13 | V >>> 19) ^ V >>> 10;
                                p[ie] = ne + p[ie - 7] + w + p[ie - 16]
                            }
                            var x = q & Q ^ ~q & Y
                              , v = I & L ^ I & T ^ L & T
                              , S = (I << 30 | I >>> 2) ^ (I << 19 | I >>> 13) ^ (I << 10 | I >>> 22)
                              , D = (q << 26 | q >>> 6) ^ (q << 21 | q >>> 11) ^ (q << 7 | q >>> 25)
                              , C = ee + D + x + d[ie] + p[ie]
                              , O = S + v;
                            ee = Y,
                            Y = Q,
                            Q = q,
                            q = M + C | 0,
                            M = T,
                            T = L,
                            L = I,
                            I = C + O | 0
                        }
                        N[0] = N[0] + I | 0,
                        N[1] = N[1] + L | 0,
                        N[2] = N[2] + T | 0,
                        N[3] = N[3] + M | 0,
                        N[4] = N[4] + q | 0,
                        N[5] = N[5] + Q | 0,
                        N[6] = N[6] + Y | 0,
                        N[7] = N[7] + ee | 0
                    },
                    _doFinalize: function() {
                        var g = this._data
                          , $ = g.words
                          , N = this._nDataBytes * 8
                          , I = g.sigBytes * 8;
                        return $[I >>> 5] |= 128 << 24 - I % 32,
                        $[(I + 64 >>> 9 << 4) + 14] = o.floor(N / 4294967296),
                        $[(I + 64 >>> 9 << 4) + 15] = N,
                        g.sigBytes = $.length * 4,
                        this._process(),
                        this._hash
                    },
                    clone: function() {
                        var g = u.clone.call(this);
                        return g._hash = this._hash.clone(),
                        g
                    }
                });
                l.SHA256 = u._createHelper(b),
                l.HmacSHA256 = u._createHmacHelper(b)
            }(Math),
            i.SHA256
        })
    }(sha256)),
    sha256.exports
}
var sha224 = {
    exports: {}
}, hasRequiredSha224;
function requireSha224() {
    return hasRequiredSha224 || (hasRequiredSha224 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireSha256())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = o.algo
                  , u = c.SHA256
                  , h = c.SHA224 = u.extend({
                    _doReset: function() {
                        this._hash = new a.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
                    },
                    _doFinalize: function() {
                        var m = u._doFinalize.call(this);
                        return m.sigBytes -= 4,
                        m
                    }
                });
                o.SHA224 = u._createHelper(h),
                o.HmacSHA224 = u._createHmacHelper(h)
            }(),
            i.SHA224
        })
    }(sha224)),
    sha224.exports
}
var sha512 = {
    exports: {}
}, hasRequiredSha512;
function requireSha512() {
    return hasRequiredSha512 || (hasRequiredSha512 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireX64Core())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.Hasher
                  , c = o.x64
                  , u = c.Word
                  , h = c.WordArray
                  , m = o.algo;
                function d() {
                    return u.create.apply(u, arguments)
                }
                var p = [d(1116352408, 3609767458), d(1899447441, 602891725), d(3049323471, 3964484399), d(3921009573, 2173295548), d(961987163, 4081628472), d(1508970993, 3053834265), d(2453635748, 2937671579), d(2870763221, 3664609560), d(3624381080, 2734883394), d(310598401, 1164996542), d(607225278, 1323610764), d(1426881987, 3590304994), d(1925078388, 4068182383), d(2162078206, 991336113), d(2614888103, 633803317), d(3248222580, 3479774868), d(3835390401, 2666613458), d(4022224774, 944711139), d(264347078, 2341262773), d(604807628, 2007800933), d(770255983, 1495990901), d(1249150122, 1856431235), d(1555081692, 3175218132), d(1996064986, 2198950837), d(2554220882, 3999719339), d(2821834349, 766784016), d(2952996808, 2566594879), d(3210313671, 3203337956), d(3336571891, 1034457026), d(3584528711, 2466948901), d(113926993, 3758326383), d(338241895, 168717936), d(666307205, 1188179964), d(773529912, 1546045734), d(1294757372, 1522805485), d(1396182291, 2643833823), d(1695183700, 2343527390), d(1986661051, 1014477480), d(2177026350, 1206759142), d(2456956037, 344077627), d(2730485921, 1290863460), d(2820302411, 3158454273), d(3259730800, 3505952657), d(3345764771, 106217008), d(3516065817, 3606008344), d(3600352804, 1432725776), d(4094571909, 1467031594), d(275423344, 851169720), d(430227734, 3100823752), d(506948616, 1363258195), d(659060556, 3750685593), d(883997877, 3785050280), d(958139571, 3318307427), d(1322822218, 3812723403), d(1537002063, 2003034995), d(1747873779, 3602036899), d(1955562222, 1575990012), d(2024104815, 1125592928), d(2227730452, 2716904306), d(2361852424, 442776044), d(2428436474, 593698344), d(2756734187, 3733110249), d(3204031479, 2999351573), d(3329325298, 3815920427), d(3391569614, 3928383900), d(3515267271, 566280711), d(3940187606, 3454069534), d(4118630271, 4000239992), d(116418474, 1914138554), d(174292421, 2731055270), d(289380356, 3203993006), d(460393269, 320620315), d(685471733, 587496836), d(852142971, 1086792851), d(1017036298, 365543100), d(1126000580, 2618297676), d(1288033470, 3409855158), d(1501505948, 4234509866), d(1607167915, 987167468), d(1816402316, 1246189591)]
                  , b = [];
                (function() {
                    for (var $ = 0; $ < 80; $++)
                        b[$] = d()
                }
                )();
                var g = m.SHA512 = a.extend({
                    _doReset: function() {
                        this._hash = new h.init([new u.init(1779033703,4089235720), new u.init(3144134277,2227873595), new u.init(1013904242,4271175723), new u.init(2773480762,1595750129), new u.init(1359893119,2917565137), new u.init(2600822924,725511199), new u.init(528734635,4215389547), new u.init(1541459225,327033209)])
                    },
                    _doProcessBlock: function($, N) {
                        for (var I = this._hash.words, L = I[0], T = I[1], M = I[2], q = I[3], Q = I[4], Y = I[5], ee = I[6], ie = I[7], te = L.high, ne = L.low, V = T.high, w = T.low, x = M.high, v = M.low, S = q.high, D = q.low, C = Q.high, O = Q.low, P = Y.high, y = Y.low, A = ee.high, E = ee.low, k = ie.high, H = ie.low, J = te, j = ne, F = V, U = w, re = x, oe = v, X = S, Z = D, se = C, ue = O, he = P, ve = y, ge = A, _e = E, ce = k, De = H, be = 0; be < 80; be++) {
                            var Ae, Ee, ae = b[be];
                            if (be < 16)
                                Ee = ae.high = $[N + be * 2] | 0,
                                Ae = ae.low = $[N + be * 2 + 1] | 0;
                            else {
                                var le = b[be - 15]
                                  , fe = le.high
                                  , de = le.low
                                  , me = (fe >>> 1 | de << 31) ^ (fe >>> 8 | de << 24) ^ fe >>> 7
                                  , ze = (de >>> 1 | fe << 31) ^ (de >>> 8 | fe << 24) ^ (de >>> 7 | fe << 25)
                                  , pe = b[be - 2]
                                  , xe = pe.high
                                  , Se = pe.low
                                  , we = (xe >>> 19 | Se << 13) ^ (xe << 3 | Se >>> 29) ^ xe >>> 6
                                  , ke = (Se >>> 19 | xe << 13) ^ (Se << 3 | xe >>> 29) ^ (Se >>> 6 | xe << 26)
                                  , Le = b[be - 7]
                                  , Be = Le.high
                                  , Ue = Le.low
                                  , Fe = b[be - 16]
                                  , Te = Fe.high
                                  , He = Fe.low;
                                Ae = ze + Ue,
                                Ee = me + Be + (Ae >>> 0 < ze >>> 0 ? 1 : 0),
                                Ae = Ae + ke,
                                Ee = Ee + we + (Ae >>> 0 < ke >>> 0 ? 1 : 0),
                                Ae = Ae + He,
                                Ee = Ee + Te + (Ae >>> 0 < He >>> 0 ? 1 : 0),
                                ae.high = Ee,
                                ae.low = Ae
                            }
                            var We = se & he ^ ~se & ge
                              , $e = ue & ve ^ ~ue & _e
                              , Ve = J & F ^ J & re ^ F & re
                              , Ke = j & U ^ j & oe ^ U & oe
                              , Me = (J >>> 28 | j << 4) ^ (J << 30 | j >>> 2) ^ (J << 25 | j >>> 7)
                              , Ge = (j >>> 28 | J << 4) ^ (j << 30 | J >>> 2) ^ (j << 25 | J >>> 7)
                              , Ye = (se >>> 14 | ue << 18) ^ (se >>> 18 | ue << 14) ^ (se << 23 | ue >>> 9)
                              , Ie = (ue >>> 14 | se << 18) ^ (ue >>> 18 | se << 14) ^ (ue << 23 | se >>> 9)
                              , je = p[be]
                              , Ze = je.high
                              , Pe = je.low
                              , Oe = De + Ie
                              , qe = ce + Ye + (Oe >>> 0 < De >>> 0 ? 1 : 0)
                              , Oe = Oe + $e
                              , qe = qe + We + (Oe >>> 0 < $e >>> 0 ? 1 : 0)
                              , Oe = Oe + Pe
                              , qe = qe + Ze + (Oe >>> 0 < Pe >>> 0 ? 1 : 0)
                              , Oe = Oe + Ae
                              , qe = qe + Ee + (Oe >>> 0 < Ae >>> 0 ? 1 : 0)
                              , Ce = Ge + Ke
                              , Xe = Me + Ve + (Ce >>> 0 < Ge >>> 0 ? 1 : 0);
                            ce = ge,
                            De = _e,
                            ge = he,
                            _e = ve,
                            he = se,
                            ve = ue,
                            ue = Z + Oe | 0,
                            se = X + qe + (ue >>> 0 < Z >>> 0 ? 1 : 0) | 0,
                            X = re,
                            Z = oe,
                            re = F,
                            oe = U,
                            F = J,
                            U = j,
                            j = Oe + Ce | 0,
                            J = qe + Xe + (j >>> 0 < Oe >>> 0 ? 1 : 0) | 0
                        }
                        ne = L.low = ne + j,
                        L.high = te + J + (ne >>> 0 < j >>> 0 ? 1 : 0),
                        w = T.low = w + U,
                        T.high = V + F + (w >>> 0 < U >>> 0 ? 1 : 0),
                        v = M.low = v + oe,
                        M.high = x + re + (v >>> 0 < oe >>> 0 ? 1 : 0),
                        D = q.low = D + Z,
                        q.high = S + X + (D >>> 0 < Z >>> 0 ? 1 : 0),
                        O = Q.low = O + ue,
                        Q.high = C + se + (O >>> 0 < ue >>> 0 ? 1 : 0),
                        y = Y.low = y + ve,
                        Y.high = P + he + (y >>> 0 < ve >>> 0 ? 1 : 0),
                        E = ee.low = E + _e,
                        ee.high = A + ge + (E >>> 0 < _e >>> 0 ? 1 : 0),
                        H = ie.low = H + De,
                        ie.high = k + ce + (H >>> 0 < De >>> 0 ? 1 : 0)
                    },
                    _doFinalize: function() {
                        var $ = this._data
                          , N = $.words
                          , I = this._nDataBytes * 8
                          , L = $.sigBytes * 8;
                        N[L >>> 5] |= 128 << 24 - L % 32,
                        N[(L + 128 >>> 10 << 5) + 30] = Math.floor(I / 4294967296),
                        N[(L + 128 >>> 10 << 5) + 31] = I,
                        $.sigBytes = N.length * 4,
                        this._process();
                        var T = this._hash.toX32();
                        return T
                    },
                    clone: function() {
                        var $ = a.clone.call(this);
                        return $._hash = this._hash.clone(),
                        $
                    },
                    blockSize: 1024 / 32
                });
                o.SHA512 = a._createHelper(g),
                o.HmacSHA512 = a._createHmacHelper(g)
            }(),
            i.SHA512
        })
    }(sha512)),
    sha512.exports
}
var sha384 = {
    exports: {}
}, hasRequiredSha384;
function requireSha384() {
    return hasRequiredSha384 || (hasRequiredSha384 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireX64Core(), requireSha512())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.x64
                  , a = l.Word
                  , c = l.WordArray
                  , u = o.algo
                  , h = u.SHA512
                  , m = u.SHA384 = h.extend({
                    _doReset: function() {
                        this._hash = new c.init([new a.init(3418070365,3238371032), new a.init(1654270250,914150663), new a.init(2438529370,812702999), new a.init(355462360,4144912697), new a.init(1731405415,4290775857), new a.init(2394180231,1750603025), new a.init(3675008525,1694076839), new a.init(1203062813,3204075428)])
                    },
                    _doFinalize: function() {
                        var d = h._doFinalize.call(this);
                        return d.sigBytes -= 16,
                        d
                    }
                });
                o.SHA384 = h._createHelper(m),
                o.HmacSHA384 = h._createHmacHelper(m)
            }(),
            i.SHA384
        })
    }(sha384)),
    sha384.exports
}
var sha3 = {
    exports: {}
}, hasRequiredSha3;
function requireSha3() {
    return hasRequiredSha3 || (hasRequiredSha3 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireX64Core())
        }
        )(commonjsGlobal, function(i) {
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.WordArray
                  , u = a.Hasher
                  , h = l.x64
                  , m = h.Word
                  , d = l.algo
                  , p = []
                  , b = []
                  , g = [];
                (function() {
                    for (var I = 1, L = 0, T = 0; T < 24; T++) {
                        p[I + 5 * L] = (T + 1) * (T + 2) / 2 % 64;
                        var M = L % 5
                          , q = (2 * I + 3 * L) % 5;
                        I = M,
                        L = q
                    }
                    for (var I = 0; I < 5; I++)
                        for (var L = 0; L < 5; L++)
                            b[I + 5 * L] = L + (2 * I + 3 * L) % 5 * 5;
                    for (var Q = 1, Y = 0; Y < 24; Y++) {
                        for (var ee = 0, ie = 0, te = 0; te < 7; te++) {
                            if (Q & 1) {
                                var ne = (1 << te) - 1;
                                ne < 32 ? ie ^= 1 << ne : ee ^= 1 << ne - 32
                            }
                            Q & 128 ? Q = Q << 1 ^ 113 : Q <<= 1
                        }
                        g[Y] = m.create(ee, ie)
                    }
                }
                )();
                var $ = [];
                (function() {
                    for (var I = 0; I < 25; I++)
                        $[I] = m.create()
                }
                )();
                var N = d.SHA3 = u.extend({
                    cfg: u.cfg.extend({
                        outputLength: 512
                    }),
                    _doReset: function() {
                        for (var I = this._state = [], L = 0; L < 25; L++)
                            I[L] = new m.init;
                        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
                    },
                    _doProcessBlock: function(I, L) {
                        for (var T = this._state, M = this.blockSize / 2, q = 0; q < M; q++) {
                            var Q = I[L + 2 * q]
                              , Y = I[L + 2 * q + 1];
                            Q = (Q << 8 | Q >>> 24) & 16711935 | (Q << 24 | Q >>> 8) & 4278255360,
                            Y = (Y << 8 | Y >>> 24) & 16711935 | (Y << 24 | Y >>> 8) & 4278255360;
                            var ee = T[q];
                            ee.high ^= Y,
                            ee.low ^= Q
                        }
                        for (var ie = 0; ie < 24; ie++) {
                            for (var te = 0; te < 5; te++) {
                                for (var ne = 0, V = 0, w = 0; w < 5; w++) {
                                    var ee = T[te + 5 * w];
                                    ne ^= ee.high,
                                    V ^= ee.low
                                }
                                var x = $[te];
                                x.high = ne,
                                x.low = V
                            }
                            for (var te = 0; te < 5; te++)
                                for (var v = $[(te + 4) % 5], S = $[(te + 1) % 5], D = S.high, C = S.low, ne = v.high ^ (D << 1 | C >>> 31), V = v.low ^ (C << 1 | D >>> 31), w = 0; w < 5; w++) {
                                    var ee = T[te + 5 * w];
                                    ee.high ^= ne,
                                    ee.low ^= V
                                }
                            for (var O = 1; O < 25; O++) {
                                var ne, V, ee = T[O], P = ee.high, y = ee.low, A = p[O];
                                A < 32 ? (ne = P << A | y >>> 32 - A,
                                V = y << A | P >>> 32 - A) : (ne = y << A - 32 | P >>> 64 - A,
                                V = P << A - 32 | y >>> 64 - A);
                                var E = $[b[O]];
                                E.high = ne,
                                E.low = V
                            }
                            var k = $[0]
                              , H = T[0];
                            k.high = H.high,
                            k.low = H.low;
                            for (var te = 0; te < 5; te++)
                                for (var w = 0; w < 5; w++) {
                                    var O = te + 5 * w
                                      , ee = T[O]
                                      , J = $[O]
                                      , j = $[(te + 1) % 5 + 5 * w]
                                      , F = $[(te + 2) % 5 + 5 * w];
                                    ee.high = J.high ^ ~j.high & F.high,
                                    ee.low = J.low ^ ~j.low & F.low
                                }
                            var ee = T[0]
                              , U = g[ie];
                            ee.high ^= U.high,
                            ee.low ^= U.low
                        }
                    },
                    _doFinalize: function() {
                        var I = this._data
                          , L = I.words;
                        this._nDataBytes * 8;
                        var T = I.sigBytes * 8
                          , M = this.blockSize * 32;
                        L[T >>> 5] |= 1 << 24 - T % 32,
                        L[(o.ceil((T + 1) / M) * M >>> 5) - 1] |= 128,
                        I.sigBytes = L.length * 4,
                        this._process();
                        for (var q = this._state, Q = this.cfg.outputLength / 8, Y = Q / 8, ee = [], ie = 0; ie < Y; ie++) {
                            var te = q[ie]
                              , ne = te.high
                              , V = te.low;
                            ne = (ne << 8 | ne >>> 24) & 16711935 | (ne << 24 | ne >>> 8) & 4278255360,
                            V = (V << 8 | V >>> 24) & 16711935 | (V << 24 | V >>> 8) & 4278255360,
                            ee.push(V),
                            ee.push(ne)
                        }
                        return new c.init(ee,Q)
                    },
                    clone: function() {
                        for (var I = u.clone.call(this), L = I._state = this._state.slice(0), T = 0; T < 25; T++)
                            L[T] = L[T].clone();
                        return I
                    }
                });
                l.SHA3 = u._createHelper(N),
                l.HmacSHA3 = u._createHmacHelper(N)
            }(Math),
            i.SHA3
        })
    }(sha3)),
    sha3.exports
}
var ripemd160 = {
    exports: {}
}, hasRequiredRipemd160;
function requireRipemd160() {
    return hasRequiredRipemd160 || (hasRequiredRipemd160 = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            /** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.WordArray
                  , u = a.Hasher
                  , h = l.algo
                  , m = c.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13])
                  , d = c.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11])
                  , p = c.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6])
                  , b = c.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11])
                  , g = c.create([0, 1518500249, 1859775393, 2400959708, 2840853838])
                  , $ = c.create([1352829926, 1548603684, 1836072691, 2053994217, 0])
                  , N = h.RIPEMD160 = u.extend({
                    _doReset: function() {
                        this._hash = c.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                    },
                    _doProcessBlock: function(Y, ee) {
                        for (var ie = 0; ie < 16; ie++) {
                            var te = ee + ie
                              , ne = Y[te];
                            Y[te] = (ne << 8 | ne >>> 24) & 16711935 | (ne << 24 | ne >>> 8) & 4278255360
                        }
                        var V = this._hash.words, w = g.words, x = $.words, v = m.words, S = d.words, D = p.words, C = b.words, O, P, y, A, E, k, H, J, j, F;
                        k = O = V[0],
                        H = P = V[1],
                        J = y = V[2],
                        j = A = V[3],
                        F = E = V[4];
                        for (var U, ie = 0; ie < 80; ie += 1)
                            U = O + Y[ee + v[ie]] | 0,
                            ie < 16 ? U += I(P, y, A) + w[0] : ie < 32 ? U += L(P, y, A) + w[1] : ie < 48 ? U += T(P, y, A) + w[2] : ie < 64 ? U += M(P, y, A) + w[3] : U += q(P, y, A) + w[4],
                            U = U | 0,
                            U = Q(U, D[ie]),
                            U = U + E | 0,
                            O = E,
                            E = A,
                            A = Q(y, 10),
                            y = P,
                            P = U,
                            U = k + Y[ee + S[ie]] | 0,
                            ie < 16 ? U += q(H, J, j) + x[0] : ie < 32 ? U += M(H, J, j) + x[1] : ie < 48 ? U += T(H, J, j) + x[2] : ie < 64 ? U += L(H, J, j) + x[3] : U += I(H, J, j) + x[4],
                            U = U | 0,
                            U = Q(U, C[ie]),
                            U = U + F | 0,
                            k = F,
                            F = j,
                            j = Q(J, 10),
                            J = H,
                            H = U;
                        U = V[1] + y + j | 0,
                        V[1] = V[2] + A + F | 0,
                        V[2] = V[3] + E + k | 0,
                        V[3] = V[4] + O + H | 0,
                        V[4] = V[0] + P + J | 0,
                        V[0] = U
                    },
                    _doFinalize: function() {
                        var Y = this._data
                          , ee = Y.words
                          , ie = this._nDataBytes * 8
                          , te = Y.sigBytes * 8;
                        ee[te >>> 5] |= 128 << 24 - te % 32,
                        ee[(te + 64 >>> 9 << 4) + 14] = (ie << 8 | ie >>> 24) & 16711935 | (ie << 24 | ie >>> 8) & 4278255360,
                        Y.sigBytes = (ee.length + 1) * 4,
                        this._process();
                        for (var ne = this._hash, V = ne.words, w = 0; w < 5; w++) {
                            var x = V[w];
                            V[w] = (x << 8 | x >>> 24) & 16711935 | (x << 24 | x >>> 8) & 4278255360
                        }
                        return ne
                    },
                    clone: function() {
                        var Y = u.clone.call(this);
                        return Y._hash = this._hash.clone(),
                        Y
                    }
                });
                function I(Y, ee, ie) {
                    return Y ^ ee ^ ie
                }
                function L(Y, ee, ie) {
                    return Y & ee | ~Y & ie
                }
                function T(Y, ee, ie) {
                    return (Y | ~ee) ^ ie
                }
                function M(Y, ee, ie) {
                    return Y & ie | ee & ~ie
                }
                function q(Y, ee, ie) {
                    return Y ^ (ee | ~ie)
                }
                function Q(Y, ee) {
                    return Y << ee | Y >>> 32 - ee
                }
                l.RIPEMD160 = u._createHelper(N),
                l.HmacRIPEMD160 = u._createHmacHelper(N)
            }(),
            i.RIPEMD160
        })
    }(ripemd160)),
    ripemd160.exports
}
var hmac = {
    exports: {}
}, hasRequiredHmac;
function requireHmac() {
    return hasRequiredHmac || (hasRequiredHmac = 1,
    function(e, n) {
        (function(i, o) {
            e.exports = o(requireCore())
        }
        )(commonjsGlobal, function(i) {
            (function() {
                var o = i
                  , l = o.lib
                  , a = l.Base
                  , c = o.enc
                  , u = c.Utf8
                  , h = o.algo;
                h.HMAC = a.extend({
                    init: function(m, d) {
                        m = this._hasher = new m.init,
                        typeof d == "string" && (d = u.parse(d));
                        var p = m.blockSize
                          , b = p * 4;
                        d.sigBytes > b && (d = m.finalize(d)),
                        d.clamp();
                        for (var g = this._oKey = d.clone(), $ = this._iKey = d.clone(), N = g.words, I = $.words, L = 0; L < p; L++)
                            N[L] ^= 1549556828,
                            I[L] ^= 909522486;
                        g.sigBytes = $.sigBytes = b,
                        this.reset()
                    },
                    reset: function() {
                        var m = this._hasher;
                        m.reset(),
                        m.update(this._iKey)
                    },
                    update: function(m) {
                        return this._hasher.update(m),
                        this
                    },
                    finalize: function(m) {
                        var d = this._hasher
                          , p = d.finalize(m);
                        d.reset();
                        var b = d.finalize(this._oKey.clone().concat(p));
                        return b
                    }
                })
            }
            )()
        })
    }(hmac)),
    hmac.exports
}
var pbkdf2 = {
    exports: {}
}, hasRequiredPbkdf2;
function requirePbkdf2() {
    return hasRequiredPbkdf2 || (hasRequiredPbkdf2 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireSha256(), requireHmac())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.Base
                  , c = l.WordArray
                  , u = o.algo
                  , h = u.SHA256
                  , m = u.HMAC
                  , d = u.PBKDF2 = a.extend({
                    cfg: a.extend({
                        keySize: 128 / 32,
                        hasher: h,
                        iterations: 25e4
                    }),
                    init: function(p) {
                        this.cfg = this.cfg.extend(p)
                    },
                    compute: function(p, b) {
                        for (var g = this.cfg, $ = m.create(g.hasher, p), N = c.create(), I = c.create([1]), L = N.words, T = I.words, M = g.keySize, q = g.iterations; L.length < M; ) {
                            var Q = $.update(b).finalize(I);
                            $.reset();
                            for (var Y = Q.words, ee = Y.length, ie = Q, te = 1; te < q; te++) {
                                ie = $.finalize(ie),
                                $.reset();
                                for (var ne = ie.words, V = 0; V < ee; V++)
                                    Y[V] ^= ne[V]
                            }
                            N.concat(Q),
                            T[0]++
                        }
                        return N.sigBytes = M * 4,
                        N
                    }
                });
                o.PBKDF2 = function(p, b, g) {
                    return d.create(g).compute(p, b)
                }
            }(),
            i.PBKDF2
        })
    }(pbkdf2)),
    pbkdf2.exports
}
var evpkdf = {
    exports: {}
}, hasRequiredEvpkdf;
function requireEvpkdf() {
    return hasRequiredEvpkdf || (hasRequiredEvpkdf = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireSha1(), requireHmac())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.Base
                  , c = l.WordArray
                  , u = o.algo
                  , h = u.MD5
                  , m = u.EvpKDF = a.extend({
                    cfg: a.extend({
                        keySize: 128 / 32,
                        hasher: h,
                        iterations: 1
                    }),
                    init: function(d) {
                        this.cfg = this.cfg.extend(d)
                    },
                    compute: function(d, p) {
                        for (var b, g = this.cfg, $ = g.hasher.create(), N = c.create(), I = N.words, L = g.keySize, T = g.iterations; I.length < L; ) {
                            b && $.update(b),
                            b = $.update(d).finalize(p),
                            $.reset();
                            for (var M = 1; M < T; M++)
                                b = $.finalize(b),
                                $.reset();
                            N.concat(b)
                        }
                        return N.sigBytes = L * 4,
                        N
                    }
                });
                o.EvpKDF = function(d, p, b) {
                    return m.create(b).compute(d, p)
                }
            }(),
            i.EvpKDF
        })
    }(evpkdf)),
    evpkdf.exports
}
var cipherCore = {
    exports: {}
}, hasRequiredCipherCore;
function requireCipherCore() {
    return hasRequiredCipherCore || (hasRequiredCipherCore = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEvpkdf())
        }
        )(commonjsGlobal, function(i) {
            i.lib.Cipher || function(o) {
                var l = i
                  , a = l.lib
                  , c = a.Base
                  , u = a.WordArray
                  , h = a.BufferedBlockAlgorithm
                  , m = l.enc;
                m.Utf8;
                var d = m.Base64
                  , p = l.algo
                  , b = p.EvpKDF
                  , g = a.Cipher = h.extend({
                    cfg: c.extend(),
                    createEncryptor: function(ne, V) {
                        return this.create(this._ENC_XFORM_MODE, ne, V)
                    },
                    createDecryptor: function(ne, V) {
                        return this.create(this._DEC_XFORM_MODE, ne, V)
                    },
                    init: function(ne, V, w) {
                        this.cfg = this.cfg.extend(w),
                        this._xformMode = ne,
                        this._key = V,
                        this.reset()
                    },
                    reset: function() {
                        h.reset.call(this),
                        this._doReset()
                    },
                    process: function(ne) {
                        return this._append(ne),
                        this._process()
                    },
                    finalize: function(ne) {
                        ne && this._append(ne);
                        var V = this._doFinalize();
                        return V
                    },
                    keySize: 128 / 32,
                    ivSize: 128 / 32,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    _createHelper: function() {
                        function ne(V) {
                            return typeof V == "string" ? te : Y
                        }
                        return function(V) {
                            return {
                                encrypt: function(w, x, v) {
                                    return ne(x).encrypt(V, w, x, v)
                                },
                                decrypt: function(w, x, v) {
                                    return ne(x).decrypt(V, w, x, v)
                                }
                            }
                        }
                    }()
                });
                a.StreamCipher = g.extend({
                    _doFinalize: function() {
                        var ne = this._process(!0);
                        return ne
                    },
                    blockSize: 1
                });
                var $ = l.mode = {}
                  , N = a.BlockCipherMode = c.extend({
                    createEncryptor: function(ne, V) {
                        return this.Encryptor.create(ne, V)
                    },
                    createDecryptor: function(ne, V) {
                        return this.Decryptor.create(ne, V)
                    },
                    init: function(ne, V) {
                        this._cipher = ne,
                        this._iv = V
                    }
                })
                  , I = $.CBC = function() {
                    var ne = N.extend();
                    ne.Encryptor = ne.extend({
                        processBlock: function(w, x) {
                            var v = this._cipher
                              , S = v.blockSize;
                            V.call(this, w, x, S),
                            v.encryptBlock(w, x),
                            this._prevBlock = w.slice(x, x + S)
                        }
                    }),
                    ne.Decryptor = ne.extend({
                        processBlock: function(w, x) {
                            var v = this._cipher
                              , S = v.blockSize
                              , D = w.slice(x, x + S);
                            v.decryptBlock(w, x),
                            V.call(this, w, x, S),
                            this._prevBlock = D
                        }
                    });
                    function V(w, x, v) {
                        var S, D = this._iv;
                        D ? (S = D,
                        this._iv = o) : S = this._prevBlock;
                        for (var C = 0; C < v; C++)
                            w[x + C] ^= S[C]
                    }
                    return ne
                }()
                  , L = l.pad = {}
                  , T = L.Pkcs7 = {
                    pad: function(ne, V) {
                        for (var w = V * 4, x = w - ne.sigBytes % w, v = x << 24 | x << 16 | x << 8 | x, S = [], D = 0; D < x; D += 4)
                            S.push(v);
                        var C = u.create(S, x);
                        ne.concat(C)
                    },
                    unpad: function(ne) {
                        var V = ne.words[ne.sigBytes - 1 >>> 2] & 255;
                        ne.sigBytes -= V
                    }
                };
                a.BlockCipher = g.extend({
                    cfg: g.cfg.extend({
                        mode: I,
                        padding: T
                    }),
                    reset: function() {
                        var ne;
                        g.reset.call(this);
                        var V = this.cfg
                          , w = V.iv
                          , x = V.mode;
                        this._xformMode == this._ENC_XFORM_MODE ? ne = x.createEncryptor : (ne = x.createDecryptor,
                        this._minBufferSize = 1),
                        this._mode && this._mode.__creator == ne ? this._mode.init(this, w && w.words) : (this._mode = ne.call(x, this, w && w.words),
                        this._mode.__creator = ne)
                    },
                    _doProcessBlock: function(ne, V) {
                        this._mode.processBlock(ne, V)
                    },
                    _doFinalize: function() {
                        var ne, V = this.cfg.padding;
                        return this._xformMode == this._ENC_XFORM_MODE ? (V.pad(this._data, this.blockSize),
                        ne = this._process(!0)) : (ne = this._process(!0),
                        V.unpad(ne)),
                        ne
                    },
                    blockSize: 128 / 32
                });
                var M = a.CipherParams = c.extend({
                    init: function(ne) {
                        this.mixIn(ne)
                    },
                    toString: function(ne) {
                        return (ne || this.formatter).stringify(this)
                    }
                })
                  , q = l.format = {}
                  , Q = q.OpenSSL = {
                    stringify: function(ne) {
                        var V, w = ne.ciphertext, x = ne.salt;
                        return x ? V = u.create([1398893684, 1701076831]).concat(x).concat(w) : V = w,
                        V.toString(d)
                    },
                    parse: function(ne) {
                        var V, w = d.parse(ne), x = w.words;
                        return x[0] == 1398893684 && x[1] == 1701076831 && (V = u.create(x.slice(2, 4)),
                        x.splice(0, 4),
                        w.sigBytes -= 16),
                        M.create({
                            ciphertext: w,
                            salt: V
                        })
                    }
                }
                  , Y = a.SerializableCipher = c.extend({
                    cfg: c.extend({
                        format: Q
                    }),
                    encrypt: function(ne, V, w, x) {
                        x = this.cfg.extend(x);
                        var v = ne.createEncryptor(w, x)
                          , S = v.finalize(V)
                          , D = v.cfg;
                        return M.create({
                            ciphertext: S,
                            key: w,
                            iv: D.iv,
                            algorithm: ne,
                            mode: D.mode,
                            padding: D.padding,
                            blockSize: ne.blockSize,
                            formatter: x.format
                        })
                    },
                    decrypt: function(ne, V, w, x) {
                        x = this.cfg.extend(x),
                        V = this._parse(V, x.format);
                        var v = ne.createDecryptor(w, x).finalize(V.ciphertext);
                        return v
                    },
                    _parse: function(ne, V) {
                        return typeof ne == "string" ? V.parse(ne, this) : ne
                    }
                })
                  , ee = l.kdf = {}
                  , ie = ee.OpenSSL = {
                    execute: function(ne, V, w, x, v) {
                        if (x || (x = u.random(64 / 8)),
                        v)
                            var S = b.create({
                                keySize: V + w,
                                hasher: v
                            }).compute(ne, x);
                        else
                            var S = b.create({
                                keySize: V + w
                            }).compute(ne, x);
                        var D = u.create(S.words.slice(V), w * 4);
                        return S.sigBytes = V * 4,
                        M.create({
                            key: S,
                            iv: D,
                            salt: x
                        })
                    }
                }
                  , te = a.PasswordBasedCipher = Y.extend({
                    cfg: Y.cfg.extend({
                        kdf: ie
                    }),
                    encrypt: function(ne, V, w, x) {
                        x = this.cfg.extend(x);
                        var v = x.kdf.execute(w, ne.keySize, ne.ivSize, x.salt, x.hasher);
                        x.iv = v.iv;
                        var S = Y.encrypt.call(this, ne, V, v.key, x);
                        return S.mixIn(v),
                        S
                    },
                    decrypt: function(ne, V, w, x) {
                        x = this.cfg.extend(x),
                        V = this._parse(V, x.format);
                        var v = x.kdf.execute(w, ne.keySize, ne.ivSize, V.salt, x.hasher);
                        x.iv = v.iv;
                        var S = Y.decrypt.call(this, ne, V, v.key, x);
                        return S
                    }
                })
            }()
        })
    }(cipherCore)),
    cipherCore.exports
}
var modeCfb = {
    exports: {}
}, hasRequiredModeCfb;
function requireModeCfb() {
    return hasRequiredModeCfb || (hasRequiredModeCfb = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.mode.CFB = function() {
                var o = i.lib.BlockCipherMode.extend();
                o.Encryptor = o.extend({
                    processBlock: function(a, c) {
                        var u = this._cipher
                          , h = u.blockSize;
                        l.call(this, a, c, h, u),
                        this._prevBlock = a.slice(c, c + h)
                    }
                }),
                o.Decryptor = o.extend({
                    processBlock: function(a, c) {
                        var u = this._cipher
                          , h = u.blockSize
                          , m = a.slice(c, c + h);
                        l.call(this, a, c, h, u),
                        this._prevBlock = m
                    }
                });
                function l(a, c, u, h) {
                    var m, d = this._iv;
                    d ? (m = d.slice(0),
                    this._iv = void 0) : m = this._prevBlock,
                    h.encryptBlock(m, 0);
                    for (var p = 0; p < u; p++)
                        a[c + p] ^= m[p]
                }
                return o
            }(),
            i.mode.CFB
        })
    }(modeCfb)),
    modeCfb.exports
}
var modeCtr = {
    exports: {}
}, hasRequiredModeCtr;
function requireModeCtr() {
    return hasRequiredModeCtr || (hasRequiredModeCtr = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.mode.CTR = function() {
                var o = i.lib.BlockCipherMode.extend()
                  , l = o.Encryptor = o.extend({
                    processBlock: function(a, c) {
                        var u = this._cipher
                          , h = u.blockSize
                          , m = this._iv
                          , d = this._counter;
                        m && (d = this._counter = m.slice(0),
                        this._iv = void 0);
                        var p = d.slice(0);
                        u.encryptBlock(p, 0),
                        d[h - 1] = d[h - 1] + 1 | 0;
                        for (var b = 0; b < h; b++)
                            a[c + b] ^= p[b]
                    }
                });
                return o.Decryptor = l,
                o
            }(),
            i.mode.CTR
        })
    }(modeCtr)),
    modeCtr.exports
}
var modeCtrGladman = {
    exports: {}
}, hasRequiredModeCtrGladman;
function requireModeCtrGladman() {
    return hasRequiredModeCtrGladman || (hasRequiredModeCtrGladman = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            /** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */
            return i.mode.CTRGladman = function() {
                var o = i.lib.BlockCipherMode.extend();
                function l(u) {
                    if ((u >> 24 & 255) === 255) {
                        var h = u >> 16 & 255
                          , m = u >> 8 & 255
                          , d = u & 255;
                        h === 255 ? (h = 0,
                        m === 255 ? (m = 0,
                        d === 255 ? d = 0 : ++d) : ++m) : ++h,
                        u = 0,
                        u += h << 16,
                        u += m << 8,
                        u += d
                    } else
                        u += 1 << 24;
                    return u
                }
                function a(u) {
                    return (u[0] = l(u[0])) === 0 && (u[1] = l(u[1])),
                    u
                }
                var c = o.Encryptor = o.extend({
                    processBlock: function(u, h) {
                        var m = this._cipher
                          , d = m.blockSize
                          , p = this._iv
                          , b = this._counter;
                        p && (b = this._counter = p.slice(0),
                        this._iv = void 0),
                        a(b);
                        var g = b.slice(0);
                        m.encryptBlock(g, 0);
                        for (var $ = 0; $ < d; $++)
                            u[h + $] ^= g[$]
                    }
                });
                return o.Decryptor = c,
                o
            }(),
            i.mode.CTRGladman
        })
    }(modeCtrGladman)),
    modeCtrGladman.exports
}
var modeOfb = {
    exports: {}
}, hasRequiredModeOfb;
function requireModeOfb() {
    return hasRequiredModeOfb || (hasRequiredModeOfb = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.mode.OFB = function() {
                var o = i.lib.BlockCipherMode.extend()
                  , l = o.Encryptor = o.extend({
                    processBlock: function(a, c) {
                        var u = this._cipher
                          , h = u.blockSize
                          , m = this._iv
                          , d = this._keystream;
                        m && (d = this._keystream = m.slice(0),
                        this._iv = void 0),
                        u.encryptBlock(d, 0);
                        for (var p = 0; p < h; p++)
                            a[c + p] ^= d[p]
                    }
                });
                return o.Decryptor = l,
                o
            }(),
            i.mode.OFB
        })
    }(modeOfb)),
    modeOfb.exports
}
var modeEcb = {
    exports: {}
}, hasRequiredModeEcb;
function requireModeEcb() {
    return hasRequiredModeEcb || (hasRequiredModeEcb = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.mode.ECB = function() {
                var o = i.lib.BlockCipherMode.extend();
                return o.Encryptor = o.extend({
                    processBlock: function(l, a) {
                        this._cipher.encryptBlock(l, a)
                    }
                }),
                o.Decryptor = o.extend({
                    processBlock: function(l, a) {
                        this._cipher.decryptBlock(l, a)
                    }
                }),
                o
            }(),
            i.mode.ECB
        })
    }(modeEcb)),
    modeEcb.exports
}
var padAnsix923 = {
    exports: {}
}, hasRequiredPadAnsix923;
function requirePadAnsix923() {
    return hasRequiredPadAnsix923 || (hasRequiredPadAnsix923 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.pad.AnsiX923 = {
                pad: function(o, l) {
                    var a = o.sigBytes
                      , c = l * 4
                      , u = c - a % c
                      , h = a + u - 1;
                    o.clamp(),
                    o.words[h >>> 2] |= u << 24 - h % 4 * 8,
                    o.sigBytes += u
                },
                unpad: function(o) {
                    var l = o.words[o.sigBytes - 1 >>> 2] & 255;
                    o.sigBytes -= l
                }
            },
            i.pad.Ansix923
        })
    }(padAnsix923)),
    padAnsix923.exports
}
var padIso10126 = {
    exports: {}
}, hasRequiredPadIso10126;
function requirePadIso10126() {
    return hasRequiredPadIso10126 || (hasRequiredPadIso10126 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.pad.Iso10126 = {
                pad: function(o, l) {
                    var a = l * 4
                      , c = a - o.sigBytes % a;
                    o.concat(i.lib.WordArray.random(c - 1)).concat(i.lib.WordArray.create([c << 24], 1))
                },
                unpad: function(o) {
                    var l = o.words[o.sigBytes - 1 >>> 2] & 255;
                    o.sigBytes -= l
                }
            },
            i.pad.Iso10126
        })
    }(padIso10126)),
    padIso10126.exports
}
var padIso97971 = {
    exports: {}
}, hasRequiredPadIso97971;
function requirePadIso97971() {
    return hasRequiredPadIso97971 || (hasRequiredPadIso97971 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.pad.Iso97971 = {
                pad: function(o, l) {
                    o.concat(i.lib.WordArray.create([2147483648], 1)),
                    i.pad.ZeroPadding.pad(o, l)
                },
                unpad: function(o) {
                    i.pad.ZeroPadding.unpad(o),
                    o.sigBytes--
                }
            },
            i.pad.Iso97971
        })
    }(padIso97971)),
    padIso97971.exports
}
var padZeropadding = {
    exports: {}
}, hasRequiredPadZeropadding;
function requirePadZeropadding() {
    return hasRequiredPadZeropadding || (hasRequiredPadZeropadding = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.pad.ZeroPadding = {
                pad: function(o, l) {
                    var a = l * 4;
                    o.clamp(),
                    o.sigBytes += a - (o.sigBytes % a || a)
                },
                unpad: function(o) {
                    for (var l = o.words, a = o.sigBytes - 1, a = o.sigBytes - 1; a >= 0; a--)
                        if (l[a >>> 2] >>> 24 - a % 4 * 8 & 255) {
                            o.sigBytes = a + 1;
                            break
                        }
                }
            },
            i.pad.ZeroPadding
        })
    }(padZeropadding)),
    padZeropadding.exports
}
var padNopadding = {
    exports: {}
}, hasRequiredPadNopadding;
function requirePadNopadding() {
    return hasRequiredPadNopadding || (hasRequiredPadNopadding = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return i.pad.NoPadding = {
                pad: function() {},
                unpad: function() {}
            },
            i.pad.NoPadding
        })
    }(padNopadding)),
    padNopadding.exports
}
var formatHex = {
    exports: {}
}, hasRequiredFormatHex;
function requireFormatHex() {
    return hasRequiredFormatHex || (hasRequiredFormatHex = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function(o) {
                var l = i
                  , a = l.lib
                  , c = a.CipherParams
                  , u = l.enc
                  , h = u.Hex
                  , m = l.format;
                m.Hex = {
                    stringify: function(d) {
                        return d.ciphertext.toString(h)
                    },
                    parse: function(d) {
                        var p = h.parse(d);
                        return c.create({
                            ciphertext: p
                        })
                    }
                }
            }(),
            i.format.Hex
        })
    }(formatHex)),
    formatHex.exports
}
var aes = {
    exports: {}
}, hasRequiredAes;
function requireAes() {
    return hasRequiredAes || (hasRequiredAes = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.BlockCipher
                  , c = o.algo
                  , u = []
                  , h = []
                  , m = []
                  , d = []
                  , p = []
                  , b = []
                  , g = []
                  , $ = []
                  , N = []
                  , I = [];
                (function() {
                    for (var M = [], q = 0; q < 256; q++)
                        q < 128 ? M[q] = q << 1 : M[q] = q << 1 ^ 283;
                    for (var Q = 0, Y = 0, q = 0; q < 256; q++) {
                        var ee = Y ^ Y << 1 ^ Y << 2 ^ Y << 3 ^ Y << 4;
                        ee = ee >>> 8 ^ ee & 255 ^ 99,
                        u[Q] = ee,
                        h[ee] = Q;
                        var ie = M[Q]
                          , te = M[ie]
                          , ne = M[te]
                          , V = M[ee] * 257 ^ ee * 16843008;
                        m[Q] = V << 24 | V >>> 8,
                        d[Q] = V << 16 | V >>> 16,
                        p[Q] = V << 8 | V >>> 24,
                        b[Q] = V;
                        var V = ne * 16843009 ^ te * 65537 ^ ie * 257 ^ Q * 16843008;
                        g[ee] = V << 24 | V >>> 8,
                        $[ee] = V << 16 | V >>> 16,
                        N[ee] = V << 8 | V >>> 24,
                        I[ee] = V,
                        Q ? (Q = ie ^ M[M[M[ne ^ ie]]],
                        Y ^= M[M[Y]]) : Q = Y = 1
                    }
                }
                )();
                var L = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]
                  , T = c.AES = a.extend({
                    _doReset: function() {
                        var M;
                        if (!(this._nRounds && this._keyPriorReset === this._key)) {
                            for (var q = this._keyPriorReset = this._key, Q = q.words, Y = q.sigBytes / 4, ee = this._nRounds = Y + 6, ie = (ee + 1) * 4, te = this._keySchedule = [], ne = 0; ne < ie; ne++)
                                ne < Y ? te[ne] = Q[ne] : (M = te[ne - 1],
                                ne % Y ? Y > 6 && ne % Y == 4 && (M = u[M >>> 24] << 24 | u[M >>> 16 & 255] << 16 | u[M >>> 8 & 255] << 8 | u[M & 255]) : (M = M << 8 | M >>> 24,
                                M = u[M >>> 24] << 24 | u[M >>> 16 & 255] << 16 | u[M >>> 8 & 255] << 8 | u[M & 255],
                                M ^= L[ne / Y | 0] << 24),
                                te[ne] = te[ne - Y] ^ M);
                            for (var V = this._invKeySchedule = [], w = 0; w < ie; w++) {
                                var ne = ie - w;
                                if (w % 4)
                                    var M = te[ne];
                                else
                                    var M = te[ne - 4];
                                w < 4 || ne <= 4 ? V[w] = M : V[w] = g[u[M >>> 24]] ^ $[u[M >>> 16 & 255]] ^ N[u[M >>> 8 & 255]] ^ I[u[M & 255]]
                            }
                        }
                    },
                    encryptBlock: function(M, q) {
                        this._doCryptBlock(M, q, this._keySchedule, m, d, p, b, u)
                    },
                    decryptBlock: function(M, q) {
                        var Q = M[q + 1];
                        M[q + 1] = M[q + 3],
                        M[q + 3] = Q,
                        this._doCryptBlock(M, q, this._invKeySchedule, g, $, N, I, h);
                        var Q = M[q + 1];
                        M[q + 1] = M[q + 3],
                        M[q + 3] = Q
                    },
                    _doCryptBlock: function(M, q, Q, Y, ee, ie, te, ne) {
                        for (var V = this._nRounds, w = M[q] ^ Q[0], x = M[q + 1] ^ Q[1], v = M[q + 2] ^ Q[2], S = M[q + 3] ^ Q[3], D = 4, C = 1; C < V; C++) {
                            var O = Y[w >>> 24] ^ ee[x >>> 16 & 255] ^ ie[v >>> 8 & 255] ^ te[S & 255] ^ Q[D++]
                              , P = Y[x >>> 24] ^ ee[v >>> 16 & 255] ^ ie[S >>> 8 & 255] ^ te[w & 255] ^ Q[D++]
                              , y = Y[v >>> 24] ^ ee[S >>> 16 & 255] ^ ie[w >>> 8 & 255] ^ te[x & 255] ^ Q[D++]
                              , A = Y[S >>> 24] ^ ee[w >>> 16 & 255] ^ ie[x >>> 8 & 255] ^ te[v & 255] ^ Q[D++];
                            w = O,
                            x = P,
                            v = y,
                            S = A
                        }
                        var O = (ne[w >>> 24] << 24 | ne[x >>> 16 & 255] << 16 | ne[v >>> 8 & 255] << 8 | ne[S & 255]) ^ Q[D++]
                          , P = (ne[x >>> 24] << 24 | ne[v >>> 16 & 255] << 16 | ne[S >>> 8 & 255] << 8 | ne[w & 255]) ^ Q[D++]
                          , y = (ne[v >>> 24] << 24 | ne[S >>> 16 & 255] << 16 | ne[w >>> 8 & 255] << 8 | ne[x & 255]) ^ Q[D++]
                          , A = (ne[S >>> 24] << 24 | ne[w >>> 16 & 255] << 16 | ne[x >>> 8 & 255] << 8 | ne[v & 255]) ^ Q[D++];
                        M[q] = O,
                        M[q + 1] = P,
                        M[q + 2] = y,
                        M[q + 3] = A
                    },
                    keySize: 256 / 32
                });
                o.AES = a._createHelper(T)
            }(),
            i.AES
        })
    }(aes)),
    aes.exports
}
var tripledes = {
    exports: {}
}, hasRequiredTripledes;
function requireTripledes() {
    return hasRequiredTripledes || (hasRequiredTripledes = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.WordArray
                  , c = l.BlockCipher
                  , u = o.algo
                  , h = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4]
                  , m = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32]
                  , d = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28]
                  , p = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                }]
                  , b = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679]
                  , g = u.DES = c.extend({
                    _doReset: function() {
                        for (var L = this._key, T = L.words, M = [], q = 0; q < 56; q++) {
                            var Q = h[q] - 1;
                            M[q] = T[Q >>> 5] >>> 31 - Q % 32 & 1
                        }
                        for (var Y = this._subKeys = [], ee = 0; ee < 16; ee++) {
                            for (var ie = Y[ee] = [], te = d[ee], q = 0; q < 24; q++)
                                ie[q / 6 | 0] |= M[(m[q] - 1 + te) % 28] << 31 - q % 6,
                                ie[4 + (q / 6 | 0)] |= M[28 + (m[q + 24] - 1 + te) % 28] << 31 - q % 6;
                            ie[0] = ie[0] << 1 | ie[0] >>> 31;
                            for (var q = 1; q < 7; q++)
                                ie[q] = ie[q] >>> (q - 1) * 4 + 3;
                            ie[7] = ie[7] << 5 | ie[7] >>> 27
                        }
                        for (var ne = this._invSubKeys = [], q = 0; q < 16; q++)
                            ne[q] = Y[15 - q]
                    },
                    encryptBlock: function(L, T) {
                        this._doCryptBlock(L, T, this._subKeys)
                    },
                    decryptBlock: function(L, T) {
                        this._doCryptBlock(L, T, this._invSubKeys)
                    },
                    _doCryptBlock: function(L, T, M) {
                        this._lBlock = L[T],
                        this._rBlock = L[T + 1],
                        $.call(this, 4, 252645135),
                        $.call(this, 16, 65535),
                        N.call(this, 2, 858993459),
                        N.call(this, 8, 16711935),
                        $.call(this, 1, 1431655765);
                        for (var q = 0; q < 16; q++) {
                            for (var Q = M[q], Y = this._lBlock, ee = this._rBlock, ie = 0, te = 0; te < 8; te++)
                                ie |= p[te][((ee ^ Q[te]) & b[te]) >>> 0];
                            this._lBlock = ee,
                            this._rBlock = Y ^ ie
                        }
                        var ne = this._lBlock;
                        this._lBlock = this._rBlock,
                        this._rBlock = ne,
                        $.call(this, 1, 1431655765),
                        N.call(this, 8, 16711935),
                        N.call(this, 2, 858993459),
                        $.call(this, 16, 65535),
                        $.call(this, 4, 252645135),
                        L[T] = this._lBlock,
                        L[T + 1] = this._rBlock
                    },
                    keySize: 64 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                });
                function $(L, T) {
                    var M = (this._lBlock >>> L ^ this._rBlock) & T;
                    this._rBlock ^= M,
                    this._lBlock ^= M << L
                }
                function N(L, T) {
                    var M = (this._rBlock >>> L ^ this._lBlock) & T;
                    this._lBlock ^= M,
                    this._rBlock ^= M << L
                }
                o.DES = c._createHelper(g);
                var I = u.TripleDES = c.extend({
                    _doReset: function() {
                        var L = this._key
                          , T = L.words;
                        if (T.length !== 2 && T.length !== 4 && T.length < 6)
                            throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                        var M = T.slice(0, 2)
                          , q = T.length < 4 ? T.slice(0, 2) : T.slice(2, 4)
                          , Q = T.length < 6 ? T.slice(0, 2) : T.slice(4, 6);
                        this._des1 = g.createEncryptor(a.create(M)),
                        this._des2 = g.createEncryptor(a.create(q)),
                        this._des3 = g.createEncryptor(a.create(Q))
                    },
                    encryptBlock: function(L, T) {
                        this._des1.encryptBlock(L, T),
                        this._des2.decryptBlock(L, T),
                        this._des3.encryptBlock(L, T)
                    },
                    decryptBlock: function(L, T) {
                        this._des3.decryptBlock(L, T),
                        this._des2.encryptBlock(L, T),
                        this._des1.decryptBlock(L, T)
                    },
                    keySize: 192 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                });
                o.TripleDES = c._createHelper(I)
            }(),
            i.TripleDES
        })
    }(tripledes)),
    tripledes.exports
}
var rc4 = {
    exports: {}
}, hasRequiredRc4;
function requireRc4() {
    return hasRequiredRc4 || (hasRequiredRc4 = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.StreamCipher
                  , c = o.algo
                  , u = c.RC4 = a.extend({
                    _doReset: function() {
                        for (var d = this._key, p = d.words, b = d.sigBytes, g = this._S = [], $ = 0; $ < 256; $++)
                            g[$] = $;
                        for (var $ = 0, N = 0; $ < 256; $++) {
                            var I = $ % b
                              , L = p[I >>> 2] >>> 24 - I % 4 * 8 & 255;
                            N = (N + g[$] + L) % 256;
                            var T = g[$];
                            g[$] = g[N],
                            g[N] = T
                        }
                        this._i = this._j = 0
                    },
                    _doProcessBlock: function(d, p) {
                        d[p] ^= h.call(this)
                    },
                    keySize: 256 / 32,
                    ivSize: 0
                });
                function h() {
                    for (var d = this._S, p = this._i, b = this._j, g = 0, $ = 0; $ < 4; $++) {
                        p = (p + 1) % 256,
                        b = (b + d[p]) % 256;
                        var N = d[p];
                        d[p] = d[b],
                        d[b] = N,
                        g |= d[(d[p] + d[b]) % 256] << 24 - $ * 8
                    }
                    return this._i = p,
                    this._j = b,
                    g
                }
                o.RC4 = a._createHelper(u);
                var m = c.RC4Drop = u.extend({
                    cfg: u.cfg.extend({
                        drop: 192
                    }),
                    _doReset: function() {
                        u._doReset.call(this);
                        for (var d = this.cfg.drop; d > 0; d--)
                            h.call(this)
                    }
                });
                o.RC4Drop = a._createHelper(m)
            }(),
            i.RC4
        })
    }(rc4)),
    rc4.exports
}
var rabbit = {
    exports: {}
}, hasRequiredRabbit;
function requireRabbit() {
    return hasRequiredRabbit || (hasRequiredRabbit = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.StreamCipher
                  , c = o.algo
                  , u = []
                  , h = []
                  , m = []
                  , d = c.Rabbit = a.extend({
                    _doReset: function() {
                        for (var b = this._key.words, g = this.cfg.iv, $ = 0; $ < 4; $++)
                            b[$] = (b[$] << 8 | b[$] >>> 24) & 16711935 | (b[$] << 24 | b[$] >>> 8) & 4278255360;
                        var N = this._X = [b[0], b[3] << 16 | b[2] >>> 16, b[1], b[0] << 16 | b[3] >>> 16, b[2], b[1] << 16 | b[0] >>> 16, b[3], b[2] << 16 | b[1] >>> 16]
                          , I = this._C = [b[2] << 16 | b[2] >>> 16, b[0] & 4294901760 | b[1] & 65535, b[3] << 16 | b[3] >>> 16, b[1] & 4294901760 | b[2] & 65535, b[0] << 16 | b[0] >>> 16, b[2] & 4294901760 | b[3] & 65535, b[1] << 16 | b[1] >>> 16, b[3] & 4294901760 | b[0] & 65535];
                        this._b = 0;
                        for (var $ = 0; $ < 4; $++)
                            p.call(this);
                        for (var $ = 0; $ < 8; $++)
                            I[$] ^= N[$ + 4 & 7];
                        if (g) {
                            var L = g.words
                              , T = L[0]
                              , M = L[1]
                              , q = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360
                              , Q = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360
                              , Y = q >>> 16 | Q & 4294901760
                              , ee = Q << 16 | q & 65535;
                            I[0] ^= q,
                            I[1] ^= Y,
                            I[2] ^= Q,
                            I[3] ^= ee,
                            I[4] ^= q,
                            I[5] ^= Y,
                            I[6] ^= Q,
                            I[7] ^= ee;
                            for (var $ = 0; $ < 4; $++)
                                p.call(this)
                        }
                    },
                    _doProcessBlock: function(b, g) {
                        var $ = this._X;
                        p.call(this),
                        u[0] = $[0] ^ $[5] >>> 16 ^ $[3] << 16,
                        u[1] = $[2] ^ $[7] >>> 16 ^ $[5] << 16,
                        u[2] = $[4] ^ $[1] >>> 16 ^ $[7] << 16,
                        u[3] = $[6] ^ $[3] >>> 16 ^ $[1] << 16;
                        for (var N = 0; N < 4; N++)
                            u[N] = (u[N] << 8 | u[N] >>> 24) & 16711935 | (u[N] << 24 | u[N] >>> 8) & 4278255360,
                            b[g + N] ^= u[N]
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                });
                function p() {
                    for (var b = this._X, g = this._C, $ = 0; $ < 8; $++)
                        h[$] = g[$];
                    g[0] = g[0] + 1295307597 + this._b | 0,
                    g[1] = g[1] + 3545052371 + (g[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0,
                    g[2] = g[2] + 886263092 + (g[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0,
                    g[3] = g[3] + 1295307597 + (g[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0,
                    g[4] = g[4] + 3545052371 + (g[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0,
                    g[5] = g[5] + 886263092 + (g[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0,
                    g[6] = g[6] + 1295307597 + (g[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0,
                    g[7] = g[7] + 3545052371 + (g[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0,
                    this._b = g[7] >>> 0 < h[7] >>> 0 ? 1 : 0;
                    for (var $ = 0; $ < 8; $++) {
                        var N = b[$] + g[$]
                          , I = N & 65535
                          , L = N >>> 16
                          , T = ((I * I >>> 17) + I * L >>> 15) + L * L
                          , M = ((N & 4294901760) * N | 0) + ((N & 65535) * N | 0);
                        m[$] = T ^ M
                    }
                    b[0] = m[0] + (m[7] << 16 | m[7] >>> 16) + (m[6] << 16 | m[6] >>> 16) | 0,
                    b[1] = m[1] + (m[0] << 8 | m[0] >>> 24) + m[7] | 0,
                    b[2] = m[2] + (m[1] << 16 | m[1] >>> 16) + (m[0] << 16 | m[0] >>> 16) | 0,
                    b[3] = m[3] + (m[2] << 8 | m[2] >>> 24) + m[1] | 0,
                    b[4] = m[4] + (m[3] << 16 | m[3] >>> 16) + (m[2] << 16 | m[2] >>> 16) | 0,
                    b[5] = m[5] + (m[4] << 8 | m[4] >>> 24) + m[3] | 0,
                    b[6] = m[6] + (m[5] << 16 | m[5] >>> 16) + (m[4] << 16 | m[4] >>> 16) | 0,
                    b[7] = m[7] + (m[6] << 8 | m[6] >>> 24) + m[5] | 0
                }
                o.Rabbit = a._createHelper(d)
            }(),
            i.Rabbit
        })
    }(rabbit)),
    rabbit.exports
}
var rabbitLegacy = {
    exports: {}
}, hasRequiredRabbitLegacy;
function requireRabbitLegacy() {
    return hasRequiredRabbitLegacy || (hasRequiredRabbitLegacy = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.StreamCipher
                  , c = o.algo
                  , u = []
                  , h = []
                  , m = []
                  , d = c.RabbitLegacy = a.extend({
                    _doReset: function() {
                        var b = this._key.words
                          , g = this.cfg.iv
                          , $ = this._X = [b[0], b[3] << 16 | b[2] >>> 16, b[1], b[0] << 16 | b[3] >>> 16, b[2], b[1] << 16 | b[0] >>> 16, b[3], b[2] << 16 | b[1] >>> 16]
                          , N = this._C = [b[2] << 16 | b[2] >>> 16, b[0] & 4294901760 | b[1] & 65535, b[3] << 16 | b[3] >>> 16, b[1] & 4294901760 | b[2] & 65535, b[0] << 16 | b[0] >>> 16, b[2] & 4294901760 | b[3] & 65535, b[1] << 16 | b[1] >>> 16, b[3] & 4294901760 | b[0] & 65535];
                        this._b = 0;
                        for (var I = 0; I < 4; I++)
                            p.call(this);
                        for (var I = 0; I < 8; I++)
                            N[I] ^= $[I + 4 & 7];
                        if (g) {
                            var L = g.words
                              , T = L[0]
                              , M = L[1]
                              , q = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360
                              , Q = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360
                              , Y = q >>> 16 | Q & 4294901760
                              , ee = Q << 16 | q & 65535;
                            N[0] ^= q,
                            N[1] ^= Y,
                            N[2] ^= Q,
                            N[3] ^= ee,
                            N[4] ^= q,
                            N[5] ^= Y,
                            N[6] ^= Q,
                            N[7] ^= ee;
                            for (var I = 0; I < 4; I++)
                                p.call(this)
                        }
                    },
                    _doProcessBlock: function(b, g) {
                        var $ = this._X;
                        p.call(this),
                        u[0] = $[0] ^ $[5] >>> 16 ^ $[3] << 16,
                        u[1] = $[2] ^ $[7] >>> 16 ^ $[5] << 16,
                        u[2] = $[4] ^ $[1] >>> 16 ^ $[7] << 16,
                        u[3] = $[6] ^ $[3] >>> 16 ^ $[1] << 16;
                        for (var N = 0; N < 4; N++)
                            u[N] = (u[N] << 8 | u[N] >>> 24) & 16711935 | (u[N] << 24 | u[N] >>> 8) & 4278255360,
                            b[g + N] ^= u[N]
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                });
                function p() {
                    for (var b = this._X, g = this._C, $ = 0; $ < 8; $++)
                        h[$] = g[$];
                    g[0] = g[0] + 1295307597 + this._b | 0,
                    g[1] = g[1] + 3545052371 + (g[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0,
                    g[2] = g[2] + 886263092 + (g[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0,
                    g[3] = g[3] + 1295307597 + (g[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0,
                    g[4] = g[4] + 3545052371 + (g[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0,
                    g[5] = g[5] + 886263092 + (g[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0,
                    g[6] = g[6] + 1295307597 + (g[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0,
                    g[7] = g[7] + 3545052371 + (g[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0,
                    this._b = g[7] >>> 0 < h[7] >>> 0 ? 1 : 0;
                    for (var $ = 0; $ < 8; $++) {
                        var N = b[$] + g[$]
                          , I = N & 65535
                          , L = N >>> 16
                          , T = ((I * I >>> 17) + I * L >>> 15) + L * L
                          , M = ((N & 4294901760) * N | 0) + ((N & 65535) * N | 0);
                        m[$] = T ^ M
                    }
                    b[0] = m[0] + (m[7] << 16 | m[7] >>> 16) + (m[6] << 16 | m[6] >>> 16) | 0,
                    b[1] = m[1] + (m[0] << 8 | m[0] >>> 24) + m[7] | 0,
                    b[2] = m[2] + (m[1] << 16 | m[1] >>> 16) + (m[0] << 16 | m[0] >>> 16) | 0,
                    b[3] = m[3] + (m[2] << 8 | m[2] >>> 24) + m[1] | 0,
                    b[4] = m[4] + (m[3] << 16 | m[3] >>> 16) + (m[2] << 16 | m[2] >>> 16) | 0,
                    b[5] = m[5] + (m[4] << 8 | m[4] >>> 24) + m[3] | 0,
                    b[6] = m[6] + (m[5] << 16 | m[5] >>> 16) + (m[4] << 16 | m[4] >>> 16) | 0,
                    b[7] = m[7] + (m[6] << 8 | m[6] >>> 24) + m[5] | 0
                }
                o.RabbitLegacy = a._createHelper(d)
            }(),
            i.RabbitLegacy
        })
    }(rabbitLegacy)),
    rabbitLegacy.exports
}
var blowfish = {
    exports: {}
}, hasRequiredBlowfish;
function requireBlowfish() {
    return hasRequiredBlowfish || (hasRequiredBlowfish = 1,
    function(e, n) {
        (function(i, o, l) {
            e.exports = o(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore())
        }
        )(commonjsGlobal, function(i) {
            return function() {
                var o = i
                  , l = o.lib
                  , a = l.BlockCipher
                  , c = o.algo;
                const u = 16
                  , h = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731]
                  , m = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]];
                var d = {
                    pbox: [],
                    sbox: []
                };
                function p(I, L) {
                    let T = L >> 24 & 255
                      , M = L >> 16 & 255
                      , q = L >> 8 & 255
                      , Q = L & 255
                      , Y = I.sbox[0][T] + I.sbox[1][M];
                    return Y = Y ^ I.sbox[2][q],
                    Y = Y + I.sbox[3][Q],
                    Y
                }
                function b(I, L, T) {
                    let M = L, q = T, Q;
                    for (let Y = 0; Y < u; ++Y)
                        M = M ^ I.pbox[Y],
                        q = p(I, M) ^ q,
                        Q = M,
                        M = q,
                        q = Q;
                    return Q = M,
                    M = q,
                    q = Q,
                    q = q ^ I.pbox[u],
                    M = M ^ I.pbox[u + 1],
                    {
                        left: M,
                        right: q
                    }
                }
                function g(I, L, T) {
                    let M = L, q = T, Q;
                    for (let Y = u + 1; Y > 1; --Y)
                        M = M ^ I.pbox[Y],
                        q = p(I, M) ^ q,
                        Q = M,
                        M = q,
                        q = Q;
                    return Q = M,
                    M = q,
                    q = Q,
                    q = q ^ I.pbox[1],
                    M = M ^ I.pbox[0],
                    {
                        left: M,
                        right: q
                    }
                }
                function $(I, L, T) {
                    for (let ee = 0; ee < 4; ee++) {
                        I.sbox[ee] = [];
                        for (let ie = 0; ie < 256; ie++)
                            I.sbox[ee][ie] = m[ee][ie]
                    }
                    let M = 0;
                    for (let ee = 0; ee < u + 2; ee++)
                        I.pbox[ee] = h[ee] ^ L[M],
                        M++,
                        M >= T && (M = 0);
                    let q = 0
                      , Q = 0
                      , Y = 0;
                    for (let ee = 0; ee < u + 2; ee += 2)
                        Y = b(I, q, Q),
                        q = Y.left,
                        Q = Y.right,
                        I.pbox[ee] = q,
                        I.pbox[ee + 1] = Q;
                    for (let ee = 0; ee < 4; ee++)
                        for (let ie = 0; ie < 256; ie += 2)
                            Y = b(I, q, Q),
                            q = Y.left,
                            Q = Y.right,
                            I.sbox[ee][ie] = q,
                            I.sbox[ee][ie + 1] = Q;
                    return !0
                }
                var N = c.Blowfish = a.extend({
                    _doReset: function() {
                        if (this._keyPriorReset !== this._key) {
                            var I = this._keyPriorReset = this._key
                              , L = I.words
                              , T = I.sigBytes / 4;
                            $(d, L, T)
                        }
                    },
                    encryptBlock: function(I, L) {
                        var T = b(d, I[L], I[L + 1]);
                        I[L] = T.left,
                        I[L + 1] = T.right
                    },
                    decryptBlock: function(I, L) {
                        var T = g(d, I[L], I[L + 1]);
                        I[L] = T.left,
                        I[L + 1] = T.right
                    },
                    blockSize: 64 / 32,
                    keySize: 128 / 32,
                    ivSize: 64 / 32
                });
                o.Blowfish = a._createHelper(N)
            }(),
            i.Blowfish
        })
    }(blowfish)),
    blowfish.exports
}
(function(e, n) {
    (function(i, o, l) {
        e.exports = o(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy(), requireBlowfish())
    }
    )(commonjsGlobal, function(i) {
        return i
    })
}
)(build);
var buildExports = build.exports;
const CryptoJS = getDefaultExportFromCjs(buildExports);
var OperationModeEnum = (e => (e.Router = "router",
e.Ap = "ap",
e.Repeater = "repeater",
e.Client = "client",
e.MultiSsid = "multissid",
e))(OperationModeEnum || {})
  , DevicePortEnum = (e => (e.Electrical = "electrical port",
e.Optical = "optical port",
e))(DevicePortEnum || {})
  , VpnEnum = (e => (e.Open = "openvpn",
e.Pptp = "pptpvpn",
e.L2tp = "l2tpvpn",
e.Wireguard = "wireguard",
e))(VpnEnum || {})
  , ConnectionsVpnEnum = (e => (e.Open = "openvpn",
e.Pptp = "pptp",
e.L2tp = "l2tp",
e.Wireguard = "wireguard",
e))(ConnectionsVpnEnum || {})
  , AlgEnum = (e => (e.Pptp = "pptp",
e.L2tp = "l2tp",
e.Ipsec = "ipsec",
e.Ftp = "ftp",
e.Tftp = "tftp",
e.Rtsp = "rtsp",
e.H323 = "h323",
e.Sip = "sip",
e))(AlgEnum || {})
  , InternetEnum = (e => (e.DotDoh = "dotDoh",
e))(InternetEnum || {})
  , DialFeatureEnum = (e => (e.Connections = "connections",
e.VpnClient = "vpnClient",
e.Alg = "alg",
e.Internet = "internet",
e))(DialFeatureEnum || {})
  , CertificationEnum = (e => (e.CE = "EU CE",
e.NTRA = "Egypt NTRA",
e.FCC = "US FCC",
e.KC = "South Korea KC",
e.RG = "IMDA TS RG-SEC",
e.SG_L1_S2 = "SG CLS L1 STAGE2",
e.CE_RED = "EU CE RED",
e))(CertificationEnum || {});
const TOKEN_KEY = "token"
  , UPGRADE_TOKEN_KEY = "upgradeToken"
  , CLOUD_KEY = {
    DEVICE_TOKEN: "deviceToken",
    INFO: "userInfo"
}
  , ENCRYPTOR_KEY = {
    AES: "encryptorAes",
    RSA: "encryptorRsa",
    SEQ: "encryptorSeq",
    HASH: "encryptorHash"
};
class Token {
    static setToken(n="") {
        this.token = n,
        localStorage.setItem(TOKEN_KEY, n)
    }
    static getToken() {
        return this.token
    }
    static clear() {
        this.token = "",
        localStorage.removeItem(TOKEN_KEY)
    }
    static isValid() {
        return !!this.token
    }
}
ye(Token, "token", localStorage.getItem(TOKEN_KEY) || "");
class DESHelper {
    static createKeys(n) {
        const i = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964]
          , o = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697]
          , l = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272]
          , a = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144]
          , c = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256]
          , u = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488]
          , h = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746]
          , m = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568]
          , d = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578]
          , p = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488]
          , b = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800]
          , g = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744]
          , $ = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128]
          , N = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261]
          , I = n.length > 8 ? 3 : 1
          , L = Array.from({
            length: 32 * I
        })
          , T = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];
        let M, q, Q = 0, Y = 0, ee;
        for (let ie = 0; ie < I; ie++) {
            let te = n.charCodeAt(Q++) << 24 | n.charCodeAt(Q++) << 16 | n.charCodeAt(Q++) << 8 | n.charCodeAt(Q++)
              , ne = n.charCodeAt(Q++) << 24 | n.charCodeAt(Q++) << 16 | n.charCodeAt(Q++) << 8 | n.charCodeAt(Q++);
            ee = (te >>> 4 ^ ne) & 252645135,
            ne ^= ee,
            te ^= ee << 4,
            ee = (ne >>> -16 ^ te) & 65535,
            te ^= ee,
            ne ^= ee << -16,
            ee = (te >>> 2 ^ ne) & 858993459,
            ne ^= ee,
            te ^= ee << 2,
            ee = (ne >>> -16 ^ te) & 65535,
            te ^= ee,
            ne ^= ee << -16,
            ee = (te >>> 1 ^ ne) & 1431655765,
            ne ^= ee,
            te ^= ee << 1,
            ee = (ne >>> 8 ^ te) & 16711935,
            te ^= ee,
            ne ^= ee << 8,
            ee = (te >>> 1 ^ ne) & 1431655765,
            ne ^= ee,
            te ^= ee << 1,
            ee = te << 8 | ne >>> 20 & 240,
            te = ne << 24 | ne << 8 & 16711680 | ne >>> 8 & 65280 | ne >>> 24 & 240,
            ne = ee;
            for (let V = 0; V < T.length; V++)
                T[V] ? (te = te << 2 | te >>> 26,
                ne = ne << 2 | ne >>> 26) : (te = te << 1 | te >>> 27,
                ne = ne << 1 | ne >>> 27),
                te &= -15,
                ne &= -15,
                M = i[te >>> 28] | o[te >>> 24 & 15] | l[te >>> 20 & 15] | a[te >>> 16 & 15] | c[te >>> 12 & 15] | u[te >>> 8 & 15] | h[te >>> 4 & 15],
                q = m[ne >>> 28] | d[ne >>> 24 & 15] | p[ne >>> 20 & 15] | b[ne >>> 16 & 15] | g[ne >>> 12 & 15] | $[ne >>> 8 & 15] | N[ne >>> 4 & 15],
                ee = (q >>> 16 ^ M) & 65535,
                L[Y++] = M ^ ee,
                L[Y++] = q ^ ee << 16
        }
        return L
    }
    static des(n, i, o, l, a, c) {
        o && (i = unescape(encodeURIComponent(i)));
        const u = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756]
          , h = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344]
          , m = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584]
          , d = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928]
          , p = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080]
          , b = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312]
          , g = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154]
          , $ = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696]
          , N = this.createKeys(n);
        let I = 0, L, T, M, q, Q, Y, ee, ie, te = 0, ne = 0, V = 0, w = 0, x, v, S = i.length, D = 0;
        const C = N.length === 32 ? 3 : 9;
        C === 3 ? ie = o ? [0, 32, 2] : [30, -2, -2] : ie = o ? [0, 32, 2, 62, 30, -2, 64, 96, 2] : [94, 62, -2, 32, 64, 2, 30, -2, -2],
        c === 2 ? i += "        " : c === 1 ? o && (M = 8 - S % 8,
        i += String.fromCharCode(M, M, M, M, M, M, M, M),
        M === 8 && (S += 8)) : c || (i += "\0\0\0\0\0\0\0\0");
        let O = ""
          , P = "";
        for (l === 1 && (te = a.charCodeAt(I++) << 24 | a.charCodeAt(I++) << 16 | a.charCodeAt(I++) << 8 | a.charCodeAt(I++),
        V = a.charCodeAt(I++) << 24 | a.charCodeAt(I++) << 16 | a.charCodeAt(I++) << 8 | a.charCodeAt(I++),
        I = 0); I < S; ) {
            for (Y = i.charCodeAt(I++) << 24 | i.charCodeAt(I++) << 16 | i.charCodeAt(I++) << 8 | i.charCodeAt(I++),
            ee = i.charCodeAt(I++) << 24 | i.charCodeAt(I++) << 16 | i.charCodeAt(I++) << 8 | i.charCodeAt(I++),
            l === 1 && (o ? (Y ^= te,
            ee ^= V) : (ne = te,
            w = V,
            te = Y,
            V = ee)),
            M = (Y >>> 4 ^ ee) & 252645135,
            ee ^= M,
            Y ^= M << 4,
            M = (Y >>> 16 ^ ee) & 65535,
            ee ^= M,
            Y ^= M << 16,
            M = (ee >>> 2 ^ Y) & 858993459,
            Y ^= M,
            ee ^= M << 2,
            M = (ee >>> 8 ^ Y) & 16711935,
            Y ^= M,
            ee ^= M << 8,
            M = (Y >>> 1 ^ ee) & 1431655765,
            ee ^= M,
            Y ^= M << 1,
            Y = Y << 1 | Y >>> 31,
            ee = ee << 1 | ee >>> 31,
            T = 0; T < C; T += 3) {
                for (x = ie[T + 1],
                v = ie[T + 2],
                L = ie[T]; L !== x; L += v)
                    q = ee ^ N[L],
                    Q = (ee >>> 4 | ee << 28) ^ N[L + 1],
                    M = Y,
                    Y = ee,
                    ee = M ^ (h[q >>> 24 & 63] | d[q >>> 16 & 63] | b[q >>> 8 & 63] | $[q & 63] | u[Q >>> 24 & 63] | m[Q >>> 16 & 63] | p[Q >>> 8 & 63] | g[Q & 63]);
                M = Y,
                Y = ee,
                ee = M
            }
            Y = Y >>> 1 | Y << 31,
            ee = ee >>> 1 | ee << 31,
            M = (Y >>> 1 ^ ee) & 1431655765,
            ee ^= M,
            Y ^= M << 1,
            M = (ee >>> 8 ^ Y) & 16711935,
            Y ^= M,
            ee ^= M << 8,
            M = (ee >>> 2 ^ Y) & 858993459,
            Y ^= M,
            ee ^= M << 2,
            M = (Y >>> 16 ^ ee) & 65535,
            ee ^= M,
            Y ^= M << 16,
            M = (Y >>> 4 ^ ee) & 252645135,
            ee ^= M,
            Y ^= M << 4,
            l === 1 && (o ? (te = Y,
            V = ee) : (Y ^= ne,
            ee ^= w)),
            P += String.fromCharCode(Y >>> 24, Y >>> 16 & 255, Y >>> 8 & 255, Y & 255, ee >>> 24, ee >>> 16 & 255, ee >>> 8 & 255, ee & 255),
            D += 8,
            D === 512 && (O += P,
            P = "",
            D = 0)
        }
        if (O += P,
        O = O.replace(/\0*$/g, ""),
        !o) {
            if (c === 1) {
                const y = O.length;
                let A = 0;
                y && (A = O.charCodeAt(y - 1)),
                A <= 8 && (O = O.substring(0, y - A))
            }
            O = decodeURIComponent(escape(O))
        }
        return O
    }
}
class DES {
    static generateKey(n, i, o) {
        return {
            key: n.slice(i, o).padEnd(24, "0"),
            vector: 1
        }
    }
    static encrypt(n) {
        if (!n)
            return n;
        const i = this.generateKey(this.PADDING, 0, 24);
        return window.btoa(DESHelper.des(i.key, n, 1, 1, this.IV, 1))
    }
    static decrypt(n) {
        if (!n)
            return n;
        const i = this.generateKey(this.PADDING, 0, 24);
        return DESHelper.des(i.key, window.atob(n), 0, 1, this.IV, 1)
    }
}
ye(DES, "PADDING", "PKCS5Padding"),
ye(DES, "IV", "26951234");
const DEFAULT_INFO = {
    token: "",
    username: "",
    role: void 0
}
  , or = class or {
    static setOrigin(n) {
        this.origin = n
    }
    static getOrigin() {
        return this.origin
    }
    static setDeviceToken(n) {
        this.deviceToken = n,
        localStorage.setItem(CLOUD_KEY.DEVICE_TOKEN, DES.encrypt(n))
    }
    static getDeviceToken() {
        return this.deviceToken
    }
    static setUserInfo(n) {
        assign(this.info, n),
        localStorage.setItem(CLOUD_KEY.INFO, DES.encrypt(JSON.stringify(n)))
    }
    static getUserInfo() {
        return this.info
    }
    static setUpdateCode(n) {
        this.updateCodeToken = n
    }
    static getUpdateCode() {
        return this.updateCodeToken
    }
    static isLogined() {
        return !!this.info.token && this.info.role !== void 0
    }
    static reset() {
        this.deviceToken = "",
        this.info = cloneDeep(DEFAULT_INFO),
        localStorage.removeItem(CLOUD_KEY.DEVICE_TOKEN),
        localStorage.removeItem(CLOUD_KEY.INFO)
    }
}
;
ye(or, "tokenEncrypted", localStorage.getItem(CLOUD_KEY.DEVICE_TOKEN) || ""),
ye(or, "infoEncrypted", localStorage.getItem(CLOUD_KEY.INFO) || ""),
ye(or, "updateCodeToken", !1),
ye(or, "origin", ""),
ye(or, "deviceToken", DES.decrypt(or.tokenEncrypted)),
ye(or, "info", JSON.parse(DES.decrypt(or.infoEncrypted) || "{}") || cloneDeep(DEFAULT_INFO));
let CloudInfo = or;
class Auth {
    static reset() {
        Token.clear(),
        CloudInfo.reset(),
        CloudInfo.setOrigin(""),
        EncryptManager.reset()
    }
}
const __variableDynamicImportRuntimeHelper = (e, n, i) => {
    const o = e[n];
    return o ? typeof o == "function" ? o() : Promise.resolve(o) : new Promise( (l, a) => {
        (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(a.bind(null, new Error("Unknown variable dynamic import: " + n + (n.split("/").length !== i ? ". Note that variables only represent file names one level deep." : ""))))
    }
    )
}
  , resource$1 = {
    common: {
        add: e => {
            const {normalize: n} = e;
            return n(["Add"])
        }
        ,
        addCapital: e => {
            const {normalize: n} = e;
            return n(["ADD"])
        }
        ,
        addDevice: e => {
            const {normalize: n} = e;
            return n(["Add Device"])
        }
        ,
        addDevices: e => {
            const {normalize: n} = e;
            return n(["Add Devices"])
        }
        ,
        address: e => {
            const {normalize: n} = e;
            return n(["Address"])
        }
        ,
        all: e => {
            const {normalize: n} = e;
            return n(["All"])
        }
        ,
        allowUpper: e => {
            const {normalize: n} = e;
            return n(["ALLOW"])
        }
        ,
        authorize: e => {
            const {normalize: n} = e;
            return n(["AUTHORIZE"])
        }
        ,
        auto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        backUpper: e => {
            const {normalize: n} = e;
            return n(["BACK"])
        }
        ,
        backupUpper: e => {
            const {normalize: n} = e;
            return n(["BACK UP"])
        }
        ,
        basic: e => {
            const {normalize: n} = e;
            return n(["Basic"])
        }
        ,
        block: e => {
            const {normalize: n} = e;
            return n(["Block"])
        }
        ,
        blocked: e => {
            const {normalize: n} = e;
            return n(["Blocked"])
        }
        ,
        blockUpper: e => {
            const {normalize: n} = e;
            return n(["BLOCK"])
        }
        ,
        bytes: e => {
            const {normalize: n} = e;
            return n(["Bytes"])
        }
        ,
        cancel: e => {
            const {normalize: n} = e;
            return n(["CANCEL"])
        }
        ,
        change: e => {
            const {normalize: n} = e;
            return n(["CHANGE"])
        }
        ,
        connect: e => {
            const {normalize: n} = e;
            return n(["CONNECT"])
        }
        ,
        continueUpper: e => {
            const {normalize: n} = e;
            return n(["CONTINUE"])
        }
        ,
        current: e => {
            const {normalize: n} = e;
            return n(["Current"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        delete: e => {
            const {normalize: n} = e;
            return n(["Delete"])
        }
        ,
        deleteCapital: e => {
            const {normalize: n} = e;
            return n(["DELETE"])
        }
        ,
        deleteConfirmTip: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to delete it?"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Description"])
        }
        ,
        deselectAll: e => {
            const {normalize: n} = e;
            return n(["Deselect All"])
        }
        ,
        deviceInfo: e => {
            const {normalize: n} = e;
            return n(["Device Info"])
        }
        ,
        deviceName: e => {
            const {normalize: n} = e;
            return n(["Device Name"])
        }
        ,
        deviceType: e => {
            const {normalize: n} = e;
            return n(["Device Type"])
        }
        ,
        disable: e => {
            const {normalize: n} = e;
            return n(["Disable"])
        }
        ,
        disabled: e => {
            const {normalize: n} = e;
            return n(["Disabled"])
        }
        ,
        disconnect: e => {
            const {normalize: n} = e;
            return n(["DISCONNECT"])
        }
        ,
        doneUpper: e => {
            const {normalize: n} = e;
            return n(["DONE"])
        }
        ,
        edit: e => {
            const {normalize: n} = e;
            return n(["Edit"])
        }
        ,
        enable: e => {
            const {normalize: n} = e;
            return n(["Enable"])
        }
        ,
        enabled: e => {
            const {normalize: n} = e;
            return n(["Enabled"])
        }
        ,
        failed: e => {
            const {normalize: n} = e;
            return n(["Failed"])
        }
        ,
        family: e => {
            const {normalize: n} = e;
            return n(["Family"])
        }
        ,
        feedback: e => {
            const {normalize: n} = e;
            return n(["Feedback"])
        }
        ,
        file: e => {
            const {normalize: n} = e;
            return n(["File"])
        }
        ,
        from: e => {
            const {normalize: n} = e;
            return n(["From"])
        }
        ,
        to: e => {
            const {normalize: n} = e;
            return n(["To"])
        }
        ,
        toLower: e => {
            const {normalize: n} = e;
            return n(["to"])
        }
        ,
        turnOff: e => {
            const {normalize: n} = e;
            return n(["TURN OFF"])
        }
        ,
        mailFrom: e => {
            const {normalize: n} = e;
            return n(["From"])
        }
        ,
        mailTo: e => {
            const {normalize: n} = e;
            return n(["To"])
        }
        ,
        here: e => {
            const {normalize: n} = e;
            return n(["Here"])
        }
        ,
        high: e => {
            const {normalize: n} = e;
            return n(["High"])
        }
        ,
        interface: e => {
            const {normalize: n} = e;
            return n(["Interface"])
        }
        ,
        iot2g: e => {
            const {normalize: n} = e;
            return n(["IoT_2.4G"])
        }
        ,
        iot5g: e => {
            const {normalize: n} = e;
            return n(["IoT_5G"])
        }
        ,
        iot5g1: e => {
            const {normalize: n} = e;
            return n(["IoT_5G-1"])
        }
        ,
        iot5g2: e => {
            const {normalize: n} = e;
            return n(["IoT_5G-2"])
        }
        ,
        ip: e => {
            const {normalize: n} = e;
            return n(["IP"])
        }
        ,
        ipAddress: e => {
            const {normalize: n} = e;
            return n(["IP Address"])
        }
        ,
        learnMore: e => {
            const {normalize: n} = e;
            return n(["Learn More"])
        }
        ,
        leaveUpper: e => {
            const {normalize: n} = e;
            return n(["LEAVE"])
        }
        ,
        loading: e => {
            const {normalize: n} = e;
            return n(["Loading..."])
        }
        ,
        low: e => {
            const {normalize: n} = e;
            return n(["Low"])
        }
        ,
        mac: e => {
            const {normalize: n} = e;
            return n(["MAC"])
        }
        ,
        macAddress: e => {
            const {normalize: n} = e;
            return n(["MAC Address"])
        }
        ,
        manageUpper: e => {
            const {normalize: n} = e;
            return n(["MANAGE"])
        }
        ,
        maxRulesTips: e => {
            const {normalize: n} = e;
            return n(["Maximum entries exceeded."])
        }
        ,
        middle: e => {
            const {normalize: n} = e;
            return n(["Middle"])
        }
        ,
        mlo: e => {
            const {normalize: n} = e;
            return n(["MLO"])
        }
        ,
        modify: e => {
            const {normalize: n} = e;
            return n(["Modify"])
        }
        ,
        mode: e => {
            const {normalize: n} = e;
            return n(["Mode"])
        }
        ,
        name: e => {
            const {normalize: n} = e;
            return n(["Name"])
        }
        ,
        nextDay: e => {
            const {normalize: n} = e;
            return n(["(next day)"])
        }
        ,
        nextUpper: e => {
            const {normalize: n} = e;
            return n(["NEXT"])
        }
        ,
        note: e => {
            const {normalize: n} = e;
            return n(["Note:"])
        }
        ,
        none: e => {
            const {normalize: n} = e;
            return n(["None"])
        }
        ,
        offline: e => {
            const {normalize: n} = e;
            return n(["Offline"])
        }
        ,
        off: e => {
            const {normalize: n} = e;
            return n(["Off"])
        }
        ,
        ok: e => {
            const {normalize: n} = e;
            return n(["OK"])
        }
        ,
        on: e => {
            const {normalize: n} = e;
            return n(["On"])
        }
        ,
        operationSucceed: e => {
            const {normalize: n} = e;
            return n(["Operation succeeded."])
        }
        ,
        operationFailed: e => {
            const {normalize: n} = e;
            return n(["Operation failed."])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        ping: e => {
            const {normalize: n} = e;
            return n(["Ping"])
        }
        ,
        pleaseSelect: e => {
            const {normalize: n} = e;
            return n(["- Please Select -"])
        }
        ,
        port: e => {
            const {normalize: n} = e;
            return n(["Port"])
        }
        ,
        protocol: e => {
            const {normalize: n} = e;
            return n(["Protocol"])
        }
        ,
        rebooting: e => {
            const {normalize: n} = e;
            return n(["Rebooting..."])
        }
        ,
        refresh: e => {
            const {normalize: n} = e;
            return n(["Refresh"])
        }
        ,
        release: e => {
            const {normalize: n} = e;
            return n(["RELEASE"])
        }
        ,
        removeUpper: e => {
            const {normalize: n} = e;
            return n(["REMOVE"])
        }
        ,
        renew: e => {
            const {normalize: n} = e;
            return n(["RENEW"])
        }
        ,
        restoreUpper: e => {
            const {normalize: n} = e;
            return n(["RESTORE"])
        }
        ,
        results: e => {
            const {normalize: n} = e;
            return n(["Results"])
        }
        ,
        retry: e => {
            const {normalize: n} = e;
            return n(["RETRY"])
        }
        ,
        revert: e => {
            const {normalize: n} = e;
            return n(["Revert"])
        }
        ,
        safe: e => {
            const {normalize: n} = e;
            return n(["Safe"])
        }
        ,
        saveUpper: e => {
            const {normalize: n} = e;
            return n(["SAVE"])
        }
        ,
        search: e => {
            const {normalize: n} = e;
            return n(["Search"])
        }
        ,
        searchUpper: e => {
            const {normalize: n} = e;
            return n(["SEARCH"])
        }
        ,
        searching: e => {
            const {normalize: n} = e;
            return n(["Searching"])
        }
        ,
        select: e => {
            const {normalize: n} = e;
            return n(["SELECT"])
        }
        ,
        selectAll: e => {
            const {normalize: n} = e;
            return n(["Select All"])
        }
        ,
        selectDevices: e => {
            const {normalize: n} = e;
            return n(["Select from Connected Devices"])
        }
        ,
        showAll: e => {
            const {normalize: n} = e;
            return n(["Show All"])
        }
        ,
        showMore: e => {
            const {normalize: n} = e;
            return n(["Show More"])
        }
        ,
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        success: e => {
            const {normalize: n} = e;
            return n(["Success"])
        }
        ,
        support: e => {
            const {normalize: n} = e;
            return n(["Support"])
        }
        ,
        supportCenter: e => {
            const {normalize: n} = e;
            return n(["Support Center"])
        }
        ,
        supportUpper: e => {
            const {normalize: n} = e;
            return n(["SUPPORT"])
        }
        ,
        tcp: e => {
            const {normalize: n} = e;
            return n(["TCP"])
        }
        ,
        turnOn: e => {
            const {normalize: n} = e;
            return n(["TURN ON"])
        }
        ,
        type: e => {
            const {normalize: n} = e;
            return n(["Type"])
        }
        ,
        udp: e => {
            const {normalize: n} = e;
            return n(["UDP"])
        }
        ,
        unblock: e => {
            const {normalize: n} = e;
            return n(["Unblock"])
        }
        ,
        unblocked: e => {
            const {normalize: n} = e;
            return n(["Unblocked"])
        }
        ,
        update: e => {
            const {normalize: n} = e;
            return n(["Update"])
        }
        ,
        user: e => {
            const {normalize: n} = e;
            return n(["User"])
        }
        ,
        userName: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        viewDevice: e => {
            const {normalize: n} = e;
            return n(["VIEW CONNECTED DEVICES"])
        }
        ,
        waiting: e => {
            const {normalize: n} = e;
            return n(["Waiting"])
        }
        ,
        waitProgressNote: e => {
            const {normalize: n} = e;
            return n(["This may take a few minutes. Please wait."])
        }
        ,
        wired: e => {
            const {normalize: n} = e;
            return n(["Wired"])
        }
        ,
        "2g": e => {
            const {normalize: n} = e;
            return n(["2.4G"])
        }
        ,
        "5g": e => {
            const {normalize: n} = e;
            return n(["5G"])
        }
        ,
        "5g_1": e => {
            const {normalize: n} = e;
            return n(["5G-1"])
        }
        ,
        "5g_2": e => {
            const {normalize: n} = e;
            return n(["5G-2"])
        }
        ,
        "6g": e => {
            const {normalize: n} = e;
            return n(["6G"])
        }
        ,
        ms: e => {
            const {normalize: n} = e;
            return n(["ms"])
        }
        ,
        currentMode: e => {
            const {normalize: n} = e;
            return n(["Current Mode"])
        }
        ,
        changeMode: e => {
            const {normalize: n} = e;
            return n(["Change Mode"])
        }
        ,
        isp: e => {
            const {normalize: n} = e;
            return n(["ISP"])
        }
        ,
        time: e => {
            const {normalize: n} = e;
            return n(["Time"])
        }
        ,
        times: e => {
            const {normalize: n} = e;
            return n(["times"])
        }
        ,
        ethernet: e => {
            const {normalize: n} = e;
            return n(["Ethernet"])
        }
        ,
        iptv: e => {
            const {normalize: n} = e;
            return n(["IPTV"])
        }
        ,
        autoInternetPort: e => {
            const {normalize: n} = e;
            return n(["Auto Internet Port"])
        }
        ,
        linkAgg: e => {
            const {normalize: n} = e;
            return n(["Link Aggregation"])
        }
        ,
        disabledFeatureNoteTwo: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("featureA")), " and ", i(o("featureB")), " cannot be enabled at the same time. Disable ", i(o("featureBLink")), " before using this function."])
        }
        ,
        disabledFeatureNoteThree: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("featureA")), " and ", i(o("featureB")), " are currently enabled. To turn on ", i(o("featureC")), ", please disable ", i(o("featureALink")), " and ", i(o("featureBLink")), "."])
        }
        ,
        without: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Without ", i(o("feature"))])
        }
    },
    operation: {
        backTop: e => {
            const {normalize: n} = e;
            return n(["BACK TO TOP"])
        }
        ,
        bind: e => {
            const {normalize: n} = e;
            return n(["Bind"])
        }
        ,
        bindUpper: e => {
            const {normalize: n} = e;
            return n(["BIND"])
        }
        ,
        change: e => {
            const {normalize: n} = e;
            return n(["CHANGE"])
        }
        ,
        continue: e => {
            const {normalize: n} = e;
            return n(["CONTINUE"])
        }
        ,
        disable: e => {
            const {normalize: n} = e;
            return n(["DISABLE"])
        }
        ,
        disableAlways: e => {
            const {normalize: n} = e;
            return n(["DISABLE ANYWAY"])
        }
        ,
        enable: e => {
            const {normalize: n} = e;
            return n(["ENABLE"])
        }
        ,
        finish: e => {
            const {normalize: n} = e;
            return n(["FINISH"])
        }
        ,
        reboot: e => {
            const {normalize: n} = e;
            return n(["REBOOT"])
        }
        ,
        refreshUpper: e => {
            const {normalize: n} = e;
            return n(["REFRESH"])
        }
        ,
        skip: e => {
            const {normalize: n} = e;
            return n(["SKIP"])
        }
        ,
        start: e => {
            const {normalize: n} = e;
            return n(["START"])
        }
        ,
        stop: e => {
            const {normalize: n} = e;
            return n(["STOP"])
        }
        ,
        clear: e => {
            const {normalize: n} = e;
            return n(["CLEAR"])
        }
        ,
        noMatches: e => {
            const {normalize: n} = e;
            return n(["No matches"])
        }
        ,
        reconfigureUpper: e => {
            const {normalize: n} = e;
            return n(["RECONFIGURATION"])
        }
        ,
        result: e => {
            const {normalize: n} = e;
            return n(["Result"])
        }
        ,
        agree: e => {
            const {normalize: n} = e;
            return n(["AGREE"])
        }
        ,
        reselect: e => {
            const {normalize: n} = e;
            return n(["RESELECT"])
        }
    },
    region: {
        region: e => {
            const {normalize: n} = e;
            return n(["Region"])
        }
        ,
        albania: e => {
            const {normalize: n} = e;
            return n(["Albania"])
        }
        ,
        algeria: e => {
            const {normalize: n} = e;
            return n(["Algeria"])
        }
        ,
        american_samoa: e => {
            const {normalize: n} = e;
            return n(["American Samoa"])
        }
        ,
        argentina: e => {
            const {normalize: n} = e;
            return n(["Argentina"])
        }
        ,
        armenia: e => {
            const {normalize: n} = e;
            return n(["Armenia"])
        }
        ,
        aruba: e => {
            const {normalize: n} = e;
            return n(["Aruba"])
        }
        ,
        australia: e => {
            const {normalize: n} = e;
            return n(["Australia"])
        }
        ,
        austria: e => {
            const {normalize: n} = e;
            return n(["Austria"])
        }
        ,
        azerbaijan: e => {
            const {normalize: n} = e;
            return n(["Azerbaijan"])
        }
        ,
        bahamas: e => {
            const {normalize: n} = e;
            return n(["Bahamas"])
        }
        ,
        bahrain: e => {
            const {normalize: n} = e;
            return n(["Bahrain"])
        }
        ,
        bangladesh: e => {
            const {normalize: n} = e;
            return n(["Bangladesh"])
        }
        ,
        barbados: e => {
            const {normalize: n} = e;
            return n(["Barbados"])
        }
        ,
        belarus: e => {
            const {normalize: n} = e;
            return n(["Belarus"])
        }
        ,
        belgium: e => {
            const {normalize: n} = e;
            return n(["Belgium"])
        }
        ,
        belize: e => {
            const {normalize: n} = e;
            return n(["Belize"])
        }
        ,
        berumuda: e => {
            const {normalize: n} = e;
            return n(["Bermuda"])
        }
        ,
        bolivia: e => {
            const {normalize: n} = e;
            return n(["Bolivia"])
        }
        ,
        bosnia_herzegowina: e => {
            const {normalize: n} = e;
            return n(["Bosnia and Herzegovina"])
        }
        ,
        brazil: e => {
            const {normalize: n} = e;
            return n(["Brazil"])
        }
        ,
        brunei_darussalam: e => {
            const {normalize: n} = e;
            return n(["Brunei Darussalam"])
        }
        ,
        bulgaria: e => {
            const {normalize: n} = e;
            return n(["Bulgaria"])
        }
        ,
        cambodia: e => {
            const {normalize: n} = e;
            return n(["Cambodia"])
        }
        ,
        canada: e => {
            const {normalize: n} = e;
            return n(["Canada"])
        }
        ,
        cayman_islands: e => {
            const {normalize: n} = e;
            return n(["Cayman Islands"])
        }
        ,
        chile: e => {
            const {normalize: n} = e;
            return n(["Chile"])
        }
        ,
        china: e => {
            const {normalize: n} = e;
            return n(["China"])
        }
        ,
        colombia: e => {
            const {normalize: n} = e;
            return n(["Colombia"])
        }
        ,
        costa_rica: e => {
            const {normalize: n} = e;
            return n(["Costa Rica"])
        }
        ,
        croatia: e => {
            const {normalize: n} = e;
            return n(["Croatia"])
        }
        ,
        cyprus: e => {
            const {normalize: n} = e;
            return n(["Cyprus"])
        }
        ,
        czech_republic: e => {
            const {normalize: n} = e;
            return n(["Czech Republic"])
        }
        ,
        denmark: e => {
            const {normalize: n} = e;
            return n(["Denmark"])
        }
        ,
        dominican_republic: e => {
            const {normalize: n} = e;
            return n(["Dominican Republic"])
        }
        ,
        ecuador: e => {
            const {normalize: n} = e;
            return n(["Ecuador"])
        }
        ,
        egypt: e => {
            const {normalize: n} = e;
            return n(["Egypt"])
        }
        ,
        el_salvador: e => {
            const {normalize: n} = e;
            return n(["El Salvador"])
        }
        ,
        estonia: e => {
            const {normalize: n} = e;
            return n(["Estonia"])
        }
        ,
        ethiopia: e => {
            const {normalize: n} = e;
            return n(["Ethiopia"])
        }
        ,
        faeroe_islands: e => {
            const {normalize: n} = e;
            return n(["Faroe Islands"])
        }
        ,
        finland: e => {
            const {normalize: n} = e;
            return n(["Finland"])
        }
        ,
        france: e => {
            const {normalize: n} = e;
            return n(["France"])
        }
        ,
        french_guiana: e => {
            const {normalize: n} = e;
            return n(["French Guiana"])
        }
        ,
        french_polynesia: e => {
            const {normalize: n} = e;
            return n(["French Polynesia"])
        }
        ,
        georgia: e => {
            const {normalize: n} = e;
            return n(["Georgia"])
        }
        ,
        germany: e => {
            const {normalize: n} = e;
            return n(["Germany"])
        }
        ,
        greece: e => {
            const {normalize: n} = e;
            return n(["Greece"])
        }
        ,
        greenland: e => {
            const {normalize: n} = e;
            return n(["Greenland"])
        }
        ,
        grenada: e => {
            const {normalize: n} = e;
            return n(["Grenada"])
        }
        ,
        guadeloupe: e => {
            const {normalize: n} = e;
            return n(["Guadeloupe"])
        }
        ,
        guam: e => {
            const {normalize: n} = e;
            return n(["Guam"])
        }
        ,
        guatemala: e => {
            const {normalize: n} = e;
            return n(["Guatemala"])
        }
        ,
        haiti: e => {
            const {normalize: n} = e;
            return n(["Haiti"])
        }
        ,
        honduras: e => {
            const {normalize: n} = e;
            return n(["Honduras"])
        }
        ,
        hong_kong: e => {
            const {normalize: n} = e;
            return n(["Hong Kong"])
        }
        ,
        hungary: e => {
            const {normalize: n} = e;
            return n(["Hungary"])
        }
        ,
        iceland: e => {
            const {normalize: n} = e;
            return n(["Iceland"])
        }
        ,
        india: e => {
            const {normalize: n} = e;
            return n(["India"])
        }
        ,
        indonesia: e => {
            const {normalize: n} = e;
            return n(["Indonesia"])
        }
        ,
        iran: e => {
            const {normalize: n} = e;
            return n(["Iran"])
        }
        ,
        iraq: e => {
            const {normalize: n} = e;
            return n(["Iraq"])
        }
        ,
        ireland: e => {
            const {normalize: n} = e;
            return n(["Ireland"])
        }
        ,
        israel: e => {
            const {normalize: n} = e;
            return n(["Israel"])
        }
        ,
        italy: e => {
            const {normalize: n} = e;
            return n(["Italy"])
        }
        ,
        jamaica: e => {
            const {normalize: n} = e;
            return n(["Jamaica"])
        }
        ,
        japan: e => {
            const {normalize: n} = e;
            return n(["Japan"])
        }
        ,
        japan_1: e => {
            const {normalize: n} = e;
            return n(["Japan 1"])
        }
        ,
        japan_2: e => {
            const {normalize: n} = e;
            return n(["Japan 2"])
        }
        ,
        japan_3: e => {
            const {normalize: n} = e;
            return n(["Japan 3"])
        }
        ,
        japan_4: e => {
            const {normalize: n} = e;
            return n(["Japan 4"])
        }
        ,
        japan_5: e => {
            const {normalize: n} = e;
            return n(["Japan 5"])
        }
        ,
        japan_6: e => {
            const {normalize: n} = e;
            return n(["Japan 6"])
        }
        ,
        jordan: e => {
            const {normalize: n} = e;
            return n(["Jordan"])
        }
        ,
        kazakhstan: e => {
            const {normalize: n} = e;
            return n(["Kazakhstan"])
        }
        ,
        kenya: e => {
            const {normalize: n} = e;
            return n(["Kenya"])
        }
        ,
        north_korea: e => {
            const {normalize: n} = e;
            return n(["North Korea"])
        }
        ,
        korea_republic: e => {
            const {normalize: n} = e;
            return n(["Korea Republic"])
        }
        ,
        korea_republic_3: e => {
            const {normalize: n} = e;
            return n(["Korea Republic 3"])
        }
        ,
        kuwait: e => {
            const {normalize: n} = e;
            return n(["Kuwait"])
        }
        ,
        latvia: e => {
            const {normalize: n} = e;
            return n(["Latvia"])
        }
        ,
        lebanon: e => {
            const {normalize: n} = e;
            return n(["Lebanon"])
        }
        ,
        libya: e => {
            const {normalize: n} = e;
            return n(["Libya"])
        }
        ,
        liechtenstein: e => {
            const {normalize: n} = e;
            return n(["Liechtenstein"])
        }
        ,
        lithuania: e => {
            const {normalize: n} = e;
            return n(["Lithuania"])
        }
        ,
        luxembourg: e => {
            const {normalize: n} = e;
            return n(["Luxembourg"])
        }
        ,
        macau: e => {
            const {normalize: n} = e;
            return n(["Macau"])
        }
        ,
        macedonia: e => {
            const {normalize: n} = e;
            return n(["Macedonia"])
        }
        ,
        malawi: e => {
            const {normalize: n} = e;
            return n(["Malawi"])
        }
        ,
        malaysia: e => {
            const {normalize: n} = e;
            return n(["Malaysia"])
        }
        ,
        maldives: e => {
            const {normalize: n} = e;
            return n(["Maldives"])
        }
        ,
        malta: e => {
            const {normalize: n} = e;
            return n(["Malta"])
        }
        ,
        marthinique: e => {
            const {normalize: n} = e;
            return n(["Martinique"])
        }
        ,
        mauritius: e => {
            const {normalize: n} = e;
            return n(["Mauritius"])
        }
        ,
        mayotte: e => {
            const {normalize: n} = e;
            return n(["Mayotte"])
        }
        ,
        mexico: e => {
            const {normalize: n} = e;
            return n(["Mexico"])
        }
        ,
        monaco: e => {
            const {normalize: n} = e;
            return n(["Monaco"])
        }
        ,
        mongolia: e => {
            const {normalize: n} = e;
            return n(["Mongolia"])
        }
        ,
        morocco: e => {
            const {normalize: n} = e;
            return n(["Morocco"])
        }
        ,
        nepal: e => {
            const {normalize: n} = e;
            return n(["Nepal"])
        }
        ,
        netherlands: e => {
            const {normalize: n} = e;
            return n(["Netherlands"])
        }
        ,
        netherlands_antilles: e => {
            const {normalize: n} = e;
            return n(["Netherlands Antilles"])
        }
        ,
        new_zealand: e => {
            const {normalize: n} = e;
            return n(["New Zealand"])
        }
        ,
        nicaragua: e => {
            const {normalize: n} = e;
            return n(["Nicaragua"])
        }
        ,
        nigeria: e => {
            const {normalize: n} = e;
            return n(["Nigeria"])
        }
        ,
        norway: e => {
            const {normalize: n} = e;
            return n(["Norway"])
        }
        ,
        northern_mariana_islands: e => {
            const {normalize: n} = e;
            return n(["Northern Mariana Islands"])
        }
        ,
        oman: e => {
            const {normalize: n} = e;
            return n(["Oman"])
        }
        ,
        pakistan: e => {
            const {normalize: n} = e;
            return n(["Pakistan"])
        }
        ,
        panama: e => {
            const {normalize: n} = e;
            return n(["Panama"])
        }
        ,
        papua_new_guinea: e => {
            const {normalize: n} = e;
            return n(["Papua New Guinea"])
        }
        ,
        paraguay: e => {
            const {normalize: n} = e;
            return n(["Paraguay"])
        }
        ,
        peru: e => {
            const {normalize: n} = e;
            return n(["Peru"])
        }
        ,
        philippines: e => {
            const {normalize: n} = e;
            return n(["Philippines"])
        }
        ,
        poland: e => {
            const {normalize: n} = e;
            return n(["Poland"])
        }
        ,
        portugal: e => {
            const {normalize: n} = e;
            return n(["Portugal"])
        }
        ,
        puerto_rico: e => {
            const {normalize: n} = e;
            return n(["Puerto Rico"])
        }
        ,
        qatar: e => {
            const {normalize: n} = e;
            return n(["Qatar"])
        }
        ,
        reunion: e => {
            const {normalize: n} = e;
            return n(["Reunion"])
        }
        ,
        romania: e => {
            const {normalize: n} = e;
            return n(["Romania"])
        }
        ,
        russia: e => {
            const {normalize: n} = e;
            return n(["Russia"])
        }
        ,
        rwanda: e => {
            const {normalize: n} = e;
            return n(["Rwanda"])
        }
        ,
        samoa: e => {
            const {normalize: n} = e;
            return n(["Samoa"])
        }
        ,
        saudi_arabia: e => {
            const {normalize: n} = e;
            return n(["Saudi Arabia"])
        }
        ,
        singapore: e => {
            const {normalize: n} = e;
            return n(["Singapore"])
        }
        ,
        slovak_republic: e => {
            const {normalize: n} = e;
            return n(["Slovak Republic"])
        }
        ,
        slovenia: e => {
            const {normalize: n} = e;
            return n(["Slovenia"])
        }
        ,
        south_africa: e => {
            const {normalize: n} = e;
            return n(["South Africa"])
        }
        ,
        spain: e => {
            const {normalize: n} = e;
            return n(["Spain"])
        }
        ,
        sri_lanka: e => {
            const {normalize: n} = e;
            return n(["Sri Lanka"])
        }
        ,
        suriname: e => {
            const {normalize: n} = e;
            return n(["Suriname"])
        }
        ,
        sweden: e => {
            const {normalize: n} = e;
            return n(["Sweden"])
        }
        ,
        switzerland: e => {
            const {normalize: n} = e;
            return n(["Switzerland"])
        }
        ,
        syria: e => {
            const {normalize: n} = e;
            return n(["Syria"])
        }
        ,
        taiwan: e => {
            const {normalize: n} = e;
            return n(["Taiwan"])
        }
        ,
        tanzania: e => {
            const {normalize: n} = e;
            return n(["Tanzania"])
        }
        ,
        thailand: e => {
            const {normalize: n} = e;
            return n(["Thailand"])
        }
        ,
        trinidad_tobago: e => {
            const {normalize: n} = e;
            return n(["Trinidad & Tobago"])
        }
        ,
        tunisia: e => {
            const {normalize: n} = e;
            return n(["Tunisia"])
        }
        ,
        turkey: e => {
            const {normalize: n} = e;
            return n(["Turkey"])
        }
        ,
        uganda: e => {
            const {normalize: n} = e;
            return n(["Uganda"])
        }
        ,
        ukraine: e => {
            const {normalize: n} = e;
            return n(["Ukraine"])
        }
        ,
        united_arab_emirates: e => {
            const {normalize: n} = e;
            return n(["United Arab Emirates"])
        }
        ,
        united_kingdom: e => {
            const {normalize: n} = e;
            return n(["United Kingdom"])
        }
        ,
        united_states: e => {
            const {normalize: n} = e;
            return n(["United States"])
        }
        ,
        uruguay: e => {
            const {normalize: n} = e;
            return n(["Uruguay"])
        }
        ,
        uzbekistan: e => {
            const {normalize: n} = e;
            return n(["Uzbekistan"])
        }
        ,
        venezuela: e => {
            const {normalize: n} = e;
            return n(["Venezuela"])
        }
        ,
        vietnam: e => {
            const {normalize: n} = e;
            return n(["Viet Nam"])
        }
        ,
        virgin_islands: e => {
            const {normalize: n} = e;
            return n(["Virgin Islands (U.S.)"])
        }
        ,
        yemen: e => {
            const {normalize: n} = e;
            return n(["Yemen"])
        }
        ,
        zimbabwe: e => {
            const {normalize: n} = e;
            return n(["Zimbabwe"])
        }
    },
    protocol: {
        dns: e => {
            const {normalize: n} = e;
            return n(["DNS"])
        }
        ,
        ftp: e => {
            const {normalize: n} = e;
            return n(["FTP"])
        }
        ,
        gopher: e => {
            const {normalize: n} = e;
            return n(["GOPHER"])
        }
        ,
        http: e => {
            const {normalize: n} = e;
            return n(["HTTP"])
        }
        ,
        nntp: e => {
            const {normalize: n} = e;
            return n(["NNTP"])
        }
        ,
        pop3: e => {
            const {normalize: n} = e;
            return n(["POP3"])
        }
        ,
        pptp: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        smtp: e => {
            const {normalize: n} = e;
            return n(["SMTP"])
        }
        ,
        sock: e => {
            const {normalize: n} = e;
            return n(["SOCK"])
        }
        ,
        telnet: e => {
            const {normalize: n} = e;
            return n(["TELNET"])
        }
    },
    selectOption: {
        open: e => {
            const {normalize: n} = e;
            return n(["Open"])
        }
        ,
        encrypted: e => {
            const {normalize: n} = e;
            return n(["Encrypted"])
        }
        ,
        wpa_wpa2_personal: e => {
            const {normalize: n} = e;
            return n(["WPA/WPA2-Personal"])
        }
        ,
        wpa2_wpa3_personal: e => {
            const {normalize: n} = e;
            return n(["WPA2/WPA3-Personal"])
        }
        ,
        portal: e => {
            const {normalize: n} = e;
            return n(["Portal"])
        }
        ,
        no_authentication: e => {
            const {normalize: n} = e;
            return n(["No Authentication"])
        }
        ,
        simple_password: e => {
            const {normalize: n} = e;
            return n(["Simple Password"])
        }
        ,
        always: e => {
            const {normalize: n} = e;
            return n(["Always"])
        }
    },
    login: {
        logOut: e => {
            const {normalize: n} = e;
            return n(["Log Out"])
        }
        ,
        logOutUpper: e => {
            const {normalize: n} = e;
            return n(["LOG OUT"])
        }
        ,
        logOutConfirm: e => {
            const {normalize: n} = e;
            return n(["Do you want to log out?"])
        }
        ,
        initLogin: e => {
            const {normalize: n} = e;
            return n(["Create an administrator password"])
        }
        ,
        initLoginNote: e => {
            const {normalize: n} = e;
            return n(["For security purposes, create a local password for login before starting the quick setup."])
        }
        ,
        localLogin: e => {
            const {normalize: n} = e;
            return n(["Log In with Local Password"])
        }
        ,
        localPassword: e => {
            const {normalize: n} = e;
            return n(["Local Password"])
        }
        ,
        loginButtonText: e => {
            const {normalize: n} = e;
            return n(["LOG IN"])
        }
        ,
        forgetPassword: e => {
            const {normalize: n} = e;
            return n(["Forgot Password?"])
        }
        ,
        tpLinkId: e => {
            const {normalize: n} = e;
            return n(["TP-Link ID"])
        }
        ,
        localSwitchToTpNoInternetTips: e => {
            const {normalize: n} = e;
            return n(["No internet connection. Please log in with local password."])
        }
        ,
        newPassword: e => {
            const {normalize: n} = e;
            return n(["New Password"])
        }
        ,
        confirmPassword: e => {
            const {normalize: n} = e;
            return n(["Confirm Password"])
        }
        ,
        letsGetStarted: e => {
            const {normalize: n} = e;
            return n(["Let's Get Started"])
        }
        ,
        localPwdInfo: e => {
            const {normalize: n} = e;
            return n(["Enabling the Default Password Recovery function allows the system to send a verification code to your alternative email address to reset the password."])
        }
        ,
        localPwdNote: e => {
            const {normalize: n} = e;
            return n(["You can also press and hold the Reset button for 10 seconds to reset the router's password."])
        }
        ,
        restoreNote: e => {
            const {normalize: n} = e;
            return n(["Press and hold the Reset button for 10 seconds to restore the router to its factory defaults."])
        }
        ,
        send: e => {
            const {normalize: n} = e;
            return n(["SEND CODE"])
        }
        ,
        verificationCode: e => {
            const {normalize: n} = e;
            return n(["VERIFICATION CODE"])
        }
        ,
        confirm: e => {
            const {normalize: n} = e;
            return n(["CONFIRM"])
        }
        ,
        forgetPwdSendFailed: e => {
            const {normalize: n} = e;
            return n(['Failed to send the code. Please check your Internet connection and verify the password recovery parameters in "System Tools -> Administration".'])
        }
        ,
        resetPwd: e => {
            const {normalize: n} = e;
            return n(["Reset Password"])
        }
        ,
        resetPwdNote: e => {
            const {normalize: n} = e;
            return n(["Please set a new password."])
        }
        ,
        bindAccount: e => {
            const {normalize: n} = e;
            return n(["This router is not bound to the current TP-Link ID. Enter the router's login password to bind for management."])
        }
        ,
        userConflict: e => {
            const {normalize: n} = e;
            return n(["Only one device can log in at a time. Do you want to continue and force the other device to log off?"])
        }
        ,
        multipleLogin: e => {
            const {normalize: n} = e;
            return n(["Multiple devices have been detected trying to log in to this router at the same time. For security reasons, the system will automatically lock for two hours. Please try again later."])
        }
        ,
        loginRemainTimes: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Login failed for ", i(o("failedTimes")), " times and you still have ", i(o("remainTimes")), " attempts left."])
        }
        ,
        loginFailed: e => {
            const {normalize: n} = e;
            return n(["Login Failed."])
        }
        ,
        incorrectPassword: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Incorrect password (", i(o("times")), "/", i(o("maxTimes")), " attempts to log in, ", i(o("maxTimes")), " failed logins will be locked for ", i(o("hour")), " hours)."])
        }
    },
    menu: {
        networkMap: e => {
            const {normalize: n} = e;
            return n(["Network Map"])
        }
        ,
        internet: e => {
            const {normalize: n} = e;
            return n(["Internet"])
        }
        ,
        internetAp: e => {
            const {normalize: n} = e;
            return n(["Internet AP Mode"])
        }
        ,
        wireless: e => {
            const {normalize: n} = e;
            return n(["Wireless"])
        }
        ,
        homeCare: e => {
            const {normalize: n} = e;
            return n(["Home Care"])
        }
        ,
        tools: e => {
            const {normalize: n} = e;
            return n(["Tools"])
        }
        ,
        advanced: e => {
            const {normalize: n} = e;
            return n(["Advanced"])
        }
        ,
        network: e => {
            const {normalize: n} = e;
            return n(["Network"])
        }
        ,
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        lan: e => {
            const {normalize: n} = e;
            return n(["LAN"])
        }
        ,
        iptv: e => {
            const {normalize: n} = e;
            return n(["IPTV/VLAN"])
        }
        ,
        dhcpServer: e => {
            const {normalize: n} = e;
            return n(["DHCP Server"])
        }
        ,
        dynamicDns: e => {
            const {normalize: n} = e;
            return n(["Dynamic DNS"])
        }
        ,
        routing: e => {
            const {normalize: n} = e;
            return n(["Routing"])
        }
        ,
        wirelessSettings: e => {
            const {normalize: n} = e;
            return n(["Wireless Settings"])
        }
        ,
        guestNetwork: e => {
            const {normalize: n} = e;
            return n(["Guest Network"])
        }
        ,
        wirelessSchedule: e => {
            const {normalize: n} = e;
            return n(["Wireless Schedule"])
        }
        ,
        wps: e => {
            const {normalize: n} = e;
            return n(["WPS"])
        }
        ,
        additionalSettings: e => {
            const {normalize: n} = e;
            return n(["Additional Settings"])
        }
        ,
        usbSettings: e => {
            const {normalize: n} = e;
            return n(["USB"])
        }
        ,
        usbDevicesStatus: e => {
            const {normalize: n} = e;
            return n(["USB Device Status"])
        }
        ,
        storageSharing: e => {
            const {normalize: n} = e;
            return n(["Storage Sharing"])
        }
        ,
        usbStorageDevice: e => {
            const {normalize: n} = e;
            return n(["USB Storage Device"])
        }
        ,
        offlineDownload: e => {
            const {normalize: n} = e;
            return n(["Offline Download"])
        }
        ,
        g3G4: e => {
            const {normalize: n} = e;
            return n(["3G/4G"])
        }
        ,
        mediaServer: e => {
            const {normalize: n} = e;
            return n(["Media Server"])
        }
        ,
        timeMachine: e => {
            const {normalize: n} = e;
            return n(["Time Machine"])
        }
        ,
        printerServer: e => {
            const {normalize: n} = e;
            return n(["Printer Sharing"])
        }
        ,
        natForwarding: e => {
            const {normalize: n} = e;
            return n(["NAT Forwarding"])
        }
        ,
        portForwarding: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding"])
        }
        ,
        portTriggering: e => {
            const {normalize: n} = e;
            return n(["Port Triggering"])
        }
        ,
        upnp: e => {
            const {normalize: n} = e;
            return n(["UPnP"])
        }
        ,
        dmz: e => {
            const {normalize: n} = e;
            return n(["DMZ"])
        }
        ,
        security: e => {
            const {normalize: n} = e;
            return n(["Security"])
        }
        ,
        firewall: e => {
            const {normalize: n} = e;
            return n(["Firewall"])
        }
        ,
        accessControl: e => {
            const {normalize: n} = e;
            return n(["Access Control"])
        }
        ,
        serviceFiltering: e => {
            const {normalize: n} = e;
            return n(["Service Filtering"])
        }
        ,
        ipMacBinding: e => {
            const {normalize: n} = e;
            return n(["IP & MAC Binding"])
        }
        ,
        alg: e => {
            const {normalize: n} = e;
            return n(["ALG"])
        }
        ,
        iotSecurity: e => {
            const {normalize: n} = e;
            return n(["Device Isolation"])
        }
        ,
        ipv6Firewall: e => {
            const {normalize: n} = e;
            return n(["IPV6 Firewall"])
        }
        ,
        vpnServer: e => {
            const {normalize: n} = e;
            return n(["VPN Server"])
        }
        ,
        openVpn: e => {
            const {normalize: n} = e;
            return n(["OpenVPN"])
        }
        ,
        vpnPptp: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        vpnL2Tp: e => {
            const {normalize: n} = e;
            return n(["L2TP/IPSec"])
        }
        ,
        ipsec: e => {
            const {normalize: n} = e;
            return n(["IPSec Tunnel"])
        }
        ,
        vpnConnections: e => {
            const {normalize: n} = e;
            return n(["Connections"])
        }
        ,
        vpnClient: e => {
            const {normalize: n} = e;
            return n(["VPN Client"])
        }
        ,
        ipv6: e => {
            const {normalize: n} = e;
            return n(["IPv6"])
        }
        ,
        system: e => {
            const {normalize: n} = e;
            return n(["System"])
        }
        ,
        firmware: e => {
            const {normalize: n} = e;
            return n(["Firmware Update"])
        }
        ,
        backupRestore: e => {
            const {normalize: n} = e;
            return n(["Backup & Restore"])
        }
        ,
        administration: e => {
            const {normalize: n} = e;
            return n(["Administration"])
        }
        ,
        systemLog: e => {
            const {normalize: n} = e;
            return n(["System Log"])
        }
        ,
        diagnostics: e => {
            const {normalize: n} = e;
            return n(["Diagnostics"])
        }
        ,
        timeSettings: e => {
            const {normalize: n} = e;
            return n(["Time"])
        }
        ,
        reboot: e => {
            const {normalize: n} = e;
            return n(["Reboot"])
        }
        ,
        led: e => {
            const {normalize: n} = e;
            return n(["LED Control"])
        }
        ,
        operationMode: e => {
            const {normalize: n} = e;
            return n(["Operation Mode"])
        }
        ,
        cwmpSettings: e => {
            const {normalize: n} = e;
            return n(["CWMP Settings"])
        }
        ,
        volumeControl: e => {
            const {normalize: n} = e;
            return n(["Volume Control"])
        }
        ,
        usageStats: e => {
            const {normalize: n} = e;
            return n(["Usage Stats"])
        }
        ,
        wakeOnLan: e => {
            const {normalize: n} = e;
            return n(["Wake on LAN"])
        }
        ,
        tpLinkId: e => {
            const {normalize: n} = e;
            return n(["TP-Link ID"])
        }
        ,
        portal: e => {
            const {normalize: n} = e;
            return n(["Portal"])
        }
        ,
        gameCenter: e => {
            const {normalize: n} = e;
            return n(["Game Center"])
        }
        ,
        dashboard: e => {
            const {normalize: n} = e;
            return n(["Dashboard"])
        }
        ,
        gameAccelerator: e => {
            const {normalize: n} = e;
            return n(["Game Accelerator"])
        }
        ,
        geforceNowQos: e => {
            const {normalize: n} = e;
            return n(["GeForce NOW QoS"])
        }
        ,
        gameProtector: e => {
            const {normalize: n} = e;
            return n(["Game Protector"])
        }
        ,
        antivirus: e => {
            const {normalize: n} = e;
            return n(["Antivirus"])
        }
        ,
        parentalControls: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
        ,
        moreFeatures: e => {
            const {normalize: n} = e;
            return n(["More Features"])
        }
        ,
        homecareGuide: e => {
            const {normalize: n} = e;
            return n(["HomeShield Guide"])
        }
        ,
        smartLifeAssistant: e => {
            const {normalize: n} = e;
            return n(["Smart Life Assistant"])
        }
        ,
        alexa: e => {
            const {normalize: n} = e;
            return n(["Alexa"])
        }
        ,
        googleAssistant: e => {
            const {normalize: n} = e;
            return n(["Google Assistant"])
        }
        ,
        ifttt: e => {
            const {normalize: n} = e;
            return n(["IFTTT"])
        }
        ,
        google: e => {
            const {normalize: n} = e;
            return n(["Google Assistant"])
        }
        ,
        gameDiagnostics: e => {
            const {normalize: n} = e;
            return n(["Game Diagnostics"])
        }
        ,
        homeshield: e => {
            const {normalize: n} = e;
            return n(["HomeShield"])
        }
        ,
        homecare: e => {
            const {normalize: n} = e;
            return n(["HomeCare"])
        }
        ,
        qos: e => {
            const {normalize: n} = e;
            return n(["QoS"])
        }
        ,
        vpn: e => {
            const {normalize: n} = e;
            return n(["VPN"])
        }
        ,
        quickSetup: e => {
            const {normalize: n} = e;
            return n(["Quick Setup"])
        }
        ,
        wds: e => {
            const {normalize: n} = e;
            return n(["WDS"])
        }
        ,
        easyMesh: e => {
            const {normalize: n} = e;
            return n(["EasyMesh"])
        }
        ,
        yandexDns: e => {
            const {normalize: n} = e;
            return n(["Yandex.DNS"])
        }
        ,
        networkCheck: e => {
            const {normalize: n} = e;
            return n(["Network Check"])
        }
        ,
        antennas: e => {
            const {normalize: n} = e;
            return n(["Antennas"])
        }
        ,
        deviceBoost: e => {
            const {normalize: n} = e;
            return n(["Device Boost"])
        }
        ,
        areaBoost: e => {
            const {normalize: n} = e;
            return n(["Area Boost"])
        }
        ,
        wholeHomeBoost: e => {
            const {normalize: n} = e;
            return n(["Whole Home Boost"])
        }
        ,
        advancedBoostStrategy: e => {
            const {normalize: n} = e;
            return n(["Advanced Settings"])
        }
        ,
        iotNetwork: e => {
            const {normalize: n} = e;
            return n(["IoT Network"])
        }
        ,
        wireGuard: e => {
            const {normalize: n} = e;
            return n(["WireGuard"])
        }
        ,
        about: e => {
            const {normalize: n} = e;
            return n(["About"])
        }
        ,
        screenDisplay: e => {
            const {normalize: n} = e;
            return n(["Screen Display"])
        }
        ,
        ledScreen: e => {
            const {normalize: n} = e;
            return n(["LED Screen"])
        }
        ,
        touchscreen: e => {
            const {normalize: n} = e;
            return n(["Touchscreen"])
        }
        ,
        exploreMore: e => {
            const {normalize: n} = e;
            return n(["Explore More"])
        }
        ,
        ecoMode: e => {
            const {normalize: n} = e;
            return n(["ECO Mode"])
        }
        ,
        thirdFing: e => {
            const {normalize: n} = e;
            return n(["Authorize Third-Party Services"])
        }
    },
    connectType: {
        dynamic: e => {
            const {normalize: n} = e;
            return n(["Dynamic IP"])
        }
        ,
        static: e => {
            const {normalize: n} = e;
            return n(["Static IP"])
        }
        ,
        bigPond: e => {
            const {normalize: n} = e;
            return n(["BigPond Cable"])
        }
        ,
        PPPOE: e => {
            const {normalize: n} = e;
            return n(["PPPoE"])
        }
        ,
        PPTP: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        L2TP: e => {
            const {normalize: n} = e;
            return n(["L2TP"])
        }
        ,
        v6plus: e => {
            const {normalize: n} = e;
            return n(["v6plus"])
        }
        ,
        dslite: e => {
            const {normalize: n} = e;
            return n(["DS-Lite"])
        }
        ,
        OCN: e => {
            const {normalize: n} = e;
            return n(["MAP-E(OCN)"])
        }
        ,
        dynamicv6: e => {
            const {normalize: n} = e;
            return n(["Dynamic IP(SLAAC/DHCPv6)"])
        }
        ,
        tunnel6to4: e => {
            const {normalize: n} = e;
            return n(["6to4 Tunnel"])
        }
        ,
        passthrough: e => {
            const {normalize: n} = e;
            return n(["Pass-Through (Bridge)"])
        }
    },
    connectStatus: {
        connected: e => {
            const {normalize: n} = e;
            return n(["Connected"])
        }
        ,
        disconnected: e => {
            const {normalize: n} = e;
            return n(["Disconnected"])
        }
        ,
        unplugged: e => {
            const {normalize: n} = e;
            return n(["WAN port is unplugged"])
        }
        ,
        poorConnected: e => {
            const {normalize: n} = e;
            return n(["Poor network"])
        }
        ,
        connecting: e => {
            const {normalize: n} = e;
            return n(["Connecting"])
        }
        ,
        disconnecting: e => {
            const {normalize: n} = e;
            return n(["Disconnecting"])
        }
    },
    network: {
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        internet: e => {
            const {normalize: n} = e;
            return n(["Internet"])
        }
        ,
        connectType: e => {
            const {normalize: n} = e;
            return n(["Internet Connection Type"])
        }
        ,
        ip: e => {
            const {normalize: n} = e;
            return n(["IP Address"])
        }
        ,
        subnet: e => {
            const {normalize: n} = e;
            return n(["Subnet Mask"])
        }
        ,
        defaultGateway: e => {
            const {normalize: n} = e;
            return n(["Default Gateway"])
        }
        ,
        priDNS: e => {
            const {normalize: n} = e;
            return n(["Primary DNS"])
        }
        ,
        sndDNS: e => {
            const {normalize: n} = e;
            return n(["Secondary DNS"])
        }
        ,
        lan: e => {
            const {normalize: n} = e;
            return n(["LAN"])
        }
        ,
        IPTV_VLAN: e => {
            const {normalize: n} = e;
            return n(["IPTV/VLAN"])
        }
        ,
        dhcpServer: e => {
            const {normalize: n} = e;
            return n(["DHCP Server"])
        }
        ,
        dynamicDNS: e => {
            const {normalize: n} = e;
            return n(["Dynamic DNS"])
        }
        ,
        mac: e => {
            const {normalize: n} = e;
            return n(["MAC Address"])
        }
        ,
        link: e => {
            const {normalize: n} = e;
            return n(["Link Aggregation"])
        }
        ,
        serviceProvider: e => {
            const {normalize: n} = e;
            return n(["Service Provider"])
        }
        ,
        hostName: e => {
            const {normalize: n} = e;
            return n(["Host Name"])
        }
        ,
        dynamic: e => {
            const {normalize: n} = e;
            return n(["Dynamic IP"])
        }
        ,
        static: e => {
            const {normalize: n} = e;
            return n(["Static IP"])
        }
        ,
        none: e => {
            const {normalize: n} = e;
            return n(["None"])
        }
    },
    networkStatus: {
        description: e => {
            const {normalize: n} = e;
            return n(["Internet status overview is displayed on this page."])
        }
        ,
        onlineDuration: e => {
            const {normalize: n} = e;
            return n(["Online Duration"])
        }
        ,
        internetPortUnplugged: e => {
            const {normalize: n} = e;
            return n(["The internet port is unplugged. Make sure the cable is securely connected to the internet port you selected."])
        }
        ,
        modemStatus: e => {
            const {normalize: n} = e;
            return n(["3G/4G Modem Status"])
        }
        ,
        modemSignal: e => {
            const {normalize: n} = e;
            return n(["3G/4G Modem Signal"])
        }
    },
    networkInternet: {
        macClone: e => {
            const {normalize: n} = e;
            return n(["MAC Clone"])
        }
        ,
        macCloneDescription: e => {
            const {normalize: n} = e;
            return n(["Set the MAC address of your router. Use the default address unless your ISP allows internet access from only a specific MAC address."])
        }
        ,
        routerMacAddress: e => {
            const {normalize: n} = e;
            return n(["Router MAC Address"])
        }
        ,
        useDefaultMacAddress: e => {
            const {normalize: n} = e;
            return n(["Use Default MAC Address"])
        }
        ,
        cloneCurrentDeviceMac: e => {
            const {normalize: n} = e;
            return n(["Clone Current Device MAC"])
        }
        ,
        useCustomMacAddress: e => {
            const {normalize: n} = e;
            return n(["Use Custom MAC Address"])
        }
        ,
        NAT: e => {
            const {normalize: n} = e;
            return n(["NAT"])
        }
        ,
        enableNat: e => {
            const {normalize: n} = e;
            return n(["Enable NAT"])
        }
        ,
        portConfigTitle: e => {
            const {normalize: n} = e;
            return n(["Internet Port"])
        }
        ,
        portConfigDescription: e => {
            const {normalize: n} = e;
            return n(["Select a port for internet service. Make sure the cable is securely connected to this port on your router."])
        }
        ,
        portSpeedTitle: e => {
            const {normalize: n} = e;
            return n(["Internet Port Negotiation Speed Setting"])
        }
        ,
        autoNegotiation: e => {
            const {normalize: n} = e;
            return n(["Auto Negotiation"])
        }
        ,
        halfDuplex: e => {
            const {normalize: n} = e;
            return n(["Mbps Half Duplex"])
        }
        ,
        fullDuplex: e => {
            const {normalize: n} = e;
            return n(["Mbps Full Duplex"])
        }
        ,
        continue: e => {
            const {normalize: n} = e;
            return n(["Continue"])
        }
        ,
        portConfirmModalTitle: e => {
            const {normalize: n} = e;
            return n(["Internet Port Disconnected"])
        }
        ,
        portConfirmModalText: e => {
            const {normalize: n} = e;
            return n(["Make sure the cable is securely connected to the Internet port you selected."])
        }
        ,
        compoPortTooltipTitle: e => {
            const {normalize: n} = e;
            return n(["What's combo port?"])
        }
        ,
        compoPortTooltipText: e => {
            const {normalize: n} = e;
            return n(["The combo port pairs a RJ45 port and SFP+ port together. You can use only one port in the pair at a time."])
        }
        ,
        comboPort: e => {
            const {normalize: n} = e;
            return n(["Combo Port"])
        }
        ,
        ComboPortRecommended: e => {
            const {normalize: n} = e;
            return n(["Combo Port (Recommended)"])
        }
        ,
        OR: e => {
            const {normalize: n} = e;
            return n(["OR"])
        }
        ,
        dynamicInstruction: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP doesn't provide any information for internet connection."])
        }
        ,
        staticInstruction: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides specific IP parameters."])
        }
        ,
        pppoeInstruction: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP only provides a username and password."])
        }
        ,
        pptpInstruction: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides PPTP VPN server information and an account. Some ISPs also provide specific IP parameters."])
        }
        ,
        l2tpInstruction: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides L2TP VPN server information and an account. Some ISPs also provide specific IP parameters."])
        }
        ,
        v6PlusInstruction: e => {
            const {normalize: n} = e;
            return n(["For you have subscribed v6plus service from ISP."])
        }
        ,
        ocnInstruction: e => {
            const {normalize: n} = e;
            return n(["For you have subscribed MAP-E service from OCN."])
        }
        ,
        dsLiteInstruction: e => {
            const {normalize: n} = e;
            return n(["For you have subscribed DS-Lite service from ISP."])
        }
        ,
        dotDoh: e => {
            const {normalize: n} = e;
            return n(["DoT/DoH"])
        }
        ,
        dotDohInstruction: e => {
            const {normalize: n} = e;
            return n(["Encrypting DNS queries by TLS/HTTPS, DoT/DoH can provide you with a more secure and private internet connection."])
        }
        ,
        dnsPrivacy: e => {
            const {normalize: n} = e;
            return n(["DNS Privacy"])
        }
        ,
        dot: e => {
            const {normalize: n} = e;
            return n(["DoT"])
        }
        ,
        doh: e => {
            const {normalize: n} = e;
            return n(["DoH"])
        }
        ,
        dotDohUnavailable: e => {
            const {normalize: n} = e;
            return n(["Yandex.DNS is currently enabled, and DoT/DoH is unavailable."])
        }
        ,
        yandexDnsUnavailable: e => {
            const {normalize: n} = e;
            return n(["DoT/DoH is currently enabled, and Yandex.DNS is unavailable."])
        }
        ,
        dnsServer: e => {
            const {normalize: n} = e;
            return n(["DNS Server"])
        }
        ,
        dnsMode: e => {
            const {normalize: n} = e;
            return n(["DNS Mode"])
        }
        ,
        defaultDnsMode: e => {
            const {normalize: n} = e;
            return n(["Default Mode"])
        }
        ,
        defaultDnsModeNote: e => {
            const {normalize: n} = e;
            return n(["The router will prioritize the secure DNS server you selected. If the server is unavailable, the default DNS server will take effect."])
        }
        ,
        ultraSecureMode: e => {
            const {normalize: n} = e;
            return n(["Ultra Secure Mode"])
        }
        ,
        ultraSecureModeNote: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router only uses the secure DNS server you selected. If the server is unavailable, the internet connectivity will be affected."])
        }
        ,
        detectDnsServer: e => {
            const {normalize: n} = e;
            return n(["DETECT DNS SERVER"])
        }
        ,
        detectDnsServerNote: e => {
            const {normalize: n} = e;
            return n(["You can detect whether the selected DNS servers are available or not. When you save the settings, DoH/DoT will be applied to these DNS servers, and the Primary & Secondary DNS servers you've set won't take effect."])
        }
        ,
        autoInternetPortNote: e => {
            const {normalize: n} = e;
            return n(["With Auto Internet Port enabled, your router will automatically detect and set the port with internet access as the internet (WAN) port. If you need to use advanced functions (like IPTV) or you have network devices like switches in your network, you are recommended to disable Auto Internet Port and set the internet port manually."])
        }
        ,
        disabledFeatureNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("featureA")), " has been set up. To turn on ", i(o("featureB")), ", please disable ", i(o("featureALink")), "."])
        }
        ,
        detectNotPlugged: e => {
            const {normalize: n} = e;
            return n(["Detected that no network cable is connected to the selected port. Please click RECONFIGURATION and set up the port for internet access again. Or click SAVE."])
        }
        ,
        enableAutoInternetNote: e => {
            const {normalize: n} = e;
            return n(["Detected that IPTV has been set up. When Auto Internet Port is enabled, the current IPTV settings will be discarded. Are you sure you want to enable Auto Internet Port?"])
        }
        ,
        noSupportThirdVPN: e => {
            const {normalize: n} = e;
            return n(["Note: Some VPN services offered by service providers may not be supported."])
        }
    },
    networkInternetConnection: {
        description: e => {
            const {normalize: n} = e;
            return n(["Set up an internet connection with the service information provided by your ISP (internet service provider)."])
        }
        ,
        dnsAdress: e => {
            const {normalize: n} = e;
            return n(["DNS Address"])
        }
        ,
        unicastdhcpInstruction: e => {
            const {normalize: n} = e;
            return n(["Get IP using Unicast DHCP"])
        }
        ,
        getDynamicDns: e => {
            const {normalize: n} = e;
            return n(["Get Dynamically from ISP"])
        }
        ,
        getStaticIP: e => {
            const {normalize: n} = e;
            return n(["Use the Following IP Address"])
        }
        ,
        getStaticDns: e => {
            const {normalize: n} = e;
            return n(["Use the Following DNS Addresses"])
        }
        ,
        mtuSize: e => {
            const {normalize: n} = e;
            return n(["MTU Size"])
        }
        ,
        mtuHint: e => {
            const {normalize: n} = e;
            return n(["(Do not change unless necessary.)"])
        }
        ,
        userName: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        authServer: e => {
            const {normalize: n} = e;
            return n(["Auth.Server"])
        }
        ,
        authDomain: e => {
            const {normalize: n} = e;
            return n(["Auth.Domain"])
        }
        ,
        connectionMode: e => {
            const {normalize: n} = e;
            return n(["Connection Mode"])
        }
        ,
        auto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        demand: e => {
            const {normalize: n} = e;
            return n(["On Demand"])
        }
        ,
        manual: e => {
            const {normalize: n} = e;
            return n(["Manual"])
        }
        ,
        timeBased: e => {
            const {normalize: n} = e;
            return n(["Time-based"])
        }
        ,
        maxIdleTime: e => {
            const {normalize: n} = e;
            return n(["Max Idle Time"])
        }
        ,
        maxIdleTimeHint: e => {
            const {normalize: n} = e;
            return n(["(0 means always connected.)"])
        }
        ,
        minutes: e => {
            const {normalize: n} = e;
            return n(["minutes"])
        }
        ,
        seconds: e => {
            const {normalize: n} = e;
            return n(["seconds"])
        }
        ,
        AFTRName: e => {
            const {normalize: n} = e;
            return n(["AFTR Name"])
        }
        ,
        VPNServerIPorDomainName: e => {
            const {normalize: n} = e;
            return n(["VPN Server IP/Domain Name"])
        }
        ,
        hostNameConfirmMsg: e => {
            const {normalize: n} = e;
            return n(["The host name contains illegal characters that may cause unexpected system behaviour. Do you want to continue?"])
        }
        ,
        v6PlusConfirmMsg: e => {
            const {normalize: n} = e;
            return n(["If the internet connection type is set to v6plus, the following features will be unavailable:"])
        }
        ,
        OCNConfirmMsg: e => {
            const {normalize: n} = e;
            return n(["If the internet connection type is set to MAP-E(OCN), the following features will be unavailable:"])
        }
        ,
        dsLiteConfirmMsg: e => {
            const {normalize: n} = e;
            return n(["If the internet connection type is set to DS-LITE, the following features will be unavailable:"])
        }
        ,
        blankUserNamePasswordPrompt: e => {
            const {normalize: n} = e;
            return n(["The username or password has been left blank. Continue?"])
        }
        ,
        secondaryConnection: e => {
            const {normalize: n} = e;
            return n(["Secondary Connection"])
        }
        ,
        serviceName: e => {
            const {normalize: n} = e;
            return n(["Service Name"])
        }
        ,
        serviceNameHint: e => {
            const {normalize: n} = e;
            return n(["(Leave blank unless ISP requires.)"])
        }
        ,
        accessConcentratorName: e => {
            const {normalize: n} = e;
            return n(["Access Concentrator Name"])
        }
        ,
        detectOnlineInterval: e => {
            const {normalize: n} = e;
            return n(["Detect Online Interval"])
        }
        ,
        connectionTime: e => {
            const {normalize: n} = e;
            return n(["Connection Time"])
        }
    },
    networkLan: {
        lan: e => {
            const {normalize: n} = e;
            return n(["LAN"])
        }
        ,
        lanDescription: e => {
            const {normalize: n} = e;
            return n(["View and configure LAN settings."])
        }
        ,
        mac: e => {
            const {normalize: n} = e;
            return n(["MAC Address"])
        }
        ,
        ip: e => {
            const {normalize: n} = e;
            return n(["IP Address"])
        }
        ,
        ipType: e => {
            const {normalize: n} = e;
            return n(["IP Type"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        subnet: e => {
            const {normalize: n} = e;
            return n(["Subnet Mask"])
        }
        ,
        link: e => {
            const {normalize: n} = e;
            return n(["Link Aggregation"])
        }
        ,
        linkDescription: e => {
            const {normalize: n} = e;
            return n(["Combine two ports(LAN2 and LAN3) together to make a single high-bandwidth data path."])
        }
        ,
        linkConfigInstruction: e => {
            const {normalize: n} = e;
            return n(["Combine two LAN ports together to make a single high-bandwidth data path."])
        }
        ,
        ports: e => {
            const {normalize: n} = e;
            return n(["Ports"])
        }
        ,
        mode: e => {
            const {normalize: n} = e;
            return n(["Mode"])
        }
        ,
        lanDisableTips: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["IPTV and Link Aggregation cannot be enabled at the same time. Disable ", i(o("iptv")), " before using this function."])
        }
        ,
        iptv: e => {
            const {normalize: n} = e;
            return n(["IPTV"])
        }
        ,
        staticLag: e => {
            const {normalize: n} = e;
            return n(["Static LAG"])
        }
        ,
        lacp: e => {
            const {normalize: n} = e;
            return n(["LACP"])
        }
        ,
        flowController: e => {
            const {normalize: n} = e;
            return n(["Flow Controller"])
        }
        ,
        flowControlDescription: e => {
            const {normalize: n} = e;
            return n(["With this option enabled, when a device gets overloaded it will send a PAUSE frame to notify the peer device to stop sending data for a specified period of time, thus avoiding the packet loss caused by congestion."])
        }
        ,
        flowControl: e => {
            const {normalize: n} = e;
            return n(["Flow Control"])
        }
        ,
        rxEnable: e => {
            const {normalize: n} = e;
            return n(["RX Enabled"])
        }
        ,
        txEnable: e => {
            const {normalize: n} = e;
            return n(["TX Enabled"])
        }
        ,
        lanFlowNote: e => {
            const {normalize: n} = e;
            return n(["Enable this option may cause internet drop with some devices."])
        }
        ,
        reboot: e => {
            const {normalize: n} = e;
            return n(["REBOOT"])
        }
        ,
        lanIpChangeMsg: e => {
            const {normalize: n} = e;
            return n(["The new IP address will be used to access the web management page from now on. Save and log in again?"])
        }
        ,
        rebootMsg: e => {
            const {normalize: n} = e;
            return n(["The settings will take effect only after the router reboots. Internet access will be disabled temporarily. Reboot now?"])
        }
        ,
        ipRebootMsg: e => {
            const {normalize: n} = e;
            return n(["The settings will take effect only after the router reboots. Then the new IP address will be used to access the web management from now on."])
        }
        ,
        selectTwo: e => {
            const {normalize: n} = e;
            return n(["Choose two ports to aggregate."])
        }
        ,
        lanLoadingAnimate: e => {
            const {normalize: n} = e;
            return n(["Redirecting to the new login page..."])
        }
        ,
        flowLoadingTip: e => {
            const {normalize: n} = e;
            return n(["Please wait for the configuration to take effect."])
        }
        ,
        changePortNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["You are using ", i(o("currentPort")), " for internet service. If you want to configure Link Aggregation settings for ", i(o("currentPort")), ", please set another port as the internet port."])
        }
    },
    networkIptv: {
        iptvVlan: e => {
            const {normalize: n} = e;
            return n(["IPTV/VLAN"])
        }
        ,
        iptvVlanDescription: e => {
            const {normalize: n} = e;
            return n(["Configure IPTV/VLAN settings if you want to enjoy IPTV or VoIP service, or if your ISP requires VLAN tags."])
        }
        ,
        mode: e => {
            const {normalize: n} = e;
            return n(["Mode"])
        }
        ,
        bridge: e => {
            const {normalize: n} = e;
            return n(["Bridge"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        internet: e => {
            const {normalize: n} = e;
            return n(["Internet"])
        }
        ,
        iptv: e => {
            const {normalize: n} = e;
            return n(["IPTV"])
        }
        ,
        voip: e => {
            const {normalize: n} = e;
            return n(["VoIP"])
        }
        ,
        internetIptv: e => {
            const {normalize: n} = e;
            return n(["Internet/IPTV"])
        }
        ,
        internetTag: e => {
            const {normalize: n} = e;
            return n(["Internet VLAN"])
        }
        ,
        iptvTag: e => {
            const {normalize: n} = e;
            return n(["IPTV VLAN"])
        }
        ,
        voipTag: e => {
            const {normalize: n} = e;
            return n(["VoIP VLAN"])
        }
        ,
        iptvMulTag: e => {
            const {normalize: n} = e;
            return n(["IPTV Multicast VLAN"])
        }
        ,
        vlanPriority: e => {
            const {normalize: n} = e;
            return n(["VLAN Priority"])
        }
        ,
        vlanId: e => {
            const {normalize: n} = e;
            return n(["VLAN ID"])
        }
        ,
        qTagInternet: e => {
            const {normalize: n} = e;
            return n(["802.1Q Tag for Internet"])
        }
        ,
        qTagIptv: e => {
            const {normalize: n} = e;
            return n(["802.1Q Tag for IPTV"])
        }
        ,
        iptvMulTip: e => {
            const {normalize: n} = e;
            return n(["Please turn on IPTV VLAN before turning on IPTV Multicast VLAN"])
        }
        ,
        exStream: e => {
            const {normalize: n} = e;
            return n(["Singapore-Singtel"])
        }
        ,
        unifi: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Unifi"])
        }
        ,
        maxis: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Maxis1"])
        }
        ,
        maxis2: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Maxis2"])
        }
        ,
        celcom: e => {
            const {normalize: n} = e;
            return n(["Malaysia-CELCOM"])
        }
        ,
        celcom2: e => {
            const {normalize: n} = e;
            return n(["Malaysia-CELCOM WEST(BIZ)"])
        }
        ,
        celcom3: e => {
            const {normalize: n} = e;
            return n(["Malaysia-CELCOM WEST(HOME)"])
        }
        ,
        celcom4: e => {
            const {normalize: n} = e;
            return n(["Malaysia-CELCOM EAST(BIZ)"])
        }
        ,
        celcom5: e => {
            const {normalize: n} = e;
            return n(["Malaysia-CELCOM EAST(HOME)"])
        }
        ,
        digiTm: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-TM"])
        }
        ,
        digiTime: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-TIME"])
        }
        ,
        digi: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-DIGI"])
        }
        ,
        cts: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-CTS"])
        }
        ,
        allo: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-ALLO"])
        }
        ,
        sacofa: e => {
            const {normalize: n} = e;
            return n(["Malaysia-Digi-SACOFA"])
        }
        ,
        vietnam: e => {
            const {normalize: n} = e;
            return n(["Vietnam-Viettel"])
        }
        ,
        meo: e => {
            const {normalize: n} = e;
            return n(["Portugal-Meo"])
        }
        ,
        vdf: e => {
            const {normalize: n} = e;
            return n(["Portugal-Vodafone"])
        }
        ,
        nbn: e => {
            const {normalize: n} = e;
            return n(["Australia-NBN"])
        }
        ,
        ufb: e => {
            const {normalize: n} = e;
            return n(["New Zealand-UFB"])
        }
        ,
        telekom1: e => {
            const {normalize: n} = e;
            return n(["Deutsche Telekom(IPTV VLAN 7)"])
        }
        ,
        telekom2: e => {
            const {normalize: n} = e;
            return n(["Deutsche Telekom(IPTV VLAN 8)"])
        }
        ,
        ais: e => {
            const {normalize: n} = e;
            return n(["Thailand-AIS"])
        }
        ,
        centuryLink: e => {
            const {normalize: n} = e;
            return n(["USA-CenturyLink"])
        }
        ,
        igmp: e => {
            const {normalize: n} = e;
            return n(["IGMP"])
        }
        ,
        multicastDescription: e => {
            const {normalize: n} = e;
            return n(["Check the multicast settings. It is recommended to keep them as default."])
        }
        ,
        igmpProxy: e => {
            const {normalize: n} = e;
            return n(["IGMP Proxy"])
        }
        ,
        igmpSnoop: e => {
            const {normalize: n} = e;
            return n(["IGMP Snooping"])
        }
        ,
        igmpVersion: e => {
            const {normalize: n} = e;
            return n(["IGMP Version"])
        }
        ,
        igmpForward: e => {
            const {normalize: n} = e;
            return n(["Wireless Multicast Forwarding"])
        }
        ,
        v2: e => {
            const {normalize: n} = e;
            return n(["V2"])
        }
        ,
        v3: e => {
            const {normalize: n} = e;
            return n(["V3"])
        }
        ,
        udpProxy: e => {
            const {normalize: n} = e;
            return n(["UDP Proxy"])
        }
        ,
        udpProxyDescription: e => {
            const {normalize: n} = e;
            return n(["Configure UDP proxy to convert UDP IPTV streams into HTTP streams if you want to watch IPTV on a player that does not support UDP streams."])
        }
        ,
        udpProxyPort: e => {
            const {normalize: n} = e;
            return n(["UDP Proxy Port"])
        }
        ,
        rebootSaving: e => {
            const {normalize: n} = e;
            return n(["Saving..."])
        }
        ,
        rebootHint: e => {
            const {normalize: n} = e;
            return n(["Please do NOT operate during the process."])
        }
        ,
        changeSingleInternet: e => {
            const {normalize: n} = e;
            return n(["After setting the LAN port as an IPTV/VoIP/Bridge port, the LAN port cannot be used for internet connection. Continue?"])
        }
        ,
        qsDisabledNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To set up IPTV, go BACK to the “", i(o("autoPortTitle")), "” page and select Set Manually, because IPTV and the Auto Internet Port cannot be enabled at the same time. Alternatively, you can configure IPTV at Advanced > Network after the Quick Setup."])
        }
        ,
        iptvPortNote: e => {
            const {normalize: n} = e;
            return n(["The LAN ports used for IPTV, VoIP and Bridge cannot be used to form an EasyMesh network through a wired connection."])
        }
    },
    networkDhcp: {
        server: e => {
            const {normalize: n} = e;
            return n(["DHCP Server"])
        }
        ,
        ipPool: e => {
            const {normalize: n} = e;
            return n(["IP Address Pool"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Dynamically assign IP addresses to the devices connected to the router."])
        }
        ,
        addressLeaseTime: e => {
            const {normalize: n} = e;
            return n(["Address Lease Time"])
        }
        ,
        leaseTime: e => {
            const {normalize: n} = e;
            return n(["Lease Time"])
        }
        ,
        addressReservation: e => {
            const {normalize: n} = e;
            return n(["Address Reservation"])
        }
        ,
        addressReservationInstruction: e => {
            const {normalize: n} = e;
            return n(["Reserve IP addresses for specific devices connected to the router."])
        }
        ,
        reservedIp: e => {
            const {normalize: n} = e;
            return n(["Reserved IP Address"])
        }
        ,
        addTitle: e => {
            const {normalize: n} = e;
            return n(["Add a Reservation Entry"])
        }
        ,
        modifyTitle: e => {
            const {normalize: n} = e;
            return n(["Modify a Reservation Entry"])
        }
        ,
        ipReserved: e => {
            const {normalize: n} = e;
            return n(["This IP address is already reserved."])
        }
        ,
        macReserved: e => {
            const {normalize: n} = e;
            return n(["This MAC address already has a reserved IP address."])
        }
        ,
        ipNoInRange: e => {
            const {normalize: n} = e;
            return n(["Enter an IP address within the IP address pool."])
        }
        ,
        deviceName: e => {
            const {normalize: n} = e;
            return n(["Device Name"])
        }
        ,
        clientList: e => {
            const {normalize: n} = e;
            return n(["DHCP Client List"])
        }
        ,
        totalClients: e => {
            const {normalize: n} = e;
            return n(["Total Clients"])
        }
        ,
        clientListInstruction: e => {
            const {normalize: n} = e;
            return n(["View the devices that are currently assigned with IP addresses by the DHCP server."])
        }
        ,
        assignedIp: e => {
            const {normalize: n} = e;
            return n(["Assigned IP Address"])
        }
    },
    networkDdns: {
        tpLink: e => {
            const {normalize: n} = e;
            return n(["TP-Link"])
        }
        ,
        noIp: e => {
            const {normalize: n} = e;
            return n(["NO-IP"])
        }
        ,
        dynDns: e => {
            const {normalize: n} = e;
            return n(["DynDNS"])
        }
        ,
        connected: e => {
            const {normalize: n} = e;
            return n(["Success!"])
        }
        ,
        noLaunch: e => {
            const {normalize: n} = e;
            return n(["Not launching"])
        }
        ,
        connecting: e => {
            const {normalize: n} = e;
            return n(["Connecting"])
        }
        ,
        incorrectPwd: e => {
            const {normalize: n} = e;
            return n(["Incorrect username or password"])
        }
        ,
        incorrectDomain: e => {
            const {normalize: n} = e;
            return n(["Domain name error"])
        }
        ,
        dynamicDns: e => {
            const {normalize: n} = e;
            return n(["Dynamic DNS"])
        }
        ,
        ddnsDescription: e => {
            const {normalize: n} = e;
            return n(["Assign a fixed host name (domain name) for remote access to your device, website, or server behind the router."])
        }
        ,
        serviceProvider: e => {
            const {normalize: n} = e;
            return n(["Service Provider"])
        }
        ,
        registerNow: e => {
            const {normalize: n} = e;
            return n(["Register Now"])
        }
        ,
        register: e => {
            const {normalize: n} = e;
            return n(["Register"])
        }
        ,
        ddnsTpLoginNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To use TP-Link DDNS service, ", i(o("loginIn")), " with your TP-Link ID."])
        }
        ,
        loginIn: e => {
            const {normalize: n} = e;
            return n(["login in"])
        }
        ,
        userName: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        bindWanIp: e => {
            const {normalize: n} = e;
            return n(["WAN IP binding"])
        }
        ,
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        hostNameDomain: e => {
            const {normalize: n} = e;
            return n([".tplinkdns.com"])
        }
        ,
        domainList: e => {
            const {normalize: n} = e;
            return n(["Domain Name List"])
        }
        ,
        domainName: e => {
            const {normalize: n} = e;
            return n(["Domain Name"])
        }
        ,
        currentDomainName: e => {
            const {normalize: n} = e;
            return n(["Current Domain Name"])
        }
        ,
        bind: e => {
            const {normalize: n} = e;
            return n(["Bind"])
        }
        ,
        unBind: e => {
            const {normalize: n} = e;
            return n(["Unbind"])
        }
        ,
        operation: e => {
            const {normalize: n} = e;
            return n(["Operation"])
        }
        ,
        registeredDate: e => {
            const {normalize: n} = e;
            return n(["Registered Date"])
        }
        ,
        noInternetConnection: e => {
            const {normalize: n} = e;
            return n(["No internet connection"])
        }
        ,
        bindTips: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If you want to bind ", i(o("domain")), " to your device, please unbind the current domain name first."])
        }
        ,
        timeOut: e => {
            const {normalize: n} = e;
            return n(["Time out"])
        }
        ,
        logout: e => {
            const {normalize: n} = e;
            return n(["LOGOUT"])
        }
        ,
        loginAndSave: e => {
            const {normalize: n} = e;
            return n(["LOGIN AND SAVE"])
        }
    },
    networkRouting: {
        staticRouting: e => {
            const {normalize: n} = e;
            return n(["Static Routing"])
        }
        ,
        staticRoutingInstruction: e => {
            const {normalize: n} = e;
            return n(["Predetermine a fixed route for network packets to reach a specific host or network."])
        }
        ,
        networkDestination: e => {
            const {normalize: n} = e;
            return n(["Network Destination"])
        }
        ,
        subMask: e => {
            const {normalize: n} = e;
            return n(["Subnet Mask"])
        }
        ,
        defaultGateway: e => {
            const {normalize: n} = e;
            return n(["Default Gateway"])
        }
        ,
        interface: e => {
            const {normalize: n} = e;
            return n(["Interface"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Description"])
        }
        ,
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        addDialogTitle: e => {
            const {normalize: n} = e;
            return n(["Add a Routing Entry"])
        }
        ,
        modifyDialogTitle: e => {
            const {normalize: n} = e;
            return n(["Modify a Routing Entry"])
        }
        ,
        lanWlan: e => {
            const {normalize: n} = e;
            return n(["LAN/WLAN"])
        }
        ,
        wan: e => {
            const {normalize: n} = e;
            return n(["WAN"])
        }
        ,
        routingTable: e => {
            const {normalize: n} = e;
            return n(["Routing Table"])
        }
        ,
        routingTableInstruction: e => {
            const {normalize: n} = e;
            return n(["View all valid routing entries that are currently in use."])
        }
        ,
        routingNum: e => {
            const {normalize: n} = e;
            return n(["Active Route Number"])
        }
        ,
        gateway: e => {
            const {normalize: n} = e;
            return n(["Gateway"])
        }
    },
    unit: {
        day: e => {
            const {normalize: n, interpolate: i, named: o, plural: l} = e;
            return l([n(["1 day"]), n([i(o("n")), " days"])])
        }
        ,
        hour: e => {
            const {normalize: n, interpolate: i, named: o, plural: l} = e;
            return l([n(["1 hour"]), n([i(o("n")), " hours"])])
        }
        ,
        minute: e => {
            const {normalize: n, interpolate: i, named: o, plural: l} = e;
            return l([n(["1 minute"]), n([i(o("n")), " minutes"])])
        }
        ,
        minutes: e => {
            const {normalize: n} = e;
            return n(["minutes"])
        }
        ,
        bytes: e => {
            const {normalize: n} = e;
            return n(["bytes"])
        }
        ,
        hourSimplified: e => {
            const {normalize: n} = e;
            return n(["h"])
        }
        ,
        minuteSimplified: e => {
            const {normalize: n} = e;
            return n(["min"])
        }
        ,
        second: e => {
            const {normalize: n} = e;
            return n(["s"])
        }
        ,
        kbps: e => {
            const {normalize: n} = e;
            return n(["Kbps"])
        }
        ,
        mbps: e => {
            const {normalize: n} = e;
            return n(["Mbps"])
        }
        ,
        mhz: e => {
            const {normalize: n} = e;
            return n(["MHz"])
        }
    },
    time: {
        systemTime: e => {
            const {normalize: n} = e;
            return n(["System Time"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Set the router's system time."])
        }
        ,
        regionTime: e => {
            const {normalize: n} = e;
            return n(["Region & Time"])
        }
        ,
        regionTimeDescription: e => {
            const {normalize: n} = e;
            return n(["Set the router's region and time."])
        }
        ,
        current: e => {
            const {normalize: n} = e;
            return n(["Current Time"])
        }
        ,
        hour24: e => {
            const {normalize: n} = e;
            return n(["24-Hour Time"])
        }
        ,
        setTime: e => {
            const {normalize: n} = e;
            return n(["Set Time"])
        }
        ,
        timeSettingNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Before using this feature, make sure ", i(o("module")), ' is set to "', i(o("option")), '".'])
        }
        ,
        fromInternet: e => {
            const {normalize: n} = e;
            return n(["Get from Internet"])
        }
        ,
        fromDevice: e => {
            const {normalize: n} = e;
            return n(["Get from Managing Device"])
        }
        ,
        manually: e => {
            const {normalize: n} = e;
            return n(["Manually"])
        }
        ,
        zone: e => {
            const {normalize: n} = e;
            return n(["Time Zone"])
        }
        ,
        date: e => {
            const {normalize: n} = e;
            return n(["Date"])
        }
        ,
        NTP1: e => {
            const {normalize: n} = e;
            return n(["NTP Server I"])
        }
        ,
        NTP2: e => {
            const {normalize: n} = e;
            return n(["NTP Server II"])
        }
        ,
        gmtTimeout: e => {
            const {normalize: n} = e;
            return n(["Get Time From NTP Server Time Out"])
        }
        ,
        dayLight: e => {
            const {normalize: n} = e;
            return n(["Daylight Saving Time"])
        }
        ,
        dayLightInstruction: e => {
            const {normalize: n} = e;
            return n(["Automatically synchronize the system time with daylight saving time."])
        }
        ,
        runningStatus: e => {
            const {normalize: n} = e;
            return n(["Running Status"])
        }
        ,
        dstDown: e => {
            const {normalize: n} = e;
            return n(["Daylight Saving Time is off."])
        }
        ,
        dstUp: e => {
            const {normalize: n} = e;
            return n(["Daylight Saving Time is on."])
        }
        ,
        start: e => {
            const {normalize: n} = e;
            return n(["Start"])
        }
        ,
        end: e => {
            const {normalize: n} = e;
            return n(["End"])
        }
        ,
        autoToPc: e => {
            const {normalize: n} = e;
            return n(["To set system time from managing device, you need to disable Auto Update in System > Firmware Update."])
        }
        ,
        autoToManual: e => {
            const {normalize: n} = e;
            return n(["To set system time from manually, you need to disable Auto Update in System > Firmware Update."])
        }
        ,
        toFirmware: e => {
            const {normalize: n} = e;
            return n(["Go To Firmware Update"])
        }
        ,
        first: e => {
            const {normalize: n} = e;
            return n(["First"])
        }
        ,
        second: e => {
            const {normalize: n} = e;
            return n(["2nd"])
        }
        ,
        third: e => {
            const {normalize: n} = e;
            return n(["3rd"])
        }
        ,
        fourth: e => {
            const {normalize: n} = e;
            return n(["4th"])
        }
        ,
        last: e => {
            const {normalize: n} = e;
            return n(["Last"])
        }
        ,
        jan: e => {
            const {normalize: n} = e;
            return n(["Jan"])
        }
        ,
        feb: e => {
            const {normalize: n} = e;
            return n(["Feb"])
        }
        ,
        mar: e => {
            const {normalize: n} = e;
            return n(["Mar"])
        }
        ,
        apr: e => {
            const {normalize: n} = e;
            return n(["Apr"])
        }
        ,
        may: e => {
            const {normalize: n} = e;
            return n(["May"])
        }
        ,
        jun: e => {
            const {normalize: n} = e;
            return n(["Jun"])
        }
        ,
        jul: e => {
            const {normalize: n} = e;
            return n(["Jul"])
        }
        ,
        aug: e => {
            const {normalize: n} = e;
            return n(["Aug"])
        }
        ,
        sep: e => {
            const {normalize: n} = e;
            return n(["Sep"])
        }
        ,
        oct: e => {
            const {normalize: n} = e;
            return n(["Oct"])
        }
        ,
        nov: e => {
            const {normalize: n} = e;
            return n(["Nov"])
        }
        ,
        dec: e => {
            const {normalize: n} = e;
            return n(["Dec"])
        }
        ,
        mon: e => {
            const {normalize: n} = e;
            return n(["Mon"])
        }
        ,
        tue: e => {
            const {normalize: n} = e;
            return n(["Tue"])
        }
        ,
        wed: e => {
            const {normalize: n} = e;
            return n(["Wed"])
        }
        ,
        thu: e => {
            const {normalize: n} = e;
            return n(["Thu"])
        }
        ,
        fri: e => {
            const {normalize: n} = e;
            return n(["Fri"])
        }
        ,
        sat: e => {
            const {normalize: n} = e;
            return n(["Sat"])
        }
        ,
        sun: e => {
            const {normalize: n} = e;
            return n(["Sun"])
        }
        ,
        monday: e => {
            const {normalize: n} = e;
            return n(["Monday"])
        }
        ,
        tuesday: e => {
            const {normalize: n} = e;
            return n(["Tuesday"])
        }
        ,
        wednesday: e => {
            const {normalize: n} = e;
            return n(["Wednesday"])
        }
        ,
        thursday: e => {
            const {normalize: n} = e;
            return n(["Thursday"])
        }
        ,
        friday: e => {
            const {normalize: n} = e;
            return n(["Friday"])
        }
        ,
        saturday: e => {
            const {normalize: n} = e;
            return n(["Saturday"])
        }
        ,
        sunday: e => {
            const {normalize: n} = e;
            return n(["Sunday"])
        }
        ,
        everyDay: e => {
            const {normalize: n} = e;
            return n(["Every Day"])
        }
        ,
        everyWeek: e => {
            const {normalize: n} = e;
            return n(["Every Week"])
        }
        ,
        everyMonth: e => {
            const {normalize: n} = e;
            return n(["Every Month"])
        }
        ,
        "1ST": e => {
            const {normalize: n} = e;
            return n(["1st"])
        }
        ,
        "2ND": e => {
            const {normalize: n} = e;
            return n(["2nd"])
        }
        ,
        "3RD": e => {
            const {normalize: n} = e;
            return n(["3rd"])
        }
        ,
        "4TH": e => {
            const {normalize: n} = e;
            return n(["4th"])
        }
        ,
        "5TH": e => {
            const {normalize: n} = e;
            return n(["5th"])
        }
        ,
        "6TH": e => {
            const {normalize: n} = e;
            return n(["6th"])
        }
        ,
        "7TH": e => {
            const {normalize: n} = e;
            return n(["7th"])
        }
        ,
        "8TH": e => {
            const {normalize: n} = e;
            return n(["8th"])
        }
        ,
        "9TH": e => {
            const {normalize: n} = e;
            return n(["9th"])
        }
        ,
        "10TH": e => {
            const {normalize: n} = e;
            return n(["10th"])
        }
        ,
        "11TH": e => {
            const {normalize: n} = e;
            return n(["11th"])
        }
        ,
        "12TH": e => {
            const {normalize: n} = e;
            return n(["12th"])
        }
        ,
        "13TH": e => {
            const {normalize: n} = e;
            return n(["13th"])
        }
        ,
        "14TH": e => {
            const {normalize: n} = e;
            return n(["14th"])
        }
        ,
        "15TH": e => {
            const {normalize: n} = e;
            return n(["15th"])
        }
        ,
        "16TH": e => {
            const {normalize: n} = e;
            return n(["16th"])
        }
        ,
        "17TH": e => {
            const {normalize: n} = e;
            return n(["17th"])
        }
        ,
        "18TH": e => {
            const {normalize: n} = e;
            return n(["18th"])
        }
        ,
        "19TH": e => {
            const {normalize: n} = e;
            return n(["19th"])
        }
        ,
        "20TH": e => {
            const {normalize: n} = e;
            return n(["20th"])
        }
        ,
        "21TH": e => {
            const {normalize: n} = e;
            return n(["21st"])
        }
        ,
        "22TH": e => {
            const {normalize: n} = e;
            return n(["22nd"])
        }
        ,
        "23TH": e => {
            const {normalize: n} = e;
            return n(["23rd"])
        }
        ,
        "24TH": e => {
            const {normalize: n} = e;
            return n(["24th"])
        }
        ,
        "25TH": e => {
            const {normalize: n} = e;
            return n(["25th"])
        }
        ,
        "26TH": e => {
            const {normalize: n} = e;
            return n(["26th"])
        }
        ,
        "27TH": e => {
            const {normalize: n} = e;
            return n(["27th"])
        }
        ,
        "28TH": e => {
            const {normalize: n} = e;
            return n(["28th"])
        }
    },
    timeZone: {
        datelineStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-12:00) International Date Line West"])
        }
        ,
        "utc-11": e => {
            const {normalize: n} = e;
            return n(["(UTC-11:00) Coordinated Universal Time-11"])
        }
        ,
        "utc-10": e => {
            const {normalize: n} = e;
            return n(["(UTC-10:00) Coordinated Universal Time-10"])
        }
        ,
        aleutianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-10:00) Aleutian Islands"])
        }
        ,
        hawaiianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-10:00) Hawaii"])
        }
        ,
        marquesasStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-09:30) Marquesas Islands"])
        }
        ,
        "utc-09": e => {
            const {normalize: n} = e;
            return n(["(UTC-09:00) Coordinated Universal Time-09"])
        }
        ,
        alaskanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-09:00) Alaska"])
        }
        ,
        "utc-08": e => {
            const {normalize: n} = e;
            return n(["(UTC-08:00) Coordinated Universal Time-08"])
        }
        ,
        pacificStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-08:00) Pacific Time (US & Canada)"])
        }
        ,
        "utc-07": e => {
            const {normalize: n} = e;
            return n(["(UTC-07:00) Coordinated Universal Time-07"])
        }
        ,
        usMountainStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-07:00) Arizona"])
        }
        ,
        mountainStandardTimeMexico: e => {
            const {normalize: n} = e;
            return n(["(UTC-07:00) Chihuahua, La Paz, Mazatlan"])
        }
        ,
        mountainStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-07:00) Mountain Time (US & Canada)"])
        }
        ,
        centralAmericaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-06:00) Central America"])
        }
        ,
        centralStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-06:00) Central Time (US & Canada)"])
        }
        ,
        easterIslandStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-06:00) Easter Island"])
        }
        ,
        centralStandardTimeMexico: e => {
            const {normalize: n} = e;
            return n(["(UTC-06:00) Mexico City, Monterrey"])
        }
        ,
        canadaCentralStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-06:00) Saskatchewan"])
        }
        ,
        "utc-05": e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Coordinated Universal Time-05"])
        }
        ,
        saPacificStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Bogota, Lima, Rio Branco"])
        }
        ,
        easternStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Eastern Time (US & Canada)"])
        }
        ,
        haitiStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Haiti"])
        }
        ,
        cubaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Havana"])
        }
        ,
        usEasternStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-05:00) Indiana (East)"])
        }
        ,
        "utc-04": e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Coordinated Universal Time-04"])
        }
        ,
        venezuelaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Caracas"])
        }
        ,
        paraguayStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Asuncion"])
        }
        ,
        atlanticStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Atlantic Time (Canada)"])
        }
        ,
        centralBrazilianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Cuiaba"])
        }
        ,
        saWesternStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) La Paz, Manaus, San Juan"])
        }
        ,
        pacificSaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Santiago"])
        }
        ,
        turksAndCaicosStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-04:00) Turks and Caicos"])
        }
        ,
        newfoundlandStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:30) Newfoundland"])
        }
        ,
        "utc-03": e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Coordinated Universal Time-03"])
        }
        ,
        tocantinsStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Araguaina"])
        }
        ,
        eSouthAmericaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Brasilia"])
        }
        ,
        saEasternStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Cayenne, Fortaleza"])
        }
        ,
        argentinaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) City of Buenos Aires"])
        }
        ,
        greenlandStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Greenland"])
        }
        ,
        montevideoStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Montevideo"])
        }
        ,
        saintPierreStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Saint Pierre and Miquelon"])
        }
        ,
        bahiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-03:00) Salvador"])
        }
        ,
        "utc-02": e => {
            const {normalize: n} = e;
            return n(["(UTC-02:00) Coordinated Universal Time-02"])
        }
        ,
        "utc-01": e => {
            const {normalize: n} = e;
            return n(["(UTC-01:00) Coordinated Universal Time-01"])
        }
        ,
        azoresStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-01:00) Azores"])
        }
        ,
        capeVerdeStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC-01:00) Cabo Verde Is."])
        }
        ,
        utc: e => {
            const {normalize: n} = e;
            return n(["(UTC) Coordinated Universal Time"])
        }
        ,
        moroccoStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+00:00) Casablanca"])
        }
        ,
        gmtStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+00:00) Dublin, Lisbon, London"])
        }
        ,
        greenwichStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+00:00) Monrovia, Reykjavik"])
        }
        ,
        "utc+01": e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Coordinated Universal Time+01"])
        }
        ,
        wEuropeStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Amsterdam, Berlin, Rome, Stockholm, Vienna"])
        }
        ,
        centralEuropeStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"])
        }
        ,
        romanceStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Brussels, Copenhagen, Madrid, Paris"])
        }
        ,
        centralEuropeanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb"])
        }
        ,
        namibiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+01:00) Windhoek"])
        }
        ,
        "utc+02": e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Coordinated Universal Time+02"])
        }
        ,
        jordanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Amman"])
        }
        ,
        gtbStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Athens, Bucharest"])
        }
        ,
        middleEastStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Beirut"])
        }
        ,
        egyptStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Cairo"])
        }
        ,
        eEuropeStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Chisinau"])
        }
        ,
        syriaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Damascus"])
        }
        ,
        westBankStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Gaza, Hebron"])
        }
        ,
        southAfricaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Harare"])
        }
        ,
        fleStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"])
        }
        ,
        israelStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Jerusalem"])
        }
        ,
        kaliningradStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Kaliningrad"])
        }
        ,
        libyaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+02:00) Tripoli"])
        }
        ,
        "utc+03": e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Coordinated Universal Time+03"])
        }
        ,
        arabicStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Baghdad"])
        }
        ,
        turkeyStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Istanbul"])
        }
        ,
        arabStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Kuwait, Riyadh"])
        }
        ,
        belarusStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Minsk"])
        }
        ,
        russianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Moscow, St. Petersburg, Volgograd"])
        }
        ,
        eAfricaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:00) Nairobi"])
        }
        ,
        iranStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+03:30) Tehran"])
        }
        ,
        "utc+04": e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Coordinated Universal Time+04"])
        }
        ,
        arabianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Abu Dhabi, Muscat"])
        }
        ,
        astrakhanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Astrakhan, Ulyanovsk"])
        }
        ,
        azerbaijanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Baku"])
        }
        ,
        russiaTimeZone3: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Samara"])
        }
        ,
        mauritiusStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Port Louis"])
        }
        ,
        georgianStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Tbilisi"])
        }
        ,
        caucasusStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:00) Yerevan"])
        }
        ,
        afghanistanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+04:30) Kabul"])
        }
        ,
        "utc+05": e => {
            const {normalize: n} = e;
            return n(["(UTC+05:00) Coordinated Universal Time+05"])
        }
        ,
        westAsiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:00) Ashgabat, Tashkent"])
        }
        ,
        ekaterinburgStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:00) Ekaterinburg"])
        }
        ,
        pakistanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:00) Karachi"])
        }
        ,
        indiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi"])
        }
        ,
        sriLankaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:30) Sri Jayawardenepura"])
        }
        ,
        nepalStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+05:45) Kathmandu"])
        }
        ,
        "utc+06": e => {
            const {normalize: n} = e;
            return n(["(UTC+06:00) Coordinated Universal Time+06"])
        }
        ,
        centralAsiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+06:00) Astana"])
        }
        ,
        bangladeshStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+06:00) Dhaka"])
        }
        ,
        omskStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+06:00) Omsk"])
        }
        ,
        myanmarStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+06:30) Yangon (Rangoon)"])
        }
        ,
        "utc+07": e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Coordinated Universal Time+07"])
        }
        ,
        seAsiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Bangkok, Hanoi, Jakarta"])
        }
        ,
        altaiStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Barnaul"])
        }
        ,
        wMongoliaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Hovd"])
        }
        ,
        northAsiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Krasnoyarsk"])
        }
        ,
        nCentralAsiaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Novosibirsk"])
        }
        ,
        tomskStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+07:00) Tomsk"])
        }
        ,
        "utc+08": e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Coordinated Universal Time+08"])
        }
        ,
        chinaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi"])
        }
        ,
        northAsiaEastStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Irkutsk"])
        }
        ,
        singaporeStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Kuala Lumpur, Singapore"])
        }
        ,
        wAustraliaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Perth"])
        }
        ,
        taipeiStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Taipei"])
        }
        ,
        ulaanbaatarStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:00) Ulaanbaatar"])
        }
        ,
        northKoreaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:30) Pyongyang"])
        }
        ,
        ausCentralWStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+08:45) Eucla"])
        }
        ,
        "utc+09": e => {
            const {normalize: n} = e;
            return n(["(UTC+09:00) Coordinated Universal Time+09"])
        }
        ,
        transbaikalStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:00) Chita"])
        }
        ,
        tokyoStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:00) Osaka, Tokyo"])
        }
        ,
        koreaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:00) Seoul"])
        }
        ,
        yakutskStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:00) Yakutsk"])
        }
        ,
        cenAustraliaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:30) Adelaide"])
        }
        ,
        ausCentralStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+09:30) Darwin"])
        }
        ,
        "utc+10": e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Coordinated Universal Time+10"])
        }
        ,
        eAustraliaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Brisbane"])
        }
        ,
        ausEasternStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Canberra, Melbourne, Sydney"])
        }
        ,
        westPacificStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Guam, Port Moresby"])
        }
        ,
        tasmaniaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Hobart"])
        }
        ,
        vladivostokStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:00) Vladivostok"])
        }
        ,
        lordHoweStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+10:30) Lord Howe Island"])
        }
        ,
        "utc+11": e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Coordinated Universal Time+11"])
        }
        ,
        bougainvilleStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Bougainville Island"])
        }
        ,
        magadanStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Magadan"])
        }
        ,
        norfolkStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Norfolk Island"])
        }
        ,
        sakhalinStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Sakhalin"])
        }
        ,
        centralPacificStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+11:00) Solomon Is., New Caledonia"])
        }
        ,
        "utc+12": e => {
            const {normalize: n} = e;
            return n(["(UTC+12:00) Coordinated Universal Time+12"])
        }
        ,
        russiaTimeZone11: e => {
            const {normalize: n} = e;
            return n(["(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky"])
        }
        ,
        newZealandStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+12:00) Auckland, Wellington"])
        }
        ,
        fijiStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+12:00) Fiji"])
        }
        ,
        chathamIslandsStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+12:45) Chatham Islands"])
        }
        ,
        "utc+13": e => {
            const {normalize: n} = e;
            return n(["(UTC+13:00) Coordinated Universal Time+13"])
        }
        ,
        tongaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+13:00) Nuku'alofa"])
        }
        ,
        samoaStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+13:00) Samoa"])
        }
        ,
        lineIslandsStandardTime: e => {
            const {normalize: n} = e;
            return n(["(UTC+14:00) Kiritimati Island"])
        }
    },
    validate: {
        required: e => {
            const {normalize: n} = e;
            return n(["This field is required."])
        }
        ,
        invalid: e => {
            const {normalize: n} = e;
            return n(["Invalid format."])
        }
        ,
        email: e => {
            const {normalize: n} = e;
            return n(["Invalid email format."])
        }
        ,
        numberGreater: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["This number should be greater than ", i(o("min")), "."])
        }
        ,
        numberLess: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["This number should be less than ", i(o("max")), "."])
        }
        ,
        numberRange: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["This number should be between ", i(o("min")), " and ", i(o("max")), "."])
        }
        ,
        lengthLeast: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enter at least ", i(o("min")), " characters."])
        }
        ,
        lengthMax: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enter at most ", i(o("max")), " characters."])
        }
        ,
        lengthRange: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enter ", i(o("min")), " to ", i(o("max")), " characters."])
        }
        ,
        ipLoop: e => {
            const {normalize: n} = e;
            return n(["The address cannot be loopback address."])
        }
        ,
        ipDType: e => {
            const {normalize: n} = e;
            return n(["The IP address cannot be a Class D address."])
        }
        ,
        ipEType: e => {
            const {normalize: n} = e;
            return n(["The IP address cannot be a Class E address."])
        }
        ,
        ipAllZero: e => {
            const {normalize: n} = e;
            return n(["The address cannot be 0.0.0.0."])
        }
        ,
        ipAllOne: e => {
            const {normalize: n} = e;
            return n(["The address cannot be 255.255.255.255."])
        }
        ,
        ipStartWithOne: e => {
            const {normalize: n} = e;
            return n(["The address cannot start with 255."])
        }
        ,
        ipStartWithZero: e => {
            const {normalize: n} = e;
            return n(["The address cannot start with 0."])
        }
        ,
        invalidIp: e => {
            const {normalize: n} = e;
            return n(["Invalid IP address. Please enter another one."])
        }
        ,
        defaultOrRange: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Please use the default value ", i(o("default")), " or enter a value between ", i(o("min")), " and ", i(o("max")), "."])
        }
        ,
        ipv6PrefixWith2002: e => {
            const {normalize: n} = e;
            return n(["The IPv6 address prefix cannot start with 2002."])
        }
        ,
        startingTimeEarlierEndingTime: e => {
            const {normalize: n} = e;
            return n(["The starting time should be earlier than the ending time."])
        }
        ,
        ipRange: e => {
            const {normalize: n} = e;
            return n(["The ending IP should be greater than the starting IP."])
        }
        ,
        ipRangeOnSubNet: e => {
            const {normalize: n} = e;
            return n(["The IP address pool and LAN IP address should be in the same subnet."])
        }
        ,
        portRange: e => {
            const {normalize: n} = e;
            return n(["This number should be between 1 and 65535."])
        }
        ,
        maskNoAllOne: e => {
            const {normalize: n} = e;
            return n(["Subnet mask cannot be 255.255.255.255."])
        }
        ,
        nameInVpnCheck: e => {
            const {normalize: n} = e;
            return n(["Please enter 1-15 alpha characters, numbers, - and _."])
        }
        ,
        passwordNoSpaceCheck: e => {
            const {normalize: n} = e;
            return n(["Must contain no space(s)."])
        }
        ,
        passwordLengthCheck: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Must be ", i(o("min")), "-32 characters long."])
        }
        ,
        passwordSymbolCheck: e => {
            const {normalize: n} = e;
            return n(["Must contain at least two types of the following characters: letters, numbers and symbols."])
        }
        ,
        passwordConsecutiveCheck: e => {
            const {normalize: n} = e;
            return n(["Cannot include consecutive identical characters."])
        }
        ,
        invalidFileType: e => {
            const {normalize: n} = e;
            return n(["Invalid file type."])
        }
        ,
        fileSizeMax: e => {
            const {normalize: n} = e;
            return n(["The file size has exceeded the limit."])
        }
        ,
        simPin: e => {
            const {normalize: n} = e;
            return n(["The PIN should consist of 4 digits."])
        }
        ,
        simDialNum: e => {
            const {normalize: n} = e;
            return n(["The dial number should only contain '#','*' or digits."])
        }
        ,
        deviceNameCheck: e => {
            const {normalize: n} = e;
            return n(["Device Name should only contain A~z or 0~9 or '-' or '_'."])
        }
    },
    error: {
        10000139: e => {
            const {normalize: n} = e;
            return n(["Unable to check for update. Make sure you are connected to the Internet and try again."])
        }
        ,
        10000158: e => {
            const {normalize: n} = e;
            return n(["The WAN port is unplugged."])
        }
        ,
        10000159: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the Internet. Please contact your service provider or try again later."])
        }
        ,
        10000160: e => {
            const {normalize: n} = e;
            return n(["Unable to obtain IP address from the DHCP Server. Please check the WAN connection type or try again later."])
        }
        ,
        10000161: e => {
            const {normalize: n} = e;
            return n(["PPPoE authentication failed. Please check your username and password."])
        }
        ,
        10000162: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the PPPoE server."])
        }
        ,
        10000164: e => {
            const {normalize: n} = e;
            return n(["PPTP authentication failed. Please check your username and password."])
        }
        ,
        10000165: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the PPTP server."])
        }
        ,
        10000167: e => {
            const {normalize: n} = e;
            return n(["L2TP authentication failed. Please check your username and password."])
        }
        ,
        10000168: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the L2TP server."])
        }
        ,
        10000169: e => {
            const {normalize: n} = e;
            return n(["Unknown error. Please try again later."])
        }
        ,
        10000191: e => {
            const {normalize: n} = e;
            return n(["Unable to download the firmware file. Please try again later."])
        }
        ,
        10000192: e => {
            const {normalize: n} = e;
            return n(["Unable to update."])
        }
        ,
        10000194: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the cloud server. Please try again later."])
        }
        ,
        "00000001": e => {
            const {normalize: n} = e;
            return n(["Invalid file type."])
        }
        ,
        "00000002": e => {
            const {normalize: n} = e;
            return n(["Checksum error."])
        }
        ,
        "00000003": e => {
            const {normalize: n} = e;
            return n(["The file is too large."])
        }
        ,
        "00000004": e => {
            const {normalize: n} = e;
            return n(["Upload error."])
        }
        ,
        "00000005": e => {
            const {normalize: n} = e;
            return n(["Reboot error."])
        }
        ,
        "00000005_UPGRADE": e => {
            const {normalize: n} = e;
            return n(["Reboot error. Please try again later."])
        }
        ,
        "00000006": e => {
            const {normalize: n} = e;
            return n(["Unknown error."])
        }
        ,
        "00000007": e => {
            const {normalize: n} = e;
            return n(["The item already exists. Please enter another one."])
        }
        ,
        "00000045": e => {
            const {normalize: n} = e;
            return n(["Default Gateway and LAN IP address should be in a same subnet. Please enter another one."])
        }
        ,
        "00000047": e => {
            const {normalize: n} = e;
            return n(["The IP address and the router's LAN IP address should be in the same subnet. Please enter another one."])
        }
        ,
        "00000051": e => {
            const {normalize: n} = e;
            return n(["This MAC address already exists. Please enter another one."])
        }
        ,
        "00000056": e => {
            const {normalize: n} = e;
            return n(["The remote IP address and the current LAN IP address cannot be in the same subnet. Please enter another one."])
        }
        ,
        "00000059": e => {
            const {normalize: n} = e;
            return n(["Invalid Subnet Mask and LAN IP address. Please enter another one."])
        }
        ,
        "00000060": e => {
            const {normalize: n} = e;
            return n(["WAN IP address and LAN IP address cannot be in the same subnet. Please enter another one."])
        }
        ,
        "00000062": e => {
            const {normalize: n} = e;
            return n(["This field is required."])
        }
        ,
        "00000064": e => {
            const {normalize: n} = e;
            return n(["Failed to block for you are managing the router with this device."])
        }
        ,
        "00000065": e => {
            const {normalize: n} = e;
            return n(["This item conflicts with existed ones. Please try again."])
        }
        ,
        "00000066": e => {
            const {normalize: n} = e;
            return n(["The password should be 8 to 63 characters or 64 hexadecimal digits."])
        }
        ,
        "00000077": e => {
            const {normalize: n} = e;
            return n(["The IP address cannot be the same with the LAN IP address. Please enter another one."])
        }
        ,
        "00000080": e => {
            const {normalize: n} = e;
            return n(["Passwords mismatch. Please try again."])
        }
        ,
        "00000088": e => {
            const {normalize: n} = e;
            return n(["This operation is not allowed for remote management."])
        }
        ,
        "00000089": e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Maximum login attempts ", i(o("attemptTimes")), " exceeded. Please try again in two hours."])
        }
        ,
        "00000094": e => {
            const {normalize: n} = e;
            return n(["The VLAN IDs cannot be the same."])
        }
        ,
        "00000095": e => {
            const {normalize: n} = e;
            return n(["At least one Internet port is required."])
        }
        ,
        "00000107": e => {
            const {normalize: n} = e;
            return n(["The destination already exists."])
        }
        ,
        "00000110": e => {
            const {normalize: n} = e;
            return n(["The IP address and LAN IP address should be in the same subnet."])
        }
        ,
        "00000131": e => {
            const {normalize: n} = e;
            return n(["NTP Server cannot be loopback address."])
        }
        ,
        "00000150": e => {
            const {normalize: n} = e;
            return n(["Invalid Subnet Mask and LAN IP address. Please enter another one."])
        }
        ,
        "00004193": e => {
            const {normalize: n} = e;
            return n(["The password should be 8 to 63 characters or hexadecimal digits."])
        }
        ,
        "10000192_UPGRADE": e => {
            const {normalize: n} = e;
            return n(["Unable to update. Please try again later."])
        }
        ,
        "00000250": e => {
            const {normalize: n} = e;
            return n(["The folder does not exist."])
        }
        ,
        "00000251": e => {
            const {normalize: n} = e;
            return n(["Please specify a folder for the downloads."])
        }
        ,
        "00000252": e => {
            const {normalize: n} = e;
            return n(["Download folder error."])
        }
        ,
        "00000253": e => {
            const {normalize: n} = e;
            return n(["USB device is unplugged!"])
        }
        ,
        "00000254": e => {
            const {normalize: n} = e;
            return n(["No USB device!"])
        }
        ,
        "00000256": e => {
            const {normalize: n} = e;
            return n(["Content must be up to 31 characters."])
        }
        ,
        "00000257": e => {
            const {normalize: n} = e;
            return n(["Invalid file format."])
        }
        ,
        "00000259": e => {
            const {normalize: n} = e;
            return n(["Password must be 8-16 alpha characters, numbers and _."])
        }
        ,
        "00000266": e => {
            const {normalize: n} = e;
            return n(["Disconnected from the internet. Please check the hardware connection and then try again."])
        }
        ,
        "00000273": e => {
            const {normalize: n} = e;
            return n(["This download item already exists."])
        }
        ,
        E3002: e => {
            const {normalize: n} = e;
            return n(["Request timed out."])
        }
        ,
        E10000: e => {
            const {normalize: n} = e;
            return n(["Common error."])
        }
        ,
        E20002: e => {
            const {normalize: n} = e;
            return n(["Request timed out."])
        }
        ,
        E20003: e => {
            const {normalize: n} = e;
            return n(["The cloud server is busy. Please try again later."])
        }
        ,
        E20107: e => {
            const {normalize: n} = e;
            return n(["Invalid input."])
        }
        ,
        E20200: e => {
            const {normalize: n} = e;
            return n(["Invalid email format."])
        }
        ,
        E20502: e => {
            const {normalize: n} = e;
            return n(["Unable to bind the device. Please try again later."])
        }
        ,
        E20503: e => {
            const {normalize: n} = e;
            return n(["Unable to unbind the device. Please try again later."])
        }
        ,
        E20506: e => {
            const {normalize: n} = e;
            return n(["Operation failed. The device is already bound to another cloud account."])
        }
        ,
        E20507: e => {
            const {normalize: n} = e;
            return n(["This device is unbound from the account."])
        }
        ,
        E20508: e => {
            const {normalize: n} = e;
            return n(["The number of bound accounts has already reached the maximum limit."])
        }
        ,
        E20509: e => {
            const {normalize: n} = e;
            return n(["User accounts do not have the right to bind new users."])
        }
        ,
        E20571: e => {
            const {normalize: n} = e;
            return n(["This device is offline."])
        }
        ,
        E20580: e => {
            const {normalize: n} = e;
            return n(["You cannot log in to this router since you are not a manager of it. Please ask the owner to add you to the managers list."])
        }
        ,
        E20600: e => {
            const {normalize: n} = e;
            return n(["This email is not registered."])
        }
        ,
        E20601: e => {
            const {normalize: n} = e;
            return n(["Incorrect password."])
        }
        ,
        E20602: e => {
            const {normalize: n} = e;
            return n(["This email is not activated yet. Log in with another email address or check your inbox for the activation email or resend it."])
        }
        ,
        E20603: e => {
            const {normalize: n} = e;
            return n(["This email is already registered."])
        }
        ,
        E20604: e => {
            const {normalize: n} = e;
            return n(["Invalid username. Please enter an email address or phone number."])
        }
        ,
        E20606: e => {
            const {normalize: n} = e;
            return n(["Unable to send the account activation email."])
        }
        ,
        E20615: e => {
            const {normalize: n} = e;
            return n(["Invalid password. Please enter 6-32 ASCII characters without spaces."])
        }
        ,
        E20616: e => {
            const {normalize: n} = e;
            return n(["Invalid password. Please enter 6-32 ASCII characters without spaces."])
        }
        ,
        E20617: e => {
            const {normalize: n} = e;
            return n(["This account does not exist."])
        }
        ,
        E20618: e => {
            const {normalize: n} = e;
            return n(["This account does not exist."])
        }
        ,
        E20620: e => {
            const {normalize: n} = e;
            return n(["Invalid nickname. Please enter 1-64 characters."])
        }
        ,
        E20661: e => {
            const {normalize: n} = e;
            return n(["This TP-Link ID is locked for 2 hours since too many login attempts have been made."])
        }
        ,
        E20662: e => {
            const {normalize: n} = e;
            return n(["The device is locked. In the next 24 hours, the device will not respond to any verification code request."])
        }
        ,
        E20671: e => {
            const {normalize: n} = e;
            return n(["Unable to verify account."])
        }
        ,
        E20672: e => {
            const {normalize: n} = e;
            return n(["Unable to verify account. The account activation link has expired. Please submit a new request."])
        }
        ,
        E20673: e => {
            const {normalize: n} = e;
            return n(["The password reset link has expired. Please submit a new request."])
        }
        ,
        E20674: e => {
            const {normalize: n} = e;
            return n(["Unable to reset password."])
        }
        ,
        E20675: e => {
            const {normalize: n} = e;
            return n(["This account is currently logged in elsewhere."])
        }
        ,
        E22000: e => {
            const {normalize: n} = e;
            return n(["Invalid input."])
        }
        ,
        E22001: e => {
            const {normalize: n} = e;
            return n(["Domain name is already registered."])
        }
        ,
        E22002: e => {
            const {normalize: n} = e;
            return n(["The number of registered domain names has already reached the maximum limit."])
        }
        ,
        E22003: e => {
            const {normalize: n} = e;
            return n(["The number of bound domain names has already reached the maximum limit."])
        }
        ,
        E22004: e => {
            const {normalize: n} = e;
            return n(["This domain name is already bound to another device."])
        }
        ,
        E22006: e => {
            const {normalize: n} = e;
            return n(["System error. Please try again later."])
        }
        ,
        E22007: e => {
            const {normalize: n} = e;
            return n(["Domain name contains sensitive words. Please try another one."])
        }
        ,
        E22008: e => {
            const {normalize: n} = e;
            return n(["Domain name does not exist."])
        }
        ,
        E22010: e => {
            const {normalize: n} = e;
            return n(["The number of registered domain names has already reached the maximum limit."])
        }
        ,
        E22011: e => {
            const {normalize: n} = e;
            return n(["Up to 64 devices can be added."])
        }
        ,
        E22012: e => {
            const {normalize: n} = e;
            return n(["Some devices were not added to the list. Please try again later."])
        }
        ,
        E22013: e => {
            const {normalize: n} = e;
            return n(["The IP address and Wireguard VPN IP address cannot be in the same subnet."])
        }
        ,
        E22014: e => {
            const {normalize: n} = e;
            return n(["The IP address and Wireguard VPN IP address cannot be in the same subnet."])
        }
        ,
        E22015: e => {
            const {normalize: n} = e;
            return n(["The IP address and OpenVPN IP address cannot be in the same subnet."])
        }
        ,
        E22016: e => {
            const {normalize: n} = e;
            return n(["The IP address and PPTP VPN IP address cannot be in the same subnet."])
        }
        ,
        E22017: e => {
            const {normalize: n} = e;
            return n(["The IP address and PPTP VPN IP address cannot be in the same subnet."])
        }
        ,
        E22018: e => {
            const {normalize: n} = e;
            return n(["The IP address and L2TP VPN IP address cannot be in the same subnet."])
        }
        ,
        E22019: e => {
            const {normalize: n} = e;
            return n(["The IP address and L2TP VPN IP address cannot be in the same subnet."])
        }
        ,
        E22020: e => {
            const {normalize: n} = e;
            return n(["The IP address conflicts with the reserved IP address."])
        }
        ,
        E22021: e => {
            const {normalize: n} = e;
            return n(["The client IP address conflicts with the IP address of currently connected device."])
        }
        ,
        E22041: e => {
            const {normalize: n} = e;
            return n(["Unable to load weather. Please check the internet connection."])
        }
        ,
        E22042: e => {
            const {normalize: n} = e;
            return n(["Location not updated. Please try again."])
        }
        ,
        E22043: e => {
            const {normalize: n} = e;
            return n(["Location does not exist. Please enter another one."])
        }
        ,
        E22060: e => {
            const {normalize: n} = e;
            return n(["Invalid username/email or password."])
        }
        ,
        E22061: e => {
            const {normalize: n} = e;
            return n(["The verification code is required because 2FA is enabled."])
        }
        ,
        E22062: e => {
            const {normalize: n} = e;
            return n(["This IP address has been blocked due to multiple accesses within a short period."])
        }
        ,
        E22063: e => {
            const {normalize: n} = e;
            return n(["Invalid token."])
        }
        ,
        E22064: e => {
            const {normalize: n} = e;
            return n(["Network connection timeout."])
        }
        ,
        E22065: e => {
            const {normalize: n} = e;
            return n(["Blocked for security reasons."])
        }
        ,
        E22066: e => {
            const {normalize: n} = e;
            return n(["The current server is unavailable. Please switch to another server."])
        }
        ,
        E22080: e => {
            const {normalize: n} = e;
            return n(["TAP mode is not supported."])
        }
        ,
        E50101: e => {
            const {normalize: n} = e;
            return n(["The WAN port is unplugged."])
        }
        ,
        E50102: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the Internet. Please contact your service provider or try again later."])
        }
        ,
        E50103: e => {
            const {normalize: n} = e;
            return n(["Unable to obtain IP address from the DHCP Server. Please check the WAN connection type or try again later."])
        }
        ,
        E50111: e => {
            const {normalize: n} = e;
            return n(["PPPoE authentication failed. Please check your username and password."])
        }
        ,
        E50112: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the PPPoE server."])
        }
        ,
        E50121: e => {
            const {normalize: n} = e;
            return n(["PPTP authentication failed. Please check your username and password."])
        }
        ,
        E50122: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the PPTP server."])
        }
        ,
        E50131: e => {
            const {normalize: n} = e;
            return n(["L2TP authentication failed. Please check your username and password."])
        }
        ,
        E50132: e => {
            const {normalize: n} = e;
            return n(["Unable to connect to the L2TP server."])
        }
        ,
        E50140: e => {
            const {normalize: n} = e;
            return n(["Unknown error. Please try again later."])
        }
        ,
        E51215: e => {
            const {normalize: n} = e;
            return n(["Request timed out. Please check your Internet connection and try again later."])
        }
        ,
        E_CLOUD_SERVER: e => {
            const {normalize: n} = e;
            return n(["Server error. Please try again later."])
        }
        ,
        E5000: e => {
            const {normalize: n} = e;
            return n(["No internet connection. Please log in with local password."])
        }
        ,
        E5001: e => {
            const {normalize: n} = e;
            return n(["Incorrect TP-Link ID (email)."])
        }
        ,
        E5002: e => {
            const {normalize: n} = e;
            return n(["Incorrect password."])
        }
        ,
        internalServer: e => {
            const {normalize: n} = e;
            return n(["Interface return exception."])
        }
        ,
        deviceDisconnected: e => {
            const {normalize: n} = e;
            return n(["Device disconnected."])
        }
    },
    networkCheck: {
        networkCheck: e => {
            const {normalize: n} = e;
            return n(["Network Check"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Check your network for better network performance and security."])
        }
        ,
        networkSecurity: e => {
            const {normalize: n} = e;
            return n(["Network Security"])
        }
        ,
        routerSecurity: e => {
            const {normalize: n} = e;
            return n(["Router Security"])
        }
        ,
        wirelessSecurity: e => {
            const {normalize: n} = e;
            return n(["Wireless Security"])
        }
        ,
        respondPingsWan: e => {
            const {normalize: n} = e;
            return n(["Respond to Pings from WAN"])
        }
        ,
        remoteManagement: e => {
            const {normalize: n} = e;
            return n(["Remote Management"])
        }
        ,
        remoteManagementTip: e => {
            const {normalize: n} = e;
            return n(["Remote Management is disabled."])
        }
        ,
        remoteManagementWarn: e => {
            const {normalize: n} = e;
            return n(["Remote Management is enabled and may cause potential risks."])
        }
        ,
        disabledRemoteManagement: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to disable Remote Management?"])
        }
        ,
        wirelessEncryption: e => {
            const {normalize: n} = e;
            return n(["Wireless Encryption"])
        }
        ,
        wirelessWarnTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " network is not encrypted and may cause potential risks."])
        }
        ,
        wirelessNoticeTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " network is not considered secure."])
        }
        ,
        respondPingTip: e => {
            const {normalize: n} = e;
            return n(["Respond to Pings from WAN is disabled."])
        }
        ,
        respondPingWarn: e => {
            const {normalize: n} = e;
            return n(["Respond to Pings from WAN is enabled and may cause potential risks."])
        }
        ,
        perfect: e => {
            const {normalize: n} = e;
            return n(["Perfect"])
        }
        ,
        incomplete: e => {
            const {normalize: n} = e;
            return n(["Incomplete"])
        }
        ,
        risk: e => {
            const {normalize: n, interpolate: i, named: o, plural: l} = e;
            return l([n(["1 risk"]), n([i(o("count")), " risks"])])
        }
        ,
        scan: e => {
            const {normalize: n} = e;
            return n(["SCAN"])
        }
        ,
        reScan: e => {
            const {normalize: n} = e;
            return n(["RESCAN"])
        }
        ,
        tapToCheckNetwork: e => {
            const {normalize: n} = e;
            return n(["Click SCAN to start checking your network."])
        }
        ,
        congratulation: e => {
            const {normalize: n} = e;
            return n(["Great! Your network is in good condition. Enjoy!"])
        }
        ,
        followingNeedOptimize: e => {
            const {normalize: n} = e;
            return n(["The following items can be optimized."])
        }
        ,
        checking_status: e => {
            const {normalize: n} = e;
            return n(["Checking..."])
        }
        ,
        scan_status: e => {
            const {normalize: n} = e;
            return n(["Scanning..."])
        }
        ,
        waiting_status: e => {
            const {normalize: n} = e;
            return n(["Waiting..."])
        }
        ,
        dmz: e => {
            const {normalize: n} = e;
            return n(["DMZ"])
        }
        ,
        portTrigger: e => {
            const {normalize: n} = e;
            return n(["Port Triggering"])
        }
        ,
        portForwarding: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding"])
        }
        ,
        guestNetwork: e => {
            const {normalize: n} = e;
            return n(["Guest Network"])
        }
        ,
        wifiPwdStrength: e => {
            const {normalize: n} = e;
            return n(["Wi-Fi Password"])
        }
        ,
        dmzWarn: e => {
            const {normalize: n} = e;
            return n(["DMZ is enabled and may cause potential risks."])
        }
        ,
        portTriggerWarn: e => {
            const {normalize: n} = e;
            return n(["Port Triggering is enabled and may cause potential risks."])
        }
        ,
        portForwardingWarn: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding is enabled and may cause potential risks."])
        }
        ,
        guestNetworkRisk: e => {
            const {normalize: n} = e;
            return n(["Guest Network is enabled, but security type is not considered secure. This may cause potential risks."])
        }
        ,
        wifiPwdStrengthWarn: e => {
            const {normalize: n} = e;
            return n(["Wi-Fi password is not strong. It is recommended to use a combination of letters, numbers, and symbols for the password."])
        }
        ,
        firmwareVerWarn: e => {
            const {normalize: n} = e;
            return n(["New firmware is available."])
        }
        ,
        dmzHover: e => {
            const {normalize: n} = e;
            return n(["DMZ is disabled."])
        }
        ,
        portTriggerHover: e => {
            const {normalize: n} = e;
            return n(["Port Triggering is disabled."])
        }
        ,
        portForwardingHover: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding is disabled."])
        }
        ,
        guestNetworkSafe: e => {
            const {normalize: n} = e;
            return n(["Guest Network is safe."])
        }
        ,
        wirelessEncryptionHover: e => {
            const {normalize: n} = e;
            return n(["Encryption mode is secure."])
        }
        ,
        wifiPwdStrengthHover: e => {
            const {normalize: n} = e;
            return n(["Wi-Fi password is strong."])
        }
        ,
        firmwareVerHover: e => {
            const {normalize: n} = e;
            return n(["Firmware is up-to-date."])
        }
        ,
        setSecurityType: e => {
            const {normalize: n} = e;
            return n(["Set Security Type"])
        }
        ,
        wifiPwdStrengthOptimizeText: e => {
            const {normalize: n} = e;
            return n(["Change Password"])
        }
        ,
        firmwareVerOptimizeText: e => {
            const {normalize: n} = e;
            return n(["Update Firmware"])
        }
        ,
        wifiPwdStrengthTooltipTitle: e => {
            const {normalize: n} = e;
            return n(["Wi-Fi Password"])
        }
        ,
        wifiPwdStrengthTooltip: e => {
            const {normalize: n} = e;
            return n(["To enhance the Wi-Fi security, set a password using a mix of digits, letters and symbols."])
        }
        ,
        guestNetworkTooltipTitle: e => {
            const {normalize: n} = e;
            return n(["Guest Network"])
        }
        ,
        guestNetworkTooltip: e => {
            const {normalize: n} = e;
            return n(["Guest Network provides your guests with a separate network without disclosing your main network, thus protecting your home network security. However, it is recommended to disable Guest Network when not needed to avoid being hacked."])
        }
        ,
        firmwareVerTooltipTitle: e => {
            const {normalize: n} = e;
            return n(["Firmware Update"])
        }
        ,
        firmwareVerTooltip: e => {
            const {normalize: n} = e;
            return n(["A new firmware is released to improve user experience by fixing bugs, enhancing stability or adding new features. It is recommended to update the firmware to the latest version."])
        }
        ,
        dmzTooltipTitle: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding, Port Triggering, DMZ"])
        }
        ,
        dmzTooltip: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding, Port Triggering, and DMZ allow access to the local devices and servers from the internet, which may bring security risks. It is recommended to disable these features when not needed. To disable these features, go to the NAT Forwarding page of the web management page of the router."])
        }
        ,
        modalContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Are you sure you want to disable ", i(o("feature")), "?"])
        }
        ,
        firmwareVerModalContent: e => {
            const {normalize: n} = e;
            return n(["New firmware is available for your router."])
        }
        ,
        firmwareVerCancelText: e => {
            const {normalize: n} = e;
            return n(["UPDATE NOW"])
        }
        ,
        firmwareVerOkText: e => {
            const {normalize: n} = e;
            return n(["UPDATE TONIGHT"])
        }
        ,
        firmwareAutoUpdate: e => {
            const {normalize: n} = e;
            return n(["Auto Update"])
        }
        ,
        autoUpdateTime: e => {
            const {normalize: n} = e;
            return n(["Update Time"])
        }
        ,
        autoUpdateNoteOne: e => {
            const {normalize: n} = e;
            return n(["Note: If the router detects anyone is using the internet at the time, the update will be rescheduled for the next day."])
        }
        ,
        autoUpdateNoteTwo: e => {
            const {normalize: n} = e;
            return n(["To enable Auto Update, your system time will be set to 'Get from Internet'."])
        }
        ,
        enhanceWirelessTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["The ", i(o("bandList")), " security type is not considered secure. To enhance your network security, please go to Advanced > Wireless > Wireless Settings to modify the Security settings."])
        }
        ,
        goToSettings: e => {
            const {normalize: n} = e;
            return n(["GO TO SETTINGS"])
        }
        ,
        saferPasswordTip: e => {
            const {normalize: n} = e;
            return n(["Your password is not strong. Please go to Advanced > Wireless > Wireless Settings to set a safer one."])
        }
        ,
        guestNetworkTip: e => {
            const {normalize: n} = e;
            return n(["The guest network security type is not considered secure. Please go to Advanced > Wireless > Guest Network to modify the Security settings."])
        }
        ,
        remoteTooltip: e => {
            const {normalize: n} = e;
            return n(["Remote Management allows you to access the web management page of the router from the internet, which may bring security risks. It is recommended to disable this feature when not needed. To disable it, go to the Administration page of the web management page of the router."])
        }
        ,
        pingsTooltip: e => {
            const {normalize: n} = e;
            return n(["It is recommended to disable this feature to ignore ping packets from the WAN, thus protecting your network from potential attacks."])
        }
        ,
        encryptionTooltip: e => {
            const {normalize: n} = e;
            return n(["It is recommended to encrypt your Wi-Fi network using WPA3."])
        }
    },
    init: {
        conflictInfo: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To avoid IP conflict with the front-end device, your router's IP address has been changed to ", i(o("new_addr")), " ."])
        }
        ,
        conflictConfirm: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Do you want to continue to visit ", i(o("dst_addr")), " ?"])
        }
    },
    qos: {
        qos: e => {
            const {normalize: n} = e;
            return n(["QoS"])
        }
        ,
        globalSettings: e => {
            const {normalize: n} = e;
            return n(["Global Settings"])
        }
        ,
        globalSettingsInstruction: e => {
            const {normalize: n} = e;
            return n(["Prioritize the Internet traffic of specific device to guarantee a faster connection."])
        }
        ,
        downloadBandwidth: e => {
            const {normalize: n} = e;
            return n(["Download Bandwidth"])
        }
        ,
        uploadBandwidth: e => {
            const {normalize: n} = e;
            return n(["Upload Bandwidth"])
        }
        ,
        currentTime: e => {
            const {normalize: n} = e;
            return n(["Current Time"])
        }
        ,
        timeSettings: e => {
            const {normalize: n} = e;
            return n(["Time Settings"])
        }
        ,
        devicePriority: e => {
            const {normalize: n} = e;
            return n(["Device Priority"])
        }
        ,
        realTimeRate: e => {
            const {normalize: n} = e;
            return n(["Real-time Rate"])
        }
        ,
        trafficUsage: e => {
            const {normalize: n} = e;
            return n(["Traffic Usage"])
        }
        ,
        highPriority: e => {
            const {normalize: n} = e;
            return n(["High Priority"])
        }
        ,
        timing: e => {
            const {normalize: n} = e;
            return n(["Timing"])
        }
        ,
        always: e => {
            const {normalize: n} = e;
            return n(["Always"])
        }
        ,
        schedule: e => {
            const {normalize: n} = e;
            return n(["Schedule"])
        }
        ,
        repeat: e => {
            const {normalize: n} = e;
            return n(["Repeat"])
        }
        ,
        nextDayTip: e => {
            const {normalize: n} = e;
            return n(["(next day)"])
        }
        ,
        remaining: e => {
            const {normalize: n} = e;
            return n(["Remaining"])
        }
        ,
        scheduleOn: e => {
            const {normalize: n} = e;
            return n(["On"])
        }
        ,
        scheduleOff: e => {
            const {normalize: n} = e;
            return n(["Off"])
        }
        ,
        turnOn: e => {
            const {normalize: n} = e;
            return n(["TURN ON"])
        }
        ,
        turnOnTip: e => {
            const {normalize: n} = e;
            return n(["If you turn on High Priority, the Speed Limit feature will be disabled on this device."])
        }
    },
    moreFeatures: {
        moreFeatures: e => {
            const {normalize: n} = e;
            return n(["More Features"])
        }
        ,
        moreFeaturesInstruction: e => {
            const {normalize: n} = e;
            return n(["Download the Tether app and subscribe to enjoy the full features of HomeShield."])
        }
        ,
        startFreeApp: e => {
            const {normalize: n} = e;
            return n(["Start your 30-day free trial on Tether"])
        }
        ,
        compareBP: e => {
            const {normalize: n} = e;
            return n(["Compare Basic and Pro Features"])
        }
        ,
        realTimePro: e => {
            const {normalize: n} = e;
            return n(["Real-Time Protection"])
        }
        ,
        parentalControls: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
        ,
        usageAnalysis: e => {
            const {normalize: n} = e;
            return n(["Usage Analysis"])
        }
        ,
        securityTitle: e => {
            const {normalize: n} = e;
            return n(["Detect and identify cyber threats to keep your privacy and connected devices protected."])
        }
        ,
        securityIot: e => {
            const {normalize: n} = e;
            return n(["IoT Protection"])
        }
        ,
        securityIotTXT: e => {
            const {normalize: n} = e;
            return n(["Get real-time security for your Internet of Things"])
        }
        ,
        securityIntrusion: e => {
            const {normalize: n} = e;
            return n(["Intrusion Prevention System"])
        }
        ,
        securityIntrusionTXT: e => {
            const {normalize: n} = e;
            return n(["Identifies and block network intruders"])
        }
        ,
        securityFilter: e => {
            const {normalize: n} = e;
            return n(["Malicious Content Filter"])
        }
        ,
        securityFilterTXT: e => {
            const {normalize: n} = e;
            return n(["Block malicious content"])
        }
        ,
        securityDdos: e => {
            const {normalize: n} = e;
            return n(["DDoS Protection"])
        }
        ,
        securityDdosTXT: e => {
            const {normalize: n} = e;
            return n(["Protects your home network from DDoS attacks"])
        }
        ,
        parentalControlsTitle: e => {
            const {normalize: n} = e;
            return n(["Easily manage your kid's online activities by blocking inappropriate content, setting online time limits, and creating flexible schedules."])
        }
        ,
        flexible: e => {
            const {normalize: n} = e;
            return n(["Flexible Time Controls"])
        }
        ,
        flexibleTXT: e => {
            const {normalize: n} = e;
            return n(['Ensure your kids maintain healthy digital habits by setting daily online time allowances and "No Internet" times during homework and bedtime.'])
        }
        ,
        powerfulContent: e => {
            const {normalize: n} = e;
            return n(["Powerful Content Filtering"])
        }
        ,
        powerfulContentTXT: e => {
            const {normalize: n} = e;
            return n(["Filter and block content that may not be appropriate for your kids to search for or read."])
        }
        ,
        onlineUsage: e => {
            const {normalize: n} = e;
            return n(["Online Usage Analysis"])
        }
        ,
        onlineUsageTXT: e => {
            const {normalize: n} = e;
            return n(["Get an overview of your kids' online time and network usage."])
        }
        ,
        usageAnalysisTitle: e => {
            const {normalize: n} = e;
            return n(["More detailed reports to help you get a complete understanding of your home Wi-Fi and each connected device."])
        }
        ,
        internetUse: e => {
            const {normalize: n} = e;
            return n(["Internet Use Overview"])
        }
        ,
        internetUseTXT: e => {
            const {normalize: n} = e;
            return n(["Get a complete understanding of your home network security and your family's online behavior."])
        }
        ,
        onlineTime: e => {
            const {normalize: n} = e;
            return n(["Online Time Analysis"])
        }
        ,
        onlineTimeTXT: e => {
            const {normalize: n} = e;
            return n(["Have a clear picture of how much time each family spends online and receive browsing advice."])
        }
        ,
        browserHistory: e => {
            const {normalize: n} = e;
            return n(["Browser History Analysis"])
        }
        ,
        browserHistoryTXT: e => {
            const {normalize: n} = e;
            return n(["Discover which websites your family members visit and the malicious ones blocked by HomeShield."])
        }
        ,
        networkSecurityTXT: e => {
            const {normalize: n} = e;
            return n(["Check the results of the scans and preventions against any potential cyber threats or attacks for your home network."])
        }
        ,
        endDevice: e => {
            const {normalize: n} = e;
            return n(["End Device Statistics"])
        }
        ,
        endDeviceTXT: e => {
            const {normalize: n} = e;
            return n(["Check for newly connected devices and closely monitor Security performance."])
        }
        ,
        basic: e => {
            const {normalize: n} = e;
            return n(["Basic"])
        }
        ,
        pro: e => {
            const {normalize: n} = e;
            return n(["Pro"])
        }
        ,
        compareH1Title: e => {
            const {normalize: n} = e;
            return n(["Network Protect"])
        }
        ,
        compareH1P1: e => {
            const {normalize: n} = e;
            return n(["Real-time IoT Protection"])
        }
        ,
        compareH1P2: e => {
            const {normalize: n} = e;
            return n(["Network Security Scan"])
        }
        ,
        compareH1P3: e => {
            const {normalize: n} = e;
            return n(["Public Wi-Fi Scan"])
        }
        ,
        compareH1P4: e => {
            const {normalize: n} = e;
            return n(["Malicious Content Filtering"])
        }
        ,
        compareH1P5: e => {
            const {normalize: n} = e;
            return n(["DDoS Protection"])
        }
        ,
        compareH1P6: e => {
            const {normalize: n} = e;
            return n(["Port Intrusion Prevention"])
        }
        ,
        compareH2Title: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
        ,
        compareH2P1: e => {
            const {normalize: n} = e;
            return n(["Time Limits"])
        }
        ,
        compareH2P2: e => {
            const {normalize: n} = e;
            return n(["Block Websites"])
        }
        ,
        compareH2P3: e => {
            const {normalize: n} = e;
            return n(["Pro Content Filter"])
        }
        ,
        compareH2P4: e => {
            const {normalize: n} = e;
            return n(["Pause the Internet"])
        }
        ,
        compareH2P5: e => {
            const {normalize: n} = e;
            return n(["Flexible Bedtime"])
        }
        ,
        compareH2P6: e => {
            const {normalize: n} = e;
            return n(["Offtime Control"])
        }
        ,
        compareH2P7: e => {
            const {normalize: n} = e;
            return n(["Time Rewards"])
        }
        ,
        compareH2P8: e => {
            const {normalize: n} = e;
            return n(["Traffic Statistics"])
        }
        ,
        compareH3Title: e => {
            const {normalize: n} = e;
            return n(["Usage Analysis"])
        }
        ,
        compareH3P1: e => {
            const {normalize: n} = e;
            return n(["Usage Reports"])
        }
        ,
        compareH3P2: e => {
            const {normalize: n} = e;
            return n(["Reports"])
        }
        ,
        compareH3P3: e => {
            const {normalize: n} = e;
            return n(["New Access Devices"])
        }
        ,
        compareH3P4: e => {
            const {normalize: n} = e;
            return n(["Insight"])
        }
        ,
        compareH3P5: e => {
            const {normalize: n} = e;
            return n(["Device Type"])
        }
        ,
        compareH3P6: e => {
            const {normalize: n} = e;
            return n(["Safety Statistics"])
        }
        ,
        compareH3P7: e => {
            const {normalize: n} = e;
            return n(["Online Time"])
        }
        ,
        compareH3P8: e => {
            const {normalize: n} = e;
            return n(["Visited URLs"])
        }
        ,
        compareH3P9: e => {
            const {normalize: n} = e;
            return n(["Usage Overview"])
        }
        ,
        flexibleFree: e => {
            const {normalize: n} = e;
            return n(["Set one fixed time"])
        }
        ,
        flexiblePro: e => {
            const {normalize: n} = e;
            return n(["Set different times for different places"])
        }
        ,
        insightFree: e => {
            const {normalize: n} = e;
            return n(["1 day"])
        }
        ,
        insightPro: e => {
            const {normalize: n} = e;
            return n(["30 days"])
        }
    },
    alg: {
        instruction: e => {
            const {normalize: n} = e;
            return n(["Check the ALG (Application Layer Gateway) settings. It is recommended to keep them as default."])
        }
        ,
        PPTP: e => {
            const {normalize: n} = e;
            return n(["PPTP Passthrough"])
        }
        ,
        L2TP: e => {
            const {normalize: n} = e;
            return n(["L2TP Passthrough"])
        }
        ,
        IPSec: e => {
            const {normalize: n} = e;
            return n(["IPSec Passthrough"])
        }
        ,
        FTP: e => {
            const {normalize: n} = e;
            return n(["FTP ALG"])
        }
        ,
        TFTP: e => {
            const {normalize: n} = e;
            return n(["TFTP ALG"])
        }
        ,
        RTSP: e => {
            const {normalize: n} = e;
            return n(["RTSP ALG"])
        }
        ,
        H323: e => {
            const {normalize: n} = e;
            return n(["H323 ALG"])
        }
        ,
        SIP: e => {
            const {normalize: n} = e;
            return n(["SIP ALG"])
        }
        ,
        note: e => {
            const {normalize: n} = e;
            return n(["Your configurations will not take effect until NAT function is enabled."])
        }
    },
    operationMode: {
        title: e => {
            const {normalize: n} = e;
            return n(["Operation Mode"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Select an operation mode according to your needs."])
        }
        ,
        modeRouter: e => {
            const {normalize: n} = e;
            return n(["Wireless Router Mode"])
        }
        ,
        modeRouterIntroduction: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router can provide internet access for multiple wired and wireless devices. This mode is required most commonly."])
        }
        ,
        modeAP: e => {
            const {normalize: n} = e;
            return n(["Access Point Mode"])
        }
        ,
        modeAPIntroduction: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router changes an existing wired (Ethernet) network into a wireless one."])
        }
        ,
        modeClient: e => {
            const {normalize: n} = e;
            return n(["Client Mode"])
        }
        ,
        modeClientIntroduction: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router acts as a wireless adapter and can connect wired devices (such as your smart TV or game console) to a wireless network."])
        }
        ,
        modeRE: e => {
            const {normalize: n} = e;
            return n(["Range Extender Mode"])
        }
        ,
        modeREIntroduction: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router boosts the existing wireless coverage in your home."])
        }
        ,
        modeSSID: e => {
            const {normalize: n} = e;
            return n(["Multi-SSID Mode"])
        }
        ,
        modeSSIDIntroduction: e => {
            const {normalize: n} = e;
            return n(["In this mode, the router creates multiple wireless networks to provide different security and VLAN groups."])
        }
        ,
        rebootConfirmMsg: e => {
            const {normalize: n} = e;
            return n(["The settings will take effect only after the router reboots. Internet access will be disabled temporarily. Reboot now?"])
        }
        ,
        modeFailTip: e => {
            const {normalize: n} = e;
            return n(["Mode switching failed. Please try again later or reboot your router."])
        }
        ,
        homeshieldNote: e => {
            const {normalize: n} = e;
            return n(["The HomeShield feature is only avaliable in the Router mode. To enjoy this feature, set your device to the Router mode."])
        }
        ,
        modeChangeTips: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["After rebooting, please use ", i(o("link")), " to log in to the web management page."])
        }
    },
    firmware: {
        autoUpdate: e => {
            const {normalize: n} = e;
            return n(["Auto Update"])
        }
        ,
        autoUpdateInstruction: e => {
            const {normalize: n} = e;
            return n(["Update firmware for this router automatically when a new version is available."])
        }
        ,
        updateTime: e => {
            const {normalize: n} = e;
            return n(["Update Time"])
        }
        ,
        autoUpdateCheckTime: e => {
            const {normalize: n} = e;
            return n(["To enable Auto Update, please set the system time to 'Get from Internet' in System > Time."])
        }
        ,
        goToTimeSettings: e => {
            const {normalize: n} = e;
            return n(["Go to Time"])
        }
        ,
        onlineUpdate: e => {
            const {normalize: n} = e;
            return n(["Online Update"])
        }
        ,
        onlineUpdateInstruction: e => {
            const {normalize: n} = e;
            return n(["Update firmware for this router over the internet."])
        }
        ,
        firmwareVersion: e => {
            const {normalize: n} = e;
            return n(["Firmware Version"])
        }
        ,
        hardwareVersion: e => {
            const {normalize: n} = e;
            return n(["Hardware Version"])
        }
        ,
        latestFirmwareVersion: e => {
            const {normalize: n} = e;
            return n(["Latest Firmware Version"])
        }
        ,
        checkForUpdates: e => {
            const {normalize: n} = e;
            return n(["CHECK FOR UPDATES"])
        }
        ,
        whatsNew: e => {
            const {normalize: n} = e;
            return n(["What's New"])
        }
        ,
        update: e => {
            const {normalize: n} = e;
            return n(["UPDATE"])
        }
        ,
        firmwareUpToDate: e => {
            const {normalize: n} = e;
            return n(["Firmware is up to date."])
        }
        ,
        illegalDevice: e => {
            const {normalize: n} = e;
            return n(["Unable to identify the device. Please contact TP-Link technical support."])
        }
        ,
        updateRebootTip: e => {
            const {normalize: n} = e;
            return n(["The update will take about 3 minutes and the router will reboot. Update now?"])
        }
        ,
        downloading: e => {
            const {normalize: n} = e;
            return n(["Downloading..."])
        }
        ,
        updating: e => {
            const {normalize: n} = e;
            return n(["Upgrading..."])
        }
        ,
        rebooting: e => {
            const {normalize: n} = e;
            return n(["Rebooting..."])
        }
        ,
        updateProgressTip: e => {
            const {normalize: n} = e;
            return n(["To avoid any damage, please keep the router powered on and do NOT operate the router during the firmware update process."])
        }
        ,
        reconnectTip: e => {
            const {normalize: n} = e;
            return n(["Firmware updated and settings applied successfully. Make sure this device is connected to the router wirelessly or via an Ethernet cable before clicking CONNECTED."])
        }
        ,
        reconnected: e => {
            const {normalize: n} = e;
            return n(["Connected"])
        }
        ,
        localUpdate: e => {
            const {normalize: n} = e;
            return n(["Local Update"])
        }
        ,
        localUpdateInstruction: e => {
            const {normalize: n} = e;
            return n(["Update firmware for this router from a local file."])
        }
        ,
        newFirmwareFile: e => {
            const {normalize: n} = e;
            return n(["New Firmware File"])
        }
        ,
        uploading: e => {
            const {normalize: n} = e;
            return n(["Uploading..."])
        }
        ,
        meshUpdate: e => {
            const {normalize: n} = e;
            return n(["EasyMesh Satellite Update"])
        }
        ,
        meshUpdateInstruction: e => {
            const {normalize: n} = e;
            return n(["Update firmware for TP-Link EasyMesh satellite routers over the internet."])
        }
        ,
        emptyMeshDevice: e => {
            const {normalize: n} = e;
            return n(["No TP-Link satellite routers in the EasyMesh network."])
        }
        ,
        meshType: e => {
            const {normalize: n} = e;
            return n(["Type"])
        }
        ,
        meshName: e => {
            const {normalize: n} = e;
            return n(["Device Name"])
        }
        ,
        meshModel: e => {
            const {normalize: n} = e;
            return n(["Model"])
        }
        ,
        meshUpdateTip: e => {
            const {normalize: n} = e;
            return n(["The update will take a few minutes and the satellite router will reboot."])
        }
        ,
        meshUpdateConfirmTip: e => {
            const {normalize: n} = e;
            return n(["Update now?"])
        }
        ,
        meshUpdateSuccess: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Device ", i(o("name")), " has been updated successfully!"])
        }
        ,
        meshUpdateFailed: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Unable to update device ", i(o("name")), ". Please try again later."])
        }
        ,
        firmwareUpdateAvailable: e => {
            const {normalize: n} = e;
            return n(["Firmware Update Available"])
        }
        ,
        firmwareUpdateRequired: e => {
            const {normalize: n} = e;
            return n(["Firmware Update Required"])
        }
        ,
        newFirmwareAvailable: e => {
            const {normalize: n} = e;
            return n(["New Firmware Available"])
        }
        ,
        newFirmwareAvailableNote: e => {
            const {normalize: n} = e;
            return n(["Last auto update was rescheduled because someone was using the internet at the update time. Do you want to update now?"])
        }
        ,
        updateNow: e => {
            const {normalize: n} = e;
            return n(["UPDATE NOW"])
        }
        ,
        autoUpdateLater: e => {
            const {normalize: n} = e;
            return n(["AUTO UPDATE LATER"])
        }
        ,
        notNow: e => {
            const {normalize: n} = e;
            return n(["NOT NOW"])
        }
        ,
        skipThisVersion: e => {
            const {normalize: n} = e;
            return n(["SKIP THIS VERSION"])
        }
        ,
        remindMeLater: e => {
            const {normalize: n} = e;
            return n(["REMIND ME LATER"])
        }
        ,
        firmwareUpdateSucceed: e => {
            const {normalize: n} = e;
            return n(["Firmware is updated successfully."])
        }
    },
    firewall: {
        instruction: e => {
            const {normalize: n} = e;
            return n(["Check the settings of the firewall that protects your network. It is recommended to keep them as default."])
        }
        ,
        dsliteConflictTips: e => {
            const {normalize: n} = e;
            return n(["This feature is unavailable when the internet connection type is set to DS-LITE."])
        }
        ,
        v6plusConflictTips: e => {
            const {normalize: n} = e;
            return n(["This feature is unavailable when the internet connection type is set to v6plus."])
        }
        ,
        ocnConflictTips: e => {
            const {normalize: n} = e;
            return n(["This feature is unavailable when the internet connection type is set to MAP-E(OCN)."])
        }
        ,
        spiFirewall: e => {
            const {normalize: n} = e;
            return n(["SPI Firewall"])
        }
        ,
        lanPing: e => {
            const {normalize: n} = e;
            return n(["Respond to Pings from LAN"])
        }
        ,
        wanPing: e => {
            const {normalize: n} = e;
            return n(["Respond to Pings from WAN"])
        }
    },
    pptp: {
        addAccount: e => {
            const {normalize: n} = e;
            return n(["Add Account"])
        }
        ,
        editAccount: e => {
            const {normalize: n} = e;
            return n(["Edit Account"])
        }
        ,
        username: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        passWord: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        pptp: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        pptpInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up a PPTP VPN and accounts for quick, remote access to your network."])
        }
        ,
        accountList: e => {
            const {normalize: n} = e;
            return n(["Account List"])
        }
        ,
        accountListInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure accounts (up to 16) that can be used by remote clients to connect to the VPN server."])
        }
        ,
        deleteMsg: e => {
            const {normalize: n} = e;
            return n(["Delete this account?"])
        }
        ,
        clientIP: e => {
            const {normalize: n} = e;
            return n(["Client IP Address"])
        }
        ,
        clientIPTips: e => {
            const {normalize: n} = e;
            return n(["(up to 10 clients)"])
        }
        ,
        samba: e => {
            const {normalize: n} = e;
            return n(["Allow SMB (Network Place) access"])
        }
        ,
        netbios: e => {
            const {normalize: n} = e;
            return n(["Allow NetBIOS passthrough"])
        }
        ,
        unencrypted: e => {
            const {normalize: n} = e;
            return n(["Allow Unencrypted connections"])
        }
        ,
        conflictWithDhcp: e => {
            const {normalize: n} = e;
            return n(["The client IP address conflicts with the DHCP IP address pool."])
        }
        ,
        conflictWithReserved: e => {
            const {normalize: n} = e;
            return n(["The client IP address conflicts with the reserved IP address."])
        }
        ,
        conflictWithOpenvpn: e => {
            const {normalize: n} = e;
            return n(["The client IP address and OpenVPN IP address cannot be in the same subnet."])
        }
        ,
        conflictWithL2tpvpn: e => {
            const {normalize: n} = e;
            return n(["The client IP address and L2TP VPN IP address cannot be in the same subnet."])
        }
        ,
        conflictWithPptpvpn: e => {
            const {normalize: n} = e;
            return n(["The client IP address and PPTP VPN IP address cannot be in the same subnet."])
        }
        ,
        portRangeOut: e => {
            const {normalize: n} = e;
            return n(["Out of range"])
        }
        ,
        usernameConflict: e => {
            const {normalize: n} = e;
            return n(["Username is already in use. Please try another one."])
        }
        ,
        noAccountTip: e => {
            const {normalize: n} = e;
            return n(["Add at least one account to use the PPTP function."])
        }
        ,
        deleteNoAccountTip: e => {
            const {normalize: n} = e;
            return n(["Couldn't delete the last account. Please keep at least one account to use the PPTP function."])
        }
    },
    l2tpIpsec: {
        l2tpIpsec: e => {
            const {normalize: n} = e;
            return n(["L2TP/IPSec"])
        }
        ,
        l2tpIpsecInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up a L2TP/IPSec VPN and accounts for quick, remote access to your network."])
        }
        ,
        clientIPTips: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["(up to ", i(o("max")), " clients)"])
        }
        ,
        clientIPAddr: e => {
            const {normalize: n} = e;
            return n(["Client IP Address"])
        }
        ,
        ipsecKey: e => {
            const {normalize: n} = e;
            return n(["IPSec Pre-Shared Key"])
        }
        ,
        accountList: e => {
            const {normalize: n} = e;
            return n(["Account List"])
        }
        ,
        accountListInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure accounts (up to 16) that can be used by remote clients to connect to the VPN server."])
        }
        ,
        username: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        passWord: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        deleteMsg: e => {
            const {normalize: n} = e;
            return n(["Delete this account?"])
        }
        ,
        noAccountTip: e => {
            const {normalize: n} = e;
            return n(["Add at least one account to use the L2TP/IPSec function."])
        }
        ,
        deleteNoAccountTip: e => {
            const {normalize: n} = e;
            return n(["Couldn't delete the last account. Please keep at least one account to use the L2TP/IPSec function."])
        }
    },
    connections: {
        title: e => {
            const {normalize: n} = e;
            return n(["VPN Connections"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["View the VPN connections of remote clients."])
        }
        ,
        openVpn: e => {
            const {normalize: n} = e;
            return n(["OpenVPN Connection"])
        }
        ,
        pptp: e => {
            const {normalize: n} = e;
            return n(["PPTP VPN Connection"])
        }
        ,
        l2tpIpsec: e => {
            const {normalize: n} = e;
            return n(["L2TP/IPSec VPN Connection"])
        }
        ,
        endPoint: e => {
            const {normalize: n} = e;
            return n(["Endpoint"])
        }
        ,
        wireguard: e => {
            const {normalize: n} = e;
            return n(["WireGuard VPN Connection"])
        }
        ,
        remoteIp: e => {
            const {normalize: n} = e;
            return n(["Remote IP"])
        }
        ,
        allowIPs: e => {
            const {normalize: n} = e;
            return n(["Allow IPs"])
        }
        ,
        assignedIP: e => {
            const {normalize: n} = e;
            return n(["Assigned IP"])
        }
    },
    usageStats: {
        joinProgram: e => {
            const {normalize: n} = e;
            return n(["Join User Experience Improvement Program"])
        }
        ,
        note: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Joining ", i(o("url")), " means you agree to send anonymous usage data to help TP-Link improve their products. Without interrupting you, the program automatically collects information about how you use the product and its features anonymously without any information that can be used to identify you."])
        }
        ,
        noteLink: e => {
            const {normalize: n} = e;
            return n(["User Experience Improvement Program"])
        }
    },
    upnp: {
        instruction: e => {
            const {normalize: n} = e;
            return n(["Enable UPnP (Universal Plug and Play) to allow devices on your local network to dynamically open ports for applications such as multiplayer gaming and real-time communications."])
        }
        ,
        clientListInstruction: e => {
            const {normalize: n} = e;
            return n(["Displays the UPnP device information."])
        }
        ,
        clientList: e => {
            const {normalize: n} = e;
            return n(["UPnP Client List"])
        }
        ,
        serviceDescription: e => {
            const {normalize: n} = e;
            return n(["Service Description"])
        }
        ,
        clientIP: e => {
            const {normalize: n} = e;
            return n(["Client IP Address"])
        }
        ,
        internalPort: e => {
            const {normalize: n} = e;
            return n(["Internal Port"])
        }
        ,
        externalPort: e => {
            const {normalize: n} = e;
            return n(["External Port"])
        }
        ,
        protocol: e => {
            const {normalize: n} = e;
            return n(["Protocol"])
        }
        ,
        totalClients: e => {
            const {normalize: n} = e;
            return n(["Total Clients"])
        }
        ,
        unavailableTip: e => {
            const {normalize: n} = e;
            return n(["Unavailable when NAT is disabled."])
        }
    },
    additionalSettings: {
        instruction: e => {
            const {normalize: n} = e;
            return n(["Check advanced wireless settings for your device."])
        }
        ,
        wmm: e => {
            const {normalize: n} = e;
            return n(["WMM"])
        }
        ,
        shortGi: e => {
            const {normalize: n} = e;
            return n(["Short GI"])
        }
        ,
        apIsolation: e => {
            const {normalize: n} = e;
            return n(["AP Isolation"])
        }
        ,
        airtimeFairness: e => {
            const {normalize: n} = e;
            return n(["Airtime Fairness"])
        }
        ,
        beaconInterval: e => {
            const {normalize: n} = e;
            return n(["Beacon Interval"])
        }
        ,
        rtsThreshold: e => {
            const {normalize: n} = e;
            return n(["RTS Threshold"])
        }
        ,
        dtimInterval: e => {
            const {normalize: n} = e;
            return n(["DTIM Interval"])
        }
        ,
        updatePeriod: e => {
            const {normalize: n} = e;
            return n(["Group Key Update Period"])
        }
        ,
        zeroDFS: e => {
            const {normalize: n} = e;
            return n(["Zero Wait DFS"])
        }
    },
    alexa: {
        title: e => {
            const {normalize: n} = e;
            return n(["TP-Link Router Skill for Alexa"])
        }
        ,
        introduction: e => {
            const {normalize: n} = e;
            return n(["Control your network devices using simply the power of your voice with the TP-Link Router Skill for Amazon Alexa. Prioritize gaming or your game device, switch off your router's LEDs or ask Alexa to read out the password of the guest network, all without stopping what you're doing."])
        }
        ,
        steps: e => {
            const {normalize: n} = e;
            return n(["Follow these steps to set up Alexa control for your TP-Link router."])
        }
        ,
        step1: e => {
            const {normalize: n} = e;
            return n(["1. Make sure you have an Alexa device. This feature works with Amazon Echo, Amazon Tap, Echo Dot or other AVS (Alexa Voice Service) enabled devices."])
        }
        ,
        step2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["2. Bind the router to your TP-Link ID. Go to ", i(o("path")), " and log in with your TP-Link ID (or register if you don't have one)."])
        }
        ,
        step3: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["3. Open the Alexa app, then search for and enable the TP-Link Router Skill. ", i(o("url"))])
        }
        ,
        enableAlexa: e => {
            const {normalize: n} = e;
            return n(["How to enable TP-Link Router Skill in the Alexa app."])
        }
        ,
        step4: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["4. Download the Tether app. Open it and tap the ( ", i(o("icon")), " ) icon, then go to ", i(o("path")), " and select the router you want to control."])
        }
        ,
        step4Path: e => {
            const {normalize: n} = e;
            return n([" Smart Life Assistants > Alexa "])
        }
        ,
        setup: e => {
            const {normalize: n} = e;
            return n(["Set up with TP-Link Tether app."])
        }
        ,
        setupLink: e => {
            const {normalize: n} = e;
            return n(["How to set up TP-Link Router Skill with TP-Link Tether app."])
        }
    },
    dmz: {
        introduction: e => {
            const {normalize: n} = e;
            return n(["Expose a specific device in your local network to the internet for applications such as online gaming and real-time communications."])
        }
        ,
        hostIP: e => {
            const {normalize: n} = e;
            return n(["DMZ Host IP Address"])
        }
        ,
        viewDevices: e => {
            const {normalize: n} = e;
            return n(["VIEW CONNECTED DEVICES"])
        }
        ,
        messageTitle: e => {
            const {normalize: n} = e;
            return n(["Select from Connected Devices"])
        }
        ,
        note: e => {
            const {normalize: n} = e;
            return n(["Your configurations will not take effect until NAT function is enabled."])
        }
        ,
        errorIp: e => {
            const {normalize: n} = e;
            return n(["Invalid DMZ Host IP Address. Please enter another one."])
        }
    },
    googleAssistant: {
        title: e => {
            const {normalize: n} = e;
            return n(["TP-Link Router Skill for Google Assistant"])
        }
        ,
        introduction: e => {
            const {normalize: n} = e;
            return n(["Control your TP-Link router using simply the power of your voice with the TP-Link Router Skill for Google Assistant. Enable the guest network, switch off your router's LEDs, or ask Google to read out the name of your router's host network, all without stopping what you're doing."])
        }
        ,
        steps: e => {
            const {normalize: n} = e;
            return n(["Follow the instructions below to add the TP-Link router to your Google assistant voice service, then you can control your TP-Link router by voice using the Google Assistant or Google Home app."])
        }
        ,
        step1: e => {
            const {normalize: n} = e;
            return n(["1. Open the Google Assistant app, tap the profile photo, then choose Google Assistant > Home control."])
        }
        ,
        step2: e => {
            const {normalize: n} = e;
            return n(["2. Tap + to browse the available apps and choose TP-Link Router."])
        }
        ,
        step3: e => {
            const {normalize: n} = e;
            return n(["3. Follow the web instructions to sign in with your TP-Link ID."])
        }
        ,
        step4: e => {
            const {normalize: n} = e;
            return n(["4. You will see TP-Link Router and your smart devices on the Home control page of the Google Assistant app."])
        }
        ,
        setup: e => {
            const {normalize: n} = e;
            return n(["Set up with TP-Link Tether app."])
        }
        ,
        setupLink: e => {
            const {normalize: n} = e;
            return n(["How to Link your TP-Link Router to Google Assistant"])
        }
    },
    portTriggering: {
        introduction: e => {
            const {normalize: n} = e;
            return n(["Specify ports to allow devices on your local network to dynamically open specific external ports and forward packets (from the internet) to the device that triggered it."])
        }
        ,
        triggeringPort: e => {
            const {normalize: n} = e;
            return n(["Triggering Port"])
        }
        ,
        addDialogTitle: e => {
            const {normalize: n} = e;
            return n(["Add a Port Triggering Entry"])
        }
        ,
        serviceName: e => {
            const {normalize: n} = e;
            return n(["Service Name"])
        }
        ,
        triggeringProtocol: e => {
            const {normalize: n} = e;
            return n(["Triggering Protocol"])
        }
        ,
        externalPort: e => {
            const {normalize: n} = e;
            return n(["External Port"])
        }
        ,
        externalProtocol: e => {
            const {normalize: n} = e;
            return n(["External Protocol"])
        }
        ,
        enableEntry: e => {
            const {normalize: n} = e;
            return n(["Enable This Entry"])
        }
        ,
        viewServices: e => {
            const {normalize: n} = e;
            return n(["VIEW COMMON SERVICES"])
        }
        ,
        battleNet: e => {
            const {normalize: n} = e;
            return n(["Battle.net"])
        }
        ,
        dialpad: e => {
            const {normalize: n} = e;
            return n(["Dialpad"])
        }
        ,
        icuTwo: e => {
            const {normalize: n} = e;
            return n(["ICU II"])
        }
        ,
        msnGamingZone: e => {
            const {normalize: n} = e;
            return n(["MSN Gaming Zone"])
        }
        ,
        pcToPhone: e => {
            const {normalize: n} = e;
            return n(["PC-to-Phone"])
        }
        ,
        quickTimeFour: e => {
            const {normalize: n} = e;
            return n(["Quick Time 4"])
        }
        ,
        aoeTwoClient: e => {
            const {normalize: n} = e;
            return n(["AOE II Client"])
        }
        ,
        suddenStrike: e => {
            const {normalize: n} = e;
            return n(["Sudden Strike"])
        }
        ,
        baldursGateTwo: e => {
            const {normalize: n} = e;
            return n(["Baldurs Gate II"])
        }
        ,
        externalPortTip: e => {
            const {normalize: n} = e;
            return n(["(XX or XX-XX,1-65535,at most 5 pairs)"])
        }
        ,
        triggeringPortError: e => {
            const {normalize: n} = e;
            return n(["The entry conflicts with existed items. Please check trigger port and trigger protocol."])
        }
        ,
        servicesTitle: e => {
            const {normalize: n} = e;
            return n(["Select from Common Services"])
        }
    },
    networkMap: {
        internet: e => {
            const {normalize: n} = e;
            return n(["Internet"])
        }
        ,
        router: e => {
            const {normalize: n} = e;
            return n(["Router"])
        }
        ,
        client: e => {
            const {normalize: n} = e;
            return n(["Clients"])
        }
        ,
        meshDevice: e => {
            const {normalize: n} = e;
            return n(["Mesh Devices"])
        }
        ,
        internetStatus: e => {
            const {normalize: n} = e;
            return n(["Internet Status"])
        }
        ,
        connectType: e => {
            const {normalize: n} = e;
            return n(["Connection Type"])
        }
        ,
        wanMac: e => {
            const {normalize: n} = e;
            return n(["WAN MAC Address"])
        }
        ,
        internetIp: e => {
            const {normalize: n} = e;
            return n(["Internet IP Address"])
        }
        ,
        poorNetwork: e => {
            const {normalize: n} = e;
            return n(["Poor Network"])
        }
        ,
        poorNetTryFollow: e => {
            const {normalize: n} = e;
            return n(["Please try the following:"])
        }
        ,
        poorInternetStep1: e => {
            const {normalize: n} = e;
            return n(["Check internet status later. The internet connection may take several minutes, or internet may be interrupted temporarily."])
        }
        ,
        poorInternetStep2: e => {
            const {normalize: n} = e;
            return n(["Contact your ISP to make sure that your internet service is working normally and your internet connection settings are correct."])
        }
        ,
        poorInternetStep3: e => {
            const {normalize: n} = e;
            return n(["Contact your ISP to check if it allows internet access from only a specific MAC address. If yes, set your router's MAC address to this address."])
        }
        ,
        poorInternetStep4: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If the problem persists, contact our Technical Support (", i(o("supportUrl")), ")."])
        }
        ,
        noNetwork: e => {
            const {normalize: n} = e;
            return n(["No Internet Connection"])
        }
        ,
        noNetTryFollow: e => {
            const {normalize: n} = e;
            return n(["Something's wrong with the hardware connection. Please try the following:"])
        }
        ,
        noInternetStep1: e => {
            const {normalize: n} = e;
            return n(["Make sure the Ethernet cable is securely and properly connected to the Internet port."])
        }
        ,
        noInternetStep2: e => {
            const {normalize: n} = e;
            return n(["Try another Ethernet cable."])
        }
        ,
        noInternetStep3: e => {
            const {normalize: n} = e;
            return n(["Make sure the connected modem is securely and properly connected."])
        }
        ,
        noInternetStep4: e => {
            const {normalize: n} = e;
            return n(["If the problem persists, reboot or reset your router."])
        }
        ,
        routerInfo: e => {
            const {normalize: n} = e;
            return n(["Router Information"])
        }
        ,
        lanMac: e => {
            const {normalize: n} = e;
            return n(["LAN MAC Address"])
        }
        ,
        channel: e => {
            const {normalize: n} = e;
            return n(["Channel"])
        }
        ,
        connectedClients: e => {
            const {normalize: n} = e;
            return n(["Connected Clients"])
        }
        ,
        viewDenyList: e => {
            const {normalize: n} = e;
            return n(["View Deny List"])
        }
        ,
        viewAllowList: e => {
            const {normalize: n} = e;
            return n(["View Allow List"])
        }
        ,
        addToDenyListConfirm: e => {
            const {normalize: n} = e;
            return n(["Blocking this device will add it to the deny list and it will no longer be able to access the internet. Continue?"])
        }
        ,
        removeFromAllowListConfirm: e => {
            const {normalize: n} = e;
            return n(["Blocking this device will remove it from the Allow List and it will no longer be able to access the internet. Continue?"])
        }
        ,
        speedLimit: e => {
            const {normalize: n} = e;
            return n(["Speed Limit"])
        }
        ,
        speedLimitTooltip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Set the maximum upload and download speed of the device. You can click ", i(o("operation")), " icon to edit Speed Limit."])
        }
        ,
        speedLimitOperationTip: e => {
            const {normalize: n} = e;
            return n(["Modify > Edit"])
        }
        ,
        downloadLimit: e => {
            const {normalize: n} = e;
            return n(["Download Speed Limit"])
        }
        ,
        noLimits: e => {
            const {normalize: n} = e;
            return n(["No Limits"])
        }
        ,
        downloadLimit1MbpsTip: e => {
            const {normalize: n} = e;
            return n(["Web browsing, sending emails, making social media posts"])
        }
        ,
        downloadLimit10MbpsTip: e => {
            const {normalize: n} = e;
            return n(["HD video streaming"])
        }
        ,
        uploadLimit: e => {
            const {normalize: n} = e;
            return n(["Upload Speed Limit"])
        }
        ,
        speedLimitConflictWithHighPriority: e => {
            const {normalize: n} = e;
            return n(["If you turn on Speed Limit, the High Priority feature will be disabled on this device."])
        }
        ,
        speedLimitConfigMaxLimitTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["You can configure speed limit for up to ", i(o("limit")), " clients."])
        }
        ,
        speedLimitConfigConflictTip: e => {
            const {normalize: n} = e;
            return n(["Download and upload speeds cannot be unlimited at the same time."])
        }
        ,
        realTimeRate: e => {
            const {normalize: n} = e;
            return n(["Real-time Rate"])
        }
        ,
        txRxRate: e => {
            const {normalize: n} = e;
            return n(["Tx/Rx Rate(Mbps)"])
        }
        ,
        txRxRateTooltip: e => {
            const {normalize: n} = e;
            return n(["Tx/Rx Rate displays the theoretical maximum rate at which your device transfer/receive wirelessly."])
        }
        ,
        duration: e => {
            const {normalize: n} = e;
            return n(["Duration"])
        }
        ,
        internetPaused: e => {
            const {normalize: n} = e;
            return n(["Internet Paused"])
        }
        ,
        mloNetwork: e => {
            const {normalize: n} = e;
            return n(["MLO Network"])
        }
        ,
        performance: e => {
            const {normalize: n} = e;
            return n(["Performance"])
        }
        ,
        cpuLoad: e => {
            const {normalize: n} = e;
            return n(["CPU Load"])
        }
        ,
        memoryUsage: e => {
            const {normalize: n} = e;
            return n(["Memory Usage"])
        }
        ,
        cpuCoreNum: e => {
            const {normalize: n} = e;
            return n(["CPU Core Number"])
        }
        ,
        halfDuplex: e => {
            const {normalize: n} = e;
            return n(["Half Duplex"])
        }
        ,
        fullDuplex: e => {
            const {normalize: n} = e;
            return n(["Full Duplex"])
        }
        ,
        Mbps: e => {
            const {normalize: n} = e;
            return n(["Mbps"])
        }
        ,
        Gbps: e => {
            const {normalize: n} = e;
            return n(["Gbps"])
        }
        ,
        ethernetStatus: e => {
            const {normalize: n} = e;
            return n(["Ethernet Status"])
        }
        ,
        history: e => {
            const {normalize: n} = e;
            return n(["History"])
        }
        ,
        download: e => {
            const {normalize: n} = e;
            return n(["Download"])
        }
        ,
        upload: e => {
            const {normalize: n} = e;
            return n(["Upload"])
        }
        ,
        uploadSpeed: e => {
            const {normalize: n} = e;
            return n(["UPLOAD SPEED"])
        }
        ,
        downloadSpeed: e => {
            const {normalize: n} = e;
            return n(["DOWNLOAD SPEED"])
        }
        ,
        speedTestFailTip: e => {
            const {normalize: n} = e;
            return n(["Fail to test the speed. Please change the test server and try again."])
        }
        ,
        speedTest: e => {
            const {normalize: n} = e;
            return n(["SPEED TEST"])
        }
        ,
        testAgain: e => {
            const {normalize: n} = e;
            return n(["TEST AGAIN"])
        }
        ,
        internetSpeedTest: e => {
            const {normalize: n} = e;
            return n(["Internet Speed Test"])
        }
        ,
        internetSpeedTestHistory: e => {
            const {normalize: n} = e;
            return n(["Internet Speed Test History"])
        }
        ,
        changeServer: e => {
            const {normalize: n} = e;
            return n(["Change Server"])
        }
        ,
        level: e => {
            const {normalize: n} = e;
            return n(["Level"])
        }
        ,
        ultra: e => {
            const {normalize: n} = e;
            return n(["Ultra"])
        }
        ,
        super: e => {
            const {normalize: n} = e;
            return n(["Super"])
        }
        ,
        fast: e => {
            const {normalize: n} = e;
            return n(["Fast"])
        }
        ,
        great: e => {
            const {normalize: n} = e;
            return n(["Great"])
        }
        ,
        good: e => {
            const {normalize: n} = e;
            return n(["Good"])
        }
        ,
        normal: e => {
            const {normalize: n} = e;
            return n(["Normal"])
        }
        ,
        nonOptimalNote: e => {
            const {normalize: n} = e;
            return n(["Due to the speed test server, the speed test result may be non-optimal."])
        }
        ,
        ultraTip: e => {
            const {normalize: n} = e;
            return n(["Your internet speed is amazing! You can do anything with it!"])
        }
        ,
        superTip: e => {
            const {normalize: n} = e;
            return n(["Your internet is super-fast! You can enjoy crystal-clear 4K videos and online games simultaneously on multiple devices!"])
        }
        ,
        fastTip: e => {
            const {normalize: n} = e;
            return n(["Your internet is fast! You can enjoy 4K videos, ultra HD live broadcasts, online games, and quick file downloads."])
        }
        ,
        greatTip: e => {
            const {normalize: n} = e;
            return n(["Your internet speed is great! You can enjoy ultra HD videos, live broadcasts, and lag-free mobile games."])
        }
        ,
        goodTip: e => {
            const {normalize: n} = e;
            return n(["Your internet speed is good. You can enjoy HD videos, short videos, online chats, and smooth Web browsing."])
        }
        ,
        normalTip: e => {
            const {normalize: n} = e;
            return n(["Your internet speed is normal. You can watch SD videos, browse web pages, send emails, and chat online. Buffering may occur when multiple devices are connected."])
        }
        ,
        serverError: e => {
            const {normalize: n} = e;
            return n(["Unable to get the test server information. The test server may be busy now. Please try again in a few minutes."])
        }
        ,
        clearConfirm: e => {
            const {normalize: n} = e;
            return n(["Clear all completed tasks?"])
        }
        ,
        unavailableTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Starting ", i(o("date")), ", the Speed Test feature will be discontinued to make way for a new and improved tool. Until then, it'll work normally. We apologize for any inconvenience and assure you we're working hard to launch the new tool soon. If you have any questions, feel free to contact our technical support."])
        }
    },
    portForwarding: {
        introduction: e => {
            const {normalize: n} = e;
            return n(["Specify ports to make specific devices or services on your local network accessible over the internet."])
        }
        ,
        serviceName: e => {
            const {normalize: n} = e;
            return n(["Service Name"])
        }
        ,
        deviceIpAddress: e => {
            const {normalize: n} = e;
            return n(["Device IP Address"])
        }
        ,
        externalPort: e => {
            const {normalize: n} = e;
            return n(["External Port"])
        }
        ,
        internalPort: e => {
            const {normalize: n} = e;
            return n(["Internal Port"])
        }
        ,
        addDialogTitle: e => {
            const {normalize: n} = e;
            return n(["Add a Port Forwarding Entry"])
        }
        ,
        viewDevices: e => {
            const {normalize: n} = e;
            return n(["VIEW CONNECTED DEVICES"])
        }
        ,
        viewServices: e => {
            const {normalize: n} = e;
            return n(["VIEW COMMON SERVICES"])
        }
        ,
        servicesTitle: e => {
            const {normalize: n} = e;
            return n(["Select from Common Services"])
        }
        ,
        enableEntry: e => {
            const {normalize: n} = e;
            return n(["Enable This Entry"])
        }
        ,
        errorTip: e => {
            const {normalize: n} = e;
            return n(["This item conflicts with existed ones. Please try again."])
        }
        ,
        singlePort: e => {
            const {normalize: n} = e;
            return n(["Individual Port"])
        }
        ,
        rangePort: e => {
            const {normalize: n} = e;
            return n(["Port Range"])
        }
        ,
        tip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Add a rule for an individual external port or port range. For nonconsecutive ports (example: 100 and 200), add multiple rules. For more info, refer to ", i(o("url")), "."])
        }
        ,
        faqUrl: e => {
            const {normalize: n} = e;
            return n(["Port Forwarding FAQ"])
        }
        ,
        errorIp: e => {
            const {normalize: n} = e;
            return n(["Invalid Internal IP. Please enter another one."])
        }
        ,
        messageTitle: e => {
            const {normalize: n} = e;
            return n(["Select from Connected Devices"])
        }
        ,
        v6plusTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If the port(s) you specified are not included in the available ports, port forwarding may not take effect. ", i(o("detail"))])
        }
        ,
        viewAvailablePort: e => {
            const {normalize: n} = e;
            return n(["View available port"])
        }
        ,
        availablePortNumber: e => {
            const {normalize: n} = e;
            return n(["Available Port Number"])
        }
        ,
        portSingleWarn: e => {
            const {normalize: n} = e;
            return n(["The port is not included in the available ports, and port forwarding may not take effect."])
        }
        ,
        portRangeWarn: e => {
            const {normalize: n} = e;
            return n(["These ports are not included in the available ports, and port forwarding may not take effect."])
        }
        ,
        noAvailablePort: e => {
            const {normalize: n} = e;
            return n(["No available port."])
        }
    },
    tpLinkCloud: {
        errorTitle: e => {
            const {normalize: n} = e;
            return n(["Oops... We can't reach the cloud server."])
        }
        ,
        errorFollowing: e => {
            const {normalize: n} = e;
            return n(["Try the following:"])
        }
        ,
        followingStep1: e => {
            const {normalize: n} = e;
            return n(["Make sure you have Internet access."])
        }
        ,
        followingStep2: e => {
            const {normalize: n} = e;
            return n(["The cloud server is inaccessible temporarily. Please refresh the page later."])
        }
        ,
        followingStep3: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If the problem still exists, please connect ", i(o("supportLink")), "."])
        }
        ,
        support: e => {
            const {normalize: n} = e;
            return n(["TP-Link technical support"])
        }
        ,
        tpLinkId: e => {
            const {normalize: n} = e;
            return n(["TP-Link ID"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Log in to bind the router to your TP-Link ID. You can remotely manage your network via the Tether app, and more."])
        }
        ,
        email: e => {
            const {normalize: n} = e;
            return n(["TP-Link ID (Email)"])
        }
        ,
        oops: e => {
            const {normalize: n} = e;
            return n(["Oops..."])
        }
        ,
        offline: e => {
            const {normalize: n} = e;
            return n(["The device is offline. Please check the WAN and network configuration to make sure the appropriate settings are entered correctly."])
        }
        ,
        newEmail: e => {
            const {normalize: n} = e;
            return n(["New Email"])
        }
        ,
        changeEmail: e => {
            const {normalize: n} = e;
            return n(["Change Email"])
        }
        ,
        changePassword: e => {
            const {normalize: n} = e;
            return n(["Change Password"])
        }
        ,
        currentPassword: e => {
            const {normalize: n} = e;
            return n(["Current Password"])
        }
        ,
        newPassword: e => {
            const {normalize: n} = e;
            return n(["New Password"])
        }
        ,
        changeTip: e => {
            const {normalize: n} = e;
            return n(["New email or password may not sync to client devices immediately. Please log in again when your device is connected to the Internet to update account information."])
        }
        ,
        unbindTip: e => {
            const {normalize: n} = e;
            return n(["Unbind this TP-Link ID?"])
        }
        ,
        unbindOwnerTip: e => {
            const {normalize: n} = e;
            return n(["Unbinding the admin account will also dismiss all the user accounts. Continue?"])
        }
        ,
        bindAccount: e => {
            const {normalize: n} = e;
            return n(["Bind TP-Link ID"])
        }
        ,
        sendEmailTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["An activation email has been sent to ", i(o("email")), ". Please follow the instructions in the email to activate your TP-Link ID."])
        }
        ,
        editAccountInstruction: e => {
            const {normalize: n} = e;
            return n(["Edit the email and password for your TP-Link ID."])
        }
        ,
        doNotRemind: e => {
            const {normalize: n} = e;
            return n(["Don't remind me again"])
        }
    },
    led: {
        ledControl: e => {
            const {normalize: n} = e;
            return n(["LED Control"])
        }
        ,
        ledStatus: e => {
            const {normalize: n} = e;
            return n(["LED Status"])
        }
        ,
        ledControlTip: e => {
            const {normalize: n} = e;
            return n(["Turn the router's LEDs on or off."])
        }
        ,
        ledControlRepeaterTip: e => {
            const {normalize: n} = e;
            return n(["This device's LEDs will synchronize with the Night Mode settings of the main router"])
        }
        ,
        nightMode: e => {
            const {normalize: n} = e;
            return n(["Night Mode"])
        }
        ,
        nightModeTip: e => {
            const {normalize: n} = e;
            return n(["Set a time period when the LEDs will be off automatically."])
        }
        ,
        timeSettingsModule: e => {
            const {normalize: n} = e;
            return n(["Time Settings"])
        }
        ,
        from: e => {
            const {normalize: n} = e;
            return n(["LED Off From"])
        }
        ,
        nextDayTip: e => {
            const {normalize: n} = e;
            return n(["(next day)"])
        }
    },
    reboot: {
        rebootTip: e => {
            const {normalize: n} = e;
            return n(["Reboot to clear cache and enhance running performance."])
        }
        ,
        rebootSchedule: e => {
            const {normalize: n} = e;
            return n(["Reboot Schedule"])
        }
        ,
        rebootScheduleTip: e => {
            const {normalize: n} = e;
            return n(["Set when and how often the router reboots automatically."])
        }
        ,
        rebootTime: e => {
            const {normalize: n} = e;
            return n(["Reboot Time"])
        }
        ,
        repeat: e => {
            const {normalize: n} = e;
            return n(["Repeat"])
        }
    },
    diagnostics: {
        diag: e => {
            const {normalize: n} = e;
            return n(["Diagnostics"])
        }
        ,
        diagInstruction: e => {
            const {normalize: n} = e;
            return n(["Troubleshoot network connectivity problems."])
        }
        ,
        diagTools: e => {
            const {normalize: n} = e;
            return n(["Diagnostics Tools"])
        }
        ,
        ipDomain: e => {
            const {normalize: n} = e;
            return n(["IP Address/Domain Name"])
        }
        ,
        pingCount: e => {
            const {normalize: n} = e;
            return n(["Ping Count"])
        }
        ,
        pingPacketSize: e => {
            const {normalize: n} = e;
            return n(["Ping Packet Size"])
        }
        ,
        maxTTL: e => {
            const {normalize: n} = e;
            return n(["Traceroute Max TTL"])
        }
        ,
        traceroute: e => {
            const {normalize: n} = e;
            return n(["Traceroute"])
        }
    },
    parentalControlsV2Optimize: {
        timeLimits: e => {
            const {normalize: n} = e;
            return n(["Time Limits"])
        }
        ,
        timeTab: e => {
            const {normalize: n} = e;
            return n(["Time Spent Online"])
        }
        ,
        timeOnline: e => {
            const {normalize: n} = e;
            return n(["Time Online"])
        }
        ,
        timeLimit: e => {
            const {normalize: n} = e;
            return n(["Time Limit"])
        }
        ,
        timeControlIntro: e => {
            const {normalize: n} = e;
            return n(["Set internet access time for the profile."])
        }
        ,
        timeLimitsTips: e => {
            const {normalize: n} = e;
            return n(["Set daily limits for the total time spent online."])
        }
        ,
        timeSpent: e => {
            const {normalize: n} = e;
            return n(["Time Spent"])
        }
    },
    parentalControls: {
        parentalControls: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Easily manage your kid's online activities by blocking inappropriate content, setting online time limits, and creating flexible schedules."])
        }
        ,
        note: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To get accurate time, controls that take effect based on system time, go to ", i(o("url")), " to check Get from Internet is selected."])
        }
        ,
        noteLink: e => {
            const {normalize: n} = e;
            return n(["Time Settings"])
        }
        ,
        emptyTable: e => {
            const {normalize: n} = e;
            return n(["Click Add to add a profile."])
        }
        ,
        name: e => {
            const {normalize: n} = e;
            return n(["Name"])
        }
        ,
        timeSpentOnline: e => {
            const {normalize: n} = e;
            return n(["Time Spent Online"])
        }
        ,
        devices: e => {
            const {normalize: n} = e;
            return n(["Devices"])
        }
        ,
        insights: e => {
            const {normalize: n} = e;
            return n(["Insights"])
        }
        ,
        internetAccess: e => {
            const {normalize: n} = e;
            return n(["Internet Access"])
        }
        ,
        paused: e => {
            const {normalize: n} = e;
            return n(["Paused"])
        }
        ,
        createProfile: e => {
            const {normalize: n} = e;
            return n(["Create Profile"])
        }
        ,
        leaveCreateProfileTitle: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to leave?"])
        }
        ,
        leaveCreateProfileContent: e => {
            const {normalize: n} = e;
            return n(["The unsaved profile will be lost if you leave without saving."])
        }
        ,
        editProfile: e => {
            const {normalize: n} = e;
            return n(["Edit Profile"])
        }
        ,
        basicInfo: e => {
            const {normalize: n} = e;
            return n(["Basic Info"])
        }
        ,
        basicInfoInstruction: e => {
            const {normalize: n} = e;
            return n(["Name the profile and add devices to it."])
        }
        ,
        contentFilter: e => {
            const {normalize: n} = e;
            return n(["Content Filter"])
        }
        ,
        contentFilterInstruction: e => {
            const {normalize: n} = e;
            return n(["Select categories to block the corresponding content."])
        }
        ,
        timeControls: e => {
            const {normalize: n} = e;
            return n(["Time Controls"])
        }
        ,
        timeControlsInstruction: e => {
            const {normalize: n} = e;
            return n(["Set internet access time for the profile."])
        }
        ,
        timeControlTip: e => {
            const {normalize: n} = e;
            return n(["Want more flexible time controls? Go to Homeshield > More Features for a detailed introduction and download Tether to enjoy full Homeshield Pro feature."])
        }
        ,
        profileName: e => {
            const {normalize: n} = e;
            return n(["Profile Name"])
        }
        ,
        age: e => {
            const {normalize: n} = e;
            return n(["Age"])
        }
        ,
        ageTip: e => {
            const {normalize: n} = e;
            return n(["We will preset the parental controls rules based on the age range. You can always change it in profile settings."])
        }
        ,
        preferNotToSay: e => {
            const {normalize: n} = e;
            return n(["Prefer Not to Say"])
        }
        ,
        addDevices: e => {
            const {normalize: n} = e;
            return n(["Add Devices"])
        }
        ,
        addDevicesTitle: e => {
            const {normalize: n} = e;
            return n(["Add Devices to Profile"])
        }
        ,
        addDevicesTip: e => {
            const {normalize: n} = e;
            return n(["One device can be added to one profile only."])
        }
        ,
        addDevicesConflict: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If a device has connected to different networks, multiple devices with the same name will be listed. Please select each device. ", i(o("url"))])
        }
        ,
        learnMore: e => {
            const {normalize: n} = e;
            return n(["Learn More"])
        }
        ,
        allowList: e => {
            const {normalize: n} = e;
            return n(["Allow List"])
        }
        ,
        allowListTip: e => {
            const {normalize: n} = e;
            return n(["Websites added to the Allow List can be accessed by this profile."])
        }
        ,
        online: e => {
            const {normalize: n} = e;
            return n(["Online"])
        }
        ,
        onlineDevices: e => {
            const {normalize: n} = e;
            return n(["Online Devices"])
        }
        ,
        offline: e => {
            const {normalize: n} = e;
            return n(["Offline"])
        }
        ,
        offlineDevices: e => {
            const {normalize: n} = e;
            return n(["Offline Devices"])
        }
        ,
        selectCategories: e => {
            const {normalize: n} = e;
            return n(["Select Categories"])
        }
        ,
        categories: e => {
            const {normalize: n} = e;
            return n(["Categories"])
        }
        ,
        blockedWebsites: e => {
            const {normalize: n} = e;
            return n(["Blocked Websites"])
        }
        ,
        blockedWebsitesInstruction: e => {
            const {normalize: n} = e;
            return n(["Block a specific website by adding a URL, or block all websites containing a specific keyword."])
        }
        ,
        blockedWebsitesHint: e => {
            const {normalize: n} = e;
            return n(["Enter a keyword or URL"])
        }
        ,
        blockedWebsiteExists: e => {
            const {normalize: n} = e;
            return n(["This keyword already exists."])
        }
        ,
        bedtime: e => {
            const {normalize: n} = e;
            return n(["Bedtime"])
        }
        ,
        bedtimeInstruction: e => {
            const {normalize: n} = e;
            return n(["When enabled, internet is unavailable during this period."])
        }
        ,
        bedtimeProModeTip: e => {
            const {normalize: n} = e;
            return n(["As a TP-Link Homeshield Pro subscriber, you can use Tether to set flexible bedtimes."])
        }
        ,
        weekdays: e => {
            const {normalize: n} = e;
            return n(["Weekdays"])
        }
        ,
        weekends: e => {
            const {normalize: n} = e;
            return n(["Weekends"])
        }
        ,
        setTimeTip: e => {
            const {normalize: n} = e;
            return n(["To use Parental Controls, you need to set the system time to 'Get from Internet' and select your Time Zone."])
        }
        ,
        visitsHistory: e => {
            const {normalize: n} = e;
            return n(["Visits History"])
        }
        ,
        blockedHistory: e => {
            const {normalize: n} = e;
            return n(["Blocked History"])
        }
        ,
        category: e => {
            const {normalize: n} = e;
            return n(["Category"])
        }
        ,
        allowAccessTitle: e => {
            const {normalize: n} = e;
            return n(["Allow Internet Access for Today?"])
        }
        ,
        allowAccessContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices in the profile "', i(o("name")), '" will be allowed to access the internet today.'])
        }
        ,
        blockAccessTitle: e => {
            const {normalize: n} = e;
            return n(["Block Internet Access for Today?"])
        }
        ,
        blockAccessContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices in the profile "', i(o("name")), '" will be unable to access the internet today.'])
        }
        ,
        deleteConfirm: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Are you sure you want to delete profile "', i(o("name")), '"?'])
        }
        ,
        subscribeTimeoutTitle: e => {
            const {normalize: n} = e;
            return n(["Subscription Notice"])
        }
        ,
        subscribeTimeoutContent: e => {
            const {normalize: n} = e;
            return n(["To view the online activities for this member, subscribe to the HomeShield Pro on Tether."])
        }
        ,
        deviceCategoryLimit: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["The maximum number allowed is ", i(o("limit"))])
        }
        ,
        moveDevicesTitle: e => {
            const {normalize: n} = e;
            return n(["Move device(s) to profile"])
        }
        ,
        moveDevicesContent1: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['The device(s) below will be moved from the previous profile(s) to current profile "', i(o("name")), '". Continue?'])
        }
        ,
        moveDevicesContent2: e => {
            const {normalize: n} = e;
            return n(["The device(s) below will be moved from the previous profile(s) to current profile. Continue?"])
        }
        ,
        customDays: e => {
            const {normalize: n} = e;
            return n(["Custom Days"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        removeAllowListTitle: e => {
            const {normalize: n} = e;
            return n(["Remove this website from Allow List?"])
        }
        ,
        removeAllowListContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices in the profile "', i(o("name")), '" will be unable to access the website.'])
        }
        ,
        blockLimitTitle: e => {
            const {normalize: n} = e;
            return n(["Blocked websites number has reached the limit."])
        }
        ,
        blockLimitContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Up to ", i(o("limit")), " websites can be blocked."])
        }
        ,
        addBlockWebsiteTitle: e => {
            const {normalize: n} = e;
            return n(["Add this website to Blocked Websites?"])
        }
        ,
        addBlockWebsiteContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices in the profile "', i(o("name")), '" will be unable to access the website.'])
        }
        ,
        allowLimitTitle: e => {
            const {normalize: n} = e;
            return n(["Allow List entries has reached the limit."])
        }
        ,
        allowLimitContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Up to ", i(o("limit")), " websites can be added to the Allow List."])
        }
        ,
        addAllowListTitle: e => {
            const {normalize: n} = e;
            return n(["Add this website to Allow List?"])
        }
        ,
        addAllowListContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices in the profile "', i(o("name")), '" will be able to access the website.'])
        }
        ,
        nameConflict: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Devices with the same name as "', i(o("name")), '" found in the device list. Tap + to add.'])
        }
        ,
        minutes: e => {
            const {normalize: n} = e;
            return n(["minutes"])
        }
        ,
        profileLimitTitle: e => {
            const {normalize: n} = e;
            return n(["Profile number has reached the limit."])
        }
        ,
        profileLimitContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Up to ", i(o("limit")), " profiles can be added. Please delete or edit unnecessary profiles."])
        }
        ,
        today: e => {
            const {normalize: n} = e;
            return n(["Today"])
        }
        ,
        totalSpentOnline: e => {
            const {normalize: n} = e;
            return n(["Total Spent Online"])
        }
        ,
        insightsTip: e => {
            const {normalize: n} = e;
            return n(["Check full usage reports on Tether App."])
        }
        ,
        noMoreHistory: e => {
            const {normalize: n} = e;
            return n(["No More History"])
        }
        ,
        noHistory: e => {
            const {normalize: n} = e;
            return n(["No History"])
        }
        ,
        matureContent: e => {
            const {normalize: n} = e;
            return n(["Mature Content"])
        }
        ,
        matureContentTip: e => {
            const {normalize: n} = e;
            return n(["Sites that contain violent, illicit, and adult content."])
        }
        ,
        chatMessaging: e => {
            const {normalize: n} = e;
            return n(["Chat Messaging"])
        }
        ,
        chatMessagingTip: e => {
            const {normalize: n} = e;
            return n(["Sites that provide communication services, including email,chatting,and messaging."])
        }
        ,
        social: e => {
            const {normalize: n} = e;
            return n(["Social"])
        }
        ,
        socialTip: e => {
            const {normalize: n} = e;
            return n(["Sites that distribute personal expression or communication, linking people andtheir personal activities including social networking and dating/personals."])
        }
        ,
        onlineShopping: e => {
            const {normalize: n} = e;
            return n(["Online Shopping"])
        }
        ,
        onlineShoppingTip: e => {
            const {normalize: n} = e;
            return n(["Sites that offer online shopping services."])
        }
        ,
        streamingMedia: e => {
            const {normalize: n} = e;
            return n(["Streaming Media"])
        }
        ,
        streamingMediaTip: e => {
            const {normalize: n} = e;
            return n(["Sites that offer audio and/or video content, including music & audio, TV & video, home video/DVD,MP3/MIDI, and movies."])
        }
        ,
        fileSharing: e => {
            const {normalize: n} = e;
            return n(["File Sharing"])
        }
        ,
        fileSharingTip: e => {
            const {normalize: n} = e;
            return n(["Sites that provide or give access to file sharing and distribution, such as peer-to-peer sharing."])
        }
        ,
        gaming: e => {
            const {normalize: n} = e;
            return n(["Gaming"])
        }
        ,
        gamingTip: e => {
            const {normalize: n} = e;
            return n(["Sites that provide or give access to web-hosted or downloadable games, including online gaming, game console, and browser games."])
        }
        ,
        allowedWebsites: e => {
            const {normalize: n} = e;
            return n(["Allowed Websites"])
        }
        ,
        allowedWebsitesInstruction: e => {
            const {normalize: n} = e;
            return n(["Allow access to specific websites that would be blocked by the Content Filter. You can also add from the Blocked History."])
        }
    },
    admin: {
        changePwd: e => {
            const {normalize: n} = e;
            return n(["Change Password"])
        }
        ,
        changePwdInstruction: e => {
            const {normalize: n} = e;
            return n(["Change the router's local management password."])
        }
        ,
        oldPwd: e => {
            const {normalize: n} = e;
            return n(["Old Password"])
        }
        ,
        newPwd: e => {
            const {normalize: n} = e;
            return n(["New Password"])
        }
        ,
        confirmPwd: e => {
            const {normalize: n} = e;
            return n(["Confirm New Password"])
        }
        ,
        pwdRecovery: e => {
            const {normalize: n} = e;
            return n(["Password Recovery"])
        }
        ,
        pwdRecoveryInstruction: e => {
            const {normalize: n} = e;
            return n(["Reset local management password via preset questions and answers."])
        }
        ,
        smtp: e => {
            const {normalize: n} = e;
            return n(["SMTP Server"])
        }
        ,
        auth: e => {
            const {normalize: n} = e;
            return n(["Authentication"])
        }
        ,
        localManagement: e => {
            const {normalize: n} = e;
            return n(["Local Management"])
        }
        ,
        localManagementInstruction: e => {
            const {normalize: n} = e;
            return n(["Access and manage the router from local network devices."])
        }
        ,
        localManagementViaHttps: e => {
            const {normalize: n} = e;
            return n(["Local Management via HTTPS"])
        }
        ,
        localManagers: e => {
            const {normalize: n} = e;
            return n(["Local Managers"])
        }
        ,
        allDevices: e => {
            const {normalize: n} = e;
            return n(["All Devices"])
        }
        ,
        specifiedDevices: e => {
            const {normalize: n} = e;
            return n(["Specified Devices"])
        }
        ,
        specifiedDevice: e => {
            const {normalize: n} = e;
            return n(["Specified Device"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Description"])
        }
        ,
        remoteManagement: e => {
            const {normalize: n} = e;
            return n(["Remote Management"])
        }
        ,
        remoteManagementInstruction: e => {
            const {normalize: n} = e;
            return n(["Access and manage the router over the internet."])
        }
        ,
        httpsPort: e => {
            const {normalize: n} = e;
            return n(["HTTPS Port"])
        }
        ,
        addressManagement: e => {
            const {normalize: n} = e;
            return n(["Web Address for Management"])
        }
        ,
        remoteManagers: e => {
            const {normalize: n} = e;
            return n(["Remote Managers"])
        }
        ,
        onlyThisIp: e => {
            const {normalize: n} = e;
            return n(["Only this IP Address"])
        }
        ,
        remoteManagementNote: e => {
            const {normalize: n} = e;
            return n(["Remote Management is not supported when you are connected to the internet only via IPv6. If you want to use Remote Management, please make sure you have set up an IPv4 connection first."])
        }
        ,
        httpsPortConflict: e => {
            const {normalize: n} = e;
            return n(["HTTPS port is in conflict with the port forwarding external port. Do you want to continue?"])
        }
    },
    systemLog: {
        systemLog: e => {
            const {normalize: n} = e;
            return n(["System Log"])
        }
        ,
        systemLogInstruction: e => {
            const {normalize: n} = e;
            return n(["View a detailed record of system activities."])
        }
        ,
        currentTime: e => {
            const {normalize: n} = e;
            return n(["Current Time"])
        }
        ,
        runningTime: e => {
            const {normalize: n} = e;
            return n(["Running Time"])
        }
        ,
        clearAll: e => {
            const {normalize: n} = e;
            return n(["Clear All"])
        }
        ,
        saveLog: e => {
            const {normalize: n} = e;
            return n(["Save Log"])
        }
        ,
        saveLogInstruction: e => {
            const {normalize: n} = e;
            return n(["Send system log to a specific email address or save locally."])
        }
        ,
        mailLog: e => {
            const {normalize: n} = e;
            return n(["MAIL LOG"])
        }
        ,
        mailLogLower: e => {
            const {normalize: n} = e;
            return n(["Mail Log"])
        }
        ,
        saveToLocal: e => {
            const {normalize: n} = e;
            return n(["SAVE TO LOCAL"])
        }
        ,
        setMail: e => {
            const {normalize: n} = e;
            return n(["Set your mail information below."])
        }
        ,
        emailFrom: e => {
            const {normalize: n} = e;
            return n(["Email From"])
        }
        ,
        requirePwd: e => {
            const {normalize: n} = e;
            return n(["Require Password"])
        }
        ,
        emailPwd: e => {
            const {normalize: n} = e;
            return n(["Email Password"])
        }
        ,
        smtpServer: e => {
            const {normalize: n} = e;
            return n(["SMTP Server"])
        }
        ,
        smtpPort: e => {
            const {normalize: n} = e;
            return n(["SMTP Port"])
        }
        ,
        emailTo: e => {
            const {normalize: n} = e;
            return n(["Email To"])
        }
        ,
        mailLogAuto: e => {
            const {normalize: n} = e;
            return n(["Mail Log Automatically"])
        }
        ,
        saveAndSend: e => {
            const {normalize: n} = e;
            return n(["SAVE AND SEND"])
        }
        ,
        frequency: e => {
            const {normalize: n} = e;
            return n(["Frequency"])
        }
        ,
        everyDay: e => {
            const {normalize: n} = e;
            return n(["Every Day"])
        }
        ,
        afterInterval: e => {
            const {normalize: n} = e;
            return n(["After a Specific Interval"])
        }
        ,
        mailTime: e => {
            const {normalize: n} = e;
            return n(["Mail Time"])
        }
        ,
        mailAgain: e => {
            const {normalize: n} = e;
            return n(["Mail Again"])
        }
        ,
        mailAgainTime: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["In ", i(o("hour")), " h ", i(o("minute")), " min"])
        }
        ,
        interval: e => {
            const {normalize: n} = e;
            return n(["Interval"])
        }
        ,
        hours: e => {
            const {normalize: n} = e;
            return n(["Hour(s)"])
        }
        ,
        sendOk: e => {
            const {normalize: n} = e;
            return n(["Send OK"])
        }
        ,
        sendFailed: e => {
            const {normalize: n} = e;
            return n(["Send Failed"])
        }
        ,
        ALL: e => {
            const {normalize: n} = e;
            return n(["All"])
        }
        ,
        FIREWALL: e => {
            const {normalize: n} = e;
            return n(["Firewall"])
        }
        ,
        NAT: e => {
            const {normalize: n} = e;
            return n(["NAT"])
        }
        ,
        DDNS: e => {
            const {normalize: n} = e;
            return n(["Dynamic DNS"])
        }
        ,
        UPNP: e => {
            const {normalize: n} = e;
            return n(["UPnP"])
        }
        ,
        IMB: e => {
            const {normalize: n} = e;
            return n(["IP & MAC Binding"])
        }
        ,
        IPTV: e => {
            const {normalize: n} = e;
            return n(["IPTV"])
        }
        ,
        DHCPS: e => {
            const {normalize: n} = e;
            return n(["DHCP Server"])
        }
        ,
        IGMP_PROXY: e => {
            const {normalize: n} = e;
            return n(["IGMP Proxy"])
        }
        ,
        DOMAIN_LOGIN: e => {
            const {normalize: n} = e;
            return n(["Domain Login"])
        }
        ,
        BASIC_SECURITY: e => {
            const {normalize: n} = e;
            return n(["Basic Security"])
        }
        ,
        PARENTAL_CONTROL: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
        ,
        ACCESS_CONTROL: e => {
            const {normalize: n} = e;
            return n(["Access Control"])
        }
        ,
        DOS_PROTECTION: e => {
            const {normalize: n} = e;
            return n(["DoS Protection"])
        }
        ,
        QOS: e => {
            const {normalize: n} = e;
            return n(["QoS"])
        }
        ,
        TRAFFIC_STATS: e => {
            const {normalize: n} = e;
            return n(["Traffic Statistics"])
        }
        ,
        TIME_SETTINGS: e => {
            const {normalize: n} = e;
            return n(["Time Settings"])
        }
        ,
        ACCOUNT_MANAGEMENT: e => {
            const {normalize: n} = e;
            return n(["Account Management"])
        }
        ,
        LOCAL_MANAGEMENT: e => {
            const {normalize: n} = e;
            return n(["Local Management"])
        }
        ,
        REMOTE_MANAGEMENT: e => {
            const {normalize: n} = e;
            return n(["Remote Management"])
        }
        ,
        LOCALE: e => {
            const {normalize: n} = e;
            return n(["Locale"])
        }
        ,
        FACTORY_RESET: e => {
            const {normalize: n} = e;
            return n(["Factory Reset"])
        }
        ,
        LED_CONTROLLER: e => {
            const {normalize: n} = e;
            return n(["Led Controller"])
        }
        ,
        NETWORK: e => {
            const {normalize: n} = e;
            return n(["Network"])
        }
        ,
        USBSHARE: e => {
            const {normalize: n} = e;
            return n(["USB Share"])
        }
        ,
        WIRELESS: e => {
            const {normalize: n} = e;
            return n(["Wireless"])
        }
        ,
        LAN: e => {
            const {normalize: n} = e;
            return n(["LAN"])
        }
        ,
        WAN: e => {
            const {normalize: n} = e;
            return n(["WAN"])
        }
        ,
        VPN_SERVER: e => {
            const {normalize: n} = e;
            return n(["VPN Server"])
        }
        ,
        USB: e => {
            const {normalize: n} = e;
            return n(["USB"])
        }
        ,
        TP_CLOUD: e => {
            const {normalize: n} = e;
            return n(["TP Cloud"])
        }
        ,
        SECURITY: e => {
            const {normalize: n} = e;
            return n(["Security"])
        }
        ,
        MODEM: e => {
            const {normalize: n} = e;
            return n(["3G4G"])
        }
        ,
        AND: e => {
            const {normalize: n} = e;
            return n(["and"])
        }
        ,
        level: e => {
            const {normalize: n} = e;
            return n(["Level"])
        }
        ,
        EMERGENCY: e => {
            const {normalize: n} = e;
            return n(["EMERGENCY"])
        }
        ,
        ALERT: e => {
            const {normalize: n} = e;
            return n(["ALERT"])
        }
        ,
        CRITICAL: e => {
            const {normalize: n} = e;
            return n(["CRITICAL"])
        }
        ,
        ERROR: e => {
            const {normalize: n} = e;
            return n(["ERROR"])
        }
        ,
        WARNING: e => {
            const {normalize: n} = e;
            return n(["WARNING"])
        }
        ,
        NOTICE: e => {
            const {normalize: n} = e;
            return n(["NOTICE"])
        }
        ,
        INFO: e => {
            const {normalize: n} = e;
            return n(["INFO"])
        }
        ,
        PRIVACY_ASSETS: e => {
            const {normalize: n} = e;
            return n(["Privacy Assets"])
        }
    },
    timeMachine: {
        limitTip: e => {
            const {normalize: n} = e;
            return n(['(Enter "0" for no limit.)'])
        }
        ,
        selectHint: e => {
            const {normalize: n} = e;
            return n(["Please select a location for Time Machine backups"])
        }
        ,
        notAvailable: e => {
            const {normalize: n} = e;
            return n(["Current location is not available."])
        }
        ,
        availableSpace: e => {
            const {normalize: n} = e;
            return n(["Available Storage"])
        }
        ,
        totalSpace: e => {
            const {normalize: n} = e;
            return n(["Total Storage"])
        }
        ,
        availableStorage: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Available storage: ", i(o("size")), " GB"])
        }
        ,
        timeMachine: e => {
            const {normalize: n} = e;
            return n(["Time Machine"])
        }
        ,
        timeMachineInstruction: e => {
            const {normalize: n} = e;
            return n(["Back up all files on your Mac to a USB storage device connected to your router."])
        }
        ,
        backupLocation: e => {
            const {normalize: n} = e;
            return n(["Backup Location"])
        }
        ,
        timeMachineSize: e => {
            const {normalize: n} = e;
            return n(["Storage Limit for Backups"])
        }
        ,
        help: e => {
            const {normalize: n} = e;
            return n(["How to Use Time Machine:"])
        }
        ,
        step1: e => {
            const {normalize: n} = e;
            return n(["Step 1:"])
        }
        ,
        timeMachineStep1Content: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Connect your Mac to the router's Wi-Fi, open ", i(o("systemPreferences")), " and click ", i(o("timeMachine")), "."])
        }
        ,
        systemPreferences: e => {
            const {normalize: n} = e;
            return n(["System Preferences"])
        }
        ,
        step2: e => {
            const {normalize: n} = e;
            return n(["Step 2:"])
        }
        ,
        timeMachineStep2Content: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Click ", i(o("selectBackupDisk")), "... then select ", i(o("backupTM")), "."])
        }
        ,
        selectBackupDisk: e => {
            const {normalize: n} = e;
            return n(["Select Backup Disk"])
        }
        ,
        backupTM: e => {
            const {normalize: n} = e;
            return n(["BackupTM"])
        }
        ,
        step3: e => {
            const {normalize: n} = e;
            return n(["Step 3:"])
        }
        ,
        timeMachineStep3Content: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enter the USB storage device's shared account and click ", i(o("connect")), "."])
        }
        ,
        connect: e => {
            const {normalize: n} = e;
            return n(["Connect"])
        }
        ,
        timeMachineSelectMsgTitle: e => {
            const {normalize: n} = e;
            return n(["Please select the USB storage device for Time Machine backups:"])
        }
        ,
        noUsbStorageFound: e => {
            const {normalize: n} = e;
            return n(["No USB storage device found. Insert one into a USB port on your router and try again."])
        }
        ,
        notes: e => {
            const {normalize: n} = e;
            return n(["Notes:"])
        }
        ,
        noteGetHigherSpeed: e => {
            const {normalize: n} = e;
            return n(["We recommend you use a wired connection for the backup to get higher speed."])
        }
        ,
        noteRemoveHdd: e => {
            const {normalize: n} = e;
            return n(["Please safely remove the HDD from the router first before you restart the router or unplug the HDD. HDD may be damaged if the router is abnormally powered off or HDD is disconnected during file transfer."])
        }
        ,
        noteCompleteBackupOvernight: e => {
            const {normalize: n} = e;
            return n(["Initial backup may take some time depending on the size of your OSX volume. Consider starting the first backup in the evening so it will complete overnight."])
        }
    },
    offlineDownload: {
        offlineDownload: e => {
            const {normalize: n} = e;
            return n(["Offline Download"])
        }
        ,
        offlineDownloadInstruction: e => {
            const {normalize: n} = e;
            return n(["Download files to the connected USB storage device even when not accessing the web management page."])
        }
        ,
        downloads: e => {
            const {normalize: n} = e;
            return n(["Downloads"])
        }
        ,
        downloadsInstruction: e => {
            const {normalize: n} = e;
            return n(["Add and manage download tasks."])
        }
        ,
        file: e => {
            const {normalize: n} = e;
            return n(["File"])
        }
        ,
        folderPath: e => {
            const {normalize: n} = e;
            return n(["Folder Path"])
        }
        ,
        progress: e => {
            const {normalize: n} = e;
            return n(["Progress"])
        }
        ,
        remainingTime: e => {
            const {normalize: n} = e;
            return n(["Remaining Time"])
        }
        ,
        speed: e => {
            const {normalize: n} = e;
            return n(["Speed"])
        }
        ,
        source: e => {
            const {normalize: n} = e;
            return n(["Source"])
        }
        ,
        torrentPc: e => {
            const {normalize: n} = e;
            return n(["Torrent file from PC"])
        }
        ,
        torrentUsb: e => {
            const {normalize: n} = e;
            return n(["Torrent file from USB"])
        }
        ,
        sourceUrl: e => {
            const {normalize: n} = e;
            return n(["URL(FTP,HTTP,aMule)"])
        }
        ,
        url: e => {
            const {normalize: n} = e;
            return n(["URL"])
        }
        ,
        amuleServer: e => {
            const {normalize: n} = e;
            return n(["aMule Server"])
        }
        ,
        schedule: e => {
            const {normalize: n} = e;
            return n(["Schedule"])
        }
        ,
        setSchedule: e => {
            const {normalize: n} = e;
            return n(["Set the Schedule"])
        }
        ,
        maxActive: e => {
            const {normalize: n} = e;
            return n(["Maximum Number of Active Downloads"])
        }
        ,
        maxDownload: e => {
            const {normalize: n} = e;
            return n(["Maximum Download Speed"])
        }
        ,
        maxUpload: e => {
            const {normalize: n} = e;
            return n(["Maximum Upload Speed"])
        }
        ,
        keepUploading: e => {
            const {normalize: n} = e;
            return n(["Keep Uploading After Task Completes"])
        }
        ,
        action: e => {
            const {normalize: n} = e;
            return n(["Action"])
        }
        ,
        connectedPeers: e => {
            const {normalize: n} = e;
            return n(["Connected Peers"])
        }
        ,
        status: e => {
            const {normalize: n} = e;
            return n(["Status"])
        }
        ,
        GlobalMaxNumberConnections: e => {
            const {normalize: n} = e;
            return n(["Global Maximum Number of Connections"])
        }
        ,
        maxNumberConnectedPeers: e => {
            const {normalize: n} = e;
            return n(["Maximum Number of Connected Peers per Torrent"])
        }
        ,
        enDhtNetwork: e => {
            const {normalize: n} = e;
            return n(["Enable DHT Network"])
        }
        ,
        enablePeerExchange: e => {
            const {normalize: n} = e;
            return n(["Enable Peer Exchange"])
        }
        ,
        enableBitTorrent: e => {
            const {normalize: n} = e;
            return n(["Enable BitTorrent Protocol Encryption"])
        }
        ,
        btSettings: e => {
            const {normalize: n} = e;
            return n(["BT Settings"])
        }
        ,
        amuleSettings: e => {
            const {normalize: n} = e;
            return n(["aMule Settings"])
        }
        ,
        cleanCompletedTasks: e => {
            const {normalize: n} = e;
            return n(["Clear all completed tasks"])
        }
        ,
        addDownloadTask: e => {
            const {normalize: n} = e;
            return n(["Add a Download Task"])
        }
        ,
        folderChangeNote: e => {
            const {normalize: n} = e;
            return n(["Changing the offline download path will interrupt the currently downloading tasks. The system will download these tasks again after the new settings are applied."])
        }
        ,
        changeAnyway: e => {
            const {normalize: n} = e;
            return n(["CHANGE ANYWAY"])
        }
    },
    wirelessSchedule: {
        band: e => {
            const {normalize: n} = e;
            return n(["Band"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Schedule when to automatically turn off your wireless network."])
        }
        ,
        turnOffTitle: e => {
            const {normalize: n} = e;
            return n(["Turn off Wi-Fi now?"])
        }
        ,
        turnOffContent: e => {
            const {normalize: n} = e;
            return n(["The current time is within the wireless off schedule you're setting. Would you like to turn off Wi-Fi now or wait until the next start time?"])
        }
        ,
        offNow: e => {
            const {normalize: n} = e;
            return n(["Turn Off Now"])
        }
        ,
        nextTime: e => {
            const {normalize: n} = e;
            return n(["Next Start Time"])
        }
        ,
        wirelessOffTime: e => {
            const {normalize: n} = e;
            return n(["Wireless Off Time"])
        }
        ,
        addSchedule: e => {
            const {normalize: n} = e;
            return n(["Add Schedule"])
        }
        ,
        modifySchedule: e => {
            const {normalize: n} = e;
            return n(["Modify Schedule"])
        }
        ,
        everyDay: e => {
            const {normalize: n} = e;
            return n(["Every Day"])
        }
        ,
        weekdays: e => {
            const {normalize: n} = e;
            return n(["Weekdays"])
        }
        ,
        weekends: e => {
            const {normalize: n} = e;
            return n(["Weekends"])
        }
        ,
        smartNetworkTip: e => {
            const {normalize: n} = e;
            return n(["If your network contains smart home devices (such as IoT devices), it is recommended to turn on the 2.4 GHz band and not to set the Wireless Off Time, so as to ensure a stable connection."])
        }
        ,
        enableEntry: e => {
            const {normalize: n} = e;
            return n(["Enable This Entry"])
        }
        ,
        mloRebootInstruction: e => {
            const {normalize: n} = e;
            return n(["Schedule when to automatically turn off your wireless network. (Exclude the MLO network)"])
        }
    },
    ipMacBinding: {
        title: e => {
            const {normalize: n} = e;
            return n(["IP & MAC Binding"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Bind the MAC and IP addresses of devices to prevent ARP spoofing and attacks."])
        }
        ,
        arpList: e => {
            const {normalize: n} = e;
            return n(["ARP List"])
        }
        ,
        arpListInstruction: e => {
            const {normalize: n} = e;
            return n(["Bind or unbind the MAC and IP addresses of currently connected devices."])
        }
        ,
        bindList: e => {
            const {normalize: n} = e;
            return n(["Binding List"])
        }
        ,
        bindListInstruction: e => {
            const {normalize: n} = e;
            return n(["Add or delete binding entries."])
        }
        ,
        addBindingEntry: e => {
            const {normalize: n} = e;
            return n(["Add Binding Entry"])
        }
    },
    backupRestore: {
        backup: e => {
            const {normalize: n} = e;
            return n(["Backup"])
        }
        ,
        backupInstruction: e => {
            const {normalize: n} = e;
            return n(["Save current router settings to a file."])
        }
        ,
        localRestore: e => {
            const {normalize: n} = e;
            return n(["Restore"])
        }
        ,
        localRestoreInstruction: e => {
            const {normalize: n} = e;
            return n(["Restore settings from a backup file."])
        }
        ,
        localRestoreConfirm: e => {
            const {normalize: n} = e;
            return n(["The router will reboot to restore the settings. Restore now?"])
        }
        ,
        factoryDefaultRestore: e => {
            const {normalize: n} = e;
            return n(["Factory Default Restore"])
        }
        ,
        factoryDefaultRestoreInstruction: e => {
            const {normalize: n} = e;
            return n(["Restore all settings to default values."])
        }
        ,
        factoryRestoreDefaultTip: e => {
            const {normalize: n} = e;
            return n(["Restore all configuration settings to default values, except your login and cloud account information."])
        }
        ,
        factoryRestoreAllTip: e => {
            const {normalize: n} = e;
            return n(["Restore all the configuration settings to their default values."])
        }
        ,
        factoryRestoreUpper: e => {
            const {normalize: n} = e;
            return n(["FACTORY RESTORE"])
        }
        ,
        factoryRestoreConfirm: e => {
            const {normalize: n} = e;
            return n(["All current settings will be lost and the router will reboot to restore the factory default settings. Restore now?"])
        }
        ,
        restoring: e => {
            const {normalize: n} = e;
            return n(["Restoring..."])
        }
        ,
        factorRepeaterNote: e => {
            const {normalize: n} = e;
            return n(["This device will turn to router mode after being reset to factory default settings."])
        }
    },
    wireGuard: {
        wireGuard: e => {
            const {normalize: n} = e;
            return n(["WireGuard"])
        }
        ,
        wireGuardInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up a WireGuard VPN and accounts for quick, remote and secure access to your network."])
        }
        ,
        tunnelIpAddress: e => {
            const {normalize: n} = e;
            return n(["Tunnel IP Address"])
        }
        ,
        listenPort: e => {
            const {normalize: n} = e;
            return n(["Listen Port"])
        }
        ,
        clientAccess: e => {
            const {normalize: n} = e;
            return n(["Client Access"])
        }
        ,
        accessInternet: e => {
            const {normalize: n} = e;
            return n(["Internet and Home Network"])
        }
        ,
        accessHome: e => {
            const {normalize: n} = e;
            return n(["Home Network Only"])
        }
        ,
        persistentKeepalive: e => {
            const {normalize: n} = e;
            return n(["Persistent Keepalive"])
        }
        ,
        privateKey: e => {
            const {normalize: n} = e;
            return n(["Private Key"])
        }
        ,
        publicKey: e => {
            const {normalize: n} = e;
            return n(["Public Key"])
        }
        ,
        renewKey: e => {
            const {normalize: n} = e;
            return n(["RENEW KEY"])
        }
        ,
        renewKeyNote: e => {
            const {normalize: n} = e;
            return n(["Renewing the key will update the private key and public key, and the previously created client config file will become invalid. After renewing the key, please obtain the account list again to get the QR code or config file."])
        }
        ,
        renewKeyTitle: e => {
            const {normalize: n} = e;
            return n(["Renew the key?"])
        }
        ,
        renewing: e => {
            const {normalize: n} = e;
            return n(["Renewing the key..."])
        }
        ,
        accountList: e => {
            const {normalize: n} = e;
            return n(["Account List"])
        }
        ,
        accountListInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure accounts (up to 16) that can be used by remote clients to connect to the VPN server."])
        }
        ,
        renewConfigTip: e => {
            const {normalize: n} = e;
            return n(["If you have renewed the key, please reconfigure the client, otherwise the client will not be able to connect to the VPN server."])
        }
        ,
        allowedIpsServer: e => {
            const {normalize: n} = e;
            return n(["Allowed IPs (Server)"])
        }
        ,
        allowedIpsClient: e => {
            const {normalize: n} = e;
            return n(["Allowed IPs (Client)"])
        }
        ,
        preSharedKey: e => {
            const {normalize: n} = e;
            return n(["Pre-shared Key (Secret)"])
        }
        ,
        generateConfig: e => {
            const {normalize: n} = e;
            return n(["Generating config file..."])
        }
        ,
        connectToServer: e => {
            const {normalize: n} = e;
            return n(["Connect to Server"])
        }
        ,
        qrCode: e => {
            const {normalize: n} = e;
            return n(["QR Code"])
        }
        ,
        scanNote: e => {
            const {normalize: n} = e;
            return n(["Please download WireGuard App from Google Play or Apple Store, then use the App to scan the QR Code to connect to this server."])
        }
        ,
        exportNote: e => {
            const {normalize: n} = e;
            return n(["Please use the following configuration to set up your WireGuard client."])
        }
        ,
        deleteAccountNote: e => {
            const {normalize: n} = e;
            return n(["The previously configured clients will not be able to connect to the VPN server. Delete?"])
        }
        ,
        deleteAccountTitle: e => {
            const {normalize: n} = e;
            return n(["Delete Account?"])
        }
        ,
        addressIncludedInServer: e => {
            const {normalize: n} = e;
            return n(["The Address should be included in the Allowed IPs (Server)."])
        }
        ,
        allowedIps: e => {
            const {normalize: n} = e;
            return n(["Allowed IPs"])
        }
        ,
        address: e => {
            const {normalize: n} = e;
            return n(["Address"])
        }
        ,
        export: e => {
            const {normalize: n} = e;
            return n(["Export"])
        }
        ,
        exportUpper: e => {
            const {normalize: n} = e;
            return n(["EXPORT"])
        }
        ,
        deleteNoAccountTip: e => {
            const {normalize: n} = e;
            return n(["Couldn't delete the last account. Please keep at least one account to use the WireGuard function."])
        }
    },
    ipv6: {
        ipv6: e => {
            const {normalize: n} = e;
            return n(["IPv6"])
        }
        ,
        ipv6Internet: e => {
            const {normalize: n} = e;
            return n(["IPv6 Internet"])
        }
        ,
        ipv6InternetInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up an IPv6 internet connection using the information provided by your ISP (internet service provider)."])
        }
        ,
        ipv6Lan: e => {
            const {normalize: n} = e;
            return n(["IPv6 LAN"])
        }
        ,
        ipv6LanInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure the LAN IPv6 address of the router and set the configuration type to assign IPv6 addresses to the clients."])
        }
        ,
        connectType: e => {
            const {normalize: n} = e;
            return n(["Internet Connection Type"])
        }
        ,
        ipv6Address: e => {
            const {normalize: n} = e;
            return n(["IPv6 Address"])
        }
        ,
        defaultGateway: e => {
            const {normalize: n} = e;
            return n(["Default Gateway"])
        }
        ,
        primaryDns: e => {
            const {normalize: n} = e;
            return n(["Primary DNS"])
        }
        ,
        secondaryDns: e => {
            const {normalize: n} = e;
            return n(["Secondary DNS"])
        }
        ,
        mtuSize: e => {
            const {normalize: n} = e;
            return n(["MTU Size"])
        }
        ,
        mtuSizeTip: e => {
            const {normalize: n} = e;
            return n(["(The default is 1500, do not change unless necessary.)"])
        }
        ,
        advancedTitle: e => {
            const {normalize: n} = e;
            return n(["Advanced Settings"])
        }
        ,
        getIpv6Address: e => {
            const {normalize: n} = e;
            return n(["Get IPv6 Address"])
        }
        ,
        prefixDelegation: e => {
            const {normalize: n} = e;
            return n(["Prefix Delegation"])
        }
        ,
        dnsAddress: e => {
            const {normalize: n} = e;
            return n(["DNS Address"])
        }
        ,
        pppoeShare: e => {
            const {normalize: n} = e;
            return n(["Share the same PPPoE session with IPv4"])
        }
        ,
        ipv4Address: e => {
            const {normalize: n} = e;
            return n(["IPv4 Address"])
        }
        ,
        ipv4Mask: e => {
            const {normalize: n} = e;
            return n(["IPv4 Subnet Mask"])
        }
        ,
        ipv4DefaultGateway: e => {
            const {normalize: n} = e;
            return n(["IPv4 Default Gateway"])
        }
        ,
        tunnelAddress: e => {
            const {normalize: n} = e;
            return n(["Tunnel Address"])
        }
        ,
        getDynamicDns: e => {
            const {normalize: n} = e;
            return n(["Get Dynamically from ISP"])
        }
        ,
        getStaticDns: e => {
            const {normalize: n} = e;
            return n(["Use the Following DNS Addresses"])
        }
        ,
        ipv4LanIp: e => {
            const {normalize: n} = e;
            return n(["IPv4 LAN IP"])
        }
        ,
        ipv6LanIp: e => {
            const {normalize: n} = e;
            return n(["IPv6 LAN IP"])
        }
        ,
        assignedType: e => {
            const {normalize: n} = e;
            return n(["Assigned Type"])
        }
        ,
        addressPrefix: e => {
            const {normalize: n} = e;
            return n(["Address Prefix"])
        }
        ,
        releaseTime: e => {
            const {normalize: n} = e;
            return n(["Release Time"])
        }
        ,
        releaseTimeTip: e => {
            const {normalize: n} = e;
            return n(["(The default is 86400, do not change unless necessary.)"])
        }
        ,
        firewallRules: e => {
            const {normalize: n} = e;
            return n(["Firewall Rules"])
        }
        ,
        firewallInstruction: e => {
            const {normalize: n} = e;
            return n(["Add IPv6 firewall rules to allow specific devices to access the specified services."])
        }
        ,
        serviceName: e => {
            const {normalize: n} = e;
            return n(["Service Name"])
        }
        ,
        addFirmwareRule: e => {
            const {normalize: n} = e;
            return n(["Add Firewall Rule"])
        }
        ,
        serviceType: e => {
            const {normalize: n} = e;
            return n(["Service Type"])
        }
        ,
        internalIp: e => {
            const {normalize: n} = e;
            return n(["Internal IP"])
        }
        ,
        ruleDeleteTitle: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Delete "', i(o("name")), '"?'])
        }
        ,
        ruleDeleteContent: e => {
            const {normalize: n} = e;
            return n(["This IPv6 firewall rule will be invalid. Are you sure you want to delete it?"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        lanTypeNdProxy: e => {
            const {normalize: n} = e;
            return n(["ND Proxy"])
        }
        ,
        lanTypeDhcpv6: e => {
            const {normalize: n} = e;
            return n(["DHCPv6"])
        }
        ,
        lanTypeSlaac: e => {
            const {normalize: n} = e;
            return n(["SLAAC+Stateless DHCP"])
        }
        ,
        lanTypeRdnss: e => {
            const {normalize: n} = e;
            return n(["SLAAC+RDNSS"])
        }
        ,
        wanTypeAuto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        wanTypeSlaac: e => {
            const {normalize: n} = e;
            return n(["SLAAC"])
        }
        ,
        wanTypeDhcpv6: e => {
            const {normalize: n} = e;
            return n(["DHCPv6"])
        }
        ,
        wanTypeSpecified: e => {
            const {normalize: n} = e;
            return n(["Specified by ISP"])
        }
        ,
        wanTypeNonAddress: e => {
            const {normalize: n} = e;
            return n(["Non-Address"])
        }
        ,
        configTypeAuto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        configTypeManual: e => {
            const {normalize: n} = e;
            return n(["Manual"])
        }
    },
    easyMesh: {
        easyMesh: e => {
            const {normalize: n} = e;
            return n(["EasyMesh"])
        }
        ,
        connection: e => {
            const {normalize: n} = e;
            return n(["Connection"])
        }
        ,
        mainRouter: e => {
            const {normalize: n} = e;
            return n(["Main Router"])
        }
        ,
        satelliteRouter: e => {
            const {normalize: n} = e;
            return n(["Satellite Router"])
        }
        ,
        noMeshDeviceNote1: e => {
            const {normalize: n} = e;
            return n(["This feature allows you to set up a mesh network by adding EasyMesh devices of any brand and TP-Link OneMesh devices."])
        }
        ,
        viewMeshProduct: e => {
            const {normalize: n} = e;
            return n(["View EasyMesh Device List"])
        }
        ,
        noMeshDeviceNote2: e => {
            const {normalize: n} = e;
            return n(["In an EasyMesh network, your mobile device will seamlessly switch to the mesh router or extender that provides the fastest speed as you move through your home."])
        }
        ,
        meshNetwork: e => {
            const {normalize: n} = e;
            return n(["EasyMesh Network"])
        }
        ,
        commonNetwork: e => {
            const {normalize: n} = e;
            return n(["Common Network"])
        }
        ,
        meshNetworkInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up and manage your EasyMesh network."])
        }
        ,
        meshTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enable ", i(o("smartUrl")), " to work with EasyMesh for better seamless roaming."])
        }
        ,
        smartConnect: e => {
            const {normalize: n} = e;
            return n(["Smart Connect"])
        }
        ,
        signal: e => {
            const {normalize: n} = e;
            return n(["Signal"])
        }
        ,
        model: e => {
            const {normalize: n} = e;
            return n(["Model"])
        }
        ,
        whatsMesh: e => {
            const {normalize: n} = e;
            return n(["What's EasyMesh?"])
        }
        ,
        meshInstruction: e => {
            const {normalize: n} = e;
            return n(["Connect EasyMesh and OneMesh devices to create a mesh network for seamless Wi-Fi coverage and centralized management."])
        }
        ,
        enableTitle: e => {
            const {normalize: n} = e;
            return n(["Enable EasyMesh?"])
        }
        ,
        enableNotice: e => {
            const {normalize: n} = e;
            return n(["This will restart your wireless network. Wireless access will be disabled temporarily and you may need to reconnect to the network after it restarts."])
        }
        ,
        enabling: e => {
            const {normalize: n} = e;
            return n(["Enabling EasyMesh..."])
        }
        ,
        disabling: e => {
            const {normalize: n} = e;
            return n(["Disabling EasyMesh..."])
        }
        ,
        adding: e => {
            const {normalize: n} = e;
            return n(["Adding..."])
        }
        ,
        restartNotice: e => {
            const {normalize: n} = e;
            return n(["This will take a few seconds. Please reconnect to the network after it restarts."])
        }
        ,
        disableMainTitle: e => {
            const {normalize: n} = e;
            return n(["Disable EasyMesh on the main router?"])
        }
        ,
        disableMainNotice: e => {
            const {normalize: n} = e;
            return n(["This will disable EasyMesh on all devices in the network! TP-Link satellite routers will be reset to their factory settings. TP-Link satellite extenders will keep their current wireless settings but won't synchronize to the main router's settings."])
        }
        ,
        disableMainTip: e => {
            const {normalize: n} = e;
            return n(["For the normal functioning of the main router, please unplug all the Ethernet cables connected to the satellite devices."])
        }
        ,
        disableTitle: e => {
            const {normalize: n} = e;
            return n(["Disable EasyMesh?"])
        }
        ,
        disableNotice: e => {
            const {normalize: n} = e;
            return n(["This will restart the wireless network! Wireless access will be disabled temporarily and may require you to reconnect."])
        }
        ,
        addConfirm: e => {
            const {normalize: n} = e;
            return n(["Add this device to the EasyMesh network?"])
        }
        ,
        addNotice: e => {
            const {normalize: n} = e;
            return n(["The device will synchronize to your main router's wireless settings. You may need to reconnect its clients."])
        }
        ,
        satelliteRe: e => {
            const {normalize: n} = e;
            return n(["Satellite Extender"])
        }
        ,
        mainRouterTip: e => {
            const {normalize: n} = e;
            return n(["In this mode, you can add EasyMesh and OneMesh devices to boost Wi-Fi coverage."])
        }
        ,
        mainRouterLinkNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["TP-Link satellite routers will follow the main router's ", i(o("ledUrl")), " Settings."])
        }
        ,
        mainRouterNote: e => {
            const {normalize: n} = e;
            return n(["TP-Link satellite routers will follow the main router's LED Control Settings."])
        }
        ,
        satelliteNote: e => {
            const {normalize: n} = e;
            return n(["In this mode, you can add the router to your EasyMesh main router's network to boost Wi-Fi coverage."])
        }
        ,
        satelliteTip: e => {
            const {normalize: n} = e;
            return n(["EasyMesh is coming to all TP-Link OneMesh devices with a simple firmware update."])
        }
        ,
        deviceInfo: e => {
            const {normalize: n} = e;
            return n(["Device Info"])
        }
        ,
        notSet: e => {
            const {normalize: n} = e;
            return n(["Not set"])
        }
        ,
        addSatellite: e => {
            const {normalize: n} = e;
            return n(["Add Satellite Devices"])
        }
        ,
        removeTitle: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Remove "', i(o("name")), '" from the EasyMesh network?'])
        }
        ,
        removeNotice: e => {
            const {normalize: n} = e;
            return n(["This will reset the device to its factory settings. You can search for and add it back later."])
        }
        ,
        cantRemove: e => {
            const {normalize: n} = e;
            return n(["Please manually reset the device to delete it from the mesh network."])
        }
        ,
        poorSignal: e => {
            const {normalize: n} = e;
            return n(["Poor signal. Please move this device closer to your main router."])
        }
        ,
        emptyClient: e => {
            const {normalize: n} = e;
            return n(["No client."])
        }
        ,
        offlineClient: e => {
            const {normalize: n} = e;
            return n(["Device offline."])
        }
        ,
        offlineTip: e => {
            const {normalize: n} = e;
            return n(["This device is offline. Try the following:"])
        }
        ,
        offline1: e => {
            const {normalize: n} = e;
            return n(["Make sure the device is powered on."])
        }
        ,
        offline2: e => {
            const {normalize: n} = e;
            return n(["Reboot your device and check again."])
        }
        ,
        offline3: e => {
            const {normalize: n} = e;
            return n(["Plug in the device closer to the main router or another satellite device in the network, then check again."])
        }
        ,
        offline4: e => {
            const {normalize: n} = e;
            return n(["Reset the device and add it back."])
        }
        ,
        contactTech: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If you are still having problems, contact our ", i(o("supportUrl")), "."])
        }
        ,
        techSupport: e => {
            const {normalize: n} = e;
            return n(["technical support"])
        }
        ,
        addDeviceType: e => {
            const {normalize: n} = e;
            return n(["Which type of satellite devices do you want to add?"])
        }
        ,
        tpRouter: e => {
            const {normalize: n} = e;
            return n(["TP-Link Router"])
        }
        ,
        tpRouterTip: e => {
            const {normalize: n} = e;
            return n(["(Includes TP-Link EasyMesh routers)"])
        }
        ,
        tpRe: e => {
            const {normalize: n} = e;
            return n(["TP-Link Extender"])
        }
        ,
        tpReTip: e => {
            const {normalize: n} = e;
            return n(["(Includes TP-Link EasyMesh and OneMesh extenders)"])
        }
        ,
        otherBrand: e => {
            const {normalize: n} = e;
            return n(["Others"])
        }
        ,
        otherBrandTip: e => {
            const {normalize: n} = e;
            return n(["(Includes EasyMesh devices of other brands)"])
        }
        ,
        beforeAddRouterTitle: e => {
            const {normalize: n} = e;
            return n(["Prepare your TP-Link satellite routers:"])
        }
        ,
        beforeAddRouter1: e => {
            const {normalize: n} = e;
            return n(["Make sure your routers support EasyMesh. A firmware update may be required for earlier OneMesh models to support router-router networking."])
        }
        ,
        beforeAddRouter2: e => {
            const {normalize: n} = e;
            return n(["Plug in the routers near your main router."])
        }
        ,
        beforeAddRouter3: e => {
            const {normalize: n} = e;
            return n(["Reset them to their factory settings or change them to Satellite Router mode."])
        }
        ,
        addRouter: e => {
            const {normalize: n} = e;
            return n(["Add TP-Link Satellite Routers"])
        }
        ,
        addRe: e => {
            const {normalize: n} = e;
            return n(["Add TP-Link Satellite Extenders"])
        }
        ,
        addOther: e => {
            const {normalize: n} = e;
            return n(["Add Satellite Devices of Other Brands"])
        }
        ,
        addOtherHelp: e => {
            const {normalize: n} = e;
            return n(["Follow the steps below:"])
        }
        ,
        addOther1: e => {
            const {normalize: n} = e;
            return n(["Prepare the satellite devices."])
        }
        ,
        addOther1Router: e => {
            const {normalize: n} = e;
            return n(["For routers, go to their EasyMesh page and change them to their satellite router or other similar mode. For further details, refer to their user manuals."])
        }
        ,
        addOther1Re: e => {
            const {normalize: n} = e;
            return n(["For extenders, skip this step."])
        }
        ,
        addOther2: e => {
            const {normalize: n} = e;
            return n(["Plug in the devices close to the main router."])
        }
        ,
        addOtherWpsA: e => {
            const {normalize: n} = e;
            return n(["Press the WPS button on the main router."])
        }
        ,
        addOtherWpsB: e => {
            const {normalize: n} = e;
            return n(["Within 2 minutes, press the WPS button on a satellite device."])
        }
        ,
        addOtherWpsC: e => {
            const {normalize: n} = e;
            return n(["Wait until the WPS process is complete."])
        }
        ,
        addOtherWpsD: e => {
            const {normalize: n} = e;
            return n(["Repeat the WPS steps for each satellite device."])
        }
        ,
        addOther4: e => {
            const {normalize: n} = e;
            return n(["Click OK and check the EasyMesh network device list."])
        }
        ,
        addRouterTip: e => {
            const {normalize: n} = e;
            return n(["Search for nearby TP-Link satellite routers, and add them to the mesh network."])
        }
        ,
        searchRouter: e => {
            const {normalize: n} = e;
            return n(["Searching for satellite routers..."])
        }
        ,
        emptyRouter: e => {
            const {normalize: n} = e;
            return n(['No satellite router nearby. Click "search" to find satellite routers.'])
        }
        ,
        howToSatellite: e => {
            const {normalize: n} = e;
            return n(["How to change the router to Satellite Router mode?"])
        }
        ,
        toSatelliteTitle: e => {
            const {normalize: n} = e;
            return n(["To change the router to Satellite Router mode, follow the steps below:"])
        }
        ,
        toSatellite1: e => {
            const {normalize: n} = e;
            return n(["Log into the router's web page."])
        }
        ,
        toSatellite2: e => {
            const {normalize: n} = e;
            return n(["Go to the EasyMesh page and enable EasyMesh."])
        }
        ,
        toSatellite3: e => {
            const {normalize: n} = e;
            return n(["Click Change Mode and switch to Satellite Router mode."])
        }
        ,
        notFoundRouter: e => {
            const {normalize: n} = e;
            return n(["Can't find your devices?"])
        }
        ,
        notFoundHelp: e => {
            const {normalize: n} = e;
            return n(["If you can't find your satellite device, please follow the instructions below."])
        }
        ,
        notFoundHelp1: e => {
            const {normalize: n} = e;
            return n(["Power on the satellite devices."])
        }
        ,
        notFoundHelp2: e => {
            const {normalize: n} = e;
            return n(["Reset the device to its factory settings or set it to Satellite Router mode."])
        }
        ,
        notFoundHelp3: e => {
            const {normalize: n} = e;
            return n(["Make sure the distance between the satellite devices and the main router is nearby."])
        }
        ,
        notFoundHelp4: e => {
            const {normalize: n} = e;
            return n(["Update the firmware version of the satellite devices."])
        }
        ,
        modem: e => {
            const {normalize: n} = e;
            return n(["Modem"])
        }
        ,
        chooseMode: e => {
            const {normalize: n} = e;
            return n(["Choose your router's working mode in the EasyMesh network."])
        }
        ,
        chooseTip: e => {
            const {normalize: n} = e;
            return n(["If you have multiple EasyMesh routers, set the one with the highest specifications as the main router and the others as satellites."])
        }
        ,
        satelliteConfirmTitle: e => {
            const {normalize: n} = e;
            return n(["Change to Satellite Router mode?"])
        }
        ,
        satelliteConfirmTip: e => {
            const {normalize: n} = e;
            return n(["This will erase your router's settings and make its web page inaccessible.You can then go to your main router's EasyMesh page to add your satellite router to the mesh network."])
        }
        ,
        satelliteReset: e => {
            const {normalize: n} = e;
            return n(["In case you need to revert your satellite router, press the Reset button to factory reset it."])
        }
        ,
        changingSatellite: e => {
            const {normalize: n} = e;
            return n(["Changing to Satellite Router mode..."])
        }
        ,
        changingSatelliteTip: e => {
            const {normalize: n} = e;
            return n(["After the mode takes effect, go to your main router's EasyMesh page to add the router."])
        }
        ,
        addFail: e => {
            const {normalize: n} = e;
            return n(["Unable to add this device. Try the following:"])
        }
        ,
        addFail1: e => {
            const {normalize: n} = e;
            return n(["Plug in the device closer to the main router, preferably within 10 feet (3 meters), then try again."])
        }
        ,
        addFail2: e => {
            const {normalize: n} = e;
            return n(["Someone else is trying to set up a OneMesh network. Please try again later."])
        }
        ,
        addFail3: e => {
            const {normalize: n} = e;
            return n(["Reset the device and try again."])
        }
        ,
        addSuccess: e => {
            const {normalize: n} = e;
            return n(["This device has been added successfully."])
        }
        ,
        addSuccessTip: e => {
            const {normalize: n} = e;
            return n(["For optimal wireless coverage, relocate the device about halfway between your main router and the Wi-Fi dead zone."])
        }
        ,
        offline: e => {
            const {normalize: n} = e;
            return n(["Offline"])
        }
        ,
        wirelessOffTip: e => {
            const {normalize: n} = e;
            return n(["The wireless function is disabled on the main router. Please enable it for wireless connections."])
        }
        ,
        wpsTitle: e => {
            const {normalize: n} = e;
            return n(["Cannot add satellite devices via WPS."])
        }
        ,
        wpsNote1: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Please go to ", i(o("wpsUrl")), " and make sure WPS is enabled."])
        }
        ,
        wpsNote2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Please go to ", i(o("wirelessUrl")), " and make sure:"])
        }
        ,
        wireless: e => {
            const {normalize: n} = e;
            return n(["Wireless Settings"])
        }
        ,
        wpsGuide1: e => {
            const {normalize: n} = e;
            return n(["At least one band is enabled and not hidden."])
        }
        ,
        wpsGuide2: e => {
            const {normalize: n} = e;
            return n(["Wireless security is set to: WPA3-Personal+WPA2-PSK[AES], WPA2-PSK[AES], or WPA2-PSK[AES]+WPA-PSK[TKIP]."])
        }
        ,
        wpsReNote: e => {
            const {normalize: n} = e;
            return n(["If adding failed, go to the satellite device's web page to check whether EasyMesh is enabled."])
        }
        ,
        wpsOtherNote: e => {
            const {normalize: n} = e;
            return n(["Devices of different brands may be incompatible with each other."])
        }
        ,
        addRe2: e => {
            const {normalize: n} = e;
            return n(["Add each device to the mesh network via WPS."])
        }
        ,
        wire: e => {
            const {normalize: n} = e;
            return n(["wired"])
        }
        ,
        location: e => {
            const {normalize: n} = e;
            return n(["Location"])
        }
        ,
        bedroom: e => {
            const {normalize: n} = e;
            return n(["Bedroom"])
        }
        ,
        hallway: e => {
            const {normalize: n} = e;
            return n(["Hallway"])
        }
        ,
        kitchen: e => {
            const {normalize: n} = e;
            return n(["Kitchen"])
        }
        ,
        livingRoom: e => {
            const {normalize: n} = e;
            return n(["Living Room"])
        }
        ,
        masterBedroom: e => {
            const {normalize: n} = e;
            return n(["Master Room"])
        }
        ,
        office: e => {
            const {normalize: n} = e;
            return n(["Office"])
        }
        ,
        study: e => {
            const {normalize: n} = e;
            return n(["Study"])
        }
        ,
        other: e => {
            const {normalize: n} = e;
            return n(["Other"])
        }
        ,
        clients: e => {
            const {normalize: n} = e;
            return n(["Clients"])
        }
        ,
        signalStrength: e => {
            const {normalize: n} = e;
            return n(["Signal Strength"])
        }
        ,
        linkSpeed: e => {
            const {normalize: n} = e;
            return n(["Link Speed"])
        }
        ,
        rebootTitle: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Reboot "', i(o("name")), '"?'])
        }
        ,
        rebootNotice: e => {
            const {normalize: n} = e;
            return n(["Mesh network may be offline for a few minutes."])
        }
        ,
        rebootNotSupportNotice: e => {
            const {normalize: n} = e;
            return n(["This satellite router/extender does not support the reboot function."])
        }
        ,
        networkStatus: e => {
            const {normalize: n} = e;
            return n(["Network Status"])
        }
        ,
        preferredWifiUplinkAp: e => {
            const {normalize: n} = e;
            return n(["Preferred Connected AP"])
        }
        ,
        trafficSeparation: e => {
            const {normalize: n} = e;
            return n(["Traffic Separation"])
        }
        ,
        backhaulSteering: e => {
            const {normalize: n} = e;
            return n(["Backhaul Steering"])
        }
        ,
        trafficSeparationTooltip: e => {
            const {normalize: n} = e;
            return n(["When enabled, the Guest Network settings of the main router can be synchronized with those of satellite devices. It can also separate the traffic of the host network and guest network, ensuring the security of your home network."])
        }
        ,
        backhaulSteeringTooltip: e => {
            const {normalize: n} = e;
            return n(["Allow the satellite devices to flexibly connect to different mesh nodes based on their load status, optimizing your EasyMesh network performance."])
        }
        ,
        editMainRouter: e => {
            const {normalize: n} = e;
            return n(["Edit Main Router"])
        }
        ,
        editSatelliteRouter: e => {
            const {normalize: n} = e;
            return n(["Edit Satellite Device"])
        }
        ,
        removeSuccessToast: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("name")), " has removed successfully."])
        }
        ,
        removeErrorToast: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Failed to remove ", i(o("name")), "."])
        }
        ,
        rebootSuccessToast: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("name")), " has been reboot."])
        }
        ,
        rebootErrorToast: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Failed to reboot ", i(o("name")), "."])
        }
        ,
        meshDeviceDetail: e => {
            const {normalize: n} = e;
            return n(["Mesh Device Detail"])
        }
        ,
        notSupportLedNote: e => {
            const {normalize: n} = e;
            return n(["Currently, this satellite device doesn’t support LED Control, please stay tuned for subsequent firmware updates."])
        }
        ,
        bindToCurrentAp: e => {
            const {normalize: n} = e;
            return n(["Bind to Current AP"])
        }
        ,
        enterpriseConfirmNote: e => {
            const {normalize: n} = e;
            return n(["The main router's security type is WPA2-Enterprise or WPA/WPA2-Enterprise. These security types cannot sync with satellite devices in an EasyMesh network, causing issues with seamless roaming. Please change its security type in Wireless Settings before enabling EasyMesh."])
        }
        ,
        goToWireless: e => {
            const {normalize: n} = e;
            return n(["GO TO WIRELESS"])
        }
        ,
        satelliteConfirmNote: e => {
            const {normalize: n} = e;
            return n(["Another router is currently working as the Main Router in your EasyMesh network. To keep the existing EasyMesh network working normally, you can only set this router as a Satellite Router to join the existing network."])
        }
        ,
        joining: e => {
            const {normalize: n} = e;
            return n(["Joining..."])
        }
        ,
        trafficSeparationSsidConflict: e => {
            const {normalize: n} = e;
            return n(["EasyMesh Traffic Separation separates the traffic of the main network from other networks, providing a more secure service. EasyMesh Traffic Separation is not in effect because the guest network and the main network share the same SSID. Please change the guest network's SSID and try again."])
        }
        ,
        changeDevice: e => {
            const {normalize: n} = e;
            return n(["Change Device"])
        }
    },
    wps: {
        wps: e => {
            const {normalize: n} = e;
            return n(["WPS"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Use WPS (Wi-Fi Protected Setup) to connect a client (personal device) to the router's wireless network easily."])
        }
        ,
        method_one: e => {
            const {normalize: n} = e;
            return n(["Method 1"])
        }
        ,
        method_two: e => {
            const {normalize: n} = e;
            return n(["Method 2"])
        }
        ,
        method_three: e => {
            const {normalize: n} = e;
            return n(["Method 3"])
        }
        ,
        using_a_pin: e => {
            const {normalize: n} = e;
            return n(["Using a PIN"])
        }
        ,
        client_pin: e => {
            const {normalize: n} = e;
            return n(["Client's PIN"])
        }
        ,
        router_pin: e => {
            const {normalize: n} = e;
            return n(["Router's PIN"])
        }
        ,
        client_pin_note: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enter your personal device's PIN here and click ", i(o("button"))])
        }
        ,
        router_pin_note: e => {
            const {normalize: n} = e;
            return n(["Enter the router's PIN on your personal device."])
        }
        ,
        connect_uppercase: e => {
            const {normalize: n} = e;
            return n(["CONNECT"])
        }
        ,
        cancel_uppercase: e => {
            const {normalize: n} = e;
            return n(["CANCEL"])
        }
        ,
        get_new_pin: e => {
            const {normalize: n} = e;
            return n(["GET NEW PIN"])
        }
        ,
        default: e => {
            const {normalize: n} = e;
            return n(["DEFAULT"])
        }
        ,
        using_below_button: e => {
            const {normalize: n} = e;
            return n(["Using the button below"])
        }
        ,
        using_below_button_note: e => {
            const {normalize: n} = e;
            return n(["Click the button below, then enable WPS on your personal device within 2 minutes."])
        }
        ,
        using_router_button: e => {
            const {normalize: n} = e;
            return n(["Using the router's WPS button"])
        }
        ,
        using_router_button_note: e => {
            const {normalize: n} = e;
            return n(["Press the router's WPS button, then enable WPS on your personal device within 2 minutes."])
        }
        ,
        start: e => {
            const {normalize: n} = e;
            return n(["Start"])
        }
        ,
        cancel: e => {
            const {normalize: n} = e;
            return n(["Cancel"])
        }
        ,
        pin_8_note: e => {
            const {normalize: n} = e;
            return n(["The PIN should be 8 digits."])
        }
        ,
        connecting: e => {
            const {normalize: n} = e;
            return n(["Connecting..."])
        }
        ,
        client_connected_success: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Device (", i(o("mac")), ") connected."])
        }
        ,
        client_pin_error: e => {
            const {normalize: n} = e;
            return n(["Invalid WPS PIN. Please check and try again."])
        }
        ,
        client_connected_error: e => {
            const {normalize: n} = e;
            return n(["Connection failed."])
        }
        ,
        client_connected_overlap: e => {
            const {normalize: n} = e;
            return n(["Connection failed (Overlapped)."])
        }
        ,
        client_connected_timeout: e => {
            const {normalize: n} = e;
            return n(["Connection failed (Timed out)."])
        }
        ,
        client_connected_inact: e => {
            const {normalize: n} = e;
            return n(["Connection inactive."])
        }
        ,
        client_connected_not_found: e => {
            const {normalize: n} = e;
            return n(["No client found. Click to try again."])
        }
        ,
        wps_disable_note: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["This function is not available. To use it, go to the ", i(o("link")), " page and change the following settings:"])
        }
        ,
        wps_disable_note_title_24g: e => {
            const {normalize: n} = e;
            return n(["For 2.4 GHz network:"])
        }
        ,
        wps_disable_note_title_5g: e => {
            const {normalize: n} = e;
            return n(["For 5 GHz network:"])
        }
        ,
        wps_disable_note_title_51g: e => {
            const {normalize: n} = e;
            return n(["For 5 GHz-1 network:"])
        }
        ,
        wps_disable_note_title_52g: e => {
            const {normalize: n} = e;
            return n(["For 5 GHz-2 network:"])
        }
        ,
        wps_disable_note_step1: e => {
            const {normalize: n} = e;
            return n(["Enable wireless radio."])
        }
        ,
        wps_disable_note_step2: e => {
            const {normalize: n} = e;
            return n(["Deselect the Hide SSID checkbox."])
        }
        ,
        wps_disable_note_step3_1: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Set security encryption to ", i(o("encryptionA")), " (recommended) or ", i(o("encryptionB")), "."])
        }
        ,
        wps_disable_note_step3_2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Set security to ", i(o("encryption")), "."])
        }
        ,
        router_pin_lock: e => {
            const {normalize: n} = e;
            return n(["The router's PIN is locked due to repeatedly connections using wrong PIN. Please generate a new one."])
        }
    },
    iotSecurity: {
        deviceIsolation: e => {
            const {normalize: n} = e;
            return n(["Device Isolation"])
        }
        ,
        deviceIsolationInstruction: e => {
            const {normalize: n} = e;
            return n(["Isolate devices (such as IoT devices) to protect your network from security threats."])
        }
        ,
        deviceIsolationTip: e => {
            const {normalize: n} = e;
            return n(["While isolated, isolated devices (these devices) can still access the internet and communicate with other isolated devices. However, isolated devices (these devices) cannot transfer data with devices on your home, including managing gateway devices, accessing USB devices, etc."])
        }
        ,
        deviceIsolationOffTip: e => {
            const {normalize: n} = e;
            return n(["Some devices, such as IoT devices, are vulnerable to security threats. To keep your important devices and data safe, you can isolate these devices to protect your network from being infected."])
        }
        ,
        deviceIsolationRecommend: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["We recommend disabling ", i(o("apIsolation")), " which may isolate all devices from each other."])
        }
        ,
        deviceIsolationOffConfirm: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to disable Device Isolation?"])
        }
        ,
        deviceIsolationEmptyText: e => {
            const {normalize: n} = e;
            return n(["Click Add to add devices that need to be isolated."])
        }
        ,
        deviceIsolatedDevicesNum: e => {
            const {normalize: n} = e;
            return n(["Isolated Devices"])
        }
        ,
        noClientsConnected: e => {
            const {normalize: n} = e;
            return n(["No clients connected."])
        }
        ,
        iotNetwork: e => {
            const {normalize: n} = e;
            return n(["IoT Network"])
        }
        ,
        mainNetwork: e => {
            const {normalize: n} = e;
            return n(["Main Network"])
        }
        ,
        isolatedDeviceLimit: e => {
            const {normalize: n} = e;
            return n(["Up to 64 devices can be added."])
        }
        ,
        isolationTryAgainTip: e => {
            const {normalize: n} = e;
            return n(["Some devices were not added to the list. Please try again later."])
        }
    },
    iotNetwork: {
        iot_network: e => {
            const {normalize: n} = e;
            return n(["IoT Network"])
        }
        ,
        iot_network_instruction: e => {
            const {normalize: n} = e;
            return n(["Create a dedicated wireless network to manage your loT devices together, such as smart lights and cameras."])
        }
        ,
        not_considered_tip: e => {
            const {normalize: n} = e;
            return n(["This security type is not considered secure."])
        }
        ,
        ensure_wpa3_tip: e => {
            const {normalize: n} = e;
            return n(["Please ensure that the connecting IoT device supports WPA3."])
        }
        ,
        enable_5g_tip: e => {
            const {normalize: n} = e;
            return n(["Make sure your IoT devices can connect to a 5 GHz network."])
        }
        ,
        hide_ssid: e => {
            const {normalize: n} = e;
            return n(["Hide SSID"])
        }
    },
    accessControl: {
        denyList: e => {
            const {normalize: n} = e;
            return n(["Deny List"])
        }
        ,
        allowList: e => {
            const {normalize: n} = e;
            return n(["Allow List"])
        }
        ,
        selectFromDeviceList: e => {
            const {normalize: n} = e;
            return n(["Select From Device List"])
        }
        ,
        addManually: e => {
            const {normalize: n} = e;
            return n(["Add Manually"])
        }
        ,
        accessControl: e => {
            const {normalize: n} = e;
            return n(["Access Control"])
        }
        ,
        accessControlInstruction: e => {
            const {normalize: n} = e;
            return n(["Control the access to your network from the specified devices."])
        }
        ,
        denyListInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure a deny list to only block access to your network from the specified devices."])
        }
        ,
        allowListInstruction: e => {
            const {normalize: n} = e;
            return n(["Configure a allow list to only allow access to your network from the specified devices."])
        }
        ,
        addDevices: e => {
            const {normalize: n} = e;
            return n(["Add Devices"])
        }
        ,
        macAddress: e => {
            const {normalize: n} = e;
            return n(["MAC Address"])
        }
        ,
        deviceName: e => {
            const {normalize: n} = e;
            return n(["Device Name"])
        }
        ,
        deviceType: e => {
            const {normalize: n} = e;
            return n(["Device Type"])
        }
    },
    yandexDns: {
        title: e => {
            const {normalize: n} = e;
            return n(["Yandex.DNS"])
        }
        ,
        titleInstruction: e => {
            const {normalize: n} = e;
            return n(["Secure your home internet with the Yandex.DNS service."])
        }
        ,
        globalControlMode: e => {
            const {normalize: n} = e;
            return n(["Global Control Mode"])
        }
        ,
        addARule: e => {
            const {normalize: n} = e;
            return n(["Add a rule"])
        }
        ,
        editRule: e => {
            const {normalize: n} = e;
            return n(["Edit a rule"])
        }
        ,
        subTitle: e => {
            const {normalize: n} = e;
            return n(["Control Mode for Individual Devices"])
        }
        ,
        subTitleInstruction: e => {
            const {normalize: n} = e;
            return n(["Add Yandex.DNS rules to set the control mode for individual devices."])
        }
        ,
        macAddress: e => {
            const {normalize: n} = e;
            return n(["MAC address"])
        }
        ,
        controlMode: e => {
            const {normalize: n} = e;
            return n(["Control mode"])
        }
        ,
        clientName: e => {
            const {normalize: n} = e;
            return n(["Client name"])
        }
        ,
        chooseMsgTitle: e => {
            const {normalize: n} = e;
            return n(["Choose from connected devices"])
        }
    },
    wifiSharing: {
        sharing_network: e => {
            const {normalize: n} = e;
            return n(["Share Network"])
        }
    },
    wireless: {
        wirelessSettings: e => {
            const {normalize: n} = e;
            return n(["Wireless Settings"])
        }
        ,
        bandWireless: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " Wireless"])
        }
        ,
        bandAdvancedSettings: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " Advanced Settings"])
        }
        ,
        networkName: e => {
            const {normalize: n} = e;
            return n(["Network Name (SSID)"])
        }
        ,
        security: e => {
            const {normalize: n} = e;
            return n(["Security"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        radiusServerIp: e => {
            const {normalize: n} = e;
            return n(["RADIUS Server IP"])
        }
        ,
        radiusPort: e => {
            const {normalize: n} = e;
            return n(["RADIUS Port"])
        }
        ,
        radiusPassword: e => {
            const {normalize: n} = e;
            return n(["RADIUS Password"])
        }
        ,
        hideSsid: e => {
            const {normalize: n} = e;
            return n(["Hide SSID"])
        }
        ,
        notConsideredTip: e => {
            const {normalize: n} = e;
            return n(["This security type is not considered secure. Consider selecting a more secure encryption."])
        }
        ,
        enhancedOpenNote: e => {
            const {normalize: n} = e;
            return n([`This security type adheres to the WPA3 standard. If your devices can't connect to the Wi-Fi due to compatibility issues, choose the "Open" security type for unencrypted access.`])
        }
        ,
        enhancedOpen: e => {
            const {normalize: n} = e;
            return n(["Enhanced open"])
        }
        ,
        auto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        open: e => {
            const {normalize: n} = e;
            return n(["Open"])
        }
        ,
        wpa2Aes: e => {
            const {normalize: n} = e;
            return n(["WPA2-PSK[AES]"])
        }
        ,
        wpa2AesTkip: e => {
            const {normalize: n} = e;
            return n(["WPA2-PSK[AES]+WPA-PSK[TKIP]"])
        }
        ,
        wpa3Personal: e => {
            const {normalize: n} = e;
            return n(["WPA3-Personal"])
        }
        ,
        wpa3PersonalAes: e => {
            const {normalize: n} = e;
            return n(["WPA3-Personal+WPA2-PSK[AES]"])
        }
        ,
        wpa2Enterprise: e => {
            const {normalize: n} = e;
            return n(["WPA2-Enterprise"])
        }
        ,
        wpa2EnterpriseTkip: e => {
            const {normalize: n} = e;
            return n(["WPA/WPA2-Enterprise"])
        }
        ,
        band: e => {
            const {normalize: n} = e;
            return n(["Band"])
        }
        ,
        band2g: e => {
            const {normalize: n} = e;
            return n(["2.4 GHz"])
        }
        ,
        band5g: e => {
            const {normalize: n} = e;
            return n(["5 GHz"])
        }
        ,
        band5g1: e => {
            const {normalize: n} = e;
            return n(["5 GHz-1"])
        }
        ,
        band5g2: e => {
            const {normalize: n} = e;
            return n(["5 GHz-2"])
        }
        ,
        band6g: e => {
            const {normalize: n} = e;
            return n(["6 GHz"])
        }
        ,
        offScheduleNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Wireless Schedule is in effect and the Wireless Settings cannot be modified. If you need to modify, you can ", i(o("skipSchedule")), "."])
        }
        ,
        skipSchedule: e => {
            const {normalize: n} = e;
            return n(["skip current schedule"])
        }
        ,
        skipConfirm: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to skip all schedules that are currently in effect? The schedules will still take effect next time."])
        }
        ,
        disabledNote: e => {
            const {normalize: n} = e;
            return n(["Your wireless function is disabled."])
        }
        ,
        easyMeshEnterpriseConfirm: e => {
            const {normalize: n} = e;
            return n(["The security type (WPA2-Enterprise or WPA/WPA2-Enterprise) cannot sync with satellite devices in an EasyMesh network, affecting seamless roaming. If you still want to select this security type, please disable EasyMesh. Disable Easymesh?"])
        }
        ,
        goToEasyMesh: e => {
            const {normalize: n} = e;
            return n(["GO TO EASYMESH"])
        }
    },
    mainNetwork: {
        instruction: e => {
            const {normalize: n} = e;
            return n(["Personalize settings for each band or enable Smart Connect to configure the same settings for 2.4 GHz and 5 GHz bands."])
        }
        ,
        smartConnect: e => {
            const {normalize: n} = e;
            return n(["Smart Connect"])
        }
        ,
        smartConnectNote: e => {
            const {normalize: n} = e;
            return n(["Smart Connect allows each of the router's 2.4 GHz and 5 GHz bands to use the same wireless settings. The router can balance network demand and assign devices to the optimum band."])
        }
        ,
        ofdma: e => {
            const {normalize: n} = e;
            return n(["OFDMA"])
        }
        ,
        ofdmaFullName: e => {
            const {normalize: n} = e;
            return n(["Orthogonal Frequency Division Multiple Access"])
        }
        ,
        itemName: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("abbr")), " (", i(o("fullName")), "):"])
        }
        ,
        ofdmaIntroduction: e => {
            const {normalize: n} = e;
            return n(["OFDMA allows multiple devices to share the same frequency channel simultaneously by dividing it into smaller resource units, improving network efficiency and capacity. OFDMA focuses on how frequency channels are utilized to accommodate multiple devices concurrently."])
        }
        ,
        ofdmaNote: e => {
            const {normalize: n} = e;
            return n(["OFDMA enables multiple users to transmit data simultaneously, and thus greatly improves speed and efficiency. Noted that only when your clients also support OFDMA, can you fully enjoy the benefits."])
        }
        ,
        muMimo: e => {
            const {normalize: n} = e;
            return n(["MU-MIMO"])
        }
        ,
        muMimoFullName: e => {
            const {normalize: n} = e;
            return n(["Multi-User Multiple-Input Multiple-Output"])
        }
        ,
        muMimoIntroduction: e => {
            const {normalize: n} = e;
            return n(["MU-MIMO enables the router to communicate with multiple devices simultaneously using multiple antennas, improving overall network throughput and reducing latency. MU-MIMO focuses on how to communicate with multiple devices concurrently."])
        }
        ,
        ofdmaOrMuMimo: e => {
            const {normalize: n} = e;
            return n(["OFDMA/MU-MIMO"])
        }
        ,
        ofdmaAndMuMimoNote: e => {
            const {normalize: n} = e;
            return n(["What's this?"])
        }
        ,
        ofdmaAndMuMimo: e => {
            const {normalize: n} = e;
            return n(["OFDMA+MU-MIMO"])
        }
        ,
        ofdmaOnly: e => {
            const {normalize: n} = e;
            return n(["OFDMA Only"])
        }
        ,
        mruNote: e => {
            const {normalize: n} = e;
            return n(["If you enable OFDMA and the wireless Mode is on 802.11be, the MRU (Multi-Resource Unit) function will automatically take effect."])
        }
        ,
        twt: e => {
            const {normalize: n} = e;
            return n(["TWT"])
        }
        ,
        twtNote: e => {
            const {normalize: n} = e;
            return n(["Target Wake Time allows 802.11ax routers and clients to negotiate their periods to transmit and receive data packets. Clients only wake up at TWT sessions and remain in sleep mode for the rest of the time, which significantly extend their battery life."])
        }
        ,
        amazonFfs: e => {
            const {normalize: n} = e;
            return n(["Amazon Wi-Fi Simple Setup"])
        }
        ,
        amazonFfsNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Amazon Wi-Fi simple setup helps you connect supported devices to your Wi-Fi network and Alexa account in fewer steps. Enabling this feature creates a simple setup network that supported devices can use to access Wi-Fi credentials saved in the Amazon Wi-Fi Locker. ", i(o("amazonSupportLink"))])
        }
        ,
        amazonFfsDisable: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enable ", i(o("bandName")), " Wi-Fi before using Wi-Fi Simple Setup."])
        }
        ,
        channel: e => {
            const {normalize: n} = e;
            return n(["Channel"])
        }
        ,
        channelWidth: e => {
            const {normalize: n} = e;
            return n(["Channel Width"])
        }
        ,
        transmitPower: e => {
            const {normalize: n} = e;
            return n(["Transmit Power"])
        }
        ,
        mode: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["802.11", i(o("mode")), " only"])
        }
        ,
        mixedMode: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["802.11", i(o("modes")), " mixed"])
        }
        ,
        successNote: e => {
            const {normalize: n} = e;
            return n(["Settings applied successfully. You can connect your devices to the router by using the wireless information below."])
        }
        ,
        dfsOverlapNote: e => {
            const {normalize: n} = e;
            return n(["The channel width and channel you've selected will overlap with DFS channels. This will require some waiting time to meet regulatory radar detection requirements."])
        }
        ,
        dfsOverlapConfirm: e => {
            const {normalize: n} = e;
            return n(["The channel width and channel settings will take some waiting time to apply. During the time, 5 GHz connections will be interrupted."])
        }
        ,
        wlanOffTitle: e => {
            const {normalize: n} = e;
            return n(["Disable all wireless networks?"])
        }
        ,
        wlanOffNote: e => {
            const {normalize: n} = e;
            return n(["Your devices can only connect to the router via Ethernet cables after the settings take effect."])
        }
        ,
        wlanOffTitle6g: e => {
            const {normalize: n} = e;
            return n(["Disable 2.4 GHz and 5 GHz networks?"])
        }
        ,
        wlanOffNote6g: e => {
            const {normalize: n} = e;
            return n(["Only Wi-Fi 6E-compatible devices can search for and join the 6 GHz network. If you have other devices, keep at least one of the 2.4 GHz or 5 GHz networks enabled."])
        }
        ,
        wifi6Note: e => {
            const {normalize: n} = e;
            return n(["6 GHz Wi-Fi networks can provide faster wireless connections and lower latency. Only Wi-Fi 6E-compatible devices can search for and join this network."])
        }
        ,
        enablePsc: e => {
            const {normalize: n} = e;
            return n(["Enable PSC"])
        }
        ,
        pscNote: e => {
            const {normalize: n} = e;
            return n(["When PSC (Preferred Scanning Channel) is enabled, only channels with higher connectivity will be reserved to ensure 6 GHz device connections."])
        }
        ,
        setSeparately: e => {
            const {normalize: n} = e;
            return n(["Set Each Band Separately"])
        }
        ,
        enable160MLabel: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " 160 MHz Bandwidth"])
        }
        ,
        enable160M: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enable 160 MHz Bandwidth for ", i(o("band")), " Wi-Fi to provide faster speeds and a better Wi-Fi experience. This will require about 1 minute to meet regulatory radar detection requirements."])
        }
        ,
        enable160M5g2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enable 160 MHz Bandwidth for ", i(o("band")), " Wi-Fi will require about 10 minutes to meet regulatory radar detection requirements. If you want to enable it, go to Advanced > Wireless > Wireless Settings to switch the channel width of 5 GHz-2 to 160 MHz."])
        }
    },
    mloNetwork: {
        mloNetwork: e => {
            const {normalize: n} = e;
            return n(["MLO Network"])
        }
        ,
        instruction: e => {
            const {normalize: n} = e;
            return n(["Create your MLO network, then its connected Wi-Fi 7 clients can simultaneously send and receive data across different frequency bands, greatly improving the transmission rate and reliability."])
        }
        ,
        mloNote: e => {
            const {normalize: n} = e;
            return n(["The router will reboot for MLO setting changes to take effect."])
        }
        ,
        disableTip: e => {
            const {normalize: n} = e;
            return n(["To use this feature, please enable at least two main network bands and set the mode to 802.11be."])
        }
        ,
        newMloSettingsTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["The router will reboot after saving your new MLO settings. The reboot will take about ", i(o("rebootTime")), "."])
        }
        ,
        bandDisableTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Please enable ", i(o("band")), " main network."])
        }
        ,
        bandModeTip: e => {
            const {normalize: n} = e;
            return n(["To use this feature, please set the main network mode to 802.11be."])
        }
    },
    guestNetwork: {
        guest_network: e => {
            const {normalize: n} = e;
            return n(["Guest Network"])
        }
        ,
        guest_network_instruction: e => {
            const {normalize: n} = e;
            return n(["Enable the wireless bands you want your guests to use and complete the related information."])
        }
        ,
        guest_permissions: e => {
            const {normalize: n} = e;
            return n(["Guest Permissions"])
        }
        ,
        guest_permissions_instruction: e => {
            const {normalize: n} = e;
            return n(["Control the data that guests can access."])
        }
        ,
        isolate_box_label: e => {
            const {normalize: n} = e;
            return n(["Allow guests to see each other"])
        }
        ,
        access_box_label: e => {
            const {normalize: n} = e;
            return n(["Allow guests to access your local network"])
        }
        ,
        type: e => {
            const {normalize: n} = e;
            return n(["Authentication Type"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        duration: e => {
            const {normalize: n} = e;
            return n(["Authentication Timeout"])
        }
        ,
        redirect: e => {
            const {normalize: n} = e;
            return n(["Redirect"])
        }
        ,
        redirect_url: e => {
            const {normalize: n} = e;
            return n(["Redirect URL"])
        }
        ,
        redirect_tip: e => {
            const {normalize: n} = e;
            return n(["Some mobile phones and browsers may encounter URL redirection exceptions due to compatibility issues."])
        }
        ,
        portal_note: e => {
            const {normalize: n} = e;
            return n(["The portal authentication page may not display on an https web page or when IPv6 is enabled. In this case try an http web page or disable IPv6."])
        }
        ,
        login_page: e => {
            const {normalize: n} = e;
            return n(["Login Page"])
        }
        ,
        terms_note: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["I have read and accepted the ", i(o("terms"))])
        }
        ,
        click_to_edit: e => {
            const {normalize: n} = e;
            return n(["Click to Edit"])
        }
        ,
        title_color: e => {
            const {normalize: n} = e;
            return n(["Title Color"])
        }
        ,
        button_color: e => {
            const {normalize: n} = e;
            return n(["Button Color"])
        }
        ,
        portal_title: e => {
            const {normalize: n} = e;
            return n(["Portal Title"])
        }
        ,
        terms_of_use: e => {
            const {normalize: n} = e;
            return n(["Terms of Use"])
        }
        ,
        logo_image: e => {
            const {normalize: n} = e;
            return n(["Logo Image"])
        }
        ,
        logo_image_note: e => {
            const {normalize: n} = e;
            return n(["Only JPG and PNG formats are supported. Best aspect ratio 1:1, size < 100 KB"])
        }
        ,
        background_image: e => {
            const {normalize: n} = e;
            return n(["Background Image"])
        }
        ,
        background_image_note: e => {
            const {normalize: n} = e;
            return n(["Only JPG and PNG formats are supported. Size < 1 MB"])
        }
        ,
        welcome: e => {
            const {normalize: n} = e;
            return n(["Welcome"])
        }
        ,
        terms_of_use_note: e => {
            const {normalize: n} = e;
            return n(["By accessing this wireless network, you agree to the Terms of Use. We reserve the right to terminate your access at any time."])
        }
        ,
        network_name_ssid: e => {
            const {normalize: n} = e;
            return n(["Network Name (SSID)"])
        }
        ,
        hide_ssid: e => {
            const {normalize: n} = e;
            return n(["Hide SSID"])
        }
        ,
        security: e => {
            const {normalize: n} = e;
            return n(["Security"])
        }
        ,
        wds_conflict_note: e => {
            const {normalize: n} = e;
            return n(["WDS and Guest Network cannot be enabled at the same time."])
        }
        ,
        bandwidth_ctrl: e => {
            const {normalize: n} = e;
            return n(["Bandwidth Control"])
        }
        ,
        download_bw: e => {
            const {normalize: n} = e;
            return n(["Download Bandwidth"])
        }
        ,
        upload_bw: e => {
            const {normalize: n} = e;
            return n(["Upload Bandwidth"])
        }
        ,
        access_time: e => {
            const {normalize: n} = e;
            return n(["Effective Time"])
        }
        ,
        remaining_time: e => {
            const {normalize: n} = e;
            return n(["Remaining Time"])
        }
        ,
        no_limit: e => {
            const {normalize: n} = e;
            return n(["No Limit"])
        }
        ,
        hour_1: e => {
            const {normalize: n} = e;
            return n(["1 Hour"])
        }
        ,
        hour_2: e => {
            const {normalize: n} = e;
            return n(["2 Hours"])
        }
        ,
        hour_4: e => {
            const {normalize: n} = e;
            return n(["4 Hours"])
        }
        ,
        hour_8: e => {
            const {normalize: n} = e;
            return n(["8 Hours"])
        }
        ,
        day_1: e => {
            const {normalize: n} = e;
            return n(["1 Day"])
        }
        ,
        custom: e => {
            const {normalize: n} = e;
            return n(["Custom"])
        }
        ,
        min: e => {
            const {normalize: n} = e;
            return n(["Min"])
        }
        ,
        hour: e => {
            const {normalize: n} = e;
            return n(["Hour"])
        }
        ,
        day: e => {
            const {normalize: n} = e;
            return n(["Day"])
        }
        ,
        days: e => {
            const {normalize: n} = e;
            return n(["Days"])
        }
        ,
        hours: e => {
            const {normalize: n} = e;
            return n(["Hours"])
        }
        ,
        minute: e => {
            const {normalize: n} = e;
            return n(["Minute"])
        }
        ,
        minutes: e => {
            const {normalize: n} = e;
            return n(["Minutes"])
        }
        ,
        all_zero_error: e => {
            const {normalize: n} = e;
            return n(["The value of access time cannot be 0."])
        }
        ,
        guestMainNetworkSSidConflict: e => {
            const {normalize: n} = e;
            return n(["EasyMesh Traffic Separation is currently enabled, and the SSID settings of the guest network can't be the same as that of the main network."])
        }
    },
    extendNetwork: {
        bandNetwork: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("band")), " Extended Network"])
        }
    },
    openVpn: {
        openVpn: e => {
            const {normalize: n} = e;
            return n(["OpenVPN"])
        }
        ,
        openVpnInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up an OpenVPN for secure, remote access to your network."])
        }
        ,
        openGenerateNote: e => {
            const {normalize: n} = e;
            return n(["No certificate has been created. Generate one below before enabling OpenVPN."])
        }
        ,
        openType: e => {
            const {normalize: n} = e;
            return n(["Service Type"])
        }
        ,
        openPort: e => {
            const {normalize: n} = e;
            return n(["Service Port"])
        }
        ,
        openSubnet: e => {
            const {normalize: n} = e;
            return n(["VPN Subnet"])
        }
        ,
        netmask: e => {
            const {normalize: n} = e;
            return n(["Netmask"])
        }
        ,
        clientAccess: e => {
            const {normalize: n} = e;
            return n(["Client Access"])
        }
        ,
        serverAddress: e => {
            const {normalize: n} = e;
            return n(["Server Address"])
        }
        ,
        certificate: e => {
            const {normalize: n} = e;
            return n(["Certificate"])
        }
        ,
        certificateInstruction: e => {
            const {normalize: n} = e;
            return n(["Generate the certificate."])
        }
        ,
        generateUpper: e => {
            const {normalize: n} = e;
            return n(["GENERATE"])
        }
        ,
        configurationFile: e => {
            const {normalize: n} = e;
            return n(["Configuration File"])
        }
        ,
        configurationFileInstruction: e => {
            const {normalize: n} = e;
            return n(["Export the configuration file."])
        }
        ,
        exportUpper: e => {
            const {normalize: n} = e;
            return n(["EXPORT"])
        }
        ,
        noCertificate: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["No certificate yet. Click ", i(o("ok")), " to generate a certificate and save the settings."])
        }
        ,
        noInternetNote: e => {
            const {normalize: n} = e;
            return n(["There is no internet. Please check your internet connection and generate the certificate again."])
        }
        ,
        generating: e => {
            const {normalize: n} = e;
            return n(["Generating certificate..."])
        }
        ,
        generatingNote: e => {
            const {normalize: n} = e;
            return n(["This may take a few minutes. Please wait."])
        }
        ,
        udp: e => {
            const {normalize: n} = e;
            return n(["UDP"])
        }
        ,
        tcp: e => {
            const {normalize: n} = e;
            return n(["TCP"])
        }
        ,
        sameSubnetNote: e => {
            const {normalize: n} = e;
            return n(["The client IP address and LAN IP address cannot be in the same subnet."])
        }
        ,
        conflictWithPptpvpn: e => {
            const {normalize: n} = e;
            return n(["The VPN Subnet/Netmask and PPTP VPN IP address cannot be in the same subnet."])
        }
        ,
        conflictWithL2tpvpn: e => {
            const {normalize: n} = e;
            return n(["The VPN Subnet/Netmask and L2TP VPN IP address cannot be in the same subnet."])
        }
        ,
        conflictWithReserved: e => {
            const {normalize: n} = e;
            return n(["The VPN Subnet/Netmask conflicts with the reserved IP address."])
        }
        ,
        conflictWithDhcp: e => {
            const {normalize: n} = e;
            return n(["The VPN Subnet/Netmask conflicts with the DHCP IP address pool."])
        }
        ,
        certFail: e => {
            const {normalize: n} = e;
            return n(["Failed, please try again."])
        }
        ,
        interfaceType: e => {
            const {normalize: n} = e;
            return n(["Interface Type"])
        }
        ,
        tun: e => {
            const {normalize: n} = e;
            return n(["TUN"])
        }
        ,
        tap: e => {
            const {normalize: n} = e;
            return n(["TAP"])
        }
    },
    vpnClient: {
        vpnClient: e => {
            const {normalize: n} = e;
            return n(["VPN Client"])
        }
        ,
        vpnClientInstruction: e => {
            const {normalize: n} = e;
            return n(["Set up profiles for clients that will use the VPN function."])
        }
        ,
        vpnType: e => {
            const {normalize: n} = e;
            return n(["VPN Type"])
        }
        ,
        encryption: e => {
            const {normalize: n} = e;
            return n(["Encryption"])
        }
        ,
        importOpenVpnFile: e => {
            const {normalize: n} = e;
            return n(["Import .ovpn File"])
        }
        ,
        enableExtraEditVpn: e => {
            const {normalize: n} = e;
            return n(["Import the CA file or edit the .ovpn file manually"])
        }
        ,
        importCAFile: e => {
            const {normalize: n} = e;
            return n(["Import CA File"])
        }
        ,
        manualSettings: e => {
            const {normalize: n} = e;
            return n(["Manual Settings"])
        }
        ,
        manualSettingsTitle: e => {
            const {normalize: n} = e;
            return n(["Keys and Certificates"])
        }
        ,
        manualSettingsTip: e => {
            const {normalize: n} = e;
            return n(["Only paste the content of the ----- BEGIN xxx ----- / ----- END xxx ----- block(including those two lines)."])
        }
        ,
        certificateAuthority: e => {
            const {normalize: n} = e;
            return n(["Certificate Authority"])
        }
        ,
        clientCertificate: e => {
            const {normalize: n} = e;
            return n(["Client Certificate"])
        }
        ,
        clientKey: e => {
            const {normalize: n} = e;
            return n(["Client Key"])
        }
        ,
        staticKey: e => {
            const {normalize: n} = e;
            return n(["Static Key"])
        }
        ,
        certificateRevocationList: e => {
            const {normalize: n} = e;
            return n(["Certificate Revocation List"])
        }
        ,
        importFromConfigFile: e => {
            const {normalize: n} = e;
            return n(["Import from Config File"])
        }
        ,
        nat: e => {
            const {normalize: n} = e;
            return n(["NAT"])
        }
        ,
        addProfile: e => {
            const {normalize: n} = e;
            return n(["Add Profile"])
        }
        ,
        typeOpenVPN: e => {
            const {normalize: n} = e;
            return n(["OpenVPN"])
        }
        ,
        typeL2TP: e => {
            const {normalize: n} = e;
            return n(["L2TP/IPSec"])
        }
        ,
        typePPTP: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        typeWireguard: e => {
            const {normalize: n} = e;
            return n(["WireGuard"])
        }
        ,
        typeAuto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        typeMaxMppe: e => {
            const {normalize: n} = e;
            return n(["Max (MPPE)"])
        }
        ,
        typeNone: e => {
            const {normalize: n} = e;
            return n(["None"])
        }
        ,
        serverList: e => {
            const {normalize: n} = e;
            return n(["Server List"])
        }
        ,
        serverListInstruction: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Add or edit VPN server. Up to ", i(o("limit")), " VPN servers can be added."])
        }
        ,
        vpnServer: e => {
            const {normalize: n} = e;
            return n(["VPN Server"])
        }
        ,
        deviceList: e => {
            const {normalize: n} = e;
            return n(["Device List"])
        }
        ,
        deviceListInstruction: e => {
            const {normalize: n} = e;
            return n(["Manage devices that will use the VPN function."])
        }
        ,
        vpnAccess: e => {
            const {normalize: n} = e;
            return n(["VPN Access"])
        }
        ,
        onlineDevices: e => {
            const {normalize: n} = e;
            return n(["ONLINE DEVICES"])
        }
        ,
        offlineDevices: e => {
            const {normalize: n} = e;
            return n(["OFFLINE DEVICES"])
        }
        ,
        addDeviceTitle: e => {
            const {normalize: n} = e;
            return n(["Select the devices that will access VPN server."])
        }
        ,
        enableVpnServerTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Enable VPN server ", i(o("name")), "?"])
        }
        ,
        changeVpnServerTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Change VPN server to ", i(o("name")), "?"])
        }
        ,
        disableVpnServerTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['The current server "VPN ', i(o("name")), '" will be disabled.'])
        }
        ,
        deleteVpnServerConfirm: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Delete "', i(o("name")), '"?'])
        }
        ,
        removeVpnDeviceConfirm: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(['Remove "', i(o("name")), '"?'])
        }
        ,
        removeVpnDeviceTip: e => {
            const {normalize: n} = e;
            return n(["This device will no longer be able to use the VPN function."])
        }
        ,
        interface: e => {
            const {normalize: n} = e;
            return n(["Interface"])
        }
        ,
        peer: e => {
            const {normalize: n} = e;
            return n(["Peer"])
        }
        ,
        privateKey: e => {
            const {normalize: n} = e;
            return n(["Private Key"])
        }
        ,
        address: e => {
            const {normalize: n} = e;
            return n(["Address"])
        }
        ,
        dnsServer: e => {
            const {normalize: n} = e;
            return n(["DNS Server"])
        }
        ,
        dnsServer1: e => {
            const {normalize: n} = e;
            return n(["DNS Server 1"])
        }
        ,
        dnsServer2: e => {
            const {normalize: n} = e;
            return n(["DNS Server 2"])
        }
        ,
        publicKey: e => {
            const {normalize: n} = e;
            return n(["Public Key"])
        }
        ,
        preSharedKey: e => {
            const {normalize: n} = e;
            return n(["Pre-Shared Key"])
        }
        ,
        allowedIps: e => {
            const {normalize: n} = e;
            return n(["Allowed IPs"])
        }
        ,
        endpointAddress: e => {
            const {normalize: n} = e;
            return n(["Endpoint Address"])
        }
        ,
        endpointPort: e => {
            const {normalize: n} = e;
            return n(["Endpoint Port"])
        }
        ,
        persistentKeepalive: e => {
            const {normalize: n} = e;
            return n(["Persistent Keepalive"])
        }
        ,
        mtuSize: e => {
            const {normalize: n} = e;
            return n(["MTU Size"])
        }
        ,
        bannerTitle: e => {
            const {normalize: n} = e;
            return n(["Get the best VPN for your network now!"])
        }
        ,
        bannerContent: e => {
            const {normalize: n} = e;
            return n(["Share the world with privacy and security"])
        }
        ,
        uploading: e => {
            const {normalize: n} = e;
            return n(["Uploading..."])
        }
        ,
        server: e => {
            const {normalize: n} = e;
            return n(["Server"])
        }
        ,
        serverLoadingNote: e => {
            const {normalize: n} = e;
            return n(["Loading server..."])
        }
        ,
        setUpServer: e => {
            const {normalize: n} = e;
            return n(["Set up VPN server"])
        }
        ,
        detail: e => {
            const {normalize: n} = e;
            return n(["Detail"])
        }
        ,
        searchNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Search in ", i(o("num")), " server(s)"])
        }
        ,
        testPing: e => {
            const {normalize: n} = e;
            return n(["Ping Test"])
        }
        ,
        testing: e => {
            const {normalize: n} = e;
            return n(["Testing..."])
        }
        ,
        getServerFailedNote: e => {
            const {normalize: n} = e;
            return n(["Failed to load the server list. Please click Refresh Server List to try again."])
        }
        ,
        timeOut: e => {
            const {normalize: n} = e;
            return n(["Time out"])
        }
        ,
        loginFailedNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Login failed. Please try to ", i(o("faq")), "."])
        }
        ,
        setUpManual: e => {
            const {normalize: n} = e;
            return n(["set up the server manually"])
        }
        ,
        vendorSelectTitle: e => {
            const {normalize: n} = e;
            return n(["Select VPN"])
        }
        ,
        setVpnTitle: e => {
            const {normalize: n} = e;
            return n(["Set up VPN Server"])
        }
        ,
        addManually: e => {
            const {normalize: n} = e;
            return n(["Set up manually"])
        }
        ,
        updateSuccess: e => {
            const {normalize: n} = e;
            return n(["Update Succeeded"])
        }
        ,
        updateUnavailable: e => {
            const {normalize: n} = e;
            return n(["No Available Update"])
        }
        ,
        serverName: e => {
            const {normalize: n} = e;
            return n(["Server Name"])
        }
        ,
        serverDetail: e => {
            const {normalize: n} = e;
            return n(["Server Details"])
        }
        ,
        updateLoading: e => {
            const {normalize: n} = e;
            return n(["Updating Server…"])
        }
        ,
        loginTitle: e => {
            const {normalize: n} = e;
            return n(["Login to Your VPN Account"])
        }
        ,
        username: e => {
            const {normalize: n} = e;
            return n(["Username/Email"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        token: e => {
            const {normalize: n} = e;
            return n(["Token"])
        }
        ,
        login: e => {
            const {normalize: n} = e;
            return n(["Login"])
        }
        ,
        loginByToken: e => {
            const {normalize: n} = e;
            return n(["Login by token"])
        }
        ,
        getTokenNote: e => {
            const {normalize: n} = e;
            return n(["How to get a token?"])
        }
        ,
        noSurfSharkAccount: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Don't have Surfshark VPN? ", i(o("subscribe"))])
        }
        ,
        noNordVpnAccount: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Don't have NordVPN VPN? ", i(o("subscribe"))])
        }
        ,
        subscribe: e => {
            const {normalize: n} = e;
            return n(["Subscribe now!"])
        }
        ,
        surfSharkPrivacyNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["By logging in, you agree to Surfshark's ", i(o("term")), " and ", i(o("privacy")), "."])
        }
        ,
        nordVpnPrivacyNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["By logging in, you agree to NordVPN's ", i(o("term")), " and ", i(o("privacy")), "."])
        }
        ,
        termsOfUse: e => {
            const {normalize: n} = e;
            return n(["Terms of Service"])
        }
        ,
        privacyPolicy: e => {
            const {normalize: n} = e;
            return n(["Privacy Policy"])
        }
        ,
        accountStoreNote: e => {
            const {normalize: n} = e;
            return n(["Your account and password will not be stored on TP-Link devices or servers"])
        }
        ,
        tokenLengthTip: e => {
            const {normalize: n} = e;
            return n(["Invalid token. Please enter 64 characters."])
        }
        ,
        tfaTitle: e => {
            const {normalize: n} = e;
            return n(["Surfshark Two-Factor Authentication"])
        }
        ,
        tfaNote: e => {
            const {normalize: n} = e;
            return n(["We've sent you a verification code. Please check your mailbox or authentication app for it."])
        }
        ,
        resendCode: e => {
            const {normalize: n} = e;
            return n(["Resend code"])
        }
        ,
        notObtainedCode: e => {
            const {normalize: n} = e;
            return n(["Having trouble receiving your code?"])
        }
        ,
        contactSupport: e => {
            const {normalize: n} = e;
            return n(["Contact Surfshark Technical Support"])
        }
        ,
        connecting: e => {
            const {normalize: n} = e;
            return n(["Connecting..."])
        }
        ,
        confirm: e => {
            const {normalize: n} = e;
            return n(["Confirm"])
        }
        ,
        exit: e => {
            const {normalize: n} = e;
            return n(["EXIT"])
        }
        ,
        tryAgain: e => {
            const {normalize: n} = e;
            return n(["TRY AGAIN"])
        }
        ,
        noVpnClient: e => {
            const {normalize: n} = e;
            return n(["No VPN Client"])
        }
        ,
        noItems: e => {
            const {normalize: n} = e;
            return n(["No items"])
        }
        ,
        addSuccessTip: e => {
            const {normalize: n} = e;
            return n(["Add successfully"])
        }
        ,
        notEditableTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["TP-Link no longer cooperates with ", i(o("vendor")), ", so this profile cannot be edited. You can ", i(o("faq")), "."])
        }
        ,
        addNewManual: e => {
            const {normalize: n} = e;
            return n(["set up new VPN servers manually"])
        }
        ,
        surfShark: e => {
            const {normalize: n} = e;
            return n(["Surfshark"])
        }
        ,
        nordVpn: e => {
            const {normalize: n} = e;
            return n(["NordVPN"])
        }
        ,
        updateFailedTip: e => {
            const {normalize: n} = e;
            return n(["Update failed. Please check your internet status."])
        }
        ,
        connectFailedTip: e => {
            const {normalize: n} = e;
            return n(["Connection failed. Please check your internet status."])
        }
        ,
        tokenExpiredNote: e => {
            const {normalize: n} = e;
            return n(["Token expired, please login again"])
        }
        ,
        loginExpiredNote: e => {
            const {normalize: n} = e;
            return n(["VPN login info expired, please login again"])
        }
        ,
        blockNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["This IP has been blocked, click to ", i(o("support")), ". "])
        }
        ,
        nordVpnSupport: e => {
            const {normalize: n} = e;
            return n(["Contact NordVPN Technical Support"])
        }
        ,
        nordVpnDownloadTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["If you don't have any available server configuration files locally, please tap on ", i(o("here")), " to download the server you want."])
        }
        ,
        nordVpnImportTip: e => {
            const {normalize: n} = e;
            return n(["Save the downloaded server locally and import it."])
        }
    },
    block: {
        updatingFirmware: e => {
            const {normalize: n} = e;
            return n(["Updating firmware..."])
        }
        ,
        updatingFirmwareNote: e => {
            const {normalize: n} = e;
            return n(["The update will take 5 to 10 minutes depending on your network speed. Do NOT unplug or operate your router during the update."])
        }
        ,
        title1: e => {
            const {normalize: n} = e;
            return n(["Parental Control Restrictions"])
        }
        ,
        content1: e => {
            const {normalize: n} = e;
            return n(["Your access to this website is blocked."])
        }
        ,
        content2: e => {
            const {normalize: n} = e;
            return n(["A network manager has paused your internet connection. Try again after they unpause you."])
        }
        ,
        content3: e => {
            const {normalize: n} = e;
            return n(["You've used up your time allowance on the internet for today. You can get back online tomorrow."])
        }
        ,
        content4: e => {
            const {normalize: n} = e;
            return n(["You're not allowed to surf the net during this time. You can get back online when Bed Time is over."])
        }
        ,
        httpsBlockingNotice: e => {
            const {normalize: n} = e;
            return n(["Local Management via HTTPS is disabled. Please access the device via HTTP."])
        }
        ,
        timeUp: e => {
            const {normalize: n} = e;
            return n(["Time is up!"])
        }
        ,
        timeUpNote1: e => {
            const {normalize: n} = e;
            return n(["You have used up your online time for today."])
        }
        ,
        timeUpNote2: e => {
            const {normalize: n} = e;
            return n(["It seems that you need to do some other activities for a while."])
        }
        ,
        accessDenied: e => {
            const {normalize: n} = e;
            return n(["Access Denied!"])
        }
        ,
        accessDeniedNote: e => {
            const {normalize: n} = e;
            return n(["This website is blocked by Parental Controls."])
        }
        ,
        unsafeWebsite: e => {
            const {normalize: n} = e;
            return n(["Unsafe Website!"])
        }
        ,
        unsafeWebsiteNote: e => {
            const {normalize: n} = e;
            return n(["This website may harm your network and has been blocked by Antivirus."])
        }
        ,
        requestAccessWebsite: e => {
            const {normalize: n} = e;
            return n(["Request to access website"])
        }
        ,
        enterDigits: e => {
            const {normalize: n} = e;
            return n(["Enter the following digits for safety."])
        }
        ,
        enterDigitsNote1: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Please enter the digits in ", i(o("time")), "."])
        }
        ,
        enterDigitsNote2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Invalid digits. ", i(o("refresh"))])
        }
        ,
        timeRequestNote: e => {
            const {normalize: n} = e;
            return n(["Your request for more online time has been submitted. Please wait for approval."])
        }
        ,
        websiteRequestNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Your request to access ", i(o("url")), " has been submitted. Please wait for approval."])
        }
        ,
        bedTime: e => {
            const {normalize: n} = e;
            return n(["You can't use the internet right now."])
        }
        ,
        bedTimeNote: e => {
            const {normalize: n} = e;
            return n(["Your internet use has been restricted to certain hours and it's not time yet."])
        }
        ,
        requestTempInternetTime: e => {
            const {normalize: n} = e;
            return n(["Request temporary internet time"])
        }
        ,
        bedTimeFeedback: e => {
            const {normalize: n} = e;
            return n(["Your request for temporary internet time has been submitted. Please wait for approval."])
        }
        ,
        internetBlocked: e => {
            const {normalize: n} = e;
            return n(["Internet Blocked!"])
        }
        ,
        internetBlockedNote: e => {
            const {normalize: n} = e;
            return n(["Internet access for this device has been blocked. Please contact your network manager."])
        }
        ,
        later: e => {
            const {normalize: n} = e;
            return n(["LATER"])
        }
        ,
        updateUpper: e => {
            const {normalize: n} = e;
            return n(["UPDATE"])
        }
        ,
        details: e => {
            const {normalize: n} = e;
            return n(["Details"])
        }
        ,
        upgradeTitle: e => {
            const {normalize: n} = e;
            return n(["Firmware Update Required"])
        }
        ,
        noticeImportant: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["A critical firmware has been released for your ", i(o("model")), ". You need to update the firmware to get complete services of this router."])
        }
        ,
        wanConnectionError: e => {
            const {normalize: n} = e;
            return n(["WAN Connection Error"])
        }
        ,
        unplugged: e => {
            const {normalize: n} = e;
            return n(["The WAN port is unplugged"])
        }
        ,
        checkConnection: e => {
            const {normalize: n} = e;
            return n(["CHECK CONNECTION"])
        }
        ,
        tpLink: e => {
            const {normalize: n} = e;
            return n(["TP-Link"])
        }
        ,
        parentalControls: e => {
            const {normalize: n} = e;
            return n(["Parental Controls"])
        }
    },
    quickSetup: {
        wirelessNetworkName: e => {
            const {normalize: n} = e;
            return n(["SSID"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        select_internet_port: e => {
            const {normalize: n} = e;
            return n(["Tell us which port you're using for internet access"])
        }
        ,
        port_instruction: e => {
            const {normalize: n} = e;
            return n(["Select the router port that you've already plugged your Ethernet cable into."])
        }
        ,
        set_time_zone: e => {
            const {normalize: n} = e;
            return n(["Select your Time Zone"])
        }
        ,
        set_time_zone_and_region: e => {
            const {normalize: n} = e;
            return n(["Select your Region and Time Zone"])
        }
        ,
        time_zone: e => {
            const {normalize: n} = e;
            return n(["Time Zone"])
        }
        ,
        ispSettings: e => {
            const {normalize: n} = e;
            return n(["Special ISP Settings (IPTV/VLAN)"])
        }
        ,
        cloudLogin: e => {
            const {normalize: n} = e;
            return n(["One more thing..."])
        }
        ,
        cloudLoginInstruction: e => {
            const {normalize: n} = e;
            return n(["Log in to bind the router to your TP-Link ID. Then you can get more control with the Tether app."])
        }
        ,
        quit_qs: e => {
            const {normalize: n} = e;
            return n(["Exit Setup"])
        }
        ,
        quit_upper: e => {
            const {normalize: n} = e;
            return n(["EXIT"])
        }
        ,
        quit_msg1: e => {
            const {normalize: n} = e;
            return n(["Your settings will not be saved. Are you sure you want to exit now?"])
        }
        ,
        quit_msg2: e => {
            const {normalize: n} = e;
            return n(["The quick setup is almost done. Are you sure you want to exit now?"])
        }
        ,
        change_mode: e => {
            const {normalize: n} = e;
            return n(["Change Mode"])
        }
        ,
        wan_disconnected: e => {
            const {normalize: n} = e;
            return n(["Internet Port Disconnected"])
        }
        ,
        wan_disconnected_intro: e => {
            const {normalize: n} = e;
            return n(["Make sure the cable is securely connected to the internet port (WAN port)."])
        }
        ,
        select_connect_type: e => {
            const {normalize: n} = e;
            return n(["Select Connection Type"])
        }
        ,
        auto_manual: e => {
            const {normalize: n} = e;
            return n(["Set the connection type manually."])
        }
        ,
        country: e => {
            const {normalize: n} = e;
            return n(["Country"])
        }
        ,
        city: e => {
            const {normalize: n} = e;
            return n(["City"])
        }
        ,
        connection: e => {
            const {normalize: n} = e;
            return n(["Internet Connection Type"])
        }
        ,
        secondary_conn: e => {
            const {normalize: n} = e;
            return n(["Secondary Connection"])
        }
        ,
        server_ip_address_name: e => {
            const {normalize: n} = e;
            return n(["VPN Server IP/Domain Name"])
        }
        ,
        internet_connection_type_note: e => {
            const {normalize: n} = e;
            return n(["Select your internet connection type. If you are not sure, try AUTO DETECT or contact your ISP (internet service provider) for assistance."])
        }
        ,
        auto_detect: e => {
            const {normalize: n} = e;
            return n(["AUTO DETECT"])
        }
        ,
        dynamic_ip: e => {
            const {normalize: n} = e;
            return n(["Dynamic IP"])
        }
        ,
        static_ip: e => {
            const {normalize: n} = e;
            return n(["Static IP"])
        }
        ,
        pppoe: e => {
            const {normalize: n} = e;
            return n(["PPPoE"])
        }
        ,
        l2tp: e => {
            const {normalize: n} = e;
            return n(["L2TP"])
        }
        ,
        pptp: e => {
            const {normalize: n} = e;
            return n(["PPTP"])
        }
        ,
        v6_plus: e => {
            const {normalize: n} = e;
            return n(["v6plus"])
        }
        ,
        dslite: e => {
            const {normalize: n} = e;
            return n(["DS-Lite"])
        }
        ,
        ocn: e => {
            const {normalize: n} = e;
            return n(["MAP-E(OCN)"])
        }
        ,
        dynamic_intro: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP doesn't provide any information for internet connection."])
        }
        ,
        static_intro: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides specific IP parameters."])
        }
        ,
        pppoe_intro: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP only provides a username and password."])
        }
        ,
        l2tp_intro: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides L2TP VPN server information and an account. Some ISPs also provide specific IP parameters."])
        }
        ,
        pptp_intro: e => {
            const {normalize: n} = e;
            return n(["Select this type if your ISP provides PPTP VPN server information and an account. Some ISPs also provide specific IP parameters."])
        }
        ,
        internet_disconnect: e => {
            const {normalize: n} = e;
            return n(["Internet Port Disconnected"])
        }
        ,
        internet_disconnect_note_sel: e => {
            const {normalize: n} = e;
            return n(["Make sure the cable is securely connected to the Internet port you selected."])
        }
        ,
        autoPortInternetDisconnectNote: e => {
            const {normalize: n} = e;
            return n(["Make sure the network cable is securely connected to the Internet port on the router."])
        }
        ,
        upgrade_firmware: e => {
            const {normalize: n} = e;
            return n(["Update Firmware"])
        }
        ,
        upgrade_firmware_note: e => {
            const {normalize: n} = e;
            return n(["A new firmware is available. You are recommend to update the firmware to get better sevices."])
        }
        ,
        upgrade_firmware_note_critical: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["A critical firmware has been released for your ", i(o("model")), ". You need to update the firmware to get complete services of this router."])
        }
        ,
        details: e => {
            const {normalize: n} = e;
            return n(["Details"])
        }
        ,
        upgrade_tip: e => {
            const {normalize: n} = e;
            return n(["The update will take about 3 minutes."])
        }
        ,
        download_failed: e => {
            const {normalize: n} = e;
            return n(["Download Failed"])
        }
        ,
        download_failed_note: e => {
            const {normalize: n} = e;
            return n(["Please try again, or update the firmware later at Advanced > System > Firmware Update."])
        }
        ,
        upgrade_failed: e => {
            const {normalize: n} = e;
            return n(["Update Failed"])
        }
        ,
        upgrade_failed_note: e => {
            const {normalize: n} = e;
            return n(["Please update the firmware later at Advanced > System > Firmware Update."])
        }
        ,
        success: e => {
            const {normalize: n} = e;
            return n(["Success!"])
        }
        ,
        setupComplete: e => {
            const {normalize: n} = e;
            return n(["Setup Complete!"])
        }
        ,
        updateAndApplySuccess: e => {
            const {normalize: n} = e;
            return n(["Firmware updated and settings applied successfully. Make sure this device is connected to the router wirelessly or via an Ethenet cable before clicking NEXT."])
        }
        ,
        wiredAndApplySuccess: e => {
            const {normalize: n} = e;
            return n(["Settings applied successfully. You can connect your devices to the router by using the information below."])
        }
        ,
        wirelessAndApplySuccess: e => {
            const {normalize: n} = e;
            return n(["Settings applied successfully. Please reconnect this device to the router wirelessly or via an Ethenet cable before clicking NEXT."])
        }
        ,
        wiredButNoInternet: e => {
            const {normalize: n} = e;
            return n(["Settings have been applied but there is no internet connection, you can use the internal network of the router by using the information below."])
        }
        ,
        wirelessButNoInternet: e => {
            const {normalize: n} = e;
            return n(["Settings have been applied but there is no internet connection, you can use the internal network of the router by using the information below. Please reconnect this device to the router before clicking NEXT."])
        }
        ,
        deviceNotReady: e => {
            const {normalize: n} = e;
            return n(["Make sure this device is connected to the router wirelessly or via an Ethernet cable before clicking NEXT."])
        }
        ,
        waitForEffective: e => {
            const {normalize: n} = e;
            return n(["Settings applied successfully. Wait until wireless settings take effect, then reconnect this device to the router before clicking NEXT."])
        }
        ,
        noInternetAndWaitForEffective: e => {
            const {normalize: n} = e;
            return n(["Settings have been applied but there is no internet connection, you can use the internal network of the router by using the information below. Wait until wireless settings take effect, then reconnect this device to the router before clicking NEXT."])
        }
        ,
        takeEffectNote: e => {
            const {normalize: n} = e;
            return n(["Please note that 5 GHz settings will take longer to go into effect than 2.4 GHz settings."])
        }
        ,
        wanCableMismatchNote: e => {
            const {normalize: n} = e;
            return n(["Your router's WAN port is communicating with its connected device at a suboptimal rate. Please try the following:"])
        }
        ,
        wanCableMismatchDescript1: e => {
            const {normalize: n} = e;
            return n(["Use an Ethernet cable that supports gigabit speeds, such as an RJ45 CAT 5e or higher-standard cable."])
        }
        ,
        wanCableMismatchDescript2: e => {
            const {normalize: n} = e;
            return n(["Make sure the Ethernet cable is firmly connected."])
        }
        ,
        wanCableMismatchDescript3: e => {
            const {normalize: n} = e;
            return n(["Connect your computer to the modem or Ethernet outlet to test the negotiation speed."])
        }
        ,
        iptv_guide_note: e => {
            const {normalize: n} = e;
            return n(["You can later set the LAN port on the Advanced > Network > IPTV/VLAN page."])
        }
        ,
        connecting_internet: e => {
            const {normalize: n} = e;
            return n(["Connection Test"])
        }
        ,
        testing: e => {
            const {normalize: n} = e;
            return n(["Testing the internet connection. It may take several seconds. Please wait."])
        }
        ,
        no_internet: e => {
            const {normalize: n} = e;
            return n(["No Internet Connection"])
        }
        ,
        try_follow: e => {
            const {normalize: n} = e;
            return n(["Oops...The Internet connection is not set up successfully."])
        }
        ,
        try_1: e => {
            const {normalize: n} = e;
            return n(["Make sure all cables are properly connected."])
        }
        ,
        try_2: e => {
            const {normalize: n} = e;
            return n(["Click BACK TO SETUP and verify that the Internet connection information is correct."])
        }
        ,
        try_3: e => {
            const {normalize: n} = e;
            return n(["Contact our Technical Support if the problem still exists."])
        }
        ,
        try_again: e => {
            const {normalize: n} = e;
            return n(["TRY AGAIN"])
        }
        ,
        back_to_setup: e => {
            const {normalize: n} = e;
            return n(["BACK TO SETUP"])
        }
        ,
        ispProfile: e => {
            const {normalize: n} = e;
            return n(["ISP Profile"])
        }
        ,
        keep_updated: e => {
            const {normalize: n} = e;
            return n(["Keep your router updated."])
        }
        ,
        auto_update_note1: e => {
            const {normalize: n} = e;
            return n(["Auto update allows your router to automatically update to the latest firmware which provides better network performance and enhances system security."])
        }
        ,
        turn_on_auto: e => {
            const {normalize: n} = e;
            return n(["Turn on Auto Update"])
        }
        ,
        recommended: e => {
            const {normalize: n} = e;
            return n(["Recommended"])
        }
        ,
        notNowUpdate: e => {
            const {normalize: n} = e;
            return n(["Not now"])
        }
        ,
        auto_update_note2: e => {
            const {normalize: n} = e;
            return n(["When do you want to update your router?"])
        }
        ,
        auto_update_note3: e => {
            const {normalize: n} = e;
            return n(["Note: If the router detects anyone is using the internet at the time, the update will be rescheduled for the next day."])
        }
        ,
        dualNatDetectedTips: e => {
            const {normalize: n} = e;
            return n(['Potential network issue detected. Reconnect your device, then click "Next" to resolve the issue.'])
        }
        ,
        dual_nat_detected_title: e => {
            const {normalize: n} = e;
            return n(["We found another router on your network. This might cause double NAT issues."])
        }
        ,
        dual_nat_detected_instruction: e => {
            const {normalize: n} = e;
            return n(['Choose how that router is connected. If your situation is different, choose "None of the Above".'])
        }
        ,
        whats_dual_nat: e => {
            const {normalize: n} = e;
            return n(["What's double NAT"])
        }
        ,
        whats_dual_nat_title: e => {
            const {normalize: n} = e;
            return n(["What's double NAT?"])
        }
        ,
        whats_dual_nat_answer: e => {
            const {normalize: n} = e;
            return n(["Double NAT occurs when two routers are connected together, each creating their own private network. In most instances, it will not influence Wi-Fi performance. However, it may cause problems when you play online games, screen cast/mirror, or use features like port forwarding, VPN, or UPnP."])
        }
        ,
        what_combo_port_title: e => {
            const {normalize: n} = e;
            return n(["What's combo port?"])
        }
        ,
        what_combo_port: e => {
            const {normalize: n} = e;
            return n(["What's combo port"])
        }
        ,
        whats_combo_port_answer: e => {
            const {normalize: n} = e;
            return n(["The combo port pairs a RJ45 port and SFP+ port together. You can use only one port in the pair at a time."])
        }
        ,
        independent_router: e => {
            const {normalize: n} = e;
            return n(["This router is independent of my modem."])
        }
        ,
        combined_router: e => {
            const {normalize: n} = e;
            return n(["This router is combined with my modem (a modem/router combo)."])
        }
        ,
        none_of_the_above: e => {
            const {normalize: n} = e;
            return n(["None of the Above"])
        }
        ,
        independent_router_title: e => {
            const {normalize: n} = e;
            return n(["We highly recommend that you remove your old router and directly connect your modem to this TP-Link router."])
        }
        ,
        combined_router_title: e => {
            const {normalize: n} = e;
            return n(["To fix issues caused by Double NAT:"])
        }
        ,
        step_1: e => {
            const {normalize: n} = e;
            return n(["Step 1"])
        }
        ,
        step_2: e => {
            const {normalize: n} = e;
            return n(["Step 2"])
        }
        ,
        fix_issue_step_1: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("step")), ": Disconnect your wired and wireless devices from the modem/router combo and reconnect them to this TP-Link router."])
        }
        ,
        fix_issue_step_2: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("step")), " (Optional but recommended): Switch the modem/router combo to Bridge mode or disable its wireless network."])
        }
        ,
        how_to_do: e => {
            const {normalize: n} = e;
            return n(["How to do this"])
        }
        ,
        how_to_do_title: e => {
            const {normalize: n} = e;
            return n(["How can I switch the modem/router combo to Bridge mode?"])
        }
        ,
        how_to_do_step_1: e => {
            const {normalize: n} = e;
            return n(["1. Connect your computer directly to your modem/router combo with an Ethernet cable."])
        }
        ,
        how_to_do_step_2: e => {
            const {normalize: n} = e;
            return n(["2. Log into the modem/router combo, then find the Bridge mode settings and switch to it."])
        }
        ,
        how_to_do_note: e => {
            const {normalize: n} = e;
            return n(["For detailed instructions, refer to the relevant product manual or contact your ISP."])
        }
        ,
        g3_g4_identifying: e => {
            const {normalize: n} = e;
            return n(["Identifying..."])
        }
        ,
        g3_g4_identify_success: e => {
            const {normalize: n} = e;
            return n(["Successfully identified."])
        }
        ,
        g3_g4_unknown_mode: e => {
            const {normalize: n} = e;
            return n(["Unknown Modem"])
        }
        ,
        g3_g4_unknown_sim: e => {
            const {normalize: n} = e;
            return n(["Unknown SIM status"])
        }
        ,
        g3_g4_unplugged_note: e => {
            const {normalize: n} = e;
            return n(["No USB modem connected. Please make sure you connect modem correctly."])
        }
        ,
        g3_g4_unknown_sim_note: e => {
            const {normalize: n} = e;
            return n(["Unknown SIM status. Please ensure that SIM card is inserted in modem correctly and PIN is unlocked."])
        }
        ,
        g3_g4_connection_method: e => {
            const {normalize: n} = e;
            return n(["Connection method"])
        }
        ,
        g3_g4_connection_method_cable: e => {
            const {normalize: n} = e;
            return n(["Internet Cable"])
        }
        ,
        g3_g4_connection_method_3g4g: e => {
            const {normalize: n} = e;
            return n(["USB modem"])
        }
        ,
        all_set: e => {
            const {normalize: n} = e;
            return n(["All set and help us improve!"])
        }
        ,
        enjoy_more: e => {
            const {normalize: n} = e;
            return n(["You can now enjoy the internet."])
        }
        ,
        user_exp_improve: e => {
            const {normalize: n} = e;
            return n(["User Experience Improvement Program"])
        }
        ,
        privacy_policy: e => {
            const {normalize: n} = e;
            return n(["Privacy Policy & Terms of Use"])
        }
        ,
        join_uxp: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["Join ", i(o("userExpLink")), " to help TP-Link improve the products! By joining this program, you accept to send anonymous usage data to help TP-Link improve products, and you have fully read and understood the TP-Link ", i(o("privacyPolicyLink")), ". You can opt out of the program at any time."])
        }
        ,
        accept: e => {
            const {normalize: n} = e;
            return n(["ACCEPT & JOIN"])
        }
        ,
        scanToConnect: e => {
            const {normalize: n} = e;
            return n(["Scan to connect"])
        }
        ,
        tether_management: e => {
            const {normalize: n} = e;
            return n(["Manage your network remotely via Tether"])
        }
        ,
        learn_more: e => {
            const {normalize: n} = e;
            return n(["Learn More"])
        }
        ,
        forgot_pppoe_settings: e => {
            const {normalize: n} = e;
            return n(["Forgot your internet settings?"])
        }
        ,
        forgot_pppoe_button: e => {
            const {normalize: n} = e;
            return n(["Retrieve settings from your old router"])
        }
        ,
        retrieve_pppoe_settings: e => {
            const {normalize: n} = e;
            return n(["Retrieve settings from your old router"])
        }
        ,
        retrieve_follow: e => {
            const {normalize: n} = e;
            return n(["Follow the steps below to retrieve the internet settings from your old router:"])
        }
        ,
        power_old_router: e => {
            const {normalize: n} = e;
            return n(["Power on the old router"])
        }
        ,
        connect_old_router: e => {
            const {normalize: n} = e;
            return n(["Connect the LAN port of the new router to the WAN port of the old router"])
        }
        ,
        retrieving: e => {
            const {normalize: n} = e;
            return n(["Retrieving internet settings... Please wait."])
        }
        ,
        stop_retrieve: e => {
            const {normalize: n} = e;
            return n(["Are you sure you want to stop retrieving internet settings?"])
        }
        ,
        retrieve_fail: e => {
            const {normalize: n} = e;
            return n(["Internet settings not retrieved"])
        }
        ,
        retrieve_try_again_follow: e => {
            const {normalize: n} = e;
            return n(["Please do the following:"])
        }
        ,
        make_sure_power_on: e => {
            const {normalize: n} = e;
            return n(["Make sure the old router is powered on."])
        }
        ,
        make_sure_plugged: e => {
            const {normalize: n} = e;
            return n(["Make sure the Ethernet cable is plugged in securely and correctly."])
        }
        ,
        restart_old_router: e => {
            const {normalize: n} = e;
            return n(["Restart the old router, then try again."])
        }
        ,
        dynamic_ip_intro: e => {
            const {normalize: n} = e;
            return n(["Set the MAC address of your router. Use the default address unless your ISP allows internet access from only a specific MAC address."])
        }
        ,
        wireless_setting_title: e => {
            const {normalize: n} = e;
            return n(["Personalize Wireless Settings"])
        }
        ,
        wireless_setting_intro: e => {
            const {normalize: n} = e;
            return n(["Personalize your wireless network name and password."])
        }
        ,
        internet_step_intro: e => {
            const {normalize: n} = e;
            return n(["Enter the information provided by your ISP."])
        }
        ,
        dslite_intro: e => {
            const {normalize: n} = e;
            return n(["Please check the AFTR domain name."])
        }
        ,
        autoPortTitle: e => {
            const {normalize: n} = e;
            return n(["How would you like to set your internet port?"])
        }
        ,
        setAutomatically: e => {
            const {normalize: n} = e;
            return n(["Set Automatically"])
        }
        ,
        setAutomaticallyNote: e => {
            const {normalize: n} = e;
            return n(["Your router will automatically detect and set the port with internet access as the internet (WAN) port. Selecting this will enable the Auto Internet Port."])
        }
        ,
        setManually: e => {
            const {normalize: n} = e;
            return n(["Set Manually"])
        }
        ,
        setManuallyNote: e => {
            const {normalize: n} = e;
            return n(["If you need to use advanced functions (like IPTV) or you have network devices like switches in your network, we recommend selecting Set Manually."])
        }
        ,
        comboPortConnectedNote: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["It appears that both physical ports of the combo port (", i(o("comboLabel")), ") are connected. Only the RJ45 port will function; the SFP+ port will be deactivated."])
        }
        ,
        portDisconnectedNote: e => {
            const {normalize: n} = e;
            return n(["Detected that no network cable is connected to the selected port. Please click RESELECT and set up the port for internet access again. Or click SKIP."])
        }
        ,
        dualNatNetworkErrorTip: e => {
            const {normalize: n} = e;
            return n(["Make sure this device is connected to the router wirelessly or via an Ethernet cable."])
        }
    },
    shnBlocking: {
        title0: e => {
            const {normalize: n} = e;
            return n(["Warning: Dangerous Malware"])
        }
        ,
        contentHomeCare: e => {
            const {normalize: n} = e;
            return n(["TP-Link HomeCare has blocked access to this website. Visiting it may infect your computer with malware. Malware can access and modify files without your permission and steal personal information."])
        }
        ,
        tips0: e => {
            const {normalize: n} = e;
            return n(["Know this website is safe? Report to Trend Micro."])
        }
        ,
        title1: e => {
            const {normalize: n} = e;
            return n(["Parental Control Restrictions"])
        }
        ,
        content1_0: e => {
            const {normalize: n} = e;
            return n(["Your access to this website is blocked."])
        }
        ,
        content1_1: e => {
            const {normalize: n} = e;
            return n(["Classification: "])
        }
        ,
        tips1_0: e => {
            const {normalize: n} = e;
            return n(["Has this website been incorrectly classified?"])
        }
        ,
        tips1_1: e => {
            const {normalize: n} = e;
            return n(["Report to Trend Micro."])
        }
        ,
        content2: e => {
            const {normalize: n} = e;
            return n(["A network manager has paused your internet connection. Try again after they unpause you."])
        }
        ,
        content3: e => {
            const {normalize: n} = e;
            return n(["You've used up your time allowance on the internet for today. You can get back online tomorrow."])
        }
        ,
        content4: e => {
            const {normalize: n} = e;
            return n(["You're not allowed to surf the net during this time. You can get back online when Bed Time is over."])
        }
        ,
        adult: e => {
            const {normalize: n} = e;
            return n(["Adult Content"])
        }
        ,
        gambling: e => {
            const {normalize: n} = e;
            return n(["Gambling"])
        }
        ,
        sex: e => {
            const {normalize: n} = e;
            return n(["Sex Education"])
        }
        ,
        online: e => {
            const {normalize: n} = e;
            return n(["Online Communications"])
        }
        ,
        social: e => {
            const {normalize: n} = e;
            return n(["Social Network"])
        }
        ,
        pay: e => {
            const {normalize: n} = e;
            return n(["Pay to Surf"])
        }
        ,
        media: e => {
            const {normalize: n} = e;
            return n(["Media"])
        }
        ,
        download: e => {
            const {normalize: n} = e;
            return n(["Download"])
        }
        ,
        filter: e => {
            const {normalize: n} = e;
            return n(["Filter"])
        }
        ,
        game: e => {
            const {normalize: n} = e;
            return n(["Game"])
        }
    },
    storageSharing: {
        storageStatus: e => {
            const {normalize: n} = e;
            return n(["Storage Status"])
        }
        ,
        storageStatusInstruction: e => {
            const {normalize: n} = e;
            return n(["View the storage usage and access addresses of any connected USB storage device."])
        }
        ,
        accessMethod: e => {
            const {normalize: n} = e;
            return n(["Access Method"])
        }
        ,
        accessMethodInstruction: e => {
            const {normalize: n} = e;
            return n(["Select the method for accessing your USB storage device. The device can then be reached via the access address."])
        }
        ,
        serverName: e => {
            const {normalize: n} = e;
            return n(["Network/Media Server Name"])
        }
        ,
        address: e => {
            const {normalize: n} = e;
            return n(["Address"])
        }
        ,
        setDDns: e => {
            const {normalize: n} = e;
            return n(["Set DDNS"])
        }
        ,
        editSecureAddress: e => {
            const {normalize: n} = e;
            return n(["Edit Secure Address"])
        }
        ,
        permissions: e => {
            const {normalize: n} = e;
            return n(["Permissions"])
        }
        ,
        typeSambaWindows: e => {
            const {normalize: n} = e;
            return n(["SMB for Windows"])
        }
        ,
        typeSambaMac: e => {
            const {normalize: n} = e;
            return n(["SMB for macOS/Linux"])
        }
        ,
        typeLocalFtp: e => {
            const {normalize: n} = e;
            return n(["Local FTP"])
        }
        ,
        typeInternetFtp: e => {
            const {normalize: n} = e;
            return n(["Internet FTP"])
        }
        ,
        typeLocalSftp: e => {
            const {normalize: n} = e;
            return n(["Local SFTP"])
        }
        ,
        typeInternetSftp: e => {
            const {normalize: n} = e;
            return n(["Internet SFTP"])
        }
        ,
        readAndWrite: e => {
            const {normalize: n} = e;
            return n(["Read&Write"])
        }
        ,
        read: e => {
            const {normalize: n} = e;
            return n(["Read"])
        }
        ,
        usernameConflict: e => {
            const {normalize: n} = e;
            return n(["This username already exists."])
        }
        ,
        accessMethodConflictTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["The feature is unavailable when the internet connection type is set to ", i(o("dialType")), "."])
        }
        ,
        fileSharing: e => {
            const {normalize: n} = e;
            return n(["File Sharing"])
        }
        ,
        fileSharingInstruction: e => {
            const {normalize: n} = e;
            return n(["Share files with devices in your home or office network."])
        }
        ,
        secureSharing: e => {
            const {normalize: n} = e;
            return n(["Secure Sharing"])
        }
        ,
        secureSharingInstruction: e => {
            const {normalize: n} = e;
            return n(["Customize the access settings to ensure data security."])
        }
        ,
        leaveForDDnsConfirm: e => {
            const {normalize: n} = e;
            return n(["Leave for the Dynamic DNS page?"])
        }
        ,
        selectFolder: e => {
            const {normalize: n} = e;
            return n(["Select Folder"])
        }
        ,
        diskDrives: e => {
            const {normalize: n} = e;
            return n(["Disk Drives"])
        }
        ,
        partition: e => {
            const {normalize: n} = e;
            return n(["Partition"])
        }
        ,
        share: e => {
            const {normalize: n} = e;
            return n(["Share"])
        }
        ,
        freeOf: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n([i(o("free")), " free of ", i(o("capacity"))])
        }
        ,
        mediaSharing: e => {
            const {normalize: n} = e;
            return n(["Media Sharing"])
        }
        ,
        mediaSharingInstruction: e => {
            const {normalize: n} = e;
            return n(["View photos, play music and watch movies stored on the USB storage device via the access address."])
        }
    },
    usbModem: {
        title: e => {
            const {normalize: n} = e;
            return n(["3G/4G"])
        }
        ,
        g3G4Backup: e => {
            const {normalize: n} = e;
            return n(["3G/4G Backup"])
        }
        ,
        usbModem: e => {
            const {normalize: n} = e;
            return n(["USB Modem"])
        }
        ,
        usbModemInstruction: e => {
            const {normalize: n} = e;
            return n(["Connect a 3G/4G USB modem to the router and configure it as a backup for internet access."])
        }
        ,
        location: e => {
            const {normalize: n} = e;
            return n(["Location"])
        }
        ,
        mobileISP: e => {
            const {normalize: n} = e;
            return n(["Mobile ISP"])
        }
        ,
        simUimPin: e => {
            const {normalize: n} = e;
            return n(["SIM/UIM PIN"])
        }
        ,
        message: e => {
            const {normalize: n} = e;
            return n(["Message"])
        }
        ,
        pinLock1: e => {
            const {normalize: n} = e;
            return n(["PIN protection is enabled. Please input PIN."])
        }
        ,
        pinLock2: e => {
            const {normalize: n} = e;
            return n(["The SIM/UIM card is locked. Please unlock the SIM/UIM card first with your PUK on PC/Laptop."])
        }
        ,
        pinLock3: e => {
            const {normalize: n} = e;
            return n(["The PIN is invalid. Please check it and try again."])
        }
        ,
        pinLock4: e => {
            const {normalize: n} = e;
            return n(["PIN verification is successful."])
        }
        ,
        pinLock5: e => {
            const {normalize: n} = e;
            return n(["Unknown PIN status, please ensure that your SIM/UIM is on unlock status."])
        }
        ,
        pinLock6: e => {
            const {normalize: n} = e;
            return n(["Unlock SIM/UIM failed, please unlock it on your PC/Laptop using the PIN."])
        }
        ,
        pinLock7: e => {
            const {normalize: n} = e;
            return n(["Identifying 3G/4G modem."])
        }
        ,
        pinLock8: e => {
            const {normalize: n} = e;
            return n(["The pin code is verifying..."])
        }
        ,
        connectionMode: e => {
            const {normalize: n} = e;
            return n(["Connection Mode"])
        }
        ,
        connectOnDemand: e => {
            const {normalize: n} = e;
            return n(["Connect on Demand"])
        }
        ,
        connectAutomatically: e => {
            const {normalize: n} = e;
            return n(["Connect Automatically"])
        }
        ,
        connectManually: e => {
            const {normalize: n} = e;
            return n(["Connect Manually"])
        }
        ,
        maxIdleTime: e => {
            const {normalize: n} = e;
            return n(["Max Idle Time"])
        }
        ,
        minutes: e => {
            const {normalize: n} = e;
            return n(["0 means remain active at all times."])
        }
        ,
        authenticationType: e => {
            const {normalize: n} = e;
            return n(["Authentication Type"])
        }
        ,
        auto: e => {
            const {normalize: n} = e;
            return n(["Auto"])
        }
        ,
        pap: e => {
            const {normalize: n} = e;
            return n(["PAP"])
        }
        ,
        chap: e => {
            const {normalize: n} = e;
            return n(["CHAP"])
        }
        ,
        authTypeTip: e => {
            const {normalize: n} = e;
            return n(["The default is Auto, do not change unless necessary."])
        }
        ,
        setTip: e => {
            const {normalize: n} = e;
            return n(["Set the Dial Number, APN, Username and Password manually."])
        }
        ,
        dialNumber: e => {
            const {normalize: n} = e;
            return n(["Dial Number"])
        }
        ,
        apn: e => {
            const {normalize: n} = e;
            return n(["APN"])
        }
        ,
        username: e => {
            const {normalize: n} = e;
            return n(["Username"])
        }
        ,
        password: e => {
            const {normalize: n} = e;
            return n(["Password"])
        }
        ,
        mtuSize: e => {
            const {normalize: n} = e;
            return n(["MTU Size(in bytes)"])
        }
        ,
        mtuSizeTip: e => {
            const {normalize: n} = e;
            return n(["The default is 1480, do not change unless necessary"])
        }
        ,
        useFollowDnsServer: e => {
            const {normalize: n} = e;
            return n(["Use The following DNS Servers"])
        }
        ,
        primaryDNS: e => {
            const {normalize: n} = e;
            return n(["Primary DNS"])
        }
        ,
        secondaryDNS: e => {
            const {normalize: n} = e;
            return n(["Secondary DNS"])
        }
        ,
        unplugged: e => {
            const {normalize: n} = e;
            return n(["No USB modem connected."])
        }
        ,
        identifying: e => {
            const {normalize: n} = e;
            return n(["Identifying..."])
        }
        ,
        identifySuccessfully: e => {
            const {normalize: n} = e;
            return n(["Identify successfully"])
        }
        ,
        unknownModem: e => {
            const {normalize: n} = e;
            return n(["Unknown Modem. Please configure the modem on Modem Settings manually."])
        }
        ,
        disconnected: e => {
            const {normalize: n} = e;
            return n(["Not Connected"])
        }
    },
    search: {
        hint: e => {
            const {normalize: n} = e;
            return n(["Search for a feature"])
        }
        ,
        searchResult: e => {
            const {normalize: n} = e;
            return n(["Search Results"])
        }
        ,
        noResult: e => {
            const {normalize: n} = e;
            return n(["No results. Please try another keyword."])
        }
    },
    timeSchedule: {
        title: e => {
            const {normalize: n} = e;
            return n(["Click or drag to select timeslots."])
        }
        ,
        downloadTime: e => {
            const {normalize: n} = e;
            return n(["Download Time"])
        }
        ,
        downloadBlocked: e => {
            const {normalize: n} = e;
            return n(["Download Blocked"])
        }
        ,
        noSelectTip: e => {
            const {normalize: n} = e;
            return n(["Select a timeslot from the left."])
        }
    },
    ispSpeedTest: {
        tip: e => {
            const {normalize: n} = e;
            return n(["This page is only used for Frontier to test internet speed. During the test, Frontier will collect and verify your WAN MAC address and firmware version information to make sure the test runs normally."])
        }
    },
    ecoMode: {
        title: e => {
            const {normalize: n} = e;
            return n(["ECO Mode"])
        }
        ,
        description: e => {
            const {normalize: n} = e;
            return n(["Set ECO mode to save power."])
        }
        ,
        strong: e => {
            const {normalize: n} = e;
            return n(["Normal Mode"])
        }
        ,
        medium: e => {
            const {normalize: n} = e;
            return n(["Power-Saving Mode"])
        }
        ,
        weak: e => {
            const {normalize: n} = e;
            return n(["Ultra Power-Saving Mode"])
        }
        ,
        powerMode: e => {
            const {normalize: n} = e;
            return n(["Power Mode"])
        }
        ,
        effectiveTime: e => {
            const {normalize: n} = e;
            return n(["Effective Time"])
        }
        ,
        mediumModeTip: e => {
            const {normalize: n} = e;
            return n(["Power-Saving Mode lowers the power of your router to reduce power consumption. This will slightly reduce your network speed and coverage."])
        }
        ,
        strongModeTip: e => {
            const {normalize: n} = e;
            return n(["When working in Normal Mode, the router works under the normal power state. Wi-Fi performance will not be affected."])
        }
        ,
        weakModeTip: e => {
            const {normalize: n} = e;
            return n(["When working in Ultra Power-Saving Mode, your router will reduce to its minimum power consumption, and your network speed and coverage will reach the lowest allowed by the devices."])
        }
        ,
        jumpTip: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["You can enable ", i(o("led")), " and ", i(o("wirelessSchedule")), " to schedule when to automatically turn off your LEDs or wireless network to save more power."])
        }
    },
    thirdFing: {
        clientIdentify: e => {
            const {normalize: n} = e;
            return n(["Client Identification"])
        }
        ,
        introduction: e => {
            const {normalize: n} = e;
            return n(["Once enabled, we will share your clients' information to a third-party services to identify your clients better. We won't save your private information."])
        }
        ,
        dialogTitle: e => {
            const {normalize: n} = e;
            return n(["We are now better at identifying clients!"])
        }
        ,
        dialogContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To accurately identify your connected clients, we will share your clients' information to a third-party services if you authorize it. We won't save your private information. For more details, refer to the ", i(o("policy")), "."])
        }
        ,
        remindContent: e => {
            const {normalize: n, interpolate: i, named: o} = e;
            return n(["To accurately identify your connected clients, go to ", i(o("path")), "."])
        }
        ,
        maybeLater: e => {
            const {normalize: n} = e;
            return n(["MAYBE LATER"])
        }
        ,
        closeTip: e => {
            const {normalize: n} = e;
            return n(["Turning off this feature will reduce the router's client identification performance. Are you sure you want to turn it off?"])
        }
        ,
        imgAltText: e => {
            const {normalize: n} = e;
            return n(["Illustration of Client Identification"])
        }
    }
}
  , index = Object.freeze(Object.defineProperty({
    __proto__: null,
    default: resource$1
}, Symbol.toStringTag, {
    value: "Module"
}))
  , resource = {
    modemIsp: {
        m_personal: e => {
            const {normalize: n} = e;
            return n(["Personal"])
        }
        ,
        m_orange_armenia: e => {
            const {normalize: n} = e;
            return n(["Orange Armenia"])
        }
        ,
        m_beeline: e => {
            const {normalize: n} = e;
            return n(["Beeline"])
        }
        ,
        m_vivacell_mts: e => {
            const {normalize: n} = e;
            return n(["Vivacell-MTS"])
        }
        ,
        m_lebara_mobile: e => {
            const {normalize: n} = e;
            return n(["Lebara Mobile"])
        }
        ,
        m_optus: e => {
            const {normalize: n} = e;
            return n(["Optus"])
        }
        ,
        m_telstra: e => {
            const {normalize: n} = e;
            return n(["Telstra"])
        }
        ,
        m_telstra_3g_data_bundle: e => {
            const {normalize: n} = e;
            return n(["Telstra 3G data bundle"])
        }
        ,
        m_telstra_3g_prepay: e => {
            const {normalize: n} = e;
            return n(["Telstra 3G prepay"])
        }
        ,
        m_telstra_3g_pay_by_time: e => {
            const {normalize: n} = e;
            return n(["Telstra 3G pay by time"])
        }
        ,
        m_vodafone: e => {
            const {normalize: n} = e;
            return n(["Vodafone"])
        }
        ,
        m_hutchison_3g_austria: e => {
            const {normalize: n} = e;
            return n(["Hutchison 3G Austria GmbH (3 AT)"])
        }
        ,
        m_mobilkom_austria: e => {
            const {normalize: n} = e;
            return n(["Mobilkom Austria AG (A1)"])
        }
        ,
        m_one: e => {
            const {normalize: n} = e;
            return n(["One"])
        }
        ,
        m_tele_ring: e => {
            const {normalize: n} = e;
            return n(["tele.ring"])
        }
        ,
        m_t_mobile_max_online: e => {
            const {normalize: n} = e;
            return n(["T-Mobile, Max Online Business(Austria)"])
        }
        ,
        m_telering: e => {
            const {normalize: n} = e;
            return n(["Telering"])
        }
        ,
        m_azersell_telekom: e => {
            const {normalize: n} = e;
            return n(["Azersell Telekom"])
        }
        ,
        m_baksell: e => {
            const {normalize: n} = e;
            return n(["Baksell"])
        }
        ,
        m_nar_mobile: e => {
            const {normalize: n} = e;
            return n(["Nar Mobile"])
        }
        ,
        m_batelco: e => {
            const {normalize: n} = e;
            return n(["Batelco"])
        }
        ,
        m_zain_bh: e => {
            const {normalize: n} = e;
            return n(["Zain BH"])
        }
        ,
        m_teletalk: e => {
            const {normalize: n} = e;
            return n(["Teletalk"])
        }
        ,
        m_mobistar: e => {
            const {normalize: n} = e;
            return n(["Mobistar"])
        }
        ,
        m_proximus: e => {
            const {normalize: n} = e;
            return n(["Proximus"])
        }
        ,
        m_brasil_telecom: e => {
            const {normalize: n} = e;
            return n(["Brasil Telecom"])
        }
        ,
        m_claro: e => {
            const {normalize: n} = e;
            return n(["Claro"])
        }
        ,
        m_ctbc: e => {
            const {normalize: n} = e;
            return n(["CTBC"])
        }
        ,
        m_oi: e => {
            const {normalize: n} = e;
            return n(["Oi"])
        }
        ,
        m_sercomtel: e => {
            const {normalize: n} = e;
            return n(["Sercomtel"])
        }
        ,
        m_tim: e => {
            const {normalize: n} = e;
            return n(["TIM"])
        }
        ,
        m_vivo: e => {
            const {normalize: n} = e;
            return n(["Vivo"])
        }
        ,
        m_b_mobile: e => {
            const {normalize: n} = e;
            return n(["B-Mobile"])
        }
        ,
        m_dst_mobile: e => {
            const {normalize: n} = e;
            return n(["DST Mobile"])
        }
        ,
        m_hello: e => {
            const {normalize: n} = e;
            return n(["Hello"])
        }
        ,
        m_metfone: e => {
            const {normalize: n} = e;
            return n(["Metfone"])
        }
        ,
        m_mfone: e => {
            const {normalize: n} = e;
            return n(["Mfone"])
        }
        ,
        m_mobitel: e => {
            const {normalize: n} = e;
            return n(["Mobitel"])
        }
        ,
        m_qb: e => {
            const {normalize: n} = e;
            return n(["QB"])
        }
        ,
        m_smart: e => {
            const {normalize: n} = e;
            return n(["Smart"])
        }
        ,
        m_bell_new_stick_: e => {
            const {normalize: n} = e;
            return n(["Bell(New Stick)"])
        }
        ,
        m_bell_7_2_sim_based_stick: e => {
            const {normalize: n} = e;
            return n(["Bell 7.2 SIM Based stick"])
        }
        ,
        m_bell_evdo___no_sim: e => {
            const {normalize: n} = e;
            return n(["Bell(EVDO), NO SIM"])
        }
        ,
        m_mobilicity: e => {
            const {normalize: n} = e;
            return n(["Mobilicity"])
        }
        ,
        m_rogers_1_: e => {
            const {normalize: n} = e;
            return n(["Rogers(1)"])
        }
        ,
        m_rogers_2_: e => {
            const {normalize: n} = e;
            return n(["Rogers(2)"])
        }
        ,
        m_fido_1_: e => {
            const {normalize: n} = e;
            return n(["Fido(1)"])
        }
        ,
        m_fido_2_: e => {
            const {normalize: n} = e;
            return n(["Fido(2)"])
        }
        ,
        m_telus_new_stick_: e => {
            const {normalize: n} = e;
            return n(["Telus(New Stick)"])
        }
        ,
        m_telus_evdo___no_sim: e => {
            const {normalize: n} = e;
            return n(["Telus(EVDO), NO SIM"])
        }
        ,
        m_windmobile: e => {
            const {normalize: n} = e;
            return n(["WindMobile"])
        }
        ,
        m_verizon: e => {
            const {normalize: n} = e;
            return n(["Verizon"])
        }
        ,
        m_videotron: e => {
            const {normalize: n} = e;
            return n(["Videotron"])
        }
        ,
        m_at_t: e => {
            const {normalize: n} = e;
            return n(["AT&T"])
        }
        ,
        m_t_mobile: e => {
            const {normalize: n} = e;
            return n(["T-Mobile"])
        }
        ,
        m_bell: e => {
            const {normalize: n} = e;
            return n(["Bell"])
        }
        ,
        m_claro_prepago: e => {
            const {normalize: n} = e;
            return n(["Claro Prepago"])
        }
        ,
        m_claro_plan: e => {
            const {normalize: n} = e;
            return n(["Claro plan"])
        }
        ,
        m_entelpcs_prepago: e => {
            const {normalize: n} = e;
            return n(["EntelPcs Prepago"])
        }
        ,
        m_entel_pcs_plan: e => {
            const {normalize: n} = e;
            return n(["Entel Pcs Plan"])
        }
        ,
        m_movistar_prepago: e => {
            const {normalize: n} = e;
            return n(["Movistar Prepago"])
        }
        ,
        m_movistar_plan: e => {
            const {normalize: n} = e;
            return n(["Movistar Plan"])
        }
        ,
        m_china_telecom: e => {
            const {normalize: n} = e;
            return n(["China Telecom"])
        }
        ,
        m_china_unicom: e => {
            const {normalize: n} = e;
            return n(["China Unicom"])
        }
        ,
        m_china_mobile: e => {
            const {normalize: n} = e;
            return n(["China Mobile"])
        }
        ,
        m_t_mobile_cz: e => {
            const {normalize: n} = e;
            return n(["T-Mobile CZ"])
        }
        ,
        m_telefonica_o2_cz: e => {
            const {normalize: n} = e;
            return n(["Telefonica O2 CZ"])
        }
        ,
        m_vodafone_cz: e => {
            const {normalize: n} = e;
            return n(["Vodafone CZ"])
        }
        ,
        m_vodafone_cz_prepaid: e => {
            const {normalize: n} = e;
            return n(["Vodafone CZ prepaid"])
        }
        ,
        m_3_dk: e => {
            const {normalize: n} = e;
            return n(["3.dk"])
        }
        ,
        m_callme: e => {
            const {normalize: n} = e;
            return n(["Callme"])
        }
        ,
        m_cbb: e => {
            const {normalize: n} = e;
            return n(["CBB"])
        }
        ,
        m_fullrate: e => {
            const {normalize: n} = e;
            return n(["Fullrate"])
        }
        ,
        m_oister: e => {
            const {normalize: n} = e;
            return n(["Oister"])
        }
        ,
        m_tdc_lte_: e => {
            const {normalize: n} = e;
            return n(["TDC(LTE)"])
        }
        ,
        m_tdc: e => {
            const {normalize: n} = e;
            return n(["TDC"])
        }
        ,
        m_telenor: e => {
            const {normalize: n} = e;
            return n(["Telenor"])
        }
        ,
        m_telia: e => {
            const {normalize: n} = e;
            return n(["Telia"])
        }
        ,
        m_telmore: e => {
            const {normalize: n} = e;
            return n(["Telmore"])
        }
        ,
        m_telmex: e => {
            const {normalize: n} = e;
            return n(["Telmex"])
        }
        ,
        m_etisalat: e => {
            const {normalize: n} = e;
            return n(["Etisalat"])
        }
        ,
        m_mobinil: e => {
            const {normalize: n} = e;
            return n(["Mobinil"])
        }
        ,
        m_saunalahti: e => {
            const {normalize: n} = e;
            return n(["Saunalahti"])
        }
        ,
        m_elisa: e => {
            const {normalize: n} = e;
            return n(["Elisa"])
        }
        ,
        m_sonera: e => {
            const {normalize: n} = e;
            return n(["Sonera"])
        }
        ,
        m_dna: e => {
            const {normalize: n} = e;
            return n(["DNA"])
        }
        ,
        m_bouygues_telecom: e => {
            const {normalize: n} = e;
            return n(["Bouygues Telecom"])
        }
        ,
        m_orange_m6_mobile_france_: e => {
            const {normalize: n} = e;
            return n(["Orange M6 Mobile(France)"])
        }
        ,
        m_orange_enterprise_: e => {
            const {normalize: n} = e;
            return n(["Orange(Enterprise)"])
        }
        ,
        m_orange_personal_: e => {
            const {normalize: n} = e;
            return n(["Orange(Personal)"])
        }
        ,
        m_sfr: e => {
            const {normalize: n} = e;
            return n(["SFR"])
        }
        ,
        m_blau_de: e => {
            const {normalize: n} = e;
            return n(["blau.de"])
        }
        ,
        m_e_plus: e => {
            const {normalize: n} = e;
            return n(["E-plus"])
        }
        ,
        m_o2_germany_: e => {
            const {normalize: n} = e;
            return n(["O2(Germany)"])
        }
        ,
        m_t_mobile_germany_: e => {
            const {normalize: n} = e;
            return n(["T-Mobile(Germany)"])
        }
        ,
        m_t_mobile_business_germany_: e => {
            const {normalize: n} = e;
            return n(["T-Mobile Business(Germany)"])
        }
        ,
        m_vodafone_germany_: e => {
            const {normalize: n} = e;
            return n(["Vodafone(Germany)"])
        }
        ,
        m_1und1_de_: e => {
            const {normalize: n} = e;
            return n(["1und1(DE)"])
        }
        ,
        m_kabel_deutschland_mobile: e => {
            const {normalize: n} = e;
            return n(["Kabel Deutschland Mobile (KD-Mobile)"])
        }
        ,
        m_cosmote: e => {
            const {normalize: n} = e;
            return n(["Cosmote"])
        }
        ,
        m_wind: e => {
            const {normalize: n} = e;
            return n(["Wind"])
        }
        ,
        m_tigo: e => {
            const {normalize: n} = e;
            return n(["TIGO"])
        }
        ,
        m_china_mobile_peoples_telephone: e => {
            const {normalize: n} = e;
            return n(["China Mobile Peoples Telephone"])
        }
        ,
        m_netvigator: e => {
            const {normalize: n} = e;
            return n(["Netvigator"])
        }
        ,
        m_new_world: e => {
            const {normalize: n} = e;
            return n(["New World"])
        }
        ,
        m_one2free: e => {
            const {normalize: n} = e;
            return n(["One2Free"])
        }
        ,
        m_pccw_mobile: e => {
            const {normalize: n} = e;
            return n(["PCCW mobile"])
        }
        ,
        m_pccw_mobile_3g_: e => {
            const {normalize: n} = e;
            return n(["PCCW Mobile(3G)"])
        }
        ,
        m_smartone_vodafone: e => {
            const {normalize: n} = e;
            return n(["Smartone-Vodafone"])
        }
        ,
        m_1010_one2free_: e => {
            const {normalize: n} = e;
            return n(["1010(One2Free)"])
        }
        ,
        m_1010_4g_: e => {
            const {normalize: n} = e;
            return n(["1010(4G)"])
        }
        ,
        m_3_hong_kong: e => {
            const {normalize: n} = e;
            return n(["3 Hong Kong"])
        }
        ,
        m_3_2g: e => {
            const {normalize: n} = e;
            return n(["3 2G"])
        }
        ,
        m_digi__prepaid_and_postpaid_: e => {
            const {normalize: n} = e;
            return n(["Digi (prepaid and postpaid)"])
        }
        ,
        m_invitel__prepaid_and_postpaid_: e => {
            const {normalize: n} = e;
            return n(["Invitel (prepaid and postpaid)"])
        }
        ,
        m_telenor__prepaid_and_postpaid_: e => {
            const {normalize: n} = e;
            return n(["Telenor (prepaid and postpaid)"])
        }
        ,
        m_t_mobile__prepaid_and_postpaid_: e => {
            const {normalize: n} = e;
            return n(["T-Mobile (prepaid and postpaid)"])
        }
        ,
        m_vodafone__postpaid_: e => {
            const {normalize: n} = e;
            return n(["Vodafone (postpaid)"])
        }
        ,
        m_vodafone__prepaid_: e => {
            const {normalize: n} = e;
            return n(["Vodafone (prepaid)"])
        }
        ,
        m_airtel: e => {
            const {normalize: n} = e;
            return n(["AirTel"])
        }
        ,
        m_bpl_mobile_mumbai: e => {
            const {normalize: n} = e;
            return n(["BPL Mobile Mumbai"])
        }
        ,
        m_bsnl: e => {
            const {normalize: n} = e;
            return n(["BSNL"])
        }
        ,
        m_bsnl_2_: e => {
            const {normalize: n} = e;
            return n(["BSNL(2)"])
        }
        ,
        m_bsnl_cellone: e => {
            const {normalize: n} = e;
            return n(["BSNL-CellOne"])
        }
        ,
        m_idea: e => {
            const {normalize: n} = e;
            return n(["Idea"])
        }
        ,
        m_idea_cellular: e => {
            const {normalize: n} = e;
            return n(["Idea Cellular"])
        }
        ,
        m_mtnl_1_: e => {
            const {normalize: n} = e;
            return n(["MTNL(1)"])
        }
        ,
        m_mtnl_delhi__connect_: e => {
            const {normalize: n} = e;
            return n(["MTNL Delhi (Connect)"])
        }
        ,
        m_mtnl_delhi_post_paid: e => {
            const {normalize: n} = e;
            return n(["MTNL Delhi post paid"])
        }
        ,
        m_mtnl_delhi_pre_paid: e => {
            const {normalize: n} = e;
            return n(["MTNL Delhi pre paid"])
        }
        ,
        m_mtnl_mumbai_3g_post_paid: e => {
            const {normalize: n} = e;
            return n(["MTNL Mumbai 3G post paid"])
        }
        ,
        m_mtnl_mumbai_3g_pre_paid: e => {
            const {normalize: n} = e;
            return n(["MTNL Mumbai 3G pre paid"])
        }
        ,
        m_mts: e => {
            const {normalize: n} = e;
            return n(["MTS"])
        }
        ,
        m_orange_hutch__gujarat_: e => {
            const {normalize: n} = e;
            return n(["Orange Hutch (Gujarat)"])
        }
        ,
        m_reliance_netconnect: e => {
            const {normalize: n} = e;
            return n(["Reliance Netconnect"])
        }
        ,
        m_spice_telecom: e => {
            const {normalize: n} = e;
            return n(["Spice Telecom"])
        }
        ,
        m_vodafone_india__live_: e => {
            const {normalize: n} = e;
            return n(["Vodafone India (Live)"])
        }
        ,
        m_tata_docomo: e => {
            const {normalize: n} = e;
            return n(["TATA DOCOMO"])
        }
        ,
        m_tata_indicom_photon_: e => {
            const {normalize: n} = e;
            return n(["Tata Indicom Photon+"])
        }
        ,
        m_3: e => {
            const {normalize: n} = e;
            return n(["3"])
        }
        ,
        m_aha: e => {
            const {normalize: n} = e;
            return n(["Aha"])
        }
        ,
        m_axis: e => {
            const {normalize: n} = e;
            return n(["Axis"])
        }
        ,
        m_flexi: e => {
            const {normalize: n} = e;
            return n(["Flexi"])
        }
        ,
        m_indosat: e => {
            const {normalize: n} = e;
            return n(["Indosat"])
        }
        ,
        m_indosat_im2: e => {
            const {normalize: n} = e;
            return n(["Indosat IM2"])
        }
        ,
        m_telkomsel_flash: e => {
            const {normalize: n} = e;
            return n(["Telkomsel Flash"])
        }
        ,
        m_xl: e => {
            const {normalize: n} = e;
            return n(["XL"])
        }
        ,
        m_meteor: e => {
            const {normalize: n} = e;
            return n(["Meteor"])
        }
        ,
        m_o2_ireland_: e => {
            const {normalize: n} = e;
            return n(["O2(Ireland)"])
        }
        ,
        m_vodafone_ireland_: e => {
            const {normalize: n} = e;
            return n(["Vodafone(Ireland)"])
        }
        ,
        m_3_ireland: e => {
            const {normalize: n} = e;
            return n(["3 Ireland"])
        }
        ,
        m_emobile: e => {
            const {normalize: n} = e;
            return n(["eMobile"])
        }
        ,
        m_three: e => {
            const {normalize: n} = e;
            return n(["Three"])
        }
        ,
        m_pelephone: e => {
            const {normalize: n} = e;
            return n(["Pelephone"])
        }
        ,
        m_3_piani_dati_: e => {
            const {normalize: n} = e;
            return n(["3(piani dati)"])
        }
        ,
        m_3_piani_voce_: e => {
            const {normalize: n} = e;
            return n(["3(piani voce)"])
        }
        ,
        m_bt_mobile: e => {
            const {normalize: n} = e;
            return n(["BT Mobile"])
        }
        ,
        m_coopvoce: e => {
            const {normalize: n} = e;
            return n(["Coopvoce"])
        }
        ,
        m_erg_mobile: e => {
            const {normalize: n} = e;
            return n(["Erg Mobile"])
        }
        ,
        m_fastweb: e => {
            const {normalize: n} = e;
            return n(["Fastweb"])
        }
        ,
        m_noverca: e => {
            const {normalize: n} = e;
            return n(["Noverca"])
        }
        ,
        m_poste_mobile: e => {
            const {normalize: n} = e;
            return n(["Poste Mobile"])
        }
        ,
        m_tiscali_mobile: e => {
            const {normalize: n} = e;
            return n(["Tiscali Mobile"])
        }
        ,
        m_wind_biz: e => {
            const {normalize: n} = e;
            return n(["Wind Biz"])
        }
        ,
        m_e_mobile: e => {
            const {normalize: n} = e;
            return n(["E-mobile"])
        }
        ,
        m_ntt_docomo_kansai: e => {
            const {normalize: n} = e;
            return n(["NTT DoCoMo Kansai"])
        }
        ,
        m_softbank: e => {
            const {normalize: n} = e;
            return n(["SoftBank"])
        }
        ,
        m_zain: e => {
            const {normalize: n} = e;
            return n(["Zain"])
        }
        ,
        m_altel: e => {
            const {normalize: n} = e;
            return n(["Altel"])
        }
        ,
        m_kcell: e => {
            const {normalize: n} = e;
            return n(["Kcell"])
        }
        ,
        m_tele2: e => {
            const {normalize: n} = e;
            return n(["Tele2"])
        }
        ,
        m_ktf: e => {
            const {normalize: n} = e;
            return n(["KTF"])
        }
        ,
        m_sk_telecom: e => {
            const {normalize: n} = e;
            return n(["SK Telecom"])
        }
        ,
        m_viva: e => {
            const {normalize: n} = e;
            return n(["VIVA"])
        }
        ,
        m_wataniya: e => {
            const {normalize: n} = e;
            return n(["Wataniya"])
        }
        ,
        m_lmt: e => {
            const {normalize: n} = e;
            return n(["LMT"])
        }
        ,
        m_bite: e => {
            const {normalize: n} = e;
            return n(["Bite"])
        }
        ,
        m_p_t_luxembourg: e => {
            const {normalize: n} = e;
            return n(["P&T Luxembourg"])
        }
        ,
        m_voxmobile: e => {
            const {normalize: n} = e;
            return n(["Voxmobile"])
        }
        ,
        m_ctm: e => {
            const {normalize: n} = e;
            return n(["CTM"])
        }
        ,
        m_hutchison: e => {
            const {normalize: n} = e;
            return n(["Hutchison"])
        }
        ,
        m_smartone: e => {
            const {normalize: n} = e;
            return n(["SmarTone"])
        }
        ,
        m_celcom: e => {
            const {normalize: n} = e;
            return n(["Celcom"])
        }
        ,
        m_celcom_tm_2g_postpaid_: e => {
            const {normalize: n} = e;
            return n(["Celcom TM(2G Postpaid)"])
        }
        ,
        m_digi_1: e => {
            const {normalize: n} = e;
            return n(["DiGi_1"])
        }
        ,
        m_digi_2: e => {
            const {normalize: n} = e;
            return n(["DiGi_2"])
        }
        ,
        m_maxis_unet: e => {
            const {normalize: n} = e;
            return n(["Maxis_unet"])
        }
        ,
        m_maxis_bb: e => {
            const {normalize: n} = e;
            return n(["Maxis_bb"])
        }
        ,
        m_redtone: e => {
            const {normalize: n} = e;
            return n(["RedTone"])
        }
        ,
        m_u_mobile: e => {
            const {normalize: n} = e;
            return n(["U-Mobile"])
        }
        ,
        m_telcel: e => {
            const {normalize: n} = e;
            return n(["Telcel"])
        }
        ,
        m_orange: e => {
            const {normalize: n} = e;
            return n(["orange"])
        }
        ,
        m_moldcell: e => {
            const {normalize: n} = e;
            return n(["Moldcell"])
        }
        ,
        m_unite: e => {
            const {normalize: n} = e;
            return n(["Unite"])
        }
        ,
        m_inwi: e => {
            const {normalize: n} = e;
            return n(["INWI"])
        }
        ,
        m_maroc_telecom: e => {
            const {normalize: n} = e;
            return n(["MAROC TELECOM"])
        }
        ,
        m_meditel: e => {
            const {normalize: n} = e;
            return n(["MEDITEL"])
        }
        ,
        m_kpn_in: e => {
            const {normalize: n} = e;
            return n(["KPN_in"])
        }
        ,
        m_kpn_por: e => {
            const {normalize: n} = e;
            return n(["KPN_por"])
        }
        ,
        m_orange_netherlands_: e => {
            const {normalize: n} = e;
            return n(["Orange(Netherlands)"])
        }
        ,
        m_telfort: e => {
            const {normalize: n} = e;
            return n(["Telfort"])
        }
        ,
        m_t_mobile_netherlands_: e => {
            const {normalize: n} = e;
            return n(["T-Mobile(Netherlands)"])
        }
        ,
        m_vodafone_netherlands_: e => {
            const {normalize: n} = e;
            return n(["Vodafone(Netherlands)"])
        }
        ,
        m_telecom: e => {
            const {normalize: n} = e;
            return n(["Telecom"])
        }
        ,
        m_2_degree: e => {
            const {normalize: n} = e;
            return n(["2 degree"])
        }
        ,
        m_netcom_norway: e => {
            const {normalize: n} = e;
            return n(["Netcom Norway"])
        }
        ,
        m_telenor_mobil_norway: e => {
            const {normalize: n} = e;
            return n(["Telenor Mobil Norway"])
        }
        ,
        m_talkmore_norway: e => {
            const {normalize: n} = e;
            return n(["Talkmore Norway"])
        }
        ,
        m_nawras: e => {
            const {normalize: n} = e;
            return n(["Nawras"])
        }
        ,
        m_omantel: e => {
            const {normalize: n} = e;
            return n(["Omantel"])
        }
        ,
        m_claro_panama: e => {
            const {normalize: n} = e;
            return n(["Claro Panama"])
        }
        ,
        m_telecel: e => {
            const {normalize: n} = e;
            return n(["Telecel"])
        }
        ,
        m_claro_peru_: e => {
            const {normalize: n} = e;
            return n(["Claro(Peru)"])
        }
        ,
        m_movistar_telefonica_1_: e => {
            const {normalize: n} = e;
            return n(["Movistar(Telefonica_1)"])
        }
        ,
        m_movistar_telefonica_2_: e => {
            const {normalize: n} = e;
            return n(["Movistar(Telefonica_2)"])
        }
        ,
        m_nextel: e => {
            const {normalize: n} = e;
            return n(["Nextel"])
        }
        ,
        m_globe_tattoo_sonic: e => {
            const {normalize: n} = e;
            return n(["Globe Tattoo Sonic / 4G Flash (prepaid)"])
        }
        ,
        m_globe_tattoo_consumable_plans: e => {
            const {normalize: n} = e;
            return n(["Globe Tattoo Consumable Plans / Visibility (postpaid)"])
        }
        ,
        m_pldt_weroam_plan: e => {
            const {normalize: n} = e;
            return n(["PLDT WeRoam Plan"])
        }
        ,
        m_pldt_weroam_plus: e => {
            const {normalize: n} = e;
            return n(["PLDT WeRoam Plus"])
        }
        ,
        m_pldt_weroam_unlimited: e => {
            const {normalize: n} = e;
            return n(["PLDT WeRoam Unlimited"])
        }
        ,
        m_smartbro_prepaid: e => {
            const {normalize: n} = e;
            return n(["SmartBro Prepaid"])
        }
        ,
        m_smartbro_postpaid: e => {
            const {normalize: n} = e;
            return n(["SmartBro Postpaid"])
        }
        ,
        m_sun_broadband_wireless_prepaid: e => {
            const {normalize: n} = e;
            return n(["SUN Broadband Wireless Prepaid / Plan 350 Lite"])
        }
        ,
        m_sun_easy_broadband: e => {
            const {normalize: n} = e;
            return n(["SUN Easy Broadband, Wireless Plan 799/899"])
        }
        ,
        m_sun_broadband: e => {
            const {normalize: n} = e;
            return n(["SUN Broadband (Plan 1399)"])
        }
        ,
        m_aero2: e => {
            const {normalize: n} = e;
            return n(["Aero2"])
        }
        ,
        m_orange_poland_: e => {
            const {normalize: n} = e;
            return n(["Orange(Poland)"])
        }
        ,
        m_play: e => {
            const {normalize: n} = e;
            return n(["PLAY"])
        }
        ,
        m_plus: e => {
            const {normalize: n} = e;
            return n(["Plus"])
        }
        ,
        m_polsat: e => {
            const {normalize: n} = e;
            return n(["POLSAT"])
        }
        ,
        m_optimus_kanguru: e => {
            const {normalize: n} = e;
            return n(["Optimus Kanguru"])
        }
        ,
        m_vodafone_portugal_: e => {
            const {normalize: n} = e;
            return n(["Vodafone(Portugal)"])
        }
        ,
        m_tmn: e => {
            const {normalize: n} = e;
            return n(["TMN"])
        }
        ,
        m_optimus: e => {
            const {normalize: n} = e;
            return n(["Optimus"])
        }
        ,
        m_indonesia: e => {
            const {normalize: n} = e;
            return n(["Indonesia"])
        }
        ,
        m_ptcl: e => {
            const {normalize: n} = e;
            return n(["ptcl"])
        }
        ,
        m_wcall: e => {
            const {normalize: n} = e;
            return n(["WCALL"])
        }
        ,
        m_ooredoo: e => {
            const {normalize: n} = e;
            return n(["Ooredoo"])
        }
        ,
        m_rcs_rds: e => {
            const {normalize: n} = e;
            return n(["RCS-RDS"])
        }
        ,
        m_megafon: e => {
            const {normalize: n} = e;
            return n(["Megafon"])
        }
        ,
        m_skylink: e => {
            const {normalize: n} = e;
            return n(["Skylink"])
        }
        ,
        m_vainakh_telecom: e => {
            const {normalize: n} = e;
            return n(["Vainah Telecom"])
        }
        ,
        m_yota: e => {
            const {normalize: n} = e;
            return n(["Yota"])
        }
        ,
        m_rostelecom: e => {
            const {normalize: n} = e;
            return n(["Rostelecom"])
        }
        ,
        m_mobily_prepaid: e => {
            const {normalize: n} = e;
            return n(["Mobily Prepaid"])
        }
        ,
        m_mobily_postpaid: e => {
            const {normalize: n} = e;
            return n(["Mobily Postpaid"])
        }
        ,
        m_saudi_telecom_company: e => {
            const {normalize: n} = e;
            return n(["Saudi Telecom Company"])
        }
        ,
        m_m1: e => {
            const {normalize: n} = e;
            return n(["M1"])
        }
        ,
        m_power_grid: e => {
            const {normalize: n} = e;
            return n(["Power Grid"])
        }
        ,
        m_singtel: e => {
            const {normalize: n} = e;
            return n(["SingTel"])
        }
        ,
        m_starhub_prepaid_: e => {
            const {normalize: n} = e;
            return n(["StarHub(Prepaid)"])
        }
        ,
        m_starhub_default_: e => {
            const {normalize: n} = e;
            return n(["StarHub(Default)"])
        }
        ,
        m_slovak_telekom: e => {
            const {normalize: n} = e;
            return n(["Slovak Telekom"])
        }
        ,
        m_orange_slovensko: e => {
            const {normalize: n} = e;
            return n(["Orange Slovensko"])
        }
        ,
        m_8ta: e => {
            const {normalize: n} = e;
            return n(["8ta"])
        }
        ,
        m_cell_c__pty__ltd: e => {
            const {normalize: n} = e;
            return n(["Cell C (Pty) Ltd"])
        }
        ,
        m_mtn: e => {
            const {normalize: n} = e;
            return n(["MTN"])
        }
        ,
        m_virgin_mobile: e => {
            const {normalize: n} = e;
            return n(["Virgin mobile"])
        }
        ,
        m_vodacom: e => {
            const {normalize: n} = e;
            return n(["Vodacom"])
        }
        ,
        m_bt_spain_: e => {
            const {normalize: n} = e;
            return n(["BT(Spain)"])
        }
        ,
        m_carrefour_internet: e => {
            const {normalize: n} = e;
            return n(["Carrefour Internet"])
        }
        ,
        m_euskaltel_spain_: e => {
            const {normalize: n} = e;
            return n(["Euskaltel(Spain)"])
        }
        ,
        m_orange_spain_: e => {
            const {normalize: n} = e;
            return n(["Orange(Spain)"])
        }
        ,
        m_simyo_spain_: e => {
            const {normalize: n} = e;
            return n(["Simyo(Spain)"])
        }
        ,
        m_telecable_spain_: e => {
            const {normalize: n} = e;
            return n(["Telecable(Spain)"])
        }
        ,
        m_vodafone_spain_: e => {
            const {normalize: n} = e;
            return n(["Vodafone(Spain)"])
        }
        ,
        m_yoigo: e => {
            const {normalize: n} = e;
            return n(["Yoigo"])
        }
        ,
        m_dialog_telekom: e => {
            const {normalize: n} = e;
            return n(["Dialog Telekom"])
        }
        ,
        m_telia__privat_: e => {
            const {normalize: n} = e;
            return n(["Telia (privat)"])
        }
        ,
        m_telenor__privat_: e => {
            const {normalize: n} = e;
            return n(["Telenor (privat)"])
        }
        ,
        m_telenor__publik_: e => {
            const {normalize: n} = e;
            return n(["Telenor (publik)"])
        }
        ,
        m_tele2__7_2_mbit_: e => {
            const {normalize: n} = e;
            return n(["Tele2 (7,2 Mbit)"])
        }
        ,
        m_3__publik_: e => {
            const {normalize: n} = e;
            return n(["3 (publik)"])
        }
        ,
        m_3__privat_: e => {
            const {normalize: n} = e;
            return n(["3 (privat)"])
        }
        ,
        m_halebop: e => {
            const {normalize: n} = e;
            return n(["Halebop"])
        }
        ,
        m_djuice: e => {
            const {normalize: n} = e;
            return n(["Djuice"])
        }
        ,
        m_glocalnet: e => {
            const {normalize: n} = e;
            return n(["Glocalnet"])
        }
        ,
        m_bredbandsbolaget: e => {
            const {normalize: n} = e;
            return n(["Bredbandsbolaget"])
        }
        ,
        m_orange_switzerland_: e => {
            const {normalize: n} = e;
            return n(["Orange(Switzerland)"])
        }
        ,
        m_swisscom: e => {
            const {normalize: n} = e;
            return n(["Swisscom"])
        }
        ,
        m_sunrise: e => {
            const {normalize: n} = e;
            return n(["Sunrise"])
        }
        ,
        m_chunghua_telecom: e => {
            const {normalize: n} = e;
            return n(["Chunghua Telecom"])
        }
        ,
        m_fareastone: e => {
            const {normalize: n} = e;
            return n(["FarEasTone"])
        }
        ,
        m_kg_telecom: e => {
            const {normalize: n} = e;
            return n(["KG Telecom"])
        }
        ,
        m_mobitai: e => {
            const {normalize: n} = e;
            return n(["MobiTai"])
        }
        ,
        m_vibo: e => {
            const {normalize: n} = e;
            return n(["Vibo"])
        }
        ,
        m_taiwan_mobile: e => {
            const {normalize: n} = e;
            return n(["Taiwan Mobile"])
        }
        ,
        m_transasia: e => {
            const {normalize: n} = e;
            return n(["TransAsia"])
        }
        ,
        m_luxembourg: e => {
            const {normalize: n} = e;
            return n(["Luxembourg"])
        }
        ,
        m_ais: e => {
            const {normalize: n} = e;
            return n(["AIS"])
        }
        ,
        m_dtac: e => {
            const {normalize: n} = e;
            return n(["DTAC"])
        }
        ,
        m_i_mobile: e => {
            const {normalize: n} = e;
            return n(["i-mobile"])
        }
        ,
        m_tot: e => {
            const {normalize: n} = e;
            return n(["TOT"])
        }
        ,
        m_true: e => {
            const {normalize: n} = e;
            return n(["TRUE"])
        }
        ,
        m_avea_internet: e => {
            const {normalize: n} = e;
            return n(["Avea Internet"])
        }
        ,
        m_avea_iletisim_hizmetleri: e => {
            const {normalize: n} = e;
            return n(["Avea Iletisim Hizmetleri A.S. (Aycell)"])
        }
        ,
        m_turkcell: e => {
            const {normalize: n} = e;
            return n(["Turkcell"])
        }
        ,
        m_turkcell_3g: e => {
            const {normalize: n} = e;
            return n(["Turkcell 3G"])
        }
        ,
        m_turkcell_3g_static_ip: e => {
            const {normalize: n} = e;
            return n(["Turkcell 3G Static IP"])
        }
        ,
        m_vodafone_tr: e => {
            const {normalize: n} = e;
            return n(["Vodafone TR"])
        }
        ,
        m_intertelecom: e => {
            const {normalize: n} = e;
            return n(["Intertelecom"])
        }
        ,
        m_kyivstar: e => {
            const {normalize: n} = e;
            return n(["Kyivstar"])
        }
        ,
        m_life: e => {
            const {normalize: n} = e;
            return n(["Life"])
        }
        ,
        m_utel: e => {
            const {normalize: n} = e;
            return n(["Utel"])
        }
        ,
        m_du: e => {
            const {normalize: n} = e;
            return n(["Du"])
        }
        ,
        m_airtel_vodafone: e => {
            const {normalize: n} = e;
            return n(["AirTel Vodafone"])
        }
        ,
        m_asda_mobile: e => {
            const {normalize: n} = e;
            return n(["Asda Mobile"])
        }
        ,
        m_giffgaff: e => {
            const {normalize: n} = e;
            return n(["GiffGaff"])
        }
        ,
        m_jersey_telecom: e => {
            const {normalize: n} = e;
            return n(["Jersey Telecom"])
        }
        ,
        m_o2__contract_: e => {
            const {normalize: n} = e;
            return n(["O2 (Contract)"])
        }
        ,
        m_o2__payg_: e => {
            const {normalize: n} = e;
            return n(["O2 (PAYG)"])
        }
        ,
        m_tesco_mobile: e => {
            const {normalize: n} = e;
            return n(["Tesco Mobile"])
        }
        ,
        m_vodafone__contract_: e => {
            const {normalize: n} = e;
            return n(["Vodafone (contract)"])
        }
        ,
        m_vodafone__payg___5: e => {
            const {normalize: n} = e;
            return n(["Vodafone (PAYG - 5 pounds for 250MB)"])
        }
        ,
        m_vodafone__payg___15: e => {
            const {normalize: n} = e;
            return n(["Vodafone (PAYG - 15 pounds for 2GB)"])
        }
        ,
        m_vodafone__payg___15_1gb: e => {
            const {normalize: n} = e;
            return n(["Vodafone (PAYG - 15 pounds for 1GB)"])
        }
        ,
        m_ee: e => {
            const {normalize: n} = e;
            return n(["EE"])
        }
        ,
        m_movistar: e => {
            const {normalize: n} = e;
            return n(["movistar"])
        }
        ,
        m_alltel: e => {
            const {normalize: n} = e;
            return n(["Alltel"])
        }
        ,
        m_sprint: e => {
            const {normalize: n} = e;
            return n(["Sprint"])
        }
        ,
        m_verizon_4g_: e => {
            const {normalize: n} = e;
            return n(["Verizon(4G)"])
        }
        ,
        m_virgin: e => {
            const {normalize: n} = e;
            return n(["Virgin"])
        }
        ,
        m_digitel: e => {
            const {normalize: n} = e;
            return n(["DIGITEL"])
        }
        ,
        m_movilnet: e => {
            const {normalize: n} = e;
            return n(["MOVILNET"])
        }
        ,
        m_mobifone: e => {
            const {normalize: n} = e;
            return n(["Mobifone"])
        }
        ,
        m_vinaphone: e => {
            const {normalize: n} = e;
            return n(["Vinaphone"])
        }
        ,
        m_viettel: e => {
            const {normalize: n} = e;
            return n(["Viettel"])
        }
        ,
        m_vietnamobile: e => {
            const {normalize: n} = e;
            return n(["Vietnamobile"])
        }
    }
}
  , LANGUAGE_NAMES = {
    BG_BG: "Български",
    CS_CZ: "Čeština",
    DA_DK: "Dansk",
    DE_DE: "Deutsch",
    EN_US: "English",
    ES_ES: "Español",
    ES_MX: "Español de América Latina",
    FI_FI: "Suomi",
    FR_FR: "Français",
    HU_HU: "Magyarország",
    IT_IT: "Italiano",
    JP_JP: "日本語",
    KO_KR: "한국어",
    NL_NL: "Nederlands",
    NO_NO: "Norsk",
    PL_PL: "Polski",
    PT_BR: "Português do Brasil",
    PT_PT: "Português",
    RO_RO: "Română",
    RU_RU: "Русский",
    SK_SK: "Slovenčina",
    SV_SE: "Svenska",
    TH_TH: "ภาษาไทย",
    TR_TR: "Türkçe",
    UK_UA: "Українська",
    VI_VN: "Tiếng Việt",
    ZH_CN: "简体中文",
    ZH_TW: "繁體中文"
}
  , DEFAULT_LANG = "en_US"
  , LANGUAGE_CODE = {
    BG_BG: "bg-BG",
    CS_CZ: "cs-CZ",
    DA_DK: "da-DK",
    DE_DE: "de-DE",
    EN_US: "en-US",
    ES_ES: "es-ES",
    ES_MX: "es-MX",
    FI_FI: "fi-FI",
    FR_FR: "fr-FR",
    HU_HU: "hu-HU",
    IT_IT: "it-IT",
    JP_JP: "ja-JP",
    KO_KR: "ko-KR",
    NL_NL: "nl-NL",
    NO_NO: "no-NO",
    PL_PL: "pl-PL",
    PT_BR: "pt-BR",
    PT_PT: "pt-PT",
    RO_RO: "ro-RO",
    RU_RU: "ru-RU",
    SK_SK: "sk-SK",
    SV_SE: "sv-SE",
    TH_TH: "th-TH",
    TR_TR: "tr-TR",
    UK_UA: "uk-UA",
    VI_VN: "vi-VN",
    ZH_CN: "zh-CN",
    ZH_TW: "zh-TW"
}
  , loadedLanguages = [DEFAULT_LANG]
  , i18n = createI18n({
    globalInjection: !0,
    locale: DEFAULT_LANG,
    fallbackLocale: DEFAULT_LANG,
    messages: {
        en_US: assign({}, resource$1, resource)
    }
});
function getLocale() {
    return i18n.global.locale.value
}
function setLocale(e) {
    i18n.global.locale.value = e
}
function setI18nLanguage(e) {
    setLocale(e),
    document.querySelector("html").setAttribute("lang", e)
}
async function loadLanguageAsync(e) {
    if (getLocale() === e)
        return;
    if (loadedLanguages.includes(e))
        return setI18nLanguage(e);
    const o = await __variableDynamicImportRuntimeHelper(Object.assign({
        "./langs/bg_BG/index.ts": () => __vitePreload( () => import("../locale/bg_BG/index-BWb34bi0.js"), [], import.meta.url),
        "./langs/cs_CZ/index.ts": () => __vitePreload( () => import("../locale/cs_CZ/index-CnfdgXrP.js"), [], import.meta.url),
        "./langs/da_DK/index.ts": () => __vitePreload( () => import("../locale/da_DK/index-Cixd_GbD.js"), [], import.meta.url),
        "./langs/de_DE/index.ts": () => __vitePreload( () => import("../locale/de_DE/index-BoGp1jeo.js"), [], import.meta.url),
        "./langs/en_US/index.ts": () => __vitePreload( () => Promise.resolve().then( () => index), void 0, import.meta.url),
        "./langs/es_ES/index.ts": () => __vitePreload( () => import("../locale/es_ES/index-JRJUE39Q.js"), [], import.meta.url),
        "./langs/es_MX/index.ts": () => __vitePreload( () => import("../locale/es_MX/index-DMCb9e3n.js"), [], import.meta.url),
        "./langs/fi_FI/index.ts": () => __vitePreload( () => import("../locale/fi_FI/index-DcCIlmyE.js"), [], import.meta.url),
        "./langs/fr_FR/index.ts": () => __vitePreload( () => import("../locale/fr_FR/index-QspTCEP2.js"), [], import.meta.url),
        "./langs/hu_HU/index.ts": () => __vitePreload( () => import("../locale/hu_HU/index-D6Lzy4oe.js"), [], import.meta.url),
        "./langs/it_IT/index.ts": () => __vitePreload( () => import("../locale/it_IT/index-B8OCPkHE.js"), [], import.meta.url),
        "./langs/jp_JP/index.ts": () => __vitePreload( () => import("../locale/jp_JP/index-D2PCY9m7.js"), [], import.meta.url),
        "./langs/ko_KR/index.ts": () => __vitePreload( () => import("../locale/ko_KR/index-Cob9dfUK.js"), [], import.meta.url),
        "./langs/nl_NL/index.ts": () => __vitePreload( () => import("../locale/nl_NL/index-BJScIU2d.js"), [], import.meta.url),
        "./langs/no_NO/index.ts": () => __vitePreload( () => import("../locale/no_NO/index-C9kplL2V.js"), [], import.meta.url),
        "./langs/pl_PL/index.ts": () => __vitePreload( () => import("../locale/pl_PL/index-s5wFnP6O.js"), [], import.meta.url),
        "./langs/pt_BR/index.ts": () => __vitePreload( () => import("../locale/pt_BR/index-CqtBuCDX.js"), [], import.meta.url),
        "./langs/pt_PT/index.ts": () => __vitePreload( () => import("../locale/pt_PT/index-CfgD2kqW.js"), [], import.meta.url),
        "./langs/ro_RO/index.ts": () => __vitePreload( () => import("../locale/ro_RO/index-DirLftZp.js"), [], import.meta.url),
        "./langs/ru_RU/index.ts": () => __vitePreload( () => import("../locale/ru_RU/index-Dsw8uSuB.js"), [], import.meta.url),
        "./langs/sk_SK/index.ts": () => __vitePreload( () => import("../locale/sk_SK/index-Bx7tN9kd.js"), [], import.meta.url),
        "./langs/sv_SE/index.ts": () => __vitePreload( () => import("../locale/sv_SE/index-BDLkT8Ef.js"), [], import.meta.url),
        "./langs/th_TH/index.ts": () => __vitePreload( () => import("../locale/th_TH/index-BFIfwcc8.js"), [], import.meta.url),
        "./langs/tr_TR/index.ts": () => __vitePreload( () => import("../locale/tr_TR/index-DdVoPAvf.js"), [], import.meta.url),
        "./langs/uk_UA/index.ts": () => __vitePreload( () => import("../locale/uk_UA/index-DaPhbYYc.js"), [], import.meta.url),
        "./langs/vi_VN/index.ts": () => __vitePreload( () => import("../locale/vi_VN/index-BWD2fSA7.js"), [], import.meta.url),
        "./langs/zh_TW/index.ts": () => __vitePreload( () => import("../locale/zh_TW/index-AaYYkF57.js"), [], import.meta.url)
    }), `./langs/${e}/index.ts`, 4);
    i18n.global.setLocaleMessage(e, o.default),
    i18n.global.mergeLocaleMessage(e, resource),
    loadedLanguages.push(e),
    setI18nLanguage(e)
}
class GdprService {
    static isHttps() {
        return location.protocol === "https:"
    }
    static _isProduction() {
        return !0
    }
    static needEncrypt(n) {
        return CertificationService.isSupport(FeatureEnum.GDPR) ? !this.isHttps() && this._isProduction() && n.encrypt : this._isProduction() && n.encrypt
    }
    static needSerialize() {
        return this.isHttps() && this._isProduction() && CertificationService.isSupport(FeatureEnum.GDPR)
    }
}
function decryptResponse(e) {
    const {data: n, config: i} = e;
    let o = n;
    GdprService.needEncrypt(i) && (o = decrypt(n.data)),
    e.data = o
}
function decrypt(e) {
    const n = EncryptManager.getEncryptor();
    try {
        return JSON.parse(n.decrypt(e))
    } catch {
        return {
            success: !1,
            errorCode: "timeout",
            data: {}
        }
    }
}
function successJudgeResponse(e) {
    const {data: n, config: i} = e
      , o = formatResponse(n)
      , l = i;
    if (e.data = o,
    o.success === !1)
        throw !specialErrorHandler(o.errorCode) && !l.preventError && defaultErrorHandler(o.errorCode),
        e.data;
    l.preventSuccess || Cx.success(i18n.global.t("common.operationSucceed"))
}
function formatResponse(e) {
    const {errorCode: n, error: i, errorcode: o, error_code: l, ...a} = e;
    return {
        ...a,
        errorCode: n || i || l || o || ""
    }
}
function specialErrorHandler(e) {
    return e === "timeout" ? (Auth.reset(),
    location.href = "/",
    !0) : e === "auto upgrading" ? (Auth.reset(),
    location.href = "./auto_update_blocking.html",
    !0) : e === "permission denied" ? (ko.info(i18n.global.t("error.00000088")),
    !0) : !1
}
function defaultErrorHandler(e) {
    if (Number(e) !== 0) {
        const i = `error.${e}`
          , o = i18n.global.te(i) ? i18n.global.t(i) : i18n.global.t("common.operationFailed");
        Cx.error(o)
    }
}
function responseErrorHandler(e) {
    var n, i;
    return ((n = e.response) == null ? void 0 : n.status) === 403 ? (Auth.reset(),
    location.href = "/") : e.config.preventError || (((i = e.response) == null ? void 0 : i.status) === 500 ? Cx.error(i18n.global.t("error.internalServer")) : Cx.error(i18n.global.t("error.deviceDisconnected"))),
    Promise.reject(e)
}
function encryptData(e, n=!1) {
    return EncryptManager.getEncryptor().encrypt(serialize(e), n)
}
function encryptRequest(e) {
    const {data: n, withAesKey: i} = e;
    return GdprService.needEncrypt(e) ? e.data = encryptData(n, i) : GdprService.needSerialize() && (e.data = serialize(e.data)),
    e
}
function formatUrl(e) {
    let {url: n} = e;
    if (n) {
        const i = Token.getToken();
        n = /^\//.test(n) ? n : `/${n}`,
        e.url = `/cgi-bin/luci/;stok=${i}${n}`
    }
    return e
}
function serialize(e) {
    if (!isPlainObject(e))
        return "";
    const n = [];
    return Object.keys(e).forEach(i => {
        const o = e[i];
        Array.isArray(o) ? o.forEach(l => {
            formatParams(i, l, n)
        }
        ) : formatParams(i, o, n)
    }
    ),
    n.join("&")
}
function isPrimitive(e) {
    return typeof e != "object"
}
function formatParams(e, n, i) {
    if (isNil(n) || isFunction$1(n))
        return;
    const o = isPrimitive(n) ? n : JSON.stringify(n);
    i.push(`${encodeURIComponent(e)}=${encodeURIComponent(o)}`)
}
const timeoutMilliseconds = 30 * 1e3
  , baseURL = "/"
  , NO_ENCRYPT_URL = ["/domain_login?form=dlogin", "/locale?form=lang", "/locale?form=list", "/locale?form=multilang", "/locale?form=country", "/login?form=check_factory_default", "/login?form=cloud_bind_status", "/login?form=auth", "/login?form=keys", "/login?form=password", "/login?form=vercode", "/login?form=get_deviceInfo", "/login?form=get_token", "/login?form=check_internet", "/login?form=get_eweb_url", "/login?form=get_firmware_info", "/login?form=sysmode", "/wan_error?form=read", "/wan_error?form=never", "/upgrade?form=set", "/upgrade?form=info", "/domain_redirect?form=get", "/admin/firmware?form=config_multipart", "/admin/firmware?form=save_upgrade", "/admin/openvpn?form=export", "/admin/syslog?form=save_log", "/admin/qos?form=update_database", "/blocking?form=vercode", "/debug?form=cmd", "/debug?form=upload", "/debug?form=refresh", "/device_config?form=config"];
function isEncryptRequired(e) {
    return !NO_ENCRYPT_URL.includes(e)
}
const service = axios.create({
    timeout: timeoutMilliseconds,
    responseType: "json",
    baseURL,
    headers: {
        "Content-Type": "application/x-www-form-urlencoded",
        "Cache-Control": "no-cache"
    }
});
service.interceptors.request.use(e => {
    const {encrypt: n, url: i} = e
      , o = n ?? isEncryptRequired(i ?? "")
      , l = {
        ...e,
        encrypt: o
    };
    return formatUrl(l),
    encryptRequest(l),
    l
}
);
service.interceptors.response.use(e => {
    if (!e || e.data === void 0)
        return Promise.reject(void 0);
    try {
        return decryptResponse(e),
        successJudgeResponse(e),
        e.data
    } catch (n) {
        return Promise.reject(n)
    }
}
, responseErrorHandler);
class ParseError extends Error {
}
const fileService = axios.create({
    timeout: timeoutMilliseconds,
    responseType: "blob",
    baseURL,
    headers: {
        "Content-Type": "multipart/form-data",
        "Cache-Control": "no-cache"
    }
});
fileService.interceptors.request.use(e => {
    const n = {
        ...e,
        encrypt: !0
    };
    return formatUrl(n),
    {
        ...n,
        encrypt: !1
    }
}
);
function evokeDownload(e) {
    var l;
    const n = ((l = e.headers) == null ? void 0 : l["content-disposition"].match(/filename=*\/*"(.*)*\/*"/)[1]) ?? ""
      , i = URL.createObjectURL(e.data)
      , o = document.createElement("a");
    o.href = i,
    o.setAttribute("download", n),
    document.body.appendChild(o),
    o.click(),
    document.body.removeChild(o),
    URL.revokeObjectURL(i)
}
function parseText(e) {
    try {
        return e ? JSON.parse(e) : {}
    } catch {
        throw new ParseError
    }
}
fileService.interceptors.response.use(async e => {
    try {
        const n = await e.data.text()
          , i = parseText(n);
        return successJudgeResponse({
            ...e,
            data: i
        }),
        i
    } catch (n) {
        return n instanceof ParseError ? (evokeDownload(e),
        e.data) : Promise.reject(n)
    }
}
, responseErrorHandler);
const serviceAdapter = {
    request: async (e, n, i) => (await service.post(e, n, i)).data,
    read: async (e, n) => (await service.post(e, {
        operation: "read"
    }, {
        preventSuccess: !0,
        ...n
    })).data,
    write: async (e, n, i) => (await service.post(e, {
        operation: "write",
        ...n
    }, i)).data,
    load: async (e, n) => service.post(e, {
        operation: "load"
    }, {
        preventSuccess: !0,
        ...n
    }),
    insert: async (e, n, i={
        index: 0
    }, o) => {
        const l = {
            operation: "insert",
            new: JSON.stringify(n),
            ...i
        };
        return service.post(e, l, o)
    }
    ,
    remove: async (e, n, i) => service.post(e, {
        operation: "remove",
        ...n
    }, i),
    update: async (e, n, i, o, l) => service.post(e, {
        operation: "update",
        ...n,
        new: JSON.stringify(i),
        old: JSON.stringify(o)
    }, l),
    file: async (e, n, i) => (await fileService.post(e, n, i)).data
};
function getLanguageList() {
    return serviceAdapter.read("/locale?form=list")
}
function getLanguage() {
    return serviceAdapter.read("/locale?form=lang")
}
function setLanguage(e, n) {
    return serviceAdapter.write("/locale?form=lang", {
        locale: e
    }, n)
}
function getRegion() {
    return serviceAdapter.read("/locale?form=country")
}
const config$4 = [{
    key: "networkMap",
    text: "menu.networkMap"
}, {
    key: "internetBasic",
    icon: "internet",
    text: "menu.internet"
}, {
    key: "wirelessBasic",
    icon: "wireless",
    text: "menu.wireless"
}, {
    key: "homeShield",
    text: "menu.homeshield",
    default: "networkCheck",
    children: [{
        key: "networkCheck",
        text: "menu.networkCheck"
    }, {
        key: "parentalControls",
        text: "menu.parentalControls"
    }, {
        key: "qos",
        text: "menu.qos"
    }, {
        key: "moreFeatures",
        text: "menu.moreFeatures"
    }]
}, {
    key: "advanced",
    text: "menu.advanced",
    default: "networkStatus",
    children: [{
        key: "quickSetup",
        text: "menu.quickSetup",
        unsearchable: !0
    }, {
        key: "networkAdvUl",
        text: "menu.network",
        children: [{
            key: "networkStatus",
            text: "menu.status"
        }, {
            key: "internetAdv",
            text: "menu.internet"
        }, {
            key: "lanAdv",
            text: "menu.lan"
        }, {
            key: "iptvAdv",
            text: "menu.iptv"
        }, {
            key: "dhcpServerAdv",
            text: "menu.dhcpServer"
        }, {
            key: "ddnsAdv",
            text: "menu.dynamicDns"
        }, {
            key: "routingAdv",
            text: "menu.routing"
        }]
    }, {
        key: "tpLinkCloud",
        text: "menu.tpLinkId"
    }, {
        key: "wirelessAdvUl",
        text: "menu.wireless",
        children: [{
            key: "wirelessSettingsAdv",
            text: "menu.wirelessSettings"
        }, {
            key: "guestNetworkAdv",
            text: "menu.guestNetwork"
        }, {
            key: "iotNetworkAdv",
            text: "menu.iotNetwork"
        }, {
            key: "wirelessSchedule",
            text: "menu.wirelessSchedule"
        }, {
            key: "wps",
            text: "menu.wps"
        }, {
            key: "additionalSettings",
            text: "menu.additionalSettings"
        }]
    }, {
        key: "usb",
        text: "menu.usbSettings",
        children: [{
            key: "usbModem",
            text: "menu.g3G4"
        }, {
            key: "storageSharing",
            text: "menu.storageSharing"
        }, {
            key: "timeMachine",
            text: "menu.timeMachine"
        }, {
            key: "offlineDownload",
            text: "menu.offlineDownload"
        }]
    }, {
        key: "nat",
        text: "menu.natForwarding",
        children: [{
            key: "portForwarding",
            text: "menu.portForwarding"
        }, {
            key: "portTriggering",
            text: "menu.portTriggering"
        }, {
            key: "upnp",
            text: "menu.upnp"
        }, {
            key: "dmz",
            text: "menu.dmz"
        }]
    }, {
        key: "homeShieldAdv",
        text: "menu.homeshield",
        children: [{
            key: "networkCheckAdv",
            text: "menu.networkCheck"
        }, {
            key: "parentalControlsAdv",
            text: "menu.parentalControls"
        }, {
            key: "qosAdv",
            text: "menu.qos"
        }, {
            key: "moreFeaturesAdv",
            text: "menu.moreFeatures"
        }]
    }, {
        key: "securityAdvUl",
        text: "menu.security",
        children: [{
            key: "firewall",
            text: "menu.firewall"
        }, {
            key: "accessControl",
            text: "menu.accessControl"
        }, {
            key: "ipMacBinding",
            text: "menu.ipMacBinding"
        }, {
            key: "alg",
            text: "menu.alg"
        }, {
            key: "yandexDns",
            text: "menu.yandexDns"
        }, {
            key: "iotSecurity",
            text: "menu.iotSecurity"
        }]
    }, {
        key: "vpnClient",
        text: "menu.vpnClient"
    }, {
        key: "vpnServer",
        text: "menu.vpnServer",
        children: [{
            key: "openVpn",
            text: "menu.openVpn"
        }, {
            key: "pptp",
            text: "menu.vpnPptp"
        }, {
            key: "l2tpIpsec",
            text: "menu.vpnL2Tp"
        }, {
            key: "wireguardVpn",
            text: "menu.wireGuard"
        }, {
            key: "connections",
            text: "menu.vpnConnections"
        }]
    }, {
        key: "ipv6",
        text: "menu.ipv6"
    }, {
        key: "smartLiftAssistant",
        text: "menu.smartLifeAssistant",
        children: [{
            key: "alexa",
            text: "menu.alexa"
        }, {
            key: "googleAssistant",
            text: "menu.googleAssistant"
        }]
    }, {
        key: "easyMesh",
        text: "menu.easyMesh"
    }, {
        key: "system",
        text: "menu.system",
        children: [{
            key: "firmware",
            text: "menu.firmware"
        }, {
            key: "backupRestore",
            text: "menu.backupRestore"
        }, {
            key: "administration",
            text: "menu.administration"
        }, {
            key: "sysLog",
            text: "menu.systemLog"
        }, {
            key: "diagnostics",
            text: "menu.diagnostics"
        }, {
            key: "timeSettings",
            text: "menu.timeSettings"
        }, {
            key: "reboot",
            text: "menu.reboot"
        }, {
            key: "led",
            text: "menu.led"
        }, {
            key: "ecoMode",
            text: "menu.ecoMode"
        }, {
            key: "operationMode",
            text: "menu.operationMode"
        }, {
            key: "thirdFing",
            text: "menu.thirdFing"
        }, {
            key: "usageStats",
            text: "menu.about"
        }]
    }]
}]
  , config$3 = [{
    key: "networkMap",
    text: "menu.networkMap"
}, {
    key: "internetAP",
    icon: "internet",
    text: "menu.internet",
    default: "lanAPAdv",
    children: [{
        key: "lanAPAdv",
        text: "menu.lan"
    }, {
        key: "dhcpServerAdv",
        text: "menu.dhcpServer"
    }]
}, {
    key: "wirelessAdvUl",
    icon: "wireless",
    text: "menu.wireless",
    default: "wirelessSettingsAdv",
    children: [{
        key: "wirelessSettingsAdv",
        text: "menu.wirelessSettings"
    }, {
        key: "guestNetworkAdv",
        text: "menu.guestNetwork"
    }, {
        key: "iotNetworkAdv",
        text: "menu.iotNetwork"
    }, {
        key: "wirelessSchedule",
        text: "menu.wirelessSchedule"
    }, {
        key: "wps",
        text: "menu.wps"
    }, {
        key: "additionalSettings",
        text: "menu.additionalSettings"
    }]
}, {
    key: "advanced",
    text: "menu.advanced",
    default: "storageSharing",
    children: [{
        key: "quickSetup",
        text: "menu.quickSetup",
        unsearchable: !0
    }, {
        key: "usb",
        text: "menu.usbSettings",
        children: [{
            key: "storageSharing",
            text: "menu.usbStorageDevice"
        }, {
            key: "timeMachine",
            text: "menu.timeMachine"
        }]
    }, {
        key: "easyMesh",
        text: "menu.easyMesh"
    }, {
        key: "tpLinkCloud",
        text: "menu.tpLinkId"
    }, {
        key: "securityAdvUl",
        text: "menu.security",
        children: [{
            key: "accessControl",
            text: "menu.accessControl"
        }]
    }, {
        key: "system",
        text: "menu.system",
        children: [{
            key: "firmware",
            text: "menu.firmware"
        }, {
            key: "backupRestore",
            text: "menu.backupRestore"
        }, {
            key: "administration",
            text: "menu.administration"
        }, {
            key: "sysLog",
            text: "menu.systemLog"
        }, {
            key: "diagnostics",
            text: "menu.diagnostics"
        }, {
            key: "timeSettings",
            text: "menu.timeSettings"
        }, {
            key: "reboot",
            text: "menu.reboot"
        }, {
            key: "led",
            text: "menu.led"
        }, {
            key: "ecoMode",
            text: "menu.ecoMode"
        }, {
            key: "operationMode",
            text: "menu.operationMode"
        }, {
            key: "usageStats",
            text: "menu.about"
        }]
    }]
}]
  , config$2 = [{
    key: "networkMap",
    text: "menu.networkMap"
}, {
    key: "internetBasic",
    icon: "internet",
    text: "menu.internet"
}, {
    key: "wirelessBasic",
    icon: "wireless",
    text: "menu.wireless"
}, {
    key: "homeShield",
    text: "menu.homeshield",
    default: "networkCheck",
    children: [{
        key: "networkCheck",
        text: "menu.networkCheck"
    }, {
        key: "parentalControls",
        text: "menu.parentalControls"
    }, {
        key: "qos",
        text: "menu.qos"
    }, {
        key: "moreFeatures",
        text: "menu.moreFeatures"
    }]
}, {
    key: "advanced",
    text: "menu.advanced",
    default: "networkStatus",
    children: [{
        key: "quickSetup",
        text: "menu.quickSetup",
        unsearchable: !0
    }, {
        key: "networkAdvUl",
        text: "menu.network",
        children: [{
            key: "networkStatus",
            text: "menu.status"
        }, {
            key: "internetAdv",
            text: "menu.internet"
        }, {
            key: "lanAdv",
            text: "menu.lan"
        }, {
            key: "iptvAdv",
            text: "menu.iptv"
        }, {
            key: "dhcpServerAdv",
            text: "menu.dhcpServer"
        }, {
            key: "ddnsAdv",
            text: "menu.dynamicDns"
        }, {
            key: "routingAdv",
            text: "menu.routing"
        }]
    }, {
        key: "tpLinkCloud",
        text: "menu.tpLinkId"
    }, {
        key: "wirelessAdvUl",
        text: "menu.wireless",
        children: [{
            key: "wirelessSettingsAdv",
            text: "menu.wirelessSettings"
        }, {
            key: "guestNetworkAdv",
            text: "menu.guestNetwork"
        }, {
            key: "iotNetworkAdv",
            text: "menu.iotNetwork"
        }, {
            key: "wirelessSchedule",
            text: "menu.wirelessSchedule"
        }, {
            key: "wps",
            text: "menu.wps"
        }, {
            key: "additionalSettings",
            text: "menu.additionalSettings"
        }]
    }, {
        key: "usb",
        text: "menu.usbSettings",
        children: [{
            key: "storageSharing",
            text: "menu.storageSharing"
        }, {
            key: "timeMachine",
            text: "menu.timeMachine"
        }]
    }, {
        key: "nat",
        text: "menu.natForwarding",
        children: [{
            key: "portForwarding",
            text: "menu.portForwarding"
        }, {
            key: "portTriggering",
            text: "menu.portTriggering"
        }, {
            key: "upnp",
            text: "menu.upnp"
        }, {
            key: "dmz",
            text: "menu.dmz"
        }]
    }, {
        key: "homeShieldAdv",
        text: "menu.homeshield",
        children: [{
            key: "networkCheckAdv",
            text: "menu.networkCheck"
        }, {
            key: "parentalControlsAdv",
            text: "menu.parentalControls"
        }, {
            key: "qosAdv",
            text: "menu.qos"
        }, {
            key: "moreFeaturesAdv",
            text: "menu.moreFeatures"
        }]
    }, {
        key: "securityAdvUl",
        text: "menu.security",
        children: [{
            key: "firewall",
            text: "menu.firewall"
        }, {
            key: "accessControl",
            text: "menu.accessControl"
        }, {
            key: "ipMacBinding",
            text: "menu.ipMacBinding"
        }, {
            key: "alg",
            text: "menu.alg"
        }, {
            key: "iotSecurity",
            text: "menu.iotSecurity"
        }]
    }, {
        key: "vpnClient",
        text: "menu.vpnClient"
    }, {
        key: "vpnServer",
        text: "menu.vpnServer",
        children: [{
            key: "openVpn",
            text: "menu.openVpn"
        }, {
            key: "pptp",
            text: "menu.vpnPptp"
        }, {
            key: "l2tpIpsec",
            text: "menu.vpnL2Tp"
        }, {
            key: "wireguardVpn",
            text: "menu.wireGuard"
        }, {
            key: "connections",
            text: "menu.vpnConnections"
        }]
    }, {
        key: "ipv6",
        text: "menu.ipv6"
    }, {
        key: "smartLiftAssistant",
        text: "menu.smartLifeAssistant",
        children: [{
            key: "alexa",
            text: "menu.alexa"
        }, {
            key: "googleAssistant",
            text: "menu.googleAssistant"
        }]
    }, {
        key: "easyMesh",
        text: "menu.easyMesh"
    }, {
        key: "system",
        text: "menu.system",
        children: [{
            key: "firmware",
            text: "menu.firmware"
        }, {
            key: "backupRestore",
            text: "menu.backupRestore"
        }, {
            key: "administration",
            text: "menu.administration"
        }, {
            key: "sysLog",
            text: "menu.systemLog"
        }, {
            key: "diagnostics",
            text: "menu.diagnostics"
        }, {
            key: "timeSettings",
            text: "menu.timeSettings"
        }, {
            key: "reboot",
            text: "menu.reboot"
        }, {
            key: "led",
            text: "menu.led"
        }, {
            key: "ecoMode",
            text: "menu.ecoMode"
        }, {
            key: "operationMode",
            text: "menu.operationMode"
        }, {
            key: "thirdFing",
            text: "menu.thirdFing"
        }, {
            key: "usageStats",
            text: "menu.about"
        }]
    }]
}]
  , config$1 = [{
    key: "networkMap",
    text: "menu.networkMap"
}, {
    key: "system",
    text: "menu.system",
    default: "firmware",
    children: [{
        key: "firmware",
        text: "menu.firmware"
    }, {
        key: "sysLog",
        text: "menu.systemLog"
    }, {
        key: "led",
        text: "menu.led"
    }, {
        key: "backupRestore",
        text: "menu.backupRestore"
    }, {
        key: "administration",
        text: "menu.administration"
    }, {
        key: "usb",
        text: "menu.usbSettings",
        children: [{
            key: "storageSharing",
            text: "menu.usbStorageDevice"
        }, {
            key: "timeMachine",
            text: "menu.timeMachine"
        }]
    }]
}]
  , config = {
    isAccessPointDevice: !1,
    isMercusys: !1,
    isGaming: !1
}
  , navConfigs = Object.freeze({
    base: {
        [OperationModeEnum.Router]: config$2,
        [OperationModeEnum.Ap]: config$3,
        [OperationModeEnum.Repeater]: config$1
    },
    ru: {
        [OperationModeEnum.Router]: config$4
    }
})
  , LOCAL_DEVICE_CONFIG = Object.freeze(config)
  , DEFAULT_HIDDEN_FEATURES = {
    [DialFeatureEnum.Internet]: [],
    [DialFeatureEnum.Connections]: [],
    [DialFeatureEnum.VpnClient]: [],
    [DialFeatureEnum.Alg]: []
}
  , DEFAULT_DIAL_CONFIG = {
    modules: [],
    features: DEFAULT_HIDDEN_FEATURES
};
var ViewModeEnum = (e => (e.Advanced = "adv",
e.Login = "login",
e.QuickSetup = "qs",
e.Basic = "basic",
e))(ViewModeEnum || {})
  , EnableEnum = (e => (e.On = "on",
e.Off = "off",
e))(EnableEnum || {})
  , AutoSwitchEnum = (e => (e.Auto = "auto",
e.On = "on",
e.Off = "off",
e))(AutoSwitchEnum || {})
  , DownUpEnum = (e => (e.Down = "down",
e.Up = "up",
e))(DownUpEnum || {})
  , LevelEnum = (e => (e.Low = "low",
e.Middle = "middle",
e.High = "high",
e))(LevelEnum || {})
  , YesOrNoEnum = (e => (e.Yes = "yes",
e.No = "no",
e))(YesOrNoEnum || {})
  , OneZeroEnum = (e => (e.On = "1",
e.Off = "0",
e))(OneZeroEnum || {});
const INTERNET_VIEW_MODE_KEY = Symbol("internetViewModeKey");
var DeviceTagEnum = (e => (e.TAG_WIRED = "wired",
e.TAG_2G = "2.4G",
e.TAG_2G_GUEST = "2.4G_guest",
e.TAG_5G = "5G",
e.TAG_5G_GUEST = "5G_guest",
e.TAG_5G_1 = "5G_1",
e.TAG_5G_1_GUEST = "5G_1_guest",
e.TAG_5G_2 = "5G_2",
e.TAG_5G_2_GUEST = "5G_2_guest",
e.TAG_6G = "6G",
e.TAG_IOT_2G = "iot_2.4G",
e.TAG_IOT_5G = "iot_5G",
e.TAG_IOT_5G_1 = "iot_5G_1",
e.TAG_IOT_5G_2 = "iot_5G_2",
e.TAG_MLO = "mlo",
e.TAG_OFFLINE = "offline",
e))(DeviceTagEnum || {})
  , NetworkModeEnum = (e => (e.MODE_WIRED = "wired",
e.MODE_2G = "2g",
e.MODE_5G = "5g",
e.MODE_5G_1 = "5g1",
e.MODE_5G_2 = "5g2",
e.MODE_6G = "6g",
e.MODE_IOT_2G = "iot_2g",
e.MODE_IOT_5G = "iot_5g",
e.MODE_IOT_5G_1 = "iot_5g1",
e.MODE_IOT_5G_2 = "iot_5g2",
e.MODE_MLO = "mlo",
e.MODE_OFFLINE = "offline",
e))(NetworkModeEnum || {});
function ipToInt(e) {
    const n = /^\s*\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s*$/
      , i = e.split(".");
    return i.length !== 4 || !n.test(e) ? -1 : Number(i[0]) * (1 << 24) + (Number(i[1]) << 16 | Number(i[2]) << 8 | Number(i[3]))
}
function isSameNet(e, n, i) {
    if (e === "")
        return !1;
    const o = ipToInt(e)
      , l = ipToInt(n)
      , a = ipToInt(i);
    return !(a === 0 || (o & a) !== (l & a))
}
function trimAndUpperCase(e) {
    return trim(e.toUpperCase())
}
function isNetIp(e, n) {
    if (!e)
        return !1;
    const i = ipToInt(e)
      , o = ipToInt(n);
    return !(i & ~o)
}
function isNetIpLegal(e, n) {
    if (!e)
        return !1;
    const i = ipToInt(e)
      , o = ipToInt(n)
      , l = i & o;
    return !(l === 0 || l === o)
}
function isBroadCastIp(e, n) {
    if (!e)
        return !1;
    const i = ipToInt(e)
      , o = ipToInt(n);
    return (i & ~o) === ~o
}
function isCidrConflict(e, n) {
    if (e === n)
        return !0;
    const i = Number.parseInt(e.split("/")[1])
      , o = Number.parseInt(n.split("/")[1])
      , l = Math.min(i, o)
      , a = "1".repeat(l) + "0".repeat(32 - l)
      , c = Number.parseInt(a, 2) >>> 0
      , u = ipToInt(e.split("/")[0])
      , h = ipToInt(n.split("/")[0]);
    return (u & c) === (h & c)
}
function convertToBoolEnable(e) {
    return e === EnableEnum.On
}
function convertToStringEnable(e) {
    return e ? EnableEnum.On : EnableEnum.Off
}
function convertSecondsToHalfDayTime(e) {
    const n = new Date(Number(e) * 1e3)
      , i = n.getHours() > 12 ? n.getHours() - 12 : n.getHours()
      , o = n.getMinutes() < 10 ? `0${n.getMinutes()}` : n.getMinutes()
      , l = n.getHours() > 12 ? "PM" : "AM";
    return `${i}:${o} ${l}`
}
function convertMinutesToHalfDayTime(e) {
    let n = 0
      , i = 0;
    n = Number.parseInt((Number(e) / 60).toString(), 10),
    i = Number.parseInt((Number(e) % 60).toString(), 10);
    const o = n > 12 ? "PM" : "AM";
    return n = n > 12 ? n - 12 : n,
    `${n < 10 ? `0${n}` : n}:${i < 10 ? `0${i}` : i} ${o}`
}
function convertUnit(e, n, i=1024) {
    const o = {
        value: 0,
        unit: ""
    }
      , l = n.length;
    if (l === 0)
        return o;
    let a = typeof e == "number" ? e : Number.parseInt(e);
    for (let c = 0; c < l; c++) {
        if (a >= i) {
            a = a / i;
            continue
        }
        o.value = a,
        o.unit = n[c];
        break
    }
    return o
}
function convertSecondsToTimeFormat(e) {
    let n = "";
    const i = Math.floor(e / 60);
    i >= 1 ? n += i >= 60 ? convertSecondsToTimeFormat(i) : padStart(i.toString(), 2, "0") : n += "00",
    n += ":";
    const o = e % 60;
    return n += padStart(o.toString(), 2, "0"),
    n
}
function convertDeviceTagToNetworkMode(e) {
    const {deviceConfig: n} = useDeviceStore()
      , i = n.isTriBand;
    let o;
    switch (e) {
    case DeviceTagEnum.TAG_2G:
    case DeviceTagEnum.TAG_2G_GUEST:
        o = NetworkModeEnum.MODE_2G;
        break;
    case DeviceTagEnum.TAG_5G:
    case DeviceTagEnum.TAG_5G_GUEST:
        i ? o = NetworkModeEnum.MODE_5G_1 : o = NetworkModeEnum.MODE_5G;
        break;
    case DeviceTagEnum.TAG_5G_1:
    case DeviceTagEnum.TAG_5G_1_GUEST:
        o = NetworkModeEnum.MODE_5G_1;
        break;
    case DeviceTagEnum.TAG_5G_2:
    case DeviceTagEnum.TAG_5G_2_GUEST:
        o = NetworkModeEnum.MODE_5G_2;
        break;
    case DeviceTagEnum.TAG_6G:
        o = NetworkModeEnum.MODE_6G;
        break;
    case DeviceTagEnum.TAG_MLO:
        o = NetworkModeEnum.MODE_MLO;
        break;
    case DeviceTagEnum.TAG_IOT_2G:
        o = NetworkModeEnum.MODE_IOT_2G;
        break;
    case DeviceTagEnum.TAG_IOT_5G:
        i ? o = NetworkModeEnum.MODE_IOT_5G_1 : o = NetworkModeEnum.MODE_IOT_5G;
        break;
    case DeviceTagEnum.TAG_IOT_5G_1:
        o = NetworkModeEnum.MODE_IOT_5G_1;
        break;
    case DeviceTagEnum.TAG_IOT_5G_2:
        o = NetworkModeEnum.MODE_IOT_5G_2;
        break;
    case DeviceTagEnum.TAG_WIRED:
        o = NetworkModeEnum.MODE_WIRED;
        break;
    default:
        o = NetworkModeEnum.MODE_OFFLINE
    }
    return o
}
function convertToLowerCamelCase(e, n) {
    const i = {};
    return Object.keys(e).forEach(o => {
        const l = o.replace(/_(\w)/g, c => c.replace(/_/g, "").toUpperCase());
        let a = e[o];
        a.constructor === Object && (a = convertToLowerCamelCase(a, n)),
        n != null && n.includes(o) ? i[l] = convertToBoolEnable(a) : i[l] = a
    }
    ),
    i
}
function convertToUnderScoreCase(e, n) {
    const i = {};
    return Object.keys(e).forEach(o => {
        const l = o.replace(/[A-Z\d]/g, c => `_${c.toLowerCase()}`);
        let a = e[o];
        a != null && (a.constructor === Object && (a = convertToUnderScoreCase(a, n)),
        n != null && n.includes(l) ? i[l] = convertToStringEnable(a) : i[l] = a)
    }
    ),
    i
}
function createKeywordReg(...e) {
    const n = /[*.?+$^[\](){}\\/]/g;
    let i = Array.prototype.join.call(e, "|");
    return i = i.replace(n, l => `\\${l}`),
    i = i.replace(/\s/g, () => "\\s"),
    new RegExp(i,"gi")
}
const PB = "PB"
  , TB = "TB"
  , GB = "GB"
  , MB = "MB"
  , KB = "KB"
  , B = "B";
function convertCapacityToBytes(e) {
    const n = e.replace("&nbsp;", "").replace(" ", "")
      , i = createKeywordReg(PB, TB, GB, MB, KB, B)
      , o = n.match(i);
    if (!o || !o.length)
        throw new Error("Capacity Format Invalid");
    const l = o[0]
      , a = Number(n.split(i)[0]);
    switch (l) {
    case PB:
        return a * 1e3 * 1e3 * 1e3 * 1e3 * 1e3;
    case TB:
        return a * 1e3 * 1e3 * 1e3 * 1e3;
    case GB:
        return a * 1e3 * 1e3 * 1e3;
    case MB:
        return a * 1e3 * 1e3;
    case KB:
        return a * 1e3;
    default:
        return a
    }
}
function convertBytesToCapacity(e, n) {
    return e >= 1e3 * 1e3 * 1e3 * 1e3 * 1e3 ? `${(e / (1e3 * 1e3 * 1e3 * 1e3 * 1e3)).toFixed(n)} PB` : e >= 1e3 * 1e3 * 1e3 * 1e3 ? `${(e / (1e3 * 1e3 * 1e3 * 1e3)).toFixed(n)} TB` : e >= 1e3 * 1e3 * 1e3 ? `${(e / (1e3 * 1e3 * 1e3)).toFixed(n)} GB` : e >= 1e3 * 1e3 ? `${(e / (1e3 * 1e3)).toFixed(n)} MB` : e >= 1e3 ? `${(e / 1e3).toFixed(n)} KB` : e === 0 ? `${e} B` : `${e.toFixed(n)} B`
}
function convertBytesToCapacityAccurate(e, n=1) {
    const i = ["B", "KB", "MB", "GB", "TB", "PB"]
      , {value: o, unit: l} = convertUnit(e, i);
    return `${o ? l === "B" ? o : o.toFixed(n) : 0} ${l}`
}
function assertArray(e) {
    return Array.isArray(e) ? e : []
}
function convertStringOrNumberPropsToNumber(e) {
    return typeof e == "number" ? e : typeof e == "string" ? Number.isNaN(Number.parseInt(e)) ? void 0 : Number.parseInt(e) : e
}
function convertSecondsToHourTime(e) {
    if (Number.isNaN(e) || e < 0 || e >= 36e4)
        return "";
    const o = [0, 0, 0];
    return o[0] = Math.floor(e / 60 / 60),
    o[1] = Math.floor((e - o[0] * 60 * 60) / 60),
    o[2] = Math.floor((e - o[0] * 60 * 60 - o[1] * 60) % 60),
    o.map(l => l < 10 ? `0${l}` : `${l}`).join(":")
}
function convertImageToBase64(e) {
    return new Promise( (n, i) => {
        const o = new Image;
        o.crossOrigin = "Anonymous",
        o.src = e,
        o.onload = () => {
            const l = document.createElement("canvas")
              , a = l.getContext("2d");
            l.width = o.width,
            l.height = o.height,
            a == null || a.drawImage(o, 0, 0, o.width, o.height);
            const c = o.src.substring(o.src.lastIndexOf(".") + 1).toLowerCase();
            n(l.toDataURL(`image/${c}`))
        }
        ,
        o.onerror = i
    }
    )
}
class LocalDeviceConfig {
    constructor() {
        ye(this, "isAccessPointDevice", !1);
        ye(this, "isGaming", !1);
        ye(this, "isMercusys", !1)
    }
}
var StatusTypeEnum = (e => (e.Success = "success",
e.Failed = "error",
e))(StatusTypeEnum || {})
  , ConnectTypeEnum = (e => (e.Dynamic = "dhcp",
e.Static = "static",
e.BigPondCable = "bigpond",
e.PPPOE = "pppoe",
e.L2TP = "l2tp",
e.PPTP = "pptp",
e.DSLite = "dslite",
e.V6Plus = "v6plus",
e.OCN = "ocn",
e.Default = "",
e))(ConnectTypeEnum || {})
  , ShareFlagEnum = (e => (e[e.Zero = 0] = "Zero",
e[e.One = 1] = "One",
e[e.Two = 2] = "Two",
e[e.Three = 3] = "Three",
e))(ShareFlagEnum || {})
  , ConnectStatusEnum = (e => (e.Connected = "connected",
e.Unplugged = "unplugged",
e.Disconnected = "disconnected",
e.PoorConnected = "poor_connected",
e.Connecting = "connecting",
e.Disconnecting = "disconnecting",
e))(ConnectStatusEnum || {})
  , LinkStatusEnum = (e => (e.Connected = "connected",
e.Unplugged = "unplugged",
e.Disconnected = "disconnected",
e.PoorConnected = "poor_connected",
e.Connecting = "connecting",
e.Disconnecting = "disconnecting",
e))(LinkStatusEnum || {})
  , SndConnEnum = (e => (e.None = "none",
e.Dynamic = "dynamic",
e.Static = "static",
e))(SndConnEnum || {})
  , ConnectModeEnum = (e => (e.Auto = "auto",
e.Demand = "demand",
e.Manual = "manually",
e.TimeBased = "time_based",
e))(ConnectModeEnum || {})
  , IpTypeEnum = (e => (e.Dynamic = "dynamic",
e.Static = "static",
e))(IpTypeEnum || {})
  , MacCloneTypeEnum = (e => (e.Default = "default",
e.Custom = "custom",
e.Computer = "computer",
e))(MacCloneTypeEnum || {})
  , IspMacCloneTypeEnum = (e => (e.None = "",
e.Default = "NO",
e.Computer = "YES",
e))(IspMacCloneTypeEnum || {})
  , DynamicModeEnum = (e => (e.Manual = "0",
e.Auto = "1",
e))(DynamicModeEnum || {})
  , IptvModeEnum = (e => (e.ExStream = "ExStream",
e.Unifi = "Unifi",
e.Maxis = "Maxis",
e.Maxis2 = "Maxis2",
e.Celcom = "Celcom",
e.Celcom2 = "Celcom2",
e.Celcom3 = "Celcom3",
e.Celcom4 = "Celcom4",
e.Celcom5 = "Celcom5",
e.TM = "TM",
e.TIME = "TIME",
e.DIGI = "DIGI",
e.CTS = "CTS",
e.ALLO = "ALLO",
e.SACOFA = "SACOFA",
e.Vietnam = "Vietnam",
e.MEO = "MEO",
e.VDF = "VDF",
e.NBN = "nbn",
e.UFB = "ufb",
e.TELEKOM1 = "TELEKOM1",
e.TELEKOM2 = "TELEKOM2",
e.AIS = "AIS",
e.CENTURYLINK = "CENTURYLINK",
e.Bridge = "Bridge",
e.BridgeKT = "Bridge_KT",
e.BridgeSKT = "Bridge_SKT",
e.BridgeLG = "Bridge_LG",
e.Custom = "Custom",
e.None = "none",
e))(IptvModeEnum || {})
  , IptvPortTypeEnum = (e => (e.Internet = "Internet",
e.IPTV = "IPTV",
e.IPPhone = "IP-Phone",
e.VoIP = "VoIP",
e.Bridge = "Bridge",
e))(IptvPortTypeEnum || {})
  , LanPriorityEnum = (e => (e.LanPriority0 = "0",
e.LanPriority1 = "1",
e.LanPriority2 = "2",
e.LanPriority3 = "3",
e.LanPriority4 = "4",
e.LanPriority5 = "5",
e.LanPriority6 = "6",
e.LanPriority7 = "7",
e))(LanPriorityEnum || {})
  , IgmpVersionEnum = (e => (e.Version2 = "2",
e.Version3 = "3",
e))(IgmpVersionEnum || {})
  , ServiceProviderEnum = (e => (e.TPLink = "tp-link",
e.Noip = "noip",
e.Dyndns = "dyndns",
e))(ServiceProviderEnum || {})
  , WanBindEnum = (e => (e.Enable = "enable",
e.Disable = "disable",
e))(WanBindEnum || {})
  , DdnsStatusCodeEnum = (e => (e[e.Connected = 0] = "Connected",
e[e.NoLaunch = 1] = "NoLaunch",
e[e.Connecting = 2] = "Connecting",
e[e.IncorrectPwd = 3] = "IncorrectPwd",
e[e.IncorrectDomain = 4] = "IncorrectDomain",
e))(DdnsStatusCodeEnum || {})
  , TpLinkDomainStatusEnum = (e => (e.Free = "free",
e.Occupied = "occupied",
e))(TpLinkDomainStatusEnum || {});
class RemoteDeviceConfig {
    constructor() {
        ye(this, "isTriBand", !1);
        ye(this, "supportWifi7", !1);
        ye(this, "supportWifi6E", !1);
        ye(this, "supportOperationMode", []);
        ye(this, "supportPorts", []);
        ye(this, "supportMesh", !1);
        ye(this, "supportBoostWifiSignal", !1);
        ye(this, "supportZeroWaitDFS", !1);
        ye(this, "supportShortGI", !1);
        ye(this, "certification", []);
        ye(this, "supportNDProxy", !1);
        ye(this, "supportSpeedTest", !1);
        ye(this, "supportMulticastForwarding", !1);
        ye(this, "supportUXPlan", !1);
        ye(this, "cloudTetherFunc", []);
        ye(this, "supportUSB3G4GModem", !1);
        ye(this, "supportPreIsp", !1);
        ye(this, "supportUdpProxy", !1);
        ye(this, "supportSpeedLimit", !1);
        ye(this, "supportIpv6Firewall", !1);
        ye(this, "supportSystemTimeAllTimeZone", !1);
        ye(this, "supportIoTNetwork", !1);
        ye(this, "supportAlgType", []);
        ye(this, "supportVpnServerType", []);
        ye(this, "supportVpnClientType", []);
        ye(this, "supportDwds", !1);
        ye(this, "supportWdsDualmode", !1);
        ye(this, "supportWirelessWmm", !1);
        ye(this, "supportFlowControl", !1);
        ye(this, "supportAutoInternetPort", !1);
        ye(this, "supportSuperAdmin", !1);
        ye(this, "supportAntiTheft", !1);
        ye(this, "supportPatrolMark", !1);
        ye(this, "hiddenFunction", cloneDeep(DEFAULT_DIAL_CONFIG));
        ye(this, "dialHiddenFunction", {
            [ConnectTypeEnum.BigPondCable]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.DSLite]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.Dynamic]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.L2TP]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.OCN]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.PPPOE]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.PPTP]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.Static]: cloneDeep(DEFAULT_DIAL_CONFIG),
            [ConnectTypeEnum.V6Plus]: cloneDeep(DEFAULT_DIAL_CONFIG)
        });
        ye(this, "portal", {
            portal: !1,
            image: !1
        });
        ye(this, "mainNetwork", {
            twt: !1,
            ffs: !1,
            ofdma: !1,
            mumimo: [],
            ofdmaMumimo: !1,
            mru: !1,
            supportOverlapWithDFS: !1
        });
        ye(this, "mloNetwork", {
            mlo: !1,
            reboot: !1
        });
        ye(this, "guestNetwork", {
            effectTime: !1,
            bandwidthControl: !1
        });
        ye(this, "firmware", {
            autoUpdate: !1,
            infoReplace: !1,
            updateQuery: !1
        });
        ye(this, "quickSetup", {
            support160MEnable: !1,
            supportDualNatDetect: !1,
            supportWanCableDetect: !1
        });
        ye(this, "qos", {
            supportAutoSpeedTest: !1,
            supportDevicePriority: !1,
            supportGFN: !1,
            supportSchedule: !1
        });
        ye(this, "linkAggregation", {
            supportLanAgg: !1,
            supportLanIptv: !1,
            supportMode: !1,
            supportPort: !1
        });
        ye(this, "cwmp", {
            supportDataModel: !1,
            supportStun: !1
        })
    }
}
function assertToDefault(e, n) {
    if (e == null || Array.isArray(n) && !Array.isArray(e) || typeof e != typeof n)
        return n;
    if (isPlainObject(e) && isObjectLike(n)) {
        const i = e
          , o = n;
        return Object.keys(o).forEach(l => o[l] = assertToDefault(i[l], o[l])),
        o
    }
    return e
}
class PortFactory {
    static toVM(n) {
        return n.map(i => ({
            key: i.key,
            name: decodeURIComponent(escape(window.atob(i.name)))
        }))
    }
    static toOptions(n) {
        return n.map(i => ({
            value: i.key,
            label: i.name
        }))
    }
}
class DeviceConfigFactory {
    static toVM(n) {
        const i = new RemoteDeviceConfig
          , {supportPorts: o, ...l} = assertToDefault(n, i);
        return {
            supportPorts: PortFactory.toVM(assertArray(o)),
            ...l
        }
    }
}
const DEVICE_CONFIG_URL = "/device_config?form=config";
class DeviceConfigRepo {
    static async getConfig() {
        const n = await serviceAdapter.read(DEVICE_CONFIG_URL);
        return DeviceConfigFactory.toVM(n)
    }
}
const defaultDeviceSetting = {
    force: !1,
    productModel: "",
    region: "US",
    rebootTime: 0
}
  , useDeviceStore = defineStore("device", () => {
    const e = reactive(cloneDeep(defaultDeviceSetting))
      , n = ref$1([])
      , i = ref$1(DEFAULT_LANG)
      , o = ref$1({
        ...new LocalDeviceConfig,
        ...new RemoteDeviceConfig
    })
      , l = async () => {
        if (e.productModel === "") {
            const [m,d] = await Promise.all([getLanguage(), getRegion()]);
            i.value = m.locale,
            e.force = m.force,
            e.productModel = m.model,
            e.rebootTime = m.rebootTime,
            e.region = (d.country || defaultDeviceSetting.region).toUpperCase(),
            window.document.title = m.model,
            await loadLanguageAsync(m.locale)
        }
    }
      , a = async () => {
        if (n.value.length === 0) {
            const m = await getLanguageList();
            n.value = m.map(d => ({
                label: LANGUAGE_NAMES[d.name] || "",
                value: d.value
            }))
        }
    }
      , c = async () => {
        const m = await DeviceConfigRepo.getConfig();
        o.value = assign(m, LOCAL_DEVICE_CONFIG)
    }
    ;
    return {
        availableLanguages: n,
        currentLang: i,
        setting: e,
        deviceConfig: o,
        initBasicInfo: async () => {
            await Promise.all([l(), c(), a()])
        }
        ,
        changeLanguage: async (m, d) => {
            await setLanguage(m, d),
            i.value = m,
            loadLanguageAsync(m)
        }
    }
}
);
var FeatureEnum = (e => (e.PASSWORD_STRENGTH = "1_login_password_strength",
e.SHA256 = "2_login_SHA256",
e.LOGIN_FAILED = "3_login_failed",
e.MULTIPLE_LOGIN = "4_multiple_login",
e.GDPR = "5_gdpr",
e.HTTPS = "6_hide_HTTPS",
e.REPLACE_HASH = "12_replace_hash",
e.RSA_PKCS1_OAEP = "13_rsa_pad_with_pkcs1_oaep",
e))(FeatureEnum || {});
class CertificationService {
    static isSupport(n) {
        const {deviceConfig: i} = useDeviceStore();
        return i.certification.find(o => this.FEATURE_MAP.get(n).includes(o))
    }
}
ye(CertificationService, "FEATURE_MAP", new Map([["1_login_password_strength", [CertificationEnum.RG]], ["2_login_SHA256", [CertificationEnum.RG, CertificationEnum.SG_L1_S2, CertificationEnum.CE_RED]], ["3_login_failed", [CertificationEnum.RG, CertificationEnum.SG_L1_S2, CertificationEnum.CE_RED]], ["4_multiple_login", [CertificationEnum.SG_L1_S2, CertificationEnum.CE_RED]], ["5_gdpr", [CertificationEnum.SG_L1_S2, CertificationEnum.CE_RED]], ["6_hide_HTTPS", [CertificationEnum.RG]], ["12_replace_hash", [CertificationEnum.SG_L1_S2]], ["13_rsa_pad_with_pkcs1_oaep", [CertificationEnum.SG_L1_S2]]]));
const KEY_LEN = 128 / 8
  , IV_LEN = 16
  , ENCRYPT_OPTIONS = {
    mode: CryptoJS.mode.CBC,
    padding: CryptoJS.pad.Pkcs7
};
function getRandomValues() {
    if (window.crypto) {
        const e = new Uint32Array(1);
        return window.crypto.getRandomValues(e),
        e[0] / 4294967296
    } else
        return Math.random()
}
function getRandomIntInclusive(e, n) {
    const i = Math.ceil(e)
      , o = Math.floor(n)
      , l = getRandomValues();
    return Math.floor(l * (o - i + 1)) + i
}
function generateRandomIntString(e) {
    let n = "";
    for (; e; )
        n += getRandomIntInclusive(0, 9),
        e -= 1;
    return n
}
class AES {
    constructor() {
        ye(this, "key");
        ye(this, "iv");
        ye(this, "keyUtf8");
        ye(this, "ivUtf8")
    }
    generateKey() {
        const n = generateRandomIntString(KEY_LEN)
          , i = generateRandomIntString(IV_LEN);
        return this.key = n,
        this.iv = i,
        this.keyUtf8 = CryptoJS.enc.Utf8.parse(n),
        this.ivUtf8 = CryptoJS.enc.Utf8.parse(i),
        {
            key: n,
            iv: i
        }
    }
    setKey(n, i) {
        n.length === KEY_LEN && (this.key = n,
        this.keyUtf8 = CryptoJS.enc.Utf8.parse(n)),
        i.length === IV_LEN && (this.iv = i,
        this.ivUtf8 = CryptoJS.enc.Utf8.parse(i))
    }
    getKey() {
        return {
            key: this.key,
            iv: this.iv
        }
    }
    setFormattedKey(n) {
        const [i,o] = n.split("&").map(l => l.split("=")[1]);
        this.setKey(i, o)
    }
    getFormattedKey() {
        return `k=${this.key}&i=${this.iv}`
    }
    encrypt(n) {
        if (!this.keyUtf8)
            return "";
        const i = {
            ...ENCRYPT_OPTIONS,
            iv: this.ivUtf8
        };
        return CryptoJS.AES.encrypt(n, this.keyUtf8, i).toString()
    }
    decrypt(n) {
        if (!this.keyUtf8)
            return "";
        const i = {
            ...ENCRYPT_OPTIONS,
            iv: this.ivUtf8
        };
        return CryptoJS.AES.decrypt(n, this.keyUtf8, i).toString(CryptoJS.enc.Utf8)
    }
}
var BI_RM$1 = "0123456789abcdefghijklmnopqrstuvwxyz";
function int2char$1(e) {
    return BI_RM$1.charAt(e)
}
function op_and$1(e, n) {
    return e & n
}
function op_or$1(e, n) {
    return e | n
}
function op_xor$1(e, n) {
    return e ^ n
}
function op_andnot$1(e, n) {
    return e & ~n
}
function lbit$1(e) {
    if (e == 0)
        return -1;
    var n = 0;
    return e & 65535 || (e >>= 16,
    n += 16),
    e & 255 || (e >>= 8,
    n += 8),
    e & 15 || (e >>= 4,
    n += 4),
    e & 3 || (e >>= 2,
    n += 2),
    e & 1 || ++n,
    n
}
function cbit$1(e) {
    for (var n = 0; e != 0; )
        e &= e - 1,
        ++n;
    return n
}
var dbits$1, canary = 0xdeadbeefcafe, j_lm = (canary & 16777215) == 15715070, lowprimes$1 = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997], lplim$1 = (1 << 26) / lowprimes$1[lowprimes$1.length - 1], BigInteger$3 = function() {
    function e(n, i, o) {
        n != null && (typeof n == "number" ? this.fromNumber(n, i, o) : i == null && typeof n != "string" ? this.fromString(n, 256) : this.fromString(n, i))
    }
    return e.prototype.toString = function(n) {
        if (this.s < 0)
            return "-" + this.negate().toString(n);
        var i;
        if (n == 16)
            i = 4;
        else if (n == 8)
            i = 3;
        else if (n == 2)
            i = 1;
        else if (n == 32)
            i = 5;
        else if (n == 4)
            i = 2;
        else
            return this.toRadix(n);
        var o = (1 << i) - 1, l, a = !1, c = "", u = this.t, h = this.DB - u * this.DB % i;
        if (u-- > 0)
            for (h < this.DB && (l = this[u] >> h) > 0 && (a = !0,
            c = int2char$1(l)); u >= 0; )
                h < i ? (l = (this[u] & (1 << h) - 1) << i - h,
                l |= this[--u] >> (h += this.DB - i)) : (l = this[u] >> (h -= i) & o,
                h <= 0 && (h += this.DB,
                --u)),
                l > 0 && (a = !0),
                a && (c += int2char$1(l));
        return a ? c : "0"
    }
    ,
    e.prototype.negate = function() {
        var n = nbi$1();
        return e.ZERO.subTo(this, n),
        n
    }
    ,
    e.prototype.abs = function() {
        return this.s < 0 ? this.negate() : this
    }
    ,
    e.prototype.compareTo = function(n) {
        var i = this.s - n.s;
        if (i != 0)
            return i;
        var o = this.t;
        if (i = o - n.t,
        i != 0)
            return this.s < 0 ? -i : i;
        for (; --o >= 0; )
            if ((i = this[o] - n[o]) != 0)
                return i;
        return 0
    }
    ,
    e.prototype.bitLength = function() {
        return this.t <= 0 ? 0 : this.DB * (this.t - 1) + nbits$1(this[this.t - 1] ^ this.s & this.DM)
    }
    ,
    e.prototype.mod = function(n) {
        var i = nbi$1();
        return this.abs().divRemTo(n, null, i),
        this.s < 0 && i.compareTo(e.ZERO) > 0 && n.subTo(i, i),
        i
    }
    ,
    e.prototype.modPowInt = function(n, i) {
        var o;
        return n < 256 || i.isEven() ? o = new Classic$1(i) : o = new Montgomery$1(i),
        this.exp(n, o)
    }
    ,
    e.prototype.clone = function() {
        var n = nbi$1();
        return this.copyTo(n),
        n
    }
    ,
    e.prototype.intValue = function() {
        if (this.s < 0) {
            if (this.t == 1)
                return this[0] - this.DV;
            if (this.t == 0)
                return -1
        } else {
            if (this.t == 1)
                return this[0];
            if (this.t == 0)
                return 0
        }
        return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0]
    }
    ,
    e.prototype.byteValue = function() {
        return this.t == 0 ? this.s : this[0] << 24 >> 24
    }
    ,
    e.prototype.shortValue = function() {
        return this.t == 0 ? this.s : this[0] << 16 >> 16
    }
    ,
    e.prototype.signum = function() {
        return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this[0] <= 0 ? 0 : 1
    }
    ,
    e.prototype.toByteArray = function() {
        var n = this.t
          , i = [];
        i[0] = this.s;
        var o = this.DB - n * this.DB % 8, l, a = 0;
        if (n-- > 0)
            for (o < this.DB && (l = this[n] >> o) != (this.s & this.DM) >> o && (i[a++] = l | this.s << this.DB - o); n >= 0; )
                o < 8 ? (l = (this[n] & (1 << o) - 1) << 8 - o,
                l |= this[--n] >> (o += this.DB - 8)) : (l = this[n] >> (o -= 8) & 255,
                o <= 0 && (o += this.DB,
                --n)),
                l & 128 && (l |= -256),
                a == 0 && (this.s & 128) != (l & 128) && ++a,
                (a > 0 || l != this.s) && (i[a++] = l);
        return i
    }
    ,
    e.prototype.equals = function(n) {
        return this.compareTo(n) == 0
    }
    ,
    e.prototype.min = function(n) {
        return this.compareTo(n) < 0 ? this : n
    }
    ,
    e.prototype.max = function(n) {
        return this.compareTo(n) > 0 ? this : n
    }
    ,
    e.prototype.and = function(n) {
        var i = nbi$1();
        return this.bitwiseTo(n, op_and$1, i),
        i
    }
    ,
    e.prototype.or = function(n) {
        var i = nbi$1();
        return this.bitwiseTo(n, op_or$1, i),
        i
    }
    ,
    e.prototype.xor = function(n) {
        var i = nbi$1();
        return this.bitwiseTo(n, op_xor$1, i),
        i
    }
    ,
    e.prototype.andNot = function(n) {
        var i = nbi$1();
        return this.bitwiseTo(n, op_andnot$1, i),
        i
    }
    ,
    e.prototype.not = function() {
        for (var n = nbi$1(), i = 0; i < this.t; ++i)
            n[i] = this.DM & ~this[i];
        return n.t = this.t,
        n.s = ~this.s,
        n
    }
    ,
    e.prototype.shiftLeft = function(n) {
        var i = nbi$1();
        return n < 0 ? this.rShiftTo(-n, i) : this.lShiftTo(n, i),
        i
    }
    ,
    e.prototype.shiftRight = function(n) {
        var i = nbi$1();
        return n < 0 ? this.lShiftTo(-n, i) : this.rShiftTo(n, i),
        i
    }
    ,
    e.prototype.getLowestSetBit = function() {
        for (var n = 0; n < this.t; ++n)
            if (this[n] != 0)
                return n * this.DB + lbit$1(this[n]);
        return this.s < 0 ? this.t * this.DB : -1
    }
    ,
    e.prototype.bitCount = function() {
        for (var n = 0, i = this.s & this.DM, o = 0; o < this.t; ++o)
            n += cbit$1(this[o] ^ i);
        return n
    }
    ,
    e.prototype.testBit = function(n) {
        var i = Math.floor(n / this.DB);
        return i >= this.t ? this.s != 0 : (this[i] & 1 << n % this.DB) != 0
    }
    ,
    e.prototype.setBit = function(n) {
        return this.changeBit(n, op_or$1)
    }
    ,
    e.prototype.clearBit = function(n) {
        return this.changeBit(n, op_andnot$1)
    }
    ,
    e.prototype.flipBit = function(n) {
        return this.changeBit(n, op_xor$1)
    }
    ,
    e.prototype.add = function(n) {
        var i = nbi$1();
        return this.addTo(n, i),
        i
    }
    ,
    e.prototype.subtract = function(n) {
        var i = nbi$1();
        return this.subTo(n, i),
        i
    }
    ,
    e.prototype.multiply = function(n) {
        var i = nbi$1();
        return this.multiplyTo(n, i),
        i
    }
    ,
    e.prototype.divide = function(n) {
        var i = nbi$1();
        return this.divRemTo(n, i, null),
        i
    }
    ,
    e.prototype.remainder = function(n) {
        var i = nbi$1();
        return this.divRemTo(n, null, i),
        i
    }
    ,
    e.prototype.divideAndRemainder = function(n) {
        var i = nbi$1()
          , o = nbi$1();
        return this.divRemTo(n, i, o),
        [i, o]
    }
    ,
    e.prototype.modPow = function(n, i) {
        var o = n.bitLength(), l, a = nbv$1(1), c;
        if (o <= 0)
            return a;
        o < 18 ? l = 1 : o < 48 ? l = 3 : o < 144 ? l = 4 : o < 768 ? l = 5 : l = 6,
        o < 8 ? c = new Classic$1(i) : i.isEven() ? c = new Barrett$1(i) : c = new Montgomery$1(i);
        var u = []
          , h = 3
          , m = l - 1
          , d = (1 << l) - 1;
        if (u[1] = c.convert(this),
        l > 1) {
            var p = nbi$1();
            for (c.sqrTo(u[1], p); h <= d; )
                u[h] = nbi$1(),
                c.mulTo(p, u[h - 2], u[h]),
                h += 2
        }
        var b = n.t - 1, g, $ = !0, N = nbi$1(), I;
        for (o = nbits$1(n[b]) - 1; b >= 0; ) {
            for (o >= m ? g = n[b] >> o - m & d : (g = (n[b] & (1 << o + 1) - 1) << m - o,
            b > 0 && (g |= n[b - 1] >> this.DB + o - m)),
            h = l; !(g & 1); )
                g >>= 1,
                --h;
            if ((o -= h) < 0 && (o += this.DB,
            --b),
            $)
                u[g].copyTo(a),
                $ = !1;
            else {
                for (; h > 1; )
                    c.sqrTo(a, N),
                    c.sqrTo(N, a),
                    h -= 2;
                h > 0 ? c.sqrTo(a, N) : (I = a,
                a = N,
                N = I),
                c.mulTo(N, u[g], a)
            }
            for (; b >= 0 && !(n[b] & 1 << o); )
                c.sqrTo(a, N),
                I = a,
                a = N,
                N = I,
                --o < 0 && (o = this.DB - 1,
                --b)
        }
        return c.revert(a)
    }
    ,
    e.prototype.modInverse = function(n) {
        var i = n.isEven();
        if (this.isEven() && i || n.signum() == 0)
            return e.ZERO;
        for (var o = n.clone(), l = this.clone(), a = nbv$1(1), c = nbv$1(0), u = nbv$1(0), h = nbv$1(1); o.signum() != 0; ) {
            for (; o.isEven(); )
                o.rShiftTo(1, o),
                i ? ((!a.isEven() || !c.isEven()) && (a.addTo(this, a),
                c.subTo(n, c)),
                a.rShiftTo(1, a)) : c.isEven() || c.subTo(n, c),
                c.rShiftTo(1, c);
            for (; l.isEven(); )
                l.rShiftTo(1, l),
                i ? ((!u.isEven() || !h.isEven()) && (u.addTo(this, u),
                h.subTo(n, h)),
                u.rShiftTo(1, u)) : h.isEven() || h.subTo(n, h),
                h.rShiftTo(1, h);
            o.compareTo(l) >= 0 ? (o.subTo(l, o),
            i && a.subTo(u, a),
            c.subTo(h, c)) : (l.subTo(o, l),
            i && u.subTo(a, u),
            h.subTo(c, h))
        }
        if (l.compareTo(e.ONE) != 0)
            return e.ZERO;
        if (h.compareTo(n) >= 0)
            return h.subtract(n);
        if (h.signum() < 0)
            h.addTo(n, h);
        else
            return h;
        return h.signum() < 0 ? h.add(n) : h
    }
    ,
    e.prototype.pow = function(n) {
        return this.exp(n, new NullExp$1)
    }
    ,
    e.prototype.gcd = function(n) {
        var i = this.s < 0 ? this.negate() : this.clone()
          , o = n.s < 0 ? n.negate() : n.clone();
        if (i.compareTo(o) < 0) {
            var l = i;
            i = o,
            o = l
        }
        var a = i.getLowestSetBit()
          , c = o.getLowestSetBit();
        if (c < 0)
            return i;
        for (a < c && (c = a),
        c > 0 && (i.rShiftTo(c, i),
        o.rShiftTo(c, o)); i.signum() > 0; )
            (a = i.getLowestSetBit()) > 0 && i.rShiftTo(a, i),
            (a = o.getLowestSetBit()) > 0 && o.rShiftTo(a, o),
            i.compareTo(o) >= 0 ? (i.subTo(o, i),
            i.rShiftTo(1, i)) : (o.subTo(i, o),
            o.rShiftTo(1, o));
        return c > 0 && o.lShiftTo(c, o),
        o
    }
    ,
    e.prototype.isProbablePrime = function(n) {
        var i, o = this.abs();
        if (o.t == 1 && o[0] <= lowprimes$1[lowprimes$1.length - 1]) {
            for (i = 0; i < lowprimes$1.length; ++i)
                if (o[0] == lowprimes$1[i])
                    return !0;
            return !1
        }
        if (o.isEven())
            return !1;
        for (i = 1; i < lowprimes$1.length; ) {
            for (var l = lowprimes$1[i], a = i + 1; a < lowprimes$1.length && l < lplim$1; )
                l *= lowprimes$1[a++];
            for (l = o.modInt(l); i < a; )
                if (l % lowprimes$1[i++] == 0)
                    return !1
        }
        return o.millerRabin(n)
    }
    ,
    e.prototype.copyTo = function(n) {
        for (var i = this.t - 1; i >= 0; --i)
            n[i] = this[i];
        n.t = this.t,
        n.s = this.s
    }
    ,
    e.prototype.fromInt = function(n) {
        this.t = 1,
        this.s = n < 0 ? -1 : 0,
        n > 0 ? this[0] = n : n < -1 ? this[0] = n + this.DV : this.t = 0
    }
    ,
    e.prototype.fromString = function(n, i) {
        var o;
        if (i == 16)
            o = 4;
        else if (i == 8)
            o = 3;
        else if (i == 256)
            o = 8;
        else if (i == 2)
            o = 1;
        else if (i == 32)
            o = 5;
        else if (i == 4)
            o = 2;
        else {
            this.fromRadix(n, i);
            return
        }
        this.t = 0,
        this.s = 0;
        for (var l = n.length, a = !1, c = 0; --l >= 0; ) {
            var u = o == 8 ? +n[l] & 255 : intAt$1(n, l);
            if (u < 0) {
                n.charAt(l) == "-" && (a = !0);
                continue
            }
            a = !1,
            c == 0 ? this[this.t++] = u : c + o > this.DB ? (this[this.t - 1] |= (u & (1 << this.DB - c) - 1) << c,
            this[this.t++] = u >> this.DB - c) : this[this.t - 1] |= u << c,
            c += o,
            c >= this.DB && (c -= this.DB)
        }
        o == 8 && +n[0] & 128 && (this.s = -1,
        c > 0 && (this[this.t - 1] |= (1 << this.DB - c) - 1 << c)),
        this.clamp(),
        a && e.ZERO.subTo(this, this)
    }
    ,
    e.prototype.clamp = function() {
        for (var n = this.s & this.DM; this.t > 0 && this[this.t - 1] == n; )
            --this.t
    }
    ,
    e.prototype.dlShiftTo = function(n, i) {
        var o;
        for (o = this.t - 1; o >= 0; --o)
            i[o + n] = this[o];
        for (o = n - 1; o >= 0; --o)
            i[o] = 0;
        i.t = this.t + n,
        i.s = this.s
    }
    ,
    e.prototype.drShiftTo = function(n, i) {
        for (var o = n; o < this.t; ++o)
            i[o - n] = this[o];
        i.t = Math.max(this.t - n, 0),
        i.s = this.s
    }
    ,
    e.prototype.lShiftTo = function(n, i) {
        for (var o = n % this.DB, l = this.DB - o, a = (1 << l) - 1, c = Math.floor(n / this.DB), u = this.s << o & this.DM, h = this.t - 1; h >= 0; --h)
            i[h + c + 1] = this[h] >> l | u,
            u = (this[h] & a) << o;
        for (var h = c - 1; h >= 0; --h)
            i[h] = 0;
        i[c] = u,
        i.t = this.t + c + 1,
        i.s = this.s,
        i.clamp()
    }
    ,
    e.prototype.rShiftTo = function(n, i) {
        i.s = this.s;
        var o = Math.floor(n / this.DB);
        if (o >= this.t) {
            i.t = 0;
            return
        }
        var l = n % this.DB
          , a = this.DB - l
          , c = (1 << l) - 1;
        i[0] = this[o] >> l;
        for (var u = o + 1; u < this.t; ++u)
            i[u - o - 1] |= (this[u] & c) << a,
            i[u - o] = this[u] >> l;
        l > 0 && (i[this.t - o - 1] |= (this.s & c) << a),
        i.t = this.t - o,
        i.clamp()
    }
    ,
    e.prototype.subTo = function(n, i) {
        for (var o = 0, l = 0, a = Math.min(n.t, this.t); o < a; )
            l += this[o] - n[o],
            i[o++] = l & this.DM,
            l >>= this.DB;
        if (n.t < this.t) {
            for (l -= n.s; o < this.t; )
                l += this[o],
                i[o++] = l & this.DM,
                l >>= this.DB;
            l += this.s
        } else {
            for (l += this.s; o < n.t; )
                l -= n[o],
                i[o++] = l & this.DM,
                l >>= this.DB;
            l -= n.s
        }
        i.s = l < 0 ? -1 : 0,
        l < -1 ? i[o++] = this.DV + l : l > 0 && (i[o++] = l),
        i.t = o,
        i.clamp()
    }
    ,
    e.prototype.multiplyTo = function(n, i) {
        var o = this.abs()
          , l = n.abs()
          , a = o.t;
        for (i.t = a + l.t; --a >= 0; )
            i[a] = 0;
        for (a = 0; a < l.t; ++a)
            i[a + o.t] = o.am(0, l[a], i, a, 0, o.t);
        i.s = 0,
        i.clamp(),
        this.s != n.s && e.ZERO.subTo(i, i)
    }
    ,
    e.prototype.squareTo = function(n) {
        for (var i = this.abs(), o = n.t = 2 * i.t; --o >= 0; )
            n[o] = 0;
        for (o = 0; o < i.t - 1; ++o) {
            var l = i.am(o, i[o], n, 2 * o, 0, 1);
            (n[o + i.t] += i.am(o + 1, 2 * i[o], n, 2 * o + 1, l, i.t - o - 1)) >= i.DV && (n[o + i.t] -= i.DV,
            n[o + i.t + 1] = 1)
        }
        n.t > 0 && (n[n.t - 1] += i.am(o, i[o], n, 2 * o, 0, 1)),
        n.s = 0,
        n.clamp()
    }
    ,
    e.prototype.divRemTo = function(n, i, o) {
        var l = n.abs();
        if (!(l.t <= 0)) {
            var a = this.abs();
            if (a.t < l.t) {
                i != null && i.fromInt(0),
                o != null && this.copyTo(o);
                return
            }
            o == null && (o = nbi$1());
            var c = nbi$1()
              , u = this.s
              , h = n.s
              , m = this.DB - nbits$1(l[l.t - 1]);
            m > 0 ? (l.lShiftTo(m, c),
            a.lShiftTo(m, o)) : (l.copyTo(c),
            a.copyTo(o));
            var d = c.t
              , p = c[d - 1];
            if (p != 0) {
                var b = p * (1 << this.F1) + (d > 1 ? c[d - 2] >> this.F2 : 0)
                  , g = this.FV / b
                  , $ = (1 << this.F1) / b
                  , N = 1 << this.F2
                  , I = o.t
                  , L = I - d
                  , T = i ?? nbi$1();
                for (c.dlShiftTo(L, T),
                o.compareTo(T) >= 0 && (o[o.t++] = 1,
                o.subTo(T, o)),
                e.ONE.dlShiftTo(d, T),
                T.subTo(c, c); c.t < d; )
                    c[c.t++] = 0;
                for (; --L >= 0; ) {
                    var M = o[--I] == p ? this.DM : Math.floor(o[I] * g + (o[I - 1] + N) * $);
                    if ((o[I] += c.am(0, M, o, L, 0, d)) < M)
                        for (c.dlShiftTo(L, T),
                        o.subTo(T, o); o[I] < --M; )
                            o.subTo(T, o)
                }
                i != null && (o.drShiftTo(d, i),
                u != h && e.ZERO.subTo(i, i)),
                o.t = d,
                o.clamp(),
                m > 0 && o.rShiftTo(m, o),
                u < 0 && e.ZERO.subTo(o, o)
            }
        }
    }
    ,
    e.prototype.invDigit = function() {
        if (this.t < 1)
            return 0;
        var n = this[0];
        if (!(n & 1))
            return 0;
        var i = n & 3;
        return i = i * (2 - (n & 15) * i) & 15,
        i = i * (2 - (n & 255) * i) & 255,
        i = i * (2 - ((n & 65535) * i & 65535)) & 65535,
        i = i * (2 - n * i % this.DV) % this.DV,
        i > 0 ? this.DV - i : -i
    }
    ,
    e.prototype.isEven = function() {
        return (this.t > 0 ? this[0] & 1 : this.s) == 0
    }
    ,
    e.prototype.exp = function(n, i) {
        if (n > 4294967295 || n < 1)
            return e.ONE;
        var o = nbi$1()
          , l = nbi$1()
          , a = i.convert(this)
          , c = nbits$1(n) - 1;
        for (a.copyTo(o); --c >= 0; )
            if (i.sqrTo(o, l),
            (n & 1 << c) > 0)
                i.mulTo(l, a, o);
            else {
                var u = o;
                o = l,
                l = u
            }
        return i.revert(o)
    }
    ,
    e.prototype.chunkSize = function(n) {
        return Math.floor(Math.LN2 * this.DB / Math.log(n))
    }
    ,
    e.prototype.toRadix = function(n) {
        if (n == null && (n = 10),
        this.signum() == 0 || n < 2 || n > 36)
            return "0";
        var i = this.chunkSize(n)
          , o = Math.pow(n, i)
          , l = nbv$1(o)
          , a = nbi$1()
          , c = nbi$1()
          , u = "";
        for (this.divRemTo(l, a, c); a.signum() > 0; )
            u = (o + c.intValue()).toString(n).substr(1) + u,
            a.divRemTo(l, a, c);
        return c.intValue().toString(n) + u
    }
    ,
    e.prototype.fromRadix = function(n, i) {
        this.fromInt(0),
        i == null && (i = 10);
        for (var o = this.chunkSize(i), l = Math.pow(i, o), a = !1, c = 0, u = 0, h = 0; h < n.length; ++h) {
            var m = intAt$1(n, h);
            if (m < 0) {
                n.charAt(h) == "-" && this.signum() == 0 && (a = !0);
                continue
            }
            u = i * u + m,
            ++c >= o && (this.dMultiply(l),
            this.dAddOffset(u, 0),
            c = 0,
            u = 0)
        }
        c > 0 && (this.dMultiply(Math.pow(i, c)),
        this.dAddOffset(u, 0)),
        a && e.ZERO.subTo(this, this)
    }
    ,
    e.prototype.fromNumber = function(n, i, o) {
        if (typeof i == "number")
            if (n < 2)
                this.fromInt(1);
            else
                for (this.fromNumber(n, o),
                this.testBit(n - 1) || this.bitwiseTo(e.ONE.shiftLeft(n - 1), op_or$1, this),
                this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(i); )
                    this.dAddOffset(2, 0),
                    this.bitLength() > n && this.subTo(e.ONE.shiftLeft(n - 1), this);
        else {
            var l = []
              , a = n & 7;
            l.length = (n >> 3) + 1,
            i.nextBytes(l),
            a > 0 ? l[0] &= (1 << a) - 1 : l[0] = 0,
            this.fromString(l, 256)
        }
    }
    ,
    e.prototype.bitwiseTo = function(n, i, o) {
        var l, a, c = Math.min(n.t, this.t);
        for (l = 0; l < c; ++l)
            o[l] = i(this[l], n[l]);
        if (n.t < this.t) {
            for (a = n.s & this.DM,
            l = c; l < this.t; ++l)
                o[l] = i(this[l], a);
            o.t = this.t
        } else {
            for (a = this.s & this.DM,
            l = c; l < n.t; ++l)
                o[l] = i(a, n[l]);
            o.t = n.t
        }
        o.s = i(this.s, n.s),
        o.clamp()
    }
    ,
    e.prototype.changeBit = function(n, i) {
        var o = e.ONE.shiftLeft(n);
        return this.bitwiseTo(o, i, o),
        o
    }
    ,
    e.prototype.addTo = function(n, i) {
        for (var o = 0, l = 0, a = Math.min(n.t, this.t); o < a; )
            l += this[o] + n[o],
            i[o++] = l & this.DM,
            l >>= this.DB;
        if (n.t < this.t) {
            for (l += n.s; o < this.t; )
                l += this[o],
                i[o++] = l & this.DM,
                l >>= this.DB;
            l += this.s
        } else {
            for (l += this.s; o < n.t; )
                l += n[o],
                i[o++] = l & this.DM,
                l >>= this.DB;
            l += n.s
        }
        i.s = l < 0 ? -1 : 0,
        l > 0 ? i[o++] = l : l < -1 && (i[o++] = this.DV + l),
        i.t = o,
        i.clamp()
    }
    ,
    e.prototype.dMultiply = function(n) {
        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t),
        ++this.t,
        this.clamp()
    }
    ,
    e.prototype.dAddOffset = function(n, i) {
        if (n != 0) {
            for (; this.t <= i; )
                this[this.t++] = 0;
            for (this[i] += n; this[i] >= this.DV; )
                this[i] -= this.DV,
                ++i >= this.t && (this[this.t++] = 0),
                ++this[i]
        }
    }
    ,
    e.prototype.multiplyLowerTo = function(n, i, o) {
        var l = Math.min(this.t + n.t, i);
        for (o.s = 0,
        o.t = l; l > 0; )
            o[--l] = 0;
        for (var a = o.t - this.t; l < a; ++l)
            o[l + this.t] = this.am(0, n[l], o, l, 0, this.t);
        for (var a = Math.min(n.t, i); l < a; ++l)
            this.am(0, n[l], o, l, 0, i - l);
        o.clamp()
    }
    ,
    e.prototype.multiplyUpperTo = function(n, i, o) {
        --i;
        var l = o.t = this.t + n.t - i;
        for (o.s = 0; --l >= 0; )
            o[l] = 0;
        for (l = Math.max(i - this.t, 0); l < n.t; ++l)
            o[this.t + l - i] = this.am(i - l, n[l], o, 0, 0, this.t + l - i);
        o.clamp(),
        o.drShiftTo(1, o)
    }
    ,
    e.prototype.modInt = function(n) {
        if (n <= 0)
            return 0;
        var i = this.DV % n
          , o = this.s < 0 ? n - 1 : 0;
        if (this.t > 0)
            if (i == 0)
                o = this[0] % n;
            else
                for (var l = this.t - 1; l >= 0; --l)
                    o = (i * o + this[l]) % n;
        return o
    }
    ,
    e.prototype.millerRabin = function(n) {
        var i = this.subtract(e.ONE)
          , o = i.getLowestSetBit();
        if (o <= 0)
            return !1;
        var l = i.shiftRight(o);
        n = n + 1 >> 1,
        n > lowprimes$1.length && (n = lowprimes$1.length);
        for (var a = nbi$1(), c = 0; c < n; ++c) {
            a.fromInt(lowprimes$1[Math.floor(Math.random() * lowprimes$1.length)]);
            var u = a.modPow(l, this);
            if (u.compareTo(e.ONE) != 0 && u.compareTo(i) != 0) {
                for (var h = 1; h++ < o && u.compareTo(i) != 0; )
                    if (u = u.modPowInt(2, this),
                    u.compareTo(e.ONE) == 0)
                        return !1;
                if (u.compareTo(i) != 0)
                    return !1
            }
        }
        return !0
    }
    ,
    e.prototype.square = function() {
        var n = nbi$1();
        return this.squareTo(n),
        n
    }
    ,
    e.prototype.gcda = function(n, i) {
        var o = this.s < 0 ? this.negate() : this.clone()
          , l = n.s < 0 ? n.negate() : n.clone();
        if (o.compareTo(l) < 0) {
            var a = o;
            o = l,
            l = a
        }
        var c = o.getLowestSetBit()
          , u = l.getLowestSetBit();
        if (u < 0) {
            i(o);
            return
        }
        c < u && (u = c),
        u > 0 && (o.rShiftTo(u, o),
        l.rShiftTo(u, l));
        var h = function() {
            (c = o.getLowestSetBit()) > 0 && o.rShiftTo(c, o),
            (c = l.getLowestSetBit()) > 0 && l.rShiftTo(c, l),
            o.compareTo(l) >= 0 ? (o.subTo(l, o),
            o.rShiftTo(1, o)) : (l.subTo(o, l),
            l.rShiftTo(1, l)),
            o.signum() > 0 ? setTimeout(h, 0) : (u > 0 && l.lShiftTo(u, l),
            setTimeout(function() {
                i(l)
            }, 0))
        };
        setTimeout(h, 10)
    }
    ,
    e.prototype.fromNumberAsync = function(n, i, o, l) {
        if (typeof i == "number")
            if (n < 2)
                this.fromInt(1);
            else {
                this.fromNumber(n, o),
                this.testBit(n - 1) || this.bitwiseTo(e.ONE.shiftLeft(n - 1), op_or$1, this),
                this.isEven() && this.dAddOffset(1, 0);
                var a = this
                  , c = function() {
                    a.dAddOffset(2, 0),
                    a.bitLength() > n && a.subTo(e.ONE.shiftLeft(n - 1), a),
                    a.isProbablePrime(i) ? setTimeout(function() {
                        l()
                    }, 0) : setTimeout(c, 0)
                };
                setTimeout(c, 0)
            }
        else {
            var u = []
              , h = n & 7;
            u.length = (n >> 3) + 1,
            i.nextBytes(u),
            h > 0 ? u[0] &= (1 << h) - 1 : u[0] = 0,
            this.fromString(u, 256)
        }
    }
    ,
    e
}(), NullExp$1 = function() {
    function e() {}
    return e.prototype.convert = function(n) {
        return n
    }
    ,
    e.prototype.revert = function(n) {
        return n
    }
    ,
    e.prototype.mulTo = function(n, i, o) {
        n.multiplyTo(i, o)
    }
    ,
    e.prototype.sqrTo = function(n, i) {
        n.squareTo(i)
    }
    ,
    e
}(), Classic$1 = function() {
    function e(n) {
        this.m = n
    }
    return e.prototype.convert = function(n) {
        return n.s < 0 || n.compareTo(this.m) >= 0 ? n.mod(this.m) : n
    }
    ,
    e.prototype.revert = function(n) {
        return n
    }
    ,
    e.prototype.reduce = function(n) {
        n.divRemTo(this.m, null, n)
    }
    ,
    e.prototype.mulTo = function(n, i, o) {
        n.multiplyTo(i, o),
        this.reduce(o)
    }
    ,
    e.prototype.sqrTo = function(n, i) {
        n.squareTo(i),
        this.reduce(i)
    }
    ,
    e
}(), Montgomery$1 = function() {
    function e(n) {
        this.m = n,
        this.mp = n.invDigit(),
        this.mpl = this.mp & 32767,
        this.mph = this.mp >> 15,
        this.um = (1 << n.DB - 15) - 1,
        this.mt2 = 2 * n.t
    }
    return e.prototype.convert = function(n) {
        var i = nbi$1();
        return n.abs().dlShiftTo(this.m.t, i),
        i.divRemTo(this.m, null, i),
        n.s < 0 && i.compareTo(BigInteger$3.ZERO) > 0 && this.m.subTo(i, i),
        i
    }
    ,
    e.prototype.revert = function(n) {
        var i = nbi$1();
        return n.copyTo(i),
        this.reduce(i),
        i
    }
    ,
    e.prototype.reduce = function(n) {
        for (; n.t <= this.mt2; )
            n[n.t++] = 0;
        for (var i = 0; i < this.m.t; ++i) {
            var o = n[i] & 32767
              , l = o * this.mpl + ((o * this.mph + (n[i] >> 15) * this.mpl & this.um) << 15) & n.DM;
            for (o = i + this.m.t,
            n[o] += this.m.am(0, l, n, i, 0, this.m.t); n[o] >= n.DV; )
                n[o] -= n.DV,
                n[++o]++
        }
        n.clamp(),
        n.drShiftTo(this.m.t, n),
        n.compareTo(this.m) >= 0 && n.subTo(this.m, n)
    }
    ,
    e.prototype.mulTo = function(n, i, o) {
        n.multiplyTo(i, o),
        this.reduce(o)
    }
    ,
    e.prototype.sqrTo = function(n, i) {
        n.squareTo(i),
        this.reduce(i)
    }
    ,
    e
}(), Barrett$1 = function() {
    function e(n) {
        this.m = n,
        this.r2 = nbi$1(),
        this.q3 = nbi$1(),
        BigInteger$3.ONE.dlShiftTo(2 * n.t, this.r2),
        this.mu = this.r2.divide(n)
    }
    return e.prototype.convert = function(n) {
        if (n.s < 0 || n.t > 2 * this.m.t)
            return n.mod(this.m);
        if (n.compareTo(this.m) < 0)
            return n;
        var i = nbi$1();
        return n.copyTo(i),
        this.reduce(i),
        i
    }
    ,
    e.prototype.revert = function(n) {
        return n
    }
    ,
    e.prototype.reduce = function(n) {
        for (n.drShiftTo(this.m.t - 1, this.r2),
        n.t > this.m.t + 1 && (n.t = this.m.t + 1,
        n.clamp()),
        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); n.compareTo(this.r2) < 0; )
            n.dAddOffset(1, this.m.t + 1);
        for (n.subTo(this.r2, n); n.compareTo(this.m) >= 0; )
            n.subTo(this.m, n)
    }
    ,
    e.prototype.mulTo = function(n, i, o) {
        n.multiplyTo(i, o),
        this.reduce(o)
    }
    ,
    e.prototype.sqrTo = function(n, i) {
        n.squareTo(i),
        this.reduce(i)
    }
    ,
    e
}();
function nbi$1() {
    return new BigInteger$3(null)
}
function parseBigInt(e, n) {
    return new BigInteger$3(e,n)
}
var inBrowser = typeof navigator < "u";
inBrowser && j_lm && navigator.appName == "Microsoft Internet Explorer" ? (BigInteger$3.prototype.am = function(n, i, o, l, a, c) {
    for (var u = i & 32767, h = i >> 15; --c >= 0; ) {
        var m = this[n] & 32767
          , d = this[n++] >> 15
          , p = h * m + d * u;
        m = u * m + ((p & 32767) << 15) + o[l] + (a & 1073741823),
        a = (m >>> 30) + (p >>> 15) + h * d + (a >>> 30),
        o[l++] = m & 1073741823
    }
    return a
}
,
dbits$1 = 30) : inBrowser && j_lm && navigator.appName != "Netscape" ? (BigInteger$3.prototype.am = function(n, i, o, l, a, c) {
    for (; --c >= 0; ) {
        var u = i * this[n++] + o[l] + a;
        a = Math.floor(u / 67108864),
        o[l++] = u & 67108863
    }
    return a
}
,
dbits$1 = 26) : (BigInteger$3.prototype.am = function(n, i, o, l, a, c) {
    for (var u = i & 16383, h = i >> 14; --c >= 0; ) {
        var m = this[n] & 16383
          , d = this[n++] >> 14
          , p = h * m + d * u;
        m = u * m + ((p & 16383) << 14) + o[l] + a,
        a = (m >> 28) + (p >> 14) + h * d,
        o[l++] = m & 268435455
    }
    return a
}
,
dbits$1 = 28);
BigInteger$3.prototype.DB = dbits$1;
BigInteger$3.prototype.DM = (1 << dbits$1) - 1;
BigInteger$3.prototype.DV = 1 << dbits$1;
var BI_FP$1 = 52;
BigInteger$3.prototype.FV = Math.pow(2, BI_FP$1);
BigInteger$3.prototype.F1 = BI_FP$1 - dbits$1;
BigInteger$3.prototype.F2 = 2 * dbits$1 - BI_FP$1;
var BI_RC$1 = [], rr$1, vv$1;
rr$1 = 48;
for (vv$1 = 0; vv$1 <= 9; ++vv$1)
    BI_RC$1[rr$1++] = vv$1;
rr$1 = 97;
for (vv$1 = 10; vv$1 < 36; ++vv$1)
    BI_RC$1[rr$1++] = vv$1;
rr$1 = 65;
for (vv$1 = 10; vv$1 < 36; ++vv$1)
    BI_RC$1[rr$1++] = vv$1;
function intAt$1(e, n) {
    var i = BI_RC$1[e.charCodeAt(n)];
    return i ?? -1
}
function nbv$1(e) {
    var n = nbi$1();
    return n.fromInt(e),
    n
}
function nbits$1(e) {
    var n = 1, i;
    return (i = e >>> 16) != 0 && (e = i,
    n += 16),
    (i = e >> 8) != 0 && (e = i,
    n += 8),
    (i = e >> 4) != 0 && (e = i,
    n += 4),
    (i = e >> 2) != 0 && (e = i,
    n += 2),
    (i = e >> 1) != 0 && (e = i,
    n += 1),
    n
}
BigInteger$3.ZERO = nbv$1(0);
BigInteger$3.ONE = nbv$1(1);
var Arcfour = function() {
    function e() {
        this.i = 0,
        this.j = 0,
        this.S = []
    }
    return e.prototype.init = function(n) {
        var i, o, l;
        for (i = 0; i < 256; ++i)
            this.S[i] = i;
        for (o = 0,
        i = 0; i < 256; ++i)
            o = o + this.S[i] + n[i % n.length] & 255,
            l = this.S[i],
            this.S[i] = this.S[o],
            this.S[o] = l;
        this.i = 0,
        this.j = 0
    }
    ,
    e.prototype.next = function() {
        var n;
        return this.i = this.i + 1 & 255,
        this.j = this.j + this.S[this.i] & 255,
        n = this.S[this.i],
        this.S[this.i] = this.S[this.j],
        this.S[this.j] = n,
        this.S[n + this.S[this.i] & 255]
    }
    ,
    e
}();
function prng_newstate() {
    return new Arcfour
}
var rng_psize = 256, rng_state, rng_pool = null, rng_pptr;
if (rng_pool == null) {
    rng_pool = [],
    rng_pptr = 0;
    var t = void 0;
    if (typeof window < "u" && window.crypto && window.crypto.getRandomValues) {
        var z = new Uint32Array(256);
        for (window.crypto.getRandomValues(z),
        t = 0; t < z.length; ++t)
            rng_pool[rng_pptr++] = z[t] & 255
    }
    var count = 0
      , onMouseMoveListener_1 = function(e) {
        if (count = count || 0,
        count >= 256 || rng_pptr >= rng_psize) {
            window.removeEventListener ? window.removeEventListener("mousemove", onMouseMoveListener_1, !1) : window.detachEvent && window.detachEvent("onmousemove", onMouseMoveListener_1);
            return
        }
        try {
            var n = e.x + e.y;
            rng_pool[rng_pptr++] = n & 255,
            count += 1
        } catch {}
    };
    typeof window < "u" && (window.addEventListener ? window.addEventListener("mousemove", onMouseMoveListener_1, !1) : window.attachEvent && window.attachEvent("onmousemove", onMouseMoveListener_1))
}
function rng_get_byte() {
    if (rng_state == null) {
        for (rng_state = prng_newstate(); rng_pptr < rng_psize; ) {
            var e = Math.floor(65536 * Math.random());
            rng_pool[rng_pptr++] = e & 255
        }
        for (rng_state.init(rng_pool),
        rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)
            rng_pool[rng_pptr] = 0;
        rng_pptr = 0
    }
    return rng_state.next()
}
var SecureRandom = function() {
    function e() {}
    return e.prototype.nextBytes = function(n) {
        for (var i = 0; i < n.length; ++i)
            n[i] = rng_get_byte()
    }
    ,
    e
}();
function pkcs1pad1(e, n) {
    if (n < e.length + 22)
        return console.error("Message too long for RSA"),
        null;
    for (var i = n - e.length - 6, o = "", l = 0; l < i; l += 2)
        o += "ff";
    var a = "0001" + o + "00" + e;
    return parseBigInt(a, 16)
}
function pkcs1pad2(e, n) {
    if (n < e.length + 11)
        return console.error("Message too long for RSA"),
        null;
    for (var i = [], o = e.length - 1; o >= 0 && n > 0; ) {
        var l = e.charCodeAt(o--);
        l < 128 ? i[--n] = l : l > 127 && l < 2048 ? (i[--n] = l & 63 | 128,
        i[--n] = l >> 6 | 192) : (i[--n] = l & 63 | 128,
        i[--n] = l >> 6 & 63 | 128,
        i[--n] = l >> 12 | 224)
    }
    i[--n] = 0;
    for (var a = new SecureRandom, c = []; n > 2; ) {
        for (c[0] = 0; c[0] == 0; )
            a.nextBytes(c);
        i[--n] = c[0]
    }
    return i[--n] = 2,
    i[--n] = 0,
    new BigInteger$3(i)
}
var RSAKey = function() {
    function e() {
        this.n = null,
        this.e = 0,
        this.d = null,
        this.p = null,
        this.q = null,
        this.dmp1 = null,
        this.dmq1 = null,
        this.coeff = null
    }
    return e.prototype.doPublic = function(n) {
        return n.modPowInt(this.e, this.n)
    }
    ,
    e.prototype.doPrivate = function(n) {
        if (this.p == null || this.q == null)
            return n.modPow(this.d, this.n);
        for (var i = n.mod(this.p).modPow(this.dmp1, this.p), o = n.mod(this.q).modPow(this.dmq1, this.q); i.compareTo(o) < 0; )
            i = i.add(this.p);
        return i.subtract(o).multiply(this.coeff).mod(this.p).multiply(this.q).add(o)
    }
    ,
    e.prototype.setPublic = function(n, i) {
        n != null && i != null && n.length > 0 && i.length > 0 ? (this.n = parseBigInt(n, 16),
        this.e = parseInt(i, 16)) : console.error("Invalid RSA public key")
    }
    ,
    e.prototype.encrypt = function(n) {
        var i = this.n.bitLength() + 7 >> 3
          , o = pkcs1pad2(n, i);
        if (o == null)
            return null;
        var l = this.doPublic(o);
        if (l == null)
            return null;
        for (var a = l.toString(16), c = a.length, u = 0; u < i * 2 - c; u++)
            a = "0" + a;
        return a
    }
    ,
    e.prototype.setPrivate = function(n, i, o) {
        n != null && i != null && n.length > 0 && i.length > 0 ? (this.n = parseBigInt(n, 16),
        this.e = parseInt(i, 16),
        this.d = parseBigInt(o, 16)) : console.error("Invalid RSA private key")
    }
    ,
    e.prototype.setPrivateEx = function(n, i, o, l, a, c, u, h) {
        n != null && i != null && n.length > 0 && i.length > 0 ? (this.n = parseBigInt(n, 16),
        this.e = parseInt(i, 16),
        this.d = parseBigInt(o, 16),
        this.p = parseBigInt(l, 16),
        this.q = parseBigInt(a, 16),
        this.dmp1 = parseBigInt(c, 16),
        this.dmq1 = parseBigInt(u, 16),
        this.coeff = parseBigInt(h, 16)) : console.error("Invalid RSA private key")
    }
    ,
    e.prototype.generate = function(n, i) {
        var o = new SecureRandom
          , l = n >> 1;
        this.e = parseInt(i, 16);
        for (var a = new BigInteger$3(i,16); ; ) {
            for (; this.p = new BigInteger$3(n - l,1,o),
            !(this.p.subtract(BigInteger$3.ONE).gcd(a).compareTo(BigInteger$3.ONE) == 0 && this.p.isProbablePrime(10)); )
                ;
            for (; this.q = new BigInteger$3(l,1,o),
            !(this.q.subtract(BigInteger$3.ONE).gcd(a).compareTo(BigInteger$3.ONE) == 0 && this.q.isProbablePrime(10)); )
                ;
            if (this.p.compareTo(this.q) <= 0) {
                var c = this.p;
                this.p = this.q,
                this.q = c
            }
            var u = this.p.subtract(BigInteger$3.ONE)
              , h = this.q.subtract(BigInteger$3.ONE)
              , m = u.multiply(h);
            if (m.gcd(a).compareTo(BigInteger$3.ONE) == 0) {
                this.n = this.p.multiply(this.q),
                this.d = a.modInverse(m),
                this.dmp1 = this.d.mod(u),
                this.dmq1 = this.d.mod(h),
                this.coeff = this.q.modInverse(this.p);
                break
            }
        }
    }
    ,
    e.prototype.decrypt = function(n) {
        var i = parseBigInt(n, 16)
          , o = this.doPrivate(i);
        return o == null ? null : pkcs1unpad2(o, this.n.bitLength() + 7 >> 3)
    }
    ,
    e.prototype.generateAsync = function(n, i, o) {
        var l = new SecureRandom
          , a = n >> 1;
        this.e = parseInt(i, 16);
        var c = new BigInteger$3(i,16)
          , u = this
          , h = function() {
            var m = function() {
                if (u.p.compareTo(u.q) <= 0) {
                    var b = u.p;
                    u.p = u.q,
                    u.q = b
                }
                var g = u.p.subtract(BigInteger$3.ONE)
                  , $ = u.q.subtract(BigInteger$3.ONE)
                  , N = g.multiply($);
                N.gcd(c).compareTo(BigInteger$3.ONE) == 0 ? (u.n = u.p.multiply(u.q),
                u.d = c.modInverse(N),
                u.dmp1 = u.d.mod(g),
                u.dmq1 = u.d.mod($),
                u.coeff = u.q.modInverse(u.p),
                setTimeout(function() {
                    o()
                }, 0)) : setTimeout(h, 0)
            }
              , d = function() {
                u.q = nbi$1(),
                u.q.fromNumberAsync(a, 1, l, function() {
                    u.q.subtract(BigInteger$3.ONE).gcda(c, function(b) {
                        b.compareTo(BigInteger$3.ONE) == 0 && u.q.isProbablePrime(10) ? setTimeout(m, 0) : setTimeout(d, 0)
                    })
                })
            }
              , p = function() {
                u.p = nbi$1(),
                u.p.fromNumberAsync(n - a, 1, l, function() {
                    u.p.subtract(BigInteger$3.ONE).gcda(c, function(b) {
                        b.compareTo(BigInteger$3.ONE) == 0 && u.p.isProbablePrime(10) ? setTimeout(d, 0) : setTimeout(p, 0)
                    })
                })
            };
            setTimeout(p, 0)
        };
        setTimeout(h, 0)
    }
    ,
    e.prototype.sign = function(n, i, o) {
        var l = getDigestHeader(o)
          , a = l + i(n).toString()
          , c = pkcs1pad1(a, this.n.bitLength() / 4);
        if (c == null)
            return null;
        var u = this.doPrivate(c);
        if (u == null)
            return null;
        var h = u.toString(16);
        return h.length & 1 ? "0" + h : h
    }
    ,
    e.prototype.verify = function(n, i, o) {
        var l = parseBigInt(i, 16)
          , a = this.doPublic(l);
        if (a == null)
            return null;
        var c = a.toString(16).replace(/^1f+00/, "")
          , u = removeDigestHeader(c);
        return u == o(n).toString()
    }
    ,
    e
}();
function pkcs1unpad2(e, n) {
    for (var i = e.toByteArray(), o = 0; o < i.length && i[o] == 0; )
        ++o;
    if (i.length - o != n - 1 || i[o] != 2)
        return null;
    for (++o; i[o] != 0; )
        if (++o >= i.length)
            return null;
    for (var l = ""; ++o < i.length; ) {
        var a = i[o] & 255;
        a < 128 ? l += String.fromCharCode(a) : a > 191 && a < 224 ? (l += String.fromCharCode((a & 31) << 6 | i[o + 1] & 63),
        ++o) : (l += String.fromCharCode((a & 15) << 12 | (i[o + 1] & 63) << 6 | i[o + 2] & 63),
        o += 2)
    }
    return l
}
var DIGEST_HEADERS = {
    md2: "3020300c06082a864886f70d020205000410",
    md5: "3020300c06082a864886f70d020505000410",
    sha1: "3021300906052b0e03021a05000414",
    sha224: "302d300d06096086480165030402040500041c",
    sha256: "3031300d060960864801650304020105000420",
    sha384: "3041300d060960864801650304020205000430",
    sha512: "3051300d060960864801650304020305000440",
    ripemd160: "3021300906052b2403020105000414"
};
function getDigestHeader(e) {
    return DIGEST_HEADERS[e] || ""
}
function removeDigestHeader(e) {
    for (var n in DIGEST_HEADERS)
        if (DIGEST_HEADERS.hasOwnProperty(n)) {
            var i = DIGEST_HEADERS[n]
              , o = i.length;
            if (e.substr(0, o) == i)
                return e.substr(o)
        }
    return e
}
const RSA_PKCS1_PADDING = 1
  , RSA_NO_PADDING = 3
  , RSA_PKCS1_OAEP_PADDING = 4
  , require$$0 = {
    RSA_PKCS1_PADDING,
    RSA_NO_PADDING,
    RSA_PKCS1_OAEP_PADDING
};
var rsa$1 = {}
  , utils$2 = {};
requireCryptoBrowserify();
utils$2.linebrk = function(e, n) {
    for (var i = "", o = 0; o + n < e.length; )
        i += e.substring(o, o + n) + `
`,
        o += n;
    return i + e.substring(o, e.length)
}
;
utils$2.detectEnvironment = function() {
    return typeof window < "u" && window && !(process$1 && process$1.title === "node") ? "browser" : "node"
}
;
utils$2.get32IntFromBuffer = function(e, n) {
    n = n || 0;
    var i = 0;
    if ((i = e.length - n) > 0) {
        if (i >= 4)
            return e.readUIntBE(n, i);
        for (var o = 0, l = n + i, a = 0; l > n; l--,
        a += 2)
            o += e[l - 1] * Math.pow(16, a);
        return o
    } else
        return NaN
}
;
utils$2._ = {
    isObject: function(e) {
        var n = typeof e;
        return !!e && (n == "object" || n == "function")
    },
    isString: function(e) {
        return typeof e == "string" || e instanceof String
    },
    isNumber: function(e) {
        return typeof e == "number" || !isNaN(parseFloat(e)) && isFinite(e)
    },
    omit: function(e, n) {
        var i = {};
        for (var o in e)
            !e.hasOwnProperty(o) || o === n || (i[o] = e[o]);
        return i
    }
};
utils$2.trimSurroundingText = function(e, n, i) {
    var o = 0
      , l = e.length
      , a = e.indexOf(n);
    a >= 0 && (o = a + n.length);
    var c = e.indexOf(i, a);
    return c >= 0 && (l = c),
    e.substring(o, l)
}
;
var crypt$2 = requireCryptoBrowserify(), _$2 = utils$2._, dbits;
function BigInteger$2(e, n) {
    e != null && (typeof e == "number" ? this.fromNumber(e, n) : Buffer$G.isBuffer(e) ? this.fromBuffer(e) : n == null && typeof e != "string" ? this.fromByteArray(e) : this.fromString(e, n))
}
function nbi() {
    return new BigInteger$2(null)
}
function am3(e, n, i, o, l, a) {
    for (var c = n & 16383, u = n >> 14; --a >= 0; ) {
        var h = this[e] & 16383
          , m = this[e++] >> 14
          , d = u * h + m * c;
        h = c * h + ((d & 16383) << 14) + i[o] + l,
        l = (h >> 28) + (d >> 14) + u * m,
        i[o++] = h & 268435455
    }
    return l
}
BigInteger$2.prototype.am = am3;
dbits = 28;
BigInteger$2.prototype.DB = dbits;
BigInteger$2.prototype.DM = (1 << dbits) - 1;
BigInteger$2.prototype.DV = 1 << dbits;
var BI_FP = 52;
BigInteger$2.prototype.FV = Math.pow(2, BI_FP);
BigInteger$2.prototype.F1 = BI_FP - dbits;
BigInteger$2.prototype.F2 = 2 * dbits - BI_FP;
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz", BI_RC = new Array, rr, vv;
rr = 48;
for (vv = 0; vv <= 9; ++vv)
    BI_RC[rr++] = vv;
rr = 97;
for (vv = 10; vv < 36; ++vv)
    BI_RC[rr++] = vv;
rr = 65;
for (vv = 10; vv < 36; ++vv)
    BI_RC[rr++] = vv;
function int2char(e) {
    return BI_RM.charAt(e)
}
function intAt(e, n) {
    var i = BI_RC[e.charCodeAt(n)];
    return i ?? -1
}
function bnpCopyTo(e) {
    for (var n = this.t - 1; n >= 0; --n)
        e[n] = this[n];
    e.t = this.t,
    e.s = this.s
}
function bnpFromInt(e) {
    this.t = 1,
    this.s = e < 0 ? -1 : 0,
    e > 0 ? this[0] = e : e < -1 ? this[0] = e + DV : this.t = 0
}
function nbv(e) {
    var n = nbi();
    return n.fromInt(e),
    n
}
function bnpFromString(e, n, i) {
    var o;
    switch (n) {
    case 2:
        o = 1;
        break;
    case 4:
        o = 2;
        break;
    case 8:
        o = 3;
        break;
    case 16:
        o = 4;
        break;
    case 32:
        o = 5;
        break;
    case 256:
        o = 8;
        break;
    default:
        this.fromRadix(e, n);
        return
    }
    this.t = 0,
    this.s = 0;
    for (var l = e.length, a = !1, c = 0; --l >= 0; ) {
        var u = o == 8 ? e[l] & 255 : intAt(e, l);
        if (u < 0) {
            e.charAt(l) == "-" && (a = !0);
            continue
        }
        a = !1,
        c === 0 ? this[this.t++] = u : c + o > this.DB ? (this[this.t - 1] |= (u & (1 << this.DB - c) - 1) << c,
        this[this.t++] = u >> this.DB - c) : this[this.t - 1] |= u << c,
        c += o,
        c >= this.DB && (c -= this.DB)
    }
    !i && o == 8 && e[0] & 128 && (this.s = -1,
    c > 0 && (this[this.t - 1] |= (1 << this.DB - c) - 1 << c)),
    this.clamp(),
    a && BigInteger$2.ZERO.subTo(this, this)
}
function bnpFromByteArray(e, n) {
    this.fromString(e, 256, n)
}
function bnpFromBuffer(e) {
    this.fromString(e, 256, !0)
}
function bnpClamp() {
    for (var e = this.s & this.DM; this.t > 0 && this[this.t - 1] == e; )
        --this.t
}
function bnToString(e) {
    if (this.s < 0)
        return "-" + this.negate().toString(e);
    var n;
    if (e == 16)
        n = 4;
    else if (e == 8)
        n = 3;
    else if (e == 2)
        n = 1;
    else if (e == 32)
        n = 5;
    else if (e == 4)
        n = 2;
    else
        return this.toRadix(e);
    var i = (1 << n) - 1, o, l = !1, a = "", c = this.t, u = this.DB - c * this.DB % n;
    if (c-- > 0)
        for (u < this.DB && (o = this[c] >> u) > 0 && (l = !0,
        a = int2char(o)); c >= 0; )
            u < n ? (o = (this[c] & (1 << u) - 1) << n - u,
            o |= this[--c] >> (u += this.DB - n)) : (o = this[c] >> (u -= n) & i,
            u <= 0 && (u += this.DB,
            --c)),
            o > 0 && (l = !0),
            l && (a += int2char(o));
    return l ? a : "0"
}
function bnNegate() {
    var e = nbi();
    return BigInteger$2.ZERO.subTo(this, e),
    e
}
function bnAbs() {
    return this.s < 0 ? this.negate() : this
}
function bnCompareTo(e) {
    var n = this.s - e.s;
    if (n != 0)
        return n;
    var i = this.t;
    if (n = i - e.t,
    n != 0)
        return this.s < 0 ? -n : n;
    for (; --i >= 0; )
        if ((n = this[i] - e[i]) != 0)
            return n;
    return 0
}
function nbits(e) {
    var n = 1, i;
    return (i = e >>> 16) != 0 && (e = i,
    n += 16),
    (i = e >> 8) != 0 && (e = i,
    n += 8),
    (i = e >> 4) != 0 && (e = i,
    n += 4),
    (i = e >> 2) != 0 && (e = i,
    n += 2),
    (i = e >> 1) != 0 && (e = i,
    n += 1),
    n
}
function bnBitLength() {
    return this.t <= 0 ? 0 : this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM)
}
function bnpDLShiftTo(e, n) {
    var i;
    for (i = this.t - 1; i >= 0; --i)
        n[i + e] = this[i];
    for (i = e - 1; i >= 0; --i)
        n[i] = 0;
    n.t = this.t + e,
    n.s = this.s
}
function bnpDRShiftTo(e, n) {
    for (var i = e; i < this.t; ++i)
        n[i - e] = this[i];
    n.t = Math.max(this.t - e, 0),
    n.s = this.s
}
function bnpLShiftTo(e, n) {
    var i = e % this.DB, o = this.DB - i, l = (1 << o) - 1, a = Math.floor(e / this.DB), c = this.s << i & this.DM, u;
    for (u = this.t - 1; u >= 0; --u)
        n[u + a + 1] = this[u] >> o | c,
        c = (this[u] & l) << i;
    for (u = a - 1; u >= 0; --u)
        n[u] = 0;
    n[a] = c,
    n.t = this.t + a + 1,
    n.s = this.s,
    n.clamp()
}
function bnpRShiftTo(e, n) {
    n.s = this.s;
    var i = Math.floor(e / this.DB);
    if (i >= this.t) {
        n.t = 0;
        return
    }
    var o = e % this.DB
      , l = this.DB - o
      , a = (1 << o) - 1;
    n[0] = this[i] >> o;
    for (var c = i + 1; c < this.t; ++c)
        n[c - i - 1] |= (this[c] & a) << l,
        n[c - i] = this[c] >> o;
    o > 0 && (n[this.t - i - 1] |= (this.s & a) << l),
    n.t = this.t - i,
    n.clamp()
}
function bnpSubTo(e, n) {
    for (var i = 0, o = 0, l = Math.min(e.t, this.t); i < l; )
        o += this[i] - e[i],
        n[i++] = o & this.DM,
        o >>= this.DB;
    if (e.t < this.t) {
        for (o -= e.s; i < this.t; )
            o += this[i],
            n[i++] = o & this.DM,
            o >>= this.DB;
        o += this.s
    } else {
        for (o += this.s; i < e.t; )
            o -= e[i],
            n[i++] = o & this.DM,
            o >>= this.DB;
        o -= e.s
    }
    n.s = o < 0 ? -1 : 0,
    o < -1 ? n[i++] = this.DV + o : o > 0 && (n[i++] = o),
    n.t = i,
    n.clamp()
}
function bnpMultiplyTo(e, n) {
    var i = this.abs()
      , o = e.abs()
      , l = i.t;
    for (n.t = l + o.t; --l >= 0; )
        n[l] = 0;
    for (l = 0; l < o.t; ++l)
        n[l + i.t] = i.am(0, o[l], n, l, 0, i.t);
    n.s = 0,
    n.clamp(),
    this.s != e.s && BigInteger$2.ZERO.subTo(n, n)
}
function bnpSquareTo(e) {
    for (var n = this.abs(), i = e.t = 2 * n.t; --i >= 0; )
        e[i] = 0;
    for (i = 0; i < n.t - 1; ++i) {
        var o = n.am(i, n[i], e, 2 * i, 0, 1);
        (e[i + n.t] += n.am(i + 1, 2 * n[i], e, 2 * i + 1, o, n.t - i - 1)) >= n.DV && (e[i + n.t] -= n.DV,
        e[i + n.t + 1] = 1)
    }
    e.t > 0 && (e[e.t - 1] += n.am(i, n[i], e, 2 * i, 0, 1)),
    e.s = 0,
    e.clamp()
}
function bnpDivRemTo(e, n, i) {
    var o = e.abs();
    if (!(o.t <= 0)) {
        var l = this.abs();
        if (l.t < o.t) {
            n != null && n.fromInt(0),
            i != null && this.copyTo(i);
            return
        }
        i == null && (i = nbi());
        var a = nbi()
          , c = this.s
          , u = e.s
          , h = this.DB - nbits(o[o.t - 1]);
        h > 0 ? (o.lShiftTo(h, a),
        l.lShiftTo(h, i)) : (o.copyTo(a),
        l.copyTo(i));
        var m = a.t
          , d = a[m - 1];
        if (d !== 0) {
            var p = d * (1 << this.F1) + (m > 1 ? a[m - 2] >> this.F2 : 0)
              , b = this.FV / p
              , g = (1 << this.F1) / p
              , $ = 1 << this.F2
              , N = i.t
              , I = N - m
              , L = n ?? nbi();
            for (a.dlShiftTo(I, L),
            i.compareTo(L) >= 0 && (i[i.t++] = 1,
            i.subTo(L, i)),
            BigInteger$2.ONE.dlShiftTo(m, L),
            L.subTo(a, a); a.t < m; )
                a[a.t++] = 0;
            for (; --I >= 0; ) {
                var T = i[--N] == d ? this.DM : Math.floor(i[N] * b + (i[N - 1] + $) * g);
                if ((i[N] += a.am(0, T, i, I, 0, m)) < T)
                    for (a.dlShiftTo(I, L),
                    i.subTo(L, i); i[N] < --T; )
                        i.subTo(L, i)
            }
            n != null && (i.drShiftTo(m, n),
            c != u && BigInteger$2.ZERO.subTo(n, n)),
            i.t = m,
            i.clamp(),
            h > 0 && i.rShiftTo(h, i),
            c < 0 && BigInteger$2.ZERO.subTo(i, i)
        }
    }
}
function bnMod(e) {
    var n = nbi();
    return this.abs().divRemTo(e, null, n),
    this.s < 0 && n.compareTo(BigInteger$2.ZERO) > 0 && e.subTo(n, n),
    n
}
function Classic(e) {
    this.m = e
}
function cConvert(e) {
    return e.s < 0 || e.compareTo(this.m) >= 0 ? e.mod(this.m) : e
}
function cRevert(e) {
    return e
}
function cReduce(e) {
    e.divRemTo(this.m, null, e)
}
function cMulTo(e, n, i) {
    e.multiplyTo(n, i),
    this.reduce(i)
}
function cSqrTo(e, n) {
    e.squareTo(n),
    this.reduce(n)
}
Classic.prototype.convert = cConvert;
Classic.prototype.revert = cRevert;
Classic.prototype.reduce = cReduce;
Classic.prototype.mulTo = cMulTo;
Classic.prototype.sqrTo = cSqrTo;
function bnpInvDigit() {
    if (this.t < 1)
        return 0;
    var e = this[0];
    if (!(e & 1))
        return 0;
    var n = e & 3;
    return n = n * (2 - (e & 15) * n) & 15,
    n = n * (2 - (e & 255) * n) & 255,
    n = n * (2 - ((e & 65535) * n & 65535)) & 65535,
    n = n * (2 - e * n % this.DV) % this.DV,
    n > 0 ? this.DV - n : -n
}
function Montgomery(e) {
    this.m = e,
    this.mp = e.invDigit(),
    this.mpl = this.mp & 32767,
    this.mph = this.mp >> 15,
    this.um = (1 << e.DB - 15) - 1,
    this.mt2 = 2 * e.t
}
function montConvert(e) {
    var n = nbi();
    return e.abs().dlShiftTo(this.m.t, n),
    n.divRemTo(this.m, null, n),
    e.s < 0 && n.compareTo(BigInteger$2.ZERO) > 0 && this.m.subTo(n, n),
    n
}
function montRevert(e) {
    var n = nbi();
    return e.copyTo(n),
    this.reduce(n),
    n
}
function montReduce(e) {
    for (; e.t <= this.mt2; )
        e[e.t++] = 0;
    for (var n = 0; n < this.m.t; ++n) {
        var i = e[n] & 32767
          , o = i * this.mpl + ((i * this.mph + (e[n] >> 15) * this.mpl & this.um) << 15) & e.DM;
        for (i = n + this.m.t,
        e[i] += this.m.am(0, o, e, n, 0, this.m.t); e[i] >= e.DV; )
            e[i] -= e.DV,
            e[++i]++
    }
    e.clamp(),
    e.drShiftTo(this.m.t, e),
    e.compareTo(this.m) >= 0 && e.subTo(this.m, e)
}
function montSqrTo(e, n) {
    e.squareTo(n),
    this.reduce(n)
}
function montMulTo(e, n, i) {
    e.multiplyTo(n, i),
    this.reduce(i)
}
Montgomery.prototype.convert = montConvert;
Montgomery.prototype.revert = montRevert;
Montgomery.prototype.reduce = montReduce;
Montgomery.prototype.mulTo = montMulTo;
Montgomery.prototype.sqrTo = montSqrTo;
function bnpIsEven() {
    return (this.t > 0 ? this[0] & 1 : this.s) === 0
}
function bnpExp(e, n) {
    if (e > 4294967295 || e < 1)
        return BigInteger$2.ONE;
    var i = nbi()
      , o = nbi()
      , l = n.convert(this)
      , a = nbits(e) - 1;
    for (l.copyTo(i); --a >= 0; )
        if (n.sqrTo(i, o),
        (e & 1 << a) > 0)
            n.mulTo(o, l, i);
        else {
            var c = i;
            i = o,
            o = c
        }
    return n.revert(i)
}
function bnModPowInt(e, n) {
    var i;
    return e < 256 || n.isEven() ? i = new Classic(n) : i = new Montgomery(n),
    this.exp(e, i)
}
function bnClone() {
    var e = nbi();
    return this.copyTo(e),
    e
}
function bnIntValue() {
    if (this.s < 0) {
        if (this.t == 1)
            return this[0] - this.DV;
        if (this.t === 0)
            return -1
    } else {
        if (this.t == 1)
            return this[0];
        if (this.t === 0)
            return 0
    }
    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0]
}
function bnByteValue() {
    return this.t == 0 ? this.s : this[0] << 24 >> 24
}
function bnShortValue() {
    return this.t == 0 ? this.s : this[0] << 16 >> 16
}
function bnpChunkSize(e) {
    return Math.floor(Math.LN2 * this.DB / Math.log(e))
}
function bnSigNum() {
    return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this[0] <= 0 ? 0 : 1
}
function bnpToRadix(e) {
    if (e == null && (e = 10),
    this.signum() === 0 || e < 2 || e > 36)
        return "0";
    var n = this.chunkSize(e)
      , i = Math.pow(e, n)
      , o = nbv(i)
      , l = nbi()
      , a = nbi()
      , c = "";
    for (this.divRemTo(o, l, a); l.signum() > 0; )
        c = (i + a.intValue()).toString(e).substr(1) + c,
        l.divRemTo(o, l, a);
    return a.intValue().toString(e) + c
}
function bnpFromRadix(e, n) {
    this.fromInt(0),
    n == null && (n = 10);
    for (var i = this.chunkSize(n), o = Math.pow(n, i), l = !1, a = 0, c = 0, u = 0; u < e.length; ++u) {
        var h = intAt(e, u);
        if (h < 0) {
            e.charAt(u) == "-" && this.signum() === 0 && (l = !0);
            continue
        }
        c = n * c + h,
        ++a >= i && (this.dMultiply(o),
        this.dAddOffset(c, 0),
        a = 0,
        c = 0)
    }
    a > 0 && (this.dMultiply(Math.pow(n, a)),
    this.dAddOffset(c, 0)),
    l && BigInteger$2.ZERO.subTo(this, this)
}
function bnpFromNumber(e, n) {
    if (typeof n == "number")
        if (e < 2)
            this.fromInt(1);
        else
            for (this.fromNumber(e),
            this.testBit(e - 1) || this.bitwiseTo(BigInteger$2.ONE.shiftLeft(e - 1), op_or, this),
            this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(n); )
                this.dAddOffset(2, 0),
                this.bitLength() > e && this.subTo(BigInteger$2.ONE.shiftLeft(e - 1), this);
    else {
        var i = crypt$2.randomBytes((e >> 3) + 1)
          , o = e & 7;
        o > 0 ? i[0] &= (1 << o) - 1 : i[0] = 0,
        this.fromByteArray(i)
    }
}
function bnToByteArray() {
    var e = this.t
      , n = new Array;
    n[0] = this.s;
    var i = this.DB - e * this.DB % 8, o, l = 0;
    if (e-- > 0)
        for (i < this.DB && (o = this[e] >> i) != (this.s & this.DM) >> i && (n[l++] = o | this.s << this.DB - i); e >= 0; )
            i < 8 ? (o = (this[e] & (1 << i) - 1) << 8 - i,
            o |= this[--e] >> (i += this.DB - 8)) : (o = this[e] >> (i -= 8) & 255,
            i <= 0 && (i += this.DB,
            --e)),
            o & 128 && (o |= -256),
            l === 0 && (this.s & 128) != (o & 128) && ++l,
            (l > 0 || o != this.s) && (n[l++] = o);
    return n
}
function bnToBuffer(e) {
    var n = Buffer$G.from(this.toByteArray());
    if (e === !0 && n[0] === 0)
        n = n.slice(1);
    else if (_$2.isNumber(e)) {
        if (n.length > e) {
            for (var i = 0; i < n.length - e; i++)
                if (n[i] !== 0)
                    return null;
            return n.slice(n.length - e)
        } else if (n.length < e) {
            var o = Buffer$G.alloc(e);
            return o.fill(0, 0, e - n.length),
            n.copy(o, e - n.length),
            o
        }
    }
    return n
}
function bnEquals(e) {
    return this.compareTo(e) == 0
}
function bnMin(e) {
    return this.compareTo(e) < 0 ? this : e
}
function bnMax(e) {
    return this.compareTo(e) > 0 ? this : e
}
function bnpBitwiseTo(e, n, i) {
    var o, l, a = Math.min(e.t, this.t);
    for (o = 0; o < a; ++o)
        i[o] = n(this[o], e[o]);
    if (e.t < this.t) {
        for (l = e.s & this.DM,
        o = a; o < this.t; ++o)
            i[o] = n(this[o], l);
        i.t = this.t
    } else {
        for (l = this.s & this.DM,
        o = a; o < e.t; ++o)
            i[o] = n(l, e[o]);
        i.t = e.t
    }
    i.s = n(this.s, e.s),
    i.clamp()
}
function op_and(e, n) {
    return e & n
}
function bnAnd(e) {
    var n = nbi();
    return this.bitwiseTo(e, op_and, n),
    n
}
function op_or(e, n) {
    return e | n
}
function bnOr(e) {
    var n = nbi();
    return this.bitwiseTo(e, op_or, n),
    n
}
function op_xor(e, n) {
    return e ^ n
}
function bnXor(e) {
    var n = nbi();
    return this.bitwiseTo(e, op_xor, n),
    n
}
function op_andnot(e, n) {
    return e & ~n
}
function bnAndNot(e) {
    var n = nbi();
    return this.bitwiseTo(e, op_andnot, n),
    n
}
function bnNot() {
    for (var e = nbi(), n = 0; n < this.t; ++n)
        e[n] = this.DM & ~this[n];
    return e.t = this.t,
    e.s = ~this.s,
    e
}
function bnShiftLeft(e) {
    var n = nbi();
    return e < 0 ? this.rShiftTo(-e, n) : this.lShiftTo(e, n),
    n
}
function bnShiftRight(e) {
    var n = nbi();
    return e < 0 ? this.lShiftTo(-e, n) : this.rShiftTo(e, n),
    n
}
function lbit(e) {
    if (e === 0)
        return -1;
    var n = 0;
    return e & 65535 || (e >>= 16,
    n += 16),
    e & 255 || (e >>= 8,
    n += 8),
    e & 15 || (e >>= 4,
    n += 4),
    e & 3 || (e >>= 2,
    n += 2),
    e & 1 || ++n,
    n
}
function bnGetLowestSetBit() {
    for (var e = 0; e < this.t; ++e)
        if (this[e] != 0)
            return e * this.DB + lbit(this[e]);
    return this.s < 0 ? this.t * this.DB : -1
}
function cbit(e) {
    for (var n = 0; e != 0; )
        e &= e - 1,
        ++n;
    return n
}
function bnBitCount() {
    for (var e = 0, n = this.s & this.DM, i = 0; i < this.t; ++i)
        e += cbit(this[i] ^ n);
    return e
}
function bnTestBit(e) {
    var n = Math.floor(e / this.DB);
    return n >= this.t ? this.s != 0 : (this[n] & 1 << e % this.DB) != 0
}
function bnpChangeBit(e, n) {
    var i = BigInteger$2.ONE.shiftLeft(e);
    return this.bitwiseTo(i, n, i),
    i
}
function bnSetBit(e) {
    return this.changeBit(e, op_or)
}
function bnClearBit(e) {
    return this.changeBit(e, op_andnot)
}
function bnFlipBit(e) {
    return this.changeBit(e, op_xor)
}
function bnpAddTo(e, n) {
    for (var i = 0, o = 0, l = Math.min(e.t, this.t); i < l; )
        o += this[i] + e[i],
        n[i++] = o & this.DM,
        o >>= this.DB;
    if (e.t < this.t) {
        for (o += e.s; i < this.t; )
            o += this[i],
            n[i++] = o & this.DM,
            o >>= this.DB;
        o += this.s
    } else {
        for (o += this.s; i < e.t; )
            o += e[i],
            n[i++] = o & this.DM,
            o >>= this.DB;
        o += e.s
    }
    n.s = o < 0 ? -1 : 0,
    o > 0 ? n[i++] = o : o < -1 && (n[i++] = this.DV + o),
    n.t = i,
    n.clamp()
}
function bnAdd(e) {
    var n = nbi();
    return this.addTo(e, n),
    n
}
function bnSubtract(e) {
    var n = nbi();
    return this.subTo(e, n),
    n
}
function bnMultiply(e) {
    var n = nbi();
    return this.multiplyTo(e, n),
    n
}
function bnSquare() {
    var e = nbi();
    return this.squareTo(e),
    e
}
function bnDivide(e) {
    var n = nbi();
    return this.divRemTo(e, n, null),
    n
}
function bnRemainder(e) {
    var n = nbi();
    return this.divRemTo(e, null, n),
    n
}
function bnDivideAndRemainder(e) {
    var n = nbi()
      , i = nbi();
    return this.divRemTo(e, n, i),
    new Array(n,i)
}
function bnpDMultiply(e) {
    this[this.t] = this.am(0, e - 1, this, 0, 0, this.t),
    ++this.t,
    this.clamp()
}
function bnpDAddOffset(e, n) {
    if (e !== 0) {
        for (; this.t <= n; )
            this[this.t++] = 0;
        for (this[n] += e; this[n] >= this.DV; )
            this[n] -= this.DV,
            ++n >= this.t && (this[this.t++] = 0),
            ++this[n]
    }
}
function NullExp() {}
function nNop(e) {
    return e
}
function nMulTo(e, n, i) {
    e.multiplyTo(n, i)
}
function nSqrTo(e, n) {
    e.squareTo(n)
}
NullExp.prototype.convert = nNop;
NullExp.prototype.revert = nNop;
NullExp.prototype.mulTo = nMulTo;
NullExp.prototype.sqrTo = nSqrTo;
function bnPow(e) {
    return this.exp(e, new NullExp)
}
function bnpMultiplyLowerTo(e, n, i) {
    var o = Math.min(this.t + e.t, n);
    for (i.s = 0,
    i.t = o; o > 0; )
        i[--o] = 0;
    var l;
    for (l = i.t - this.t; o < l; ++o)
        i[o + this.t] = this.am(0, e[o], i, o, 0, this.t);
    for (l = Math.min(e.t, n); o < l; ++o)
        this.am(0, e[o], i, o, 0, n - o);
    i.clamp()
}
function bnpMultiplyUpperTo(e, n, i) {
    --n;
    var o = i.t = this.t + e.t - n;
    for (i.s = 0; --o >= 0; )
        i[o] = 0;
    for (o = Math.max(n - this.t, 0); o < e.t; ++o)
        i[this.t + o - n] = this.am(n - o, e[o], i, 0, 0, this.t + o - n);
    i.clamp(),
    i.drShiftTo(1, i)
}
function Barrett(e) {
    this.r2 = nbi(),
    this.q3 = nbi(),
    BigInteger$2.ONE.dlShiftTo(2 * e.t, this.r2),
    this.mu = this.r2.divide(e),
    this.m = e
}
function barrettConvert(e) {
    if (e.s < 0 || e.t > 2 * this.m.t)
        return e.mod(this.m);
    if (e.compareTo(this.m) < 0)
        return e;
    var n = nbi();
    return e.copyTo(n),
    this.reduce(n),
    n
}
function barrettRevert(e) {
    return e
}
function barrettReduce(e) {
    for (e.drShiftTo(this.m.t - 1, this.r2),
    e.t > this.m.t + 1 && (e.t = this.m.t + 1,
    e.clamp()),
    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e.compareTo(this.r2) < 0; )
        e.dAddOffset(1, this.m.t + 1);
    for (e.subTo(this.r2, e); e.compareTo(this.m) >= 0; )
        e.subTo(this.m, e)
}
function barrettSqrTo(e, n) {
    e.squareTo(n),
    this.reduce(n)
}
function barrettMulTo(e, n, i) {
    e.multiplyTo(n, i),
    this.reduce(i)
}
Barrett.prototype.convert = barrettConvert;
Barrett.prototype.revert = barrettRevert;
Barrett.prototype.reduce = barrettReduce;
Barrett.prototype.mulTo = barrettMulTo;
Barrett.prototype.sqrTo = barrettSqrTo;
function bnModPow(e, n) {
    var i = e.bitLength(), o, l = nbv(1), a;
    if (i <= 0)
        return l;
    i < 18 ? o = 1 : i < 48 ? o = 3 : i < 144 ? o = 4 : i < 768 ? o = 5 : o = 6,
    i < 8 ? a = new Classic(n) : n.isEven() ? a = new Barrett(n) : a = new Montgomery(n);
    var c = new Array
      , u = 3
      , h = o - 1
      , m = (1 << o) - 1;
    if (c[1] = a.convert(this),
    o > 1) {
        var d = nbi();
        for (a.sqrTo(c[1], d); u <= m; )
            c[u] = nbi(),
            a.mulTo(d, c[u - 2], c[u]),
            u += 2
    }
    var p = e.t - 1, b, g = !0, $ = nbi(), N;
    for (i = nbits(e[p]) - 1; p >= 0; ) {
        for (i >= h ? b = e[p] >> i - h & m : (b = (e[p] & (1 << i + 1) - 1) << h - i,
        p > 0 && (b |= e[p - 1] >> this.DB + i - h)),
        u = o; !(b & 1); )
            b >>= 1,
            --u;
        if ((i -= u) < 0 && (i += this.DB,
        --p),
        g)
            c[b].copyTo(l),
            g = !1;
        else {
            for (; u > 1; )
                a.sqrTo(l, $),
                a.sqrTo($, l),
                u -= 2;
            u > 0 ? a.sqrTo(l, $) : (N = l,
            l = $,
            $ = N),
            a.mulTo($, c[b], l)
        }
        for (; p >= 0 && !(e[p] & 1 << i); )
            a.sqrTo(l, $),
            N = l,
            l = $,
            $ = N,
            --i < 0 && (i = this.DB - 1,
            --p)
    }
    return a.revert(l)
}
function bnGCD(e) {
    var n = this.s < 0 ? this.negate() : this.clone()
      , i = e.s < 0 ? e.negate() : e.clone();
    if (n.compareTo(i) < 0) {
        var o = n;
        n = i,
        i = o
    }
    var l = n.getLowestSetBit()
      , a = i.getLowestSetBit();
    if (a < 0)
        return n;
    for (l < a && (a = l),
    a > 0 && (n.rShiftTo(a, n),
    i.rShiftTo(a, i)); n.signum() > 0; )
        (l = n.getLowestSetBit()) > 0 && n.rShiftTo(l, n),
        (l = i.getLowestSetBit()) > 0 && i.rShiftTo(l, i),
        n.compareTo(i) >= 0 ? (n.subTo(i, n),
        n.rShiftTo(1, n)) : (i.subTo(n, i),
        i.rShiftTo(1, i));
    return a > 0 && i.lShiftTo(a, i),
    i
}
function bnpModInt(e) {
    if (e <= 0)
        return 0;
    var n = this.DV % e
      , i = this.s < 0 ? e - 1 : 0;
    if (this.t > 0)
        if (n === 0)
            i = this[0] % e;
        else
            for (var o = this.t - 1; o >= 0; --o)
                i = (n * i + this[o]) % e;
    return i
}
function bnModInverse(e) {
    var n = e.isEven();
    if (this.isEven() && n || e.signum() === 0)
        return BigInteger$2.ZERO;
    for (var i = e.clone(), o = this.clone(), l = nbv(1), a = nbv(0), c = nbv(0), u = nbv(1); i.signum() != 0; ) {
        for (; i.isEven(); )
            i.rShiftTo(1, i),
            n ? ((!l.isEven() || !a.isEven()) && (l.addTo(this, l),
            a.subTo(e, a)),
            l.rShiftTo(1, l)) : a.isEven() || a.subTo(e, a),
            a.rShiftTo(1, a);
        for (; o.isEven(); )
            o.rShiftTo(1, o),
            n ? ((!c.isEven() || !u.isEven()) && (c.addTo(this, c),
            u.subTo(e, u)),
            c.rShiftTo(1, c)) : u.isEven() || u.subTo(e, u),
            u.rShiftTo(1, u);
        i.compareTo(o) >= 0 ? (i.subTo(o, i),
        n && l.subTo(c, l),
        a.subTo(u, a)) : (o.subTo(i, o),
        n && c.subTo(l, c),
        u.subTo(a, u))
    }
    if (o.compareTo(BigInteger$2.ONE) != 0)
        return BigInteger$2.ZERO;
    if (u.compareTo(e) >= 0)
        return u.subtract(e);
    if (u.signum() < 0)
        u.addTo(e, u);
    else
        return u;
    return u.signum() < 0 ? u.add(e) : u
}
var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]
  , lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
function bnIsProbablePrime(e) {
    var n, i = this.abs();
    if (i.t == 1 && i[0] <= lowprimes[lowprimes.length - 1]) {
        for (n = 0; n < lowprimes.length; ++n)
            if (i[0] == lowprimes[n])
                return !0;
        return !1
    }
    if (i.isEven())
        return !1;
    for (n = 1; n < lowprimes.length; ) {
        for (var o = lowprimes[n], l = n + 1; l < lowprimes.length && o < lplim; )
            o *= lowprimes[l++];
        for (o = i.modInt(o); n < l; )
            if (o % lowprimes[n++] === 0)
                return !1
    }
    return i.millerRabin(e)
}
function bnpMillerRabin(e) {
    var n = this.subtract(BigInteger$2.ONE)
      , i = n.getLowestSetBit();
    if (i <= 0)
        return !1;
    var o = n.shiftRight(i);
    e = e + 1 >> 1,
    e > lowprimes.length && (e = lowprimes.length);
    for (var l = nbi(), a = 0; a < e; ++a) {
        l.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
        var c = l.modPow(o, this);
        if (c.compareTo(BigInteger$2.ONE) != 0 && c.compareTo(n) != 0) {
            for (var u = 1; u++ < i && c.compareTo(n) != 0; )
                if (c = c.modPowInt(2, this),
                c.compareTo(BigInteger$2.ONE) === 0)
                    return !1;
            if (c.compareTo(n) != 0)
                return !1
        }
    }
    return !0
}
BigInteger$2.prototype.copyTo = bnpCopyTo;
BigInteger$2.prototype.fromInt = bnpFromInt;
BigInteger$2.prototype.fromString = bnpFromString;
BigInteger$2.prototype.fromByteArray = bnpFromByteArray;
BigInteger$2.prototype.fromBuffer = bnpFromBuffer;
BigInteger$2.prototype.clamp = bnpClamp;
BigInteger$2.prototype.dlShiftTo = bnpDLShiftTo;
BigInteger$2.prototype.drShiftTo = bnpDRShiftTo;
BigInteger$2.prototype.lShiftTo = bnpLShiftTo;
BigInteger$2.prototype.rShiftTo = bnpRShiftTo;
BigInteger$2.prototype.subTo = bnpSubTo;
BigInteger$2.prototype.multiplyTo = bnpMultiplyTo;
BigInteger$2.prototype.squareTo = bnpSquareTo;
BigInteger$2.prototype.divRemTo = bnpDivRemTo;
BigInteger$2.prototype.invDigit = bnpInvDigit;
BigInteger$2.prototype.isEven = bnpIsEven;
BigInteger$2.prototype.exp = bnpExp;
BigInteger$2.prototype.chunkSize = bnpChunkSize;
BigInteger$2.prototype.toRadix = bnpToRadix;
BigInteger$2.prototype.fromRadix = bnpFromRadix;
BigInteger$2.prototype.fromNumber = bnpFromNumber;
BigInteger$2.prototype.bitwiseTo = bnpBitwiseTo;
BigInteger$2.prototype.changeBit = bnpChangeBit;
BigInteger$2.prototype.addTo = bnpAddTo;
BigInteger$2.prototype.dMultiply = bnpDMultiply;
BigInteger$2.prototype.dAddOffset = bnpDAddOffset;
BigInteger$2.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
BigInteger$2.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
BigInteger$2.prototype.modInt = bnpModInt;
BigInteger$2.prototype.millerRabin = bnpMillerRabin;
BigInteger$2.prototype.toString = bnToString;
BigInteger$2.prototype.negate = bnNegate;
BigInteger$2.prototype.abs = bnAbs;
BigInteger$2.prototype.compareTo = bnCompareTo;
BigInteger$2.prototype.bitLength = bnBitLength;
BigInteger$2.prototype.mod = bnMod;
BigInteger$2.prototype.modPowInt = bnModPowInt;
BigInteger$2.prototype.clone = bnClone;
BigInteger$2.prototype.intValue = bnIntValue;
BigInteger$2.prototype.byteValue = bnByteValue;
BigInteger$2.prototype.shortValue = bnShortValue;
BigInteger$2.prototype.signum = bnSigNum;
BigInteger$2.prototype.toByteArray = bnToByteArray;
BigInteger$2.prototype.toBuffer = bnToBuffer;
BigInteger$2.prototype.equals = bnEquals;
BigInteger$2.prototype.min = bnMin;
BigInteger$2.prototype.max = bnMax;
BigInteger$2.prototype.and = bnAnd;
BigInteger$2.prototype.or = bnOr;
BigInteger$2.prototype.xor = bnXor;
BigInteger$2.prototype.andNot = bnAndNot;
BigInteger$2.prototype.not = bnNot;
BigInteger$2.prototype.shiftLeft = bnShiftLeft;
BigInteger$2.prototype.shiftRight = bnShiftRight;
BigInteger$2.prototype.getLowestSetBit = bnGetLowestSetBit;
BigInteger$2.prototype.bitCount = bnBitCount;
BigInteger$2.prototype.testBit = bnTestBit;
BigInteger$2.prototype.setBit = bnSetBit;
BigInteger$2.prototype.clearBit = bnClearBit;
BigInteger$2.prototype.flipBit = bnFlipBit;
BigInteger$2.prototype.add = bnAdd;
BigInteger$2.prototype.subtract = bnSubtract;
BigInteger$2.prototype.multiply = bnMultiply;
BigInteger$2.prototype.divide = bnDivide;
BigInteger$2.prototype.remainder = bnRemainder;
BigInteger$2.prototype.divideAndRemainder = bnDivideAndRemainder;
BigInteger$2.prototype.modPow = bnModPow;
BigInteger$2.prototype.modInverse = bnModInverse;
BigInteger$2.prototype.pow = bnPow;
BigInteger$2.prototype.gcd = bnGCD;
BigInteger$2.prototype.isProbablePrime = bnIsProbablePrime;
BigInteger$2.int2char = int2char;
BigInteger$2.ZERO = nbv(0);
BigInteger$2.ONE = nbv(1);
BigInteger$2.prototype.square = bnSquare;
var jsbn = BigInteger$2
  , schemes$2 = {
    exports: {}
}
  , pkcs1$1 = {
    exports: {}
}
  , BigInteger$1 = jsbn
  , crypt$1 = requireCryptoBrowserify()
  , constants = require$$0
  , SIGN_INFO_HEAD = {
    md2: Buffer$G.from("3020300c06082a864886f70d020205000410", "hex"),
    md5: Buffer$G.from("3020300c06082a864886f70d020505000410", "hex"),
    sha1: Buffer$G.from("3021300906052b0e03021a05000414", "hex"),
    sha224: Buffer$G.from("302d300d06096086480165030402040500041c", "hex"),
    sha256: Buffer$G.from("3031300d060960864801650304020105000420", "hex"),
    sha384: Buffer$G.from("3041300d060960864801650304020205000430", "hex"),
    sha512: Buffer$G.from("3051300d060960864801650304020305000440", "hex"),
    ripemd160: Buffer$G.from("3021300906052b2403020105000414", "hex"),
    rmd160: Buffer$G.from("3021300906052b2403020105000414", "hex")
}
  , SIGN_ALG_TO_HASH_ALIASES = {
    ripemd160: "rmd160"
}
  , DEFAULT_HASH_FUNCTION = "sha256";
pkcs1$1.exports = {
    isEncryption: !0,
    isSignature: !0
};
pkcs1$1.exports.makeScheme = function(e, n) {
    function i(o, l) {
        this.key = o,
        this.options = l
    }
    return i.prototype.maxMessageLength = function() {
        return this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING ? this.key.encryptedDataLength : this.key.encryptedDataLength - 11
    }
    ,
    i.prototype.encPad = function(o, l) {
        l = l || {};
        var a;
        if (o.length > this.key.maxMessageLength)
            throw new Error("Message too long for RSA (n=" + this.key.encryptedDataLength + ", l=" + o.length + ")");
        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING)
            return a = Buffer$G.alloc(this.key.maxMessageLength - o.length),
            a.fill(0),
            Buffer$G.concat([a, o]);
        if (l.type === 1)
            return a = Buffer$G.alloc(this.key.encryptedDataLength - o.length - 1),
            a.fill(255, 0, a.length - 1),
            a[0] = 1,
            a[a.length - 1] = 0,
            Buffer$G.concat([a, o]);
        a = Buffer$G.alloc(this.key.encryptedDataLength - o.length),
        a[0] = 0,
        a[1] = 2;
        for (var c = crypt$1.randomBytes(a.length - 3), u = 0; u < c.length; u++) {
            for (var h = c[u]; h === 0; )
                h = crypt$1.randomBytes(1)[0];
            a[u + 2] = h
        }
        return a[a.length - 1] = 0,
        Buffer$G.concat([a, o])
    }
    ,
    i.prototype.encUnPad = function(o, l) {
        l = l || {};
        var a = 0;
        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING) {
            var c;
            return typeof o.lastIndexOf == "function" ? c = o.slice(o.lastIndexOf("\0") + 1, o.length) : c = o.slice(String.prototype.lastIndexOf.call(o, "\0") + 1, o.length),
            c
        }
        if (o.length < 4)
            return null;
        if (l.type === 1) {
            if (o[0] !== 0 || o[1] !== 1)
                return null;
            for (a = 3; o[a] !== 0; )
                if (o[a] != 255 || ++a >= o.length)
                    return null
        } else {
            if (o[0] !== 0 || o[1] !== 2)
                return null;
            for (a = 3; o[a] !== 0; )
                if (++a >= o.length)
                    return null
        }
        return o.slice(a + 1, o.length)
    }
    ,
    i.prototype.sign = function(o) {
        var l = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;
        if (this.options.environment === "browser") {
            l = SIGN_ALG_TO_HASH_ALIASES[l] || l;
            var a = crypt$1.createHash(l);
            a.update(o);
            var c = this.pkcs1pad(a.digest(), l)
              , u = this.key.$doPrivate(new BigInteger$1(c)).toBuffer(this.key.encryptedDataLength);
            return u
        } else {
            var h = crypt$1.createSign("RSA-" + l.toUpperCase());
            return h.update(o),
            h.sign(this.options.rsaUtils.exportKey("private"))
        }
    }
    ,
    i.prototype.verify = function(o, l, a) {
        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING)
            return !1;
        var c = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;
        if (this.options.environment === "browser") {
            c = SIGN_ALG_TO_HASH_ALIASES[c] || c,
            a && (l = Buffer$G.from(l, a));
            var u = crypt$1.createHash(c);
            u.update(o);
            var h = this.pkcs1pad(u.digest(), c)
              , m = this.key.$doPublic(new BigInteger$1(l));
            return m.toBuffer().toString("hex") == h.toString("hex")
        } else {
            var d = crypt$1.createVerify("RSA-" + c.toUpperCase());
            return d.update(o),
            d.verify(this.options.rsaUtils.exportKey("public"), l, a)
        }
    }
    ,
    i.prototype.pkcs0pad = function(o) {
        var l = Buffer$G.alloc(this.key.maxMessageLength - o.length);
        return l.fill(0),
        Buffer$G.concat([l, o])
    }
    ,
    i.prototype.pkcs0unpad = function(o) {
        var l;
        return typeof o.lastIndexOf == "function" ? l = o.slice(o.lastIndexOf("\0") + 1, o.length) : l = o.slice(String.prototype.lastIndexOf.call(o, "\0") + 1, o.length),
        l
    }
    ,
    i.prototype.pkcs1pad = function(o, l) {
        var a = SIGN_INFO_HEAD[l];
        if (!a)
            throw Error("Unsupported hash algorithm");
        var c = Buffer$G.concat([a, o]);
        if (c.length + 10 > this.key.encryptedDataLength)
            throw Error("Key is too short for signing algorithm (" + l + ")");
        var u = Buffer$G.alloc(this.key.encryptedDataLength - c.length - 1);
        u.fill(255, 0, u.length - 1),
        u[0] = 1,
        u[u.length - 1] = 0;
        var h = Buffer$G.concat([u, c]);
        return h
    }
    ,
    new i(e,n)
}
;
var pkcs1Exports$1 = pkcs1$1.exports
  , oaep = {
    exports: {}
};
(function(e) {
    var n = requireCryptoBrowserify();
    e.exports = {
        isEncryption: !0,
        isSignature: !1
    },
    e.exports.digestLength = {
        md4: 16,
        md5: 16,
        ripemd160: 20,
        rmd160: 20,
        sha1: 20,
        sha224: 28,
        sha256: 32,
        sha384: 48,
        sha512: 64
    };
    var i = "sha1";
    e.exports.eme_oaep_mgf1 = function(o, l, a) {
        a = a || i;
        for (var c = e.exports.digestLength[a], u = Math.ceil(l / c), h = Buffer$G.alloc(c * u), m = Buffer$G.alloc(4), d = 0; d < u; ++d) {
            var p = n.createHash(a);
            p.update(o),
            m.writeUInt32BE(d, 0),
            p.update(m),
            p.digest().copy(h, d * c)
        }
        return h.slice(0, l)
    }
    ,
    e.exports.makeScheme = function(o, l) {
        function a(c, u) {
            this.key = c,
            this.options = u
        }
        return a.prototype.maxMessageLength = function() {
            return this.key.encryptedDataLength - 2 * e.exports.digestLength[this.options.encryptionSchemeOptions.hash || i] - 2
        }
        ,
        a.prototype.encPad = function(c) {
            var u = this.options.encryptionSchemeOptions.hash || i
              , h = this.options.encryptionSchemeOptions.mgf || e.exports.eme_oaep_mgf1
              , m = this.options.encryptionSchemeOptions.label || Buffer$G.alloc(0)
              , d = this.key.encryptedDataLength
              , p = e.exports.digestLength[u];
            if (c.length > d - 2 * p - 2)
                throw new Error("Message is too long to encode into an encoded message with a length of " + d + " bytes, increaseemLen to fix this error (minimum value for given parameters and options: " + (d - 2 * p - 2) + ")");
            var b = n.createHash(u);
            b.update(m),
            b = b.digest();
            var g = Buffer$G.alloc(d - c.length - 2 * p - 1);
            g.fill(0),
            g[g.length - 1] = 1;
            for (var $ = Buffer$G.concat([b, g, c]), N = n.randomBytes(p), I = h(N, $.length, u), L = 0; L < $.length; L++)
                $[L] ^= I[L];
            for (I = h($, p, u),
            L = 0; L < N.length; L++)
                N[L] ^= I[L];
            var T = Buffer$G.alloc(1 + N.length + $.length);
            return T[0] = 0,
            N.copy(T, 1),
            $.copy(T, 1 + N.length),
            T
        }
        ,
        a.prototype.encUnPad = function(c) {
            var u = this.options.encryptionSchemeOptions.hash || i
              , h = this.options.encryptionSchemeOptions.mgf || e.exports.eme_oaep_mgf1
              , m = this.options.encryptionSchemeOptions.label || Buffer$G.alloc(0)
              , d = e.exports.digestLength[u];
            if (c.length < 2 * d + 2)
                throw new Error("Error decoding message, the supplied message is not long enough to be a valid OAEP encoded message");
            for (var p = c.slice(1, d + 1), b = c.slice(1 + d), g = h(b, d, u), $ = 0; $ < p.length; $++)
                p[$] ^= g[$];
            for (g = h(p, b.length, u),
            $ = 0; $ < b.length; $++)
                b[$] ^= g[$];
            var N = n.createHash(u);
            N.update(m),
            N = N.digest();
            var I = b.slice(0, d);
            if (I.toString("hex") != N.toString("hex"))
                throw new Error("Error decoding message, the lHash calculated from the label provided and the lHash in the encrypted data do not match.");
            for ($ = d; b[$++] === 0 && $ < b.length; )
                ;
            if (b[$ - 1] != 1)
                throw new Error("Error decoding message, there is no padding message separator byte");
            return b.slice($)
        }
        ,
        new a(o,l)
    }
}
)(oaep);
var oaepExports = oaep.exports, pss = {
    exports: {}
}, hasRequiredPss;
function requirePss() {
    if (hasRequiredPss)
        return pss.exports;
    hasRequiredPss = 1;
    var e = jsbn
      , n = requireCryptoBrowserify();
    pss.exports = {
        isEncryption: !1,
        isSignature: !0
    };
    var i = "sha1"
      , o = 20;
    return pss.exports.makeScheme = function(l, a) {
        var c = requireSchemes().pkcs1_oaep;
        function u(h, m) {
            this.key = h,
            this.options = m
        }
        return u.prototype.sign = function(h) {
            var m = n.createHash(this.options.signingSchemeOptions.hash || i);
            m.update(h);
            var d = this.emsa_pss_encode(m.digest(), this.key.keySize - 1);
            return this.key.$doPrivate(new e(d)).toBuffer(this.key.encryptedDataLength)
        }
        ,
        u.prototype.verify = function(h, m, d) {
            d && (m = Buffer$G.from(m, d)),
            m = new e(m);
            var p = Math.ceil((this.key.keySize - 1) / 8)
              , b = this.key.$doPublic(m).toBuffer(p)
              , g = n.createHash(this.options.signingSchemeOptions.hash || i);
            return g.update(h),
            this.emsa_pss_verify(g.digest(), b, this.key.keySize - 1)
        }
        ,
        u.prototype.emsa_pss_encode = function(h, m) {
            var d = this.options.signingSchemeOptions.hash || i
              , p = this.options.signingSchemeOptions.mgf || c.eme_oaep_mgf1
              , b = this.options.signingSchemeOptions.saltLength || o
              , g = c.digestLength[d]
              , $ = Math.ceil(m / 8);
            if ($ < g + b + 2)
                throw new Error("Output length passed to emBits(" + m + ") is too small for the options specified(" + d + ", " + b + "). To fix this issue increase the value of emBits. (minimum size: " + (8 * g + 8 * b + 9) + ")");
            var N = n.randomBytes(b)
              , I = Buffer$G.alloc(8 + g + b);
            I.fill(0, 0, 8),
            h.copy(I, 8),
            N.copy(I, 8 + h.length);
            var L = n.createHash(d);
            L.update(I),
            L = L.digest();
            var T = Buffer$G.alloc($ - N.length - g - 2);
            T.fill(0);
            var M = Buffer$G.alloc(T.length + 1 + N.length);
            T.copy(M),
            M[T.length] = 1,
            N.copy(M, T.length + 1);
            for (var q = p(L, M.length, d), Q = Buffer$G.alloc(M.length), Y = 0; Y < q.length; Y++)
                Q[Y] = M[Y] ^ q[Y];
            var ee = 8 * $ - m
              , ie = 255 ^ 255 >> 8 - ee << 8 - ee;
            Q[0] = Q[0] & ie;
            var te = Buffer$G.alloc(Q.length + L.length + 1);
            return Q.copy(te, 0),
            L.copy(te, Q.length),
            te[te.length - 1] = 188,
            te
        }
        ,
        u.prototype.emsa_pss_verify = function(h, m, d) {
            var p = this.options.signingSchemeOptions.hash || i
              , b = this.options.signingSchemeOptions.mgf || c.eme_oaep_mgf1
              , g = this.options.signingSchemeOptions.saltLength || o
              , $ = c.digestLength[p]
              , N = Math.ceil(d / 8);
            if (N < $ + g + 2 || m[m.length - 1] != 188)
                return !1;
            var I = Buffer$G.alloc(N - $ - 1);
            m.copy(I, 0, 0, N - $ - 1);
            for (var L = 0, T = 0, M = 8 * N - d; T < M; T++)
                L |= 1 << 7 - T;
            if (I[0] & L)
                return !1;
            var q = m.slice(N - $ - 1, N - 1)
              , Q = b(q, I.length, p);
            for (T = 0; T < I.length; T++)
                I[T] ^= Q[T];
            for (M = 8 * N - d,
            L = 255 ^ 255 >> 8 - M << 8 - M,
            I[0] = I[0] & L,
            T = 0; I[T] === 0 && T < I.length; T++)
                ;
            if (I[T] != 1)
                return !1;
            var Y = I.slice(I.length - g)
              , ee = Buffer$G.alloc(8 + $ + g);
            ee.fill(0, 0, 8),
            h.copy(ee, 8),
            Y.copy(ee, 8 + h.length);
            var ie = n.createHash(p);
            return ie.update(ee),
            ie = ie.digest(),
            q.toString("hex") === ie.toString("hex")
        }
        ,
        new u(l,a)
    }
    ,
    pss.exports
}
var hasRequiredSchemes;
function requireSchemes() {
    return hasRequiredSchemes || (hasRequiredSchemes = 1,
    function(e) {
        e.exports = {
            pkcs1: pkcs1Exports$1,
            pkcs1_oaep: oaepExports,
            pss: requirePss(),
            isEncryption: function(n) {
                return e.exports[n] && e.exports[n].isEncryption
            },
            isSignature: function(n) {
                return e.exports[n] && e.exports[n].isSignature
            }
        }
    }(schemes$2)),
    schemes$2.exports
}
var js, hasRequiredJs;
function requireJs() {
    if (hasRequiredJs)
        return js;
    hasRequiredJs = 1;
    var e = jsbn
      , n = requireSchemes();
    return js = function(i, o) {
        var l = n.pkcs1.makeScheme(i, o);
        return {
            encrypt: function(a, c) {
                var u, h;
                return c ? (u = new e(l.encPad(a, {
                    type: 1
                })),
                h = i.$doPrivate(u)) : (u = new e(i.encryptionScheme.encPad(a)),
                h = i.$doPublic(u)),
                h.toBuffer(i.encryptedDataLength)
            },
            decrypt: function(a, c) {
                var u, h = new e(a);
                return c ? (u = i.$doPublic(h),
                l.encUnPad(u.toBuffer(i.encryptedDataLength), {
                    type: 1
                })) : (u = i.$doPrivate(h),
                i.encryptionScheme.encUnPad(u.toBuffer(i.encryptedDataLength)))
            }
        }
    }
    ,
    js
}
var io, hasRequiredIo;
function requireIo() {
    if (hasRequiredIo)
        return io;
    hasRequiredIo = 1;
    var e = requireCryptoBrowserify()
      , n = require$$0
      , i = requireSchemes();
    return io = function(o, l) {
        var a = i.pkcs1.makeScheme(o, l);
        return {
            encrypt: function(c, u) {
                var h;
                if (u)
                    return h = n.RSA_PKCS1_PADDING,
                    l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (h = l.encryptionSchemeOptions.padding),
                    e.privateEncrypt({
                        key: l.rsaUtils.exportKey("private"),
                        padding: h
                    }, c);
                h = n.RSA_PKCS1_OAEP_PADDING,
                l.encryptionScheme === "pkcs1" && (h = n.RSA_PKCS1_PADDING),
                l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (h = l.encryptionSchemeOptions.padding);
                var m = c;
                return h === n.RSA_NO_PADDING && (m = a.pkcs0pad(c)),
                e.publicEncrypt({
                    key: l.rsaUtils.exportKey("public"),
                    padding: h
                }, m)
            },
            decrypt: function(c, u) {
                var h;
                if (u)
                    return h = n.RSA_PKCS1_PADDING,
                    l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (h = l.encryptionSchemeOptions.padding),
                    e.publicDecrypt({
                        key: l.rsaUtils.exportKey("public"),
                        padding: h
                    }, c);
                h = n.RSA_PKCS1_OAEP_PADDING,
                l.encryptionScheme === "pkcs1" && (h = n.RSA_PKCS1_PADDING),
                l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (h = l.encryptionSchemeOptions.padding);
                var m = e.privateDecrypt({
                    key: l.rsaUtils.exportKey("private"),
                    padding: h
                }, c);
                return h === n.RSA_NO_PADDING ? a.pkcs0unpad(m) : m
            }
        }
    }
    ,
    io
}
var node12, hasRequiredNode12;
function requireNode12() {
    if (hasRequiredNode12)
        return node12;
    hasRequiredNode12 = 1;
    var e = requireCryptoBrowserify()
      , n = require$$0
      , i = requireSchemes();
    return node12 = function(o, l) {
        var a = requireJs()(o, l)
          , c = i.pkcs1.makeScheme(o, l);
        return {
            encrypt: function(u, h) {
                if (h)
                    return a.encrypt(u, h);
                var m = n.RSA_PKCS1_OAEP_PADDING;
                l.encryptionScheme === "pkcs1" && (m = n.RSA_PKCS1_PADDING),
                l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (m = l.encryptionSchemeOptions.padding);
                var d = u;
                return m === n.RSA_NO_PADDING && (d = c.pkcs0pad(u)),
                e.publicEncrypt({
                    key: l.rsaUtils.exportKey("public"),
                    padding: m
                }, d)
            },
            decrypt: function(u, h) {
                if (h)
                    return a.decrypt(u, h);
                var m = n.RSA_PKCS1_OAEP_PADDING;
                l.encryptionScheme === "pkcs1" && (m = n.RSA_PKCS1_PADDING),
                l.encryptionSchemeOptions && l.encryptionSchemeOptions.padding && (m = l.encryptionSchemeOptions.padding);
                var d = e.privateDecrypt({
                    key: l.rsaUtils.exportKey("private"),
                    padding: m
                }, u);
                return m === n.RSA_NO_PADDING ? c.pkcs0unpad(d) : d
            }
        }
    }
    ,
    node12
}
var crypt = requireCryptoBrowserify()
  , encryptEngines$1 = {
    getEngine: function(e, n) {
        var i = requireJs();
        return n.environment === "node" && typeof crypt.publicEncrypt == "function" && typeof crypt.privateDecrypt == "function" && (typeof crypt.privateEncrypt == "function" && typeof crypt.publicDecrypt == "function" ? i = requireIo() : i = requireNode12()),
        i(e, n)
    }
}
  , _$1 = utils$2._;
requireCryptoBrowserify();
var BigInteger = jsbn
  , utils$1 = utils$2
  , schemes$1 = requireSchemes()
  , encryptEngines = encryptEngines$1;
rsa$1.BigInteger = BigInteger;
rsa$1.Key = function() {
    function e() {
        this.n = null,
        this.e = 0,
        this.d = null,
        this.p = null,
        this.q = null,
        this.dmp1 = null,
        this.dmq1 = null,
        this.coeff = null
    }
    return e.prototype.setOptions = function(n) {
        var i = schemes$1[n.signingScheme]
          , o = schemes$1[n.encryptionScheme];
        i === o ? this.signingScheme = this.encryptionScheme = o.makeScheme(this, n) : (this.encryptionScheme = o.makeScheme(this, n),
        this.signingScheme = i.makeScheme(this, n)),
        this.encryptEngine = encryptEngines.getEngine(this, n)
    }
    ,
    e.prototype.generate = function(n, i) {
        var o = n >> 1;
        this.e = parseInt(i, 16);
        for (var l = new BigInteger(i,16); ; ) {
            for (; this.p = new BigInteger(n - o,1),
            !(this.p.subtract(BigInteger.ONE).gcd(l).compareTo(BigInteger.ONE) === 0 && this.p.isProbablePrime(10)); )
                ;
            for (; this.q = new BigInteger(o,1),
            !(this.q.subtract(BigInteger.ONE).gcd(l).compareTo(BigInteger.ONE) === 0 && this.q.isProbablePrime(10)); )
                ;
            if (this.p.compareTo(this.q) <= 0) {
                var a = this.p;
                this.p = this.q,
                this.q = a
            }
            var c = this.p.subtract(BigInteger.ONE)
              , u = this.q.subtract(BigInteger.ONE)
              , h = c.multiply(u);
            if (h.gcd(l).compareTo(BigInteger.ONE) === 0) {
                if (this.n = this.p.multiply(this.q),
                this.n.bitLength() < n)
                    continue;
                this.d = l.modInverse(h),
                this.dmp1 = this.d.mod(c),
                this.dmq1 = this.d.mod(u),
                this.coeff = this.q.modInverse(this.p);
                break
            }
        }
        this.$$recalculateCache()
    }
    ,
    e.prototype.setPrivate = function(n, i, o, l, a, c, u, h) {
        if (n && i && o && n.length > 0 && (_$1.isNumber(i) || i.length > 0) && o.length > 0)
            this.n = new BigInteger(n),
            this.e = _$1.isNumber(i) ? i : utils$1.get32IntFromBuffer(i, 0),
            this.d = new BigInteger(o),
            l && a && c && u && h && (this.p = new BigInteger(l),
            this.q = new BigInteger(a),
            this.dmp1 = new BigInteger(c),
            this.dmq1 = new BigInteger(u),
            this.coeff = new BigInteger(h)),
            this.$$recalculateCache();
        else
            throw Error("Invalid RSA private key")
    }
    ,
    e.prototype.setPublic = function(n, i) {
        if (n && i && n.length > 0 && (_$1.isNumber(i) || i.length > 0))
            this.n = new BigInteger(n),
            this.e = _$1.isNumber(i) ? i : utils$1.get32IntFromBuffer(i, 0),
            this.$$recalculateCache();
        else
            throw Error("Invalid RSA public key")
    }
    ,
    e.prototype.$doPrivate = function(n) {
        if (this.p || this.q)
            return n.modPow(this.d, this.n);
        for (var i = n.mod(this.p).modPow(this.dmp1, this.p), o = n.mod(this.q).modPow(this.dmq1, this.q); i.compareTo(o) < 0; )
            i = i.add(this.p);
        return i.subtract(o).multiply(this.coeff).mod(this.p).multiply(this.q).add(o)
    }
    ,
    e.prototype.$doPublic = function(n) {
        return n.modPowInt(this.e, this.n)
    }
    ,
    e.prototype.encrypt = function(n, i) {
        var o = []
          , l = []
          , a = n.length
          , c = Math.ceil(a / this.maxMessageLength) || 1
          , u = Math.ceil(a / c || 1);
        if (c == 1)
            o.push(n);
        else
            for (var h = 0; h < c; h++)
                o.push(n.slice(h * u, (h + 1) * u));
        for (var m = 0; m < o.length; m++)
            l.push(this.encryptEngine.encrypt(o[m], i));
        return Buffer$G.concat(l)
    }
    ,
    e.prototype.decrypt = function(n, i) {
        if (n.length % this.encryptedDataLength > 0)
            throw Error("Incorrect data or key");
        for (var o = [], l = 0, a = 0, c = n.length / this.encryptedDataLength, u = 0; u < c; u++)
            l = u * this.encryptedDataLength,
            a = l + this.encryptedDataLength,
            o.push(this.encryptEngine.decrypt(n.slice(l, Math.min(a, n.length)), i));
        return Buffer$G.concat(o)
    }
    ,
    e.prototype.sign = function(n) {
        return this.signingScheme.sign.apply(this.signingScheme, arguments)
    }
    ,
    e.prototype.verify = function(n, i, o) {
        return this.signingScheme.verify.apply(this.signingScheme, arguments)
    }
    ,
    e.prototype.isPrivate = function() {
        return this.n && this.e && this.d && !0 || !1
    }
    ,
    e.prototype.isPublic = function(n) {
        return this.n && this.e && !(n && this.d) || !1
    }
    ,
    Object.defineProperty(e.prototype, "keySize", {
        get: function() {
            return this.cache.keyBitLength
        }
    }),
    Object.defineProperty(e.prototype, "encryptedDataLength", {
        get: function() {
            return this.cache.keyByteLength
        }
    }),
    Object.defineProperty(e.prototype, "maxMessageLength", {
        get: function() {
            return this.encryptionScheme.maxMessageLength()
        }
    }),
    e.prototype.$$recalculateCache = function() {
        this.cache = this.cache || {},
        this.cache.keyBitLength = this.n.bitLength(),
        this.cache.keyByteLength = this.cache.keyBitLength + 6 >> 3
    }
    ,
    e
}();
var ber = {
    exports: {}
}, errors$3 = {
    newInvalidAsn1Error: function(e) {
        var n = new Error;
        return n.name = "InvalidAsn1Error",
        n.message = e || "",
        n
    }
}, types = {
    EOC: 0,
    Boolean: 1,
    Integer: 2,
    BitString: 3,
    OctetString: 4,
    Null: 5,
    OID: 6,
    ObjectDescriptor: 7,
    External: 8,
    Real: 9,
    Enumeration: 10,
    PDV: 11,
    Utf8String: 12,
    RelativeOID: 13,
    Sequence: 16,
    Set: 17,
    NumericString: 18,
    PrintableString: 19,
    T61String: 20,
    VideotexString: 21,
    IA5String: 22,
    UTCTime: 23,
    GeneralizedTime: 24,
    GraphicString: 25,
    VisibleString: 26,
    GeneralString: 28,
    UniversalString: 29,
    CharacterString: 30,
    BMPString: 31,
    Constructor: 32,
    Context: 128
}, assert$2 = {
    exports: {}
}, errors$2 = {}, hasRequiredErrors;
function requireErrors() {
    if (hasRequiredErrors)
        return errors$2;
    hasRequiredErrors = 1;
    function e(T) {
        "@babel/helpers - typeof";
        return e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(M) {
            return typeof M
        }
        : function(M) {
            return M && typeof Symbol == "function" && M.constructor === Symbol && M !== Symbol.prototype ? "symbol" : typeof M
        }
        ,
        e(T)
    }
    function n(T, M, q) {
        return Object.defineProperty(T, "prototype", {
            writable: !1
        }),
        T
    }
    function i(T, M) {
        if (!(T instanceof M))
            throw new TypeError("Cannot call a class as a function")
    }
    function o(T, M) {
        if (typeof M != "function" && M !== null)
            throw new TypeError("Super expression must either be null or a function");
        T.prototype = Object.create(M && M.prototype, {
            constructor: {
                value: T,
                writable: !0,
                configurable: !0
            }
        }),
        Object.defineProperty(T, "prototype", {
            writable: !1
        }),
        M && l(T, M)
    }
    function l(T, M) {
        return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(Q, Y) {
            return Q.__proto__ = Y,
            Q
        }
        ,
        l(T, M)
    }
    function a(T) {
        var M = h();
        return function() {
            var Q = m(T), Y;
            if (M) {
                var ee = m(this).constructor;
                Y = Reflect.construct(Q, arguments, ee)
            } else
                Y = Q.apply(this, arguments);
            return c(this, Y)
        }
    }
    function c(T, M) {
        if (M && (e(M) === "object" || typeof M == "function"))
            return M;
        if (M !== void 0)
            throw new TypeError("Derived constructors may only return object or undefined");
        return u(T)
    }
    function u(T) {
        if (T === void 0)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return T
    }
    function h() {
        if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
            return !1;
        if (typeof Proxy == "function")
            return !0;
        try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
            !0
        } catch {
            return !1
        }
    }
    function m(T) {
        return m = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(q) {
            return q.__proto__ || Object.getPrototypeOf(q)
        }
        ,
        m(T)
    }
    var d = {}, p, b;
    function g(T, M, q) {
        q || (q = Error);
        function Q(ee, ie, te) {
            return typeof M == "string" ? M : M(ee, ie, te)
        }
        var Y = function(ee) {
            o(te, ee);
            var ie = a(te);
            function te(ne, V, w) {
                var x;
                return i(this, te),
                x = ie.call(this, Q(ne, V, w)),
                x.code = T,
                x
            }
            return n(te)
        }(q);
        d[T] = Y
    }
    function $(T, M) {
        if (Array.isArray(T)) {
            var q = T.length;
            return T = T.map(function(Q) {
                return String(Q)
            }),
            q > 2 ? "one of ".concat(M, " ").concat(T.slice(0, q - 1).join(", "), ", or ") + T[q - 1] : q === 2 ? "one of ".concat(M, " ").concat(T[0], " or ").concat(T[1]) : "of ".concat(M, " ").concat(T[0])
        } else
            return "of ".concat(M, " ").concat(String(T))
    }
    function N(T, M, q) {
        return T.substr(0, M.length) === M
    }
    function I(T, M, q) {
        return (q === void 0 || q > T.length) && (q = T.length),
        T.substring(q - M.length, q) === M
    }
    function L(T, M, q) {
        return typeof q != "number" && (q = 0),
        q + M.length > T.length ? !1 : T.indexOf(M, q) !== -1
    }
    return g("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError),
    g("ERR_INVALID_ARG_TYPE", function(T, M, q) {
        p === void 0 && (p = requireAssert()),
        p(typeof T == "string", "'name' must be a string");
        var Q;
        typeof M == "string" && N(M, "not ") ? (Q = "must not be",
        M = M.replace(/^not /, "")) : Q = "must be";
        var Y;
        if (I(T, " argument"))
            Y = "The ".concat(T, " ").concat(Q, " ").concat($(M, "type"));
        else {
            var ee = L(T, ".") ? "property" : "argument";
            Y = 'The "'.concat(T, '" ').concat(ee, " ").concat(Q, " ").concat($(M, "type"))
        }
        return Y += ". Received type ".concat(e(q)),
        Y
    }, TypeError),
    g("ERR_INVALID_ARG_VALUE", function(T, M) {
        var q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
        b === void 0 && (b = util$3);
        var Q = b.inspect(M);
        return Q.length > 128 && (Q = "".concat(Q.slice(0, 128), "...")),
        "The argument '".concat(T, "' ").concat(q, ". Received ").concat(Q)
    }, TypeError),
    g("ERR_INVALID_RETURN_VALUE", function(T, M, q) {
        var Q;
        return q && q.constructor && q.constructor.name ? Q = "instance of ".concat(q.constructor.name) : Q = "type ".concat(e(q)),
        "Expected ".concat(T, ' to be returned from the "').concat(M, '"') + " function but got ".concat(Q, ".")
    }, TypeError),
    g("ERR_MISSING_ARGS", function() {
        for (var T = arguments.length, M = new Array(T), q = 0; q < T; q++)
            M[q] = arguments[q];
        p === void 0 && (p = requireAssert()),
        p(M.length > 0, "At least one arg needs to be specified");
        var Q = "The "
          , Y = M.length;
        switch (M = M.map(function(ee) {
            return '"'.concat(ee, '"')
        }),
        Y) {
        case 1:
            Q += "".concat(M[0], " argument");
            break;
        case 2:
            Q += "".concat(M[0], " and ").concat(M[1], " arguments");
            break;
        default:
            Q += M.slice(0, Y - 1).join(", "),
            Q += ", and ".concat(M[Y - 1], " arguments");
            break
        }
        return "".concat(Q, " must be specified")
    }, TypeError),
    errors$2.codes = d,
    errors$2
}
var assertion_error, hasRequiredAssertion_error;
function requireAssertion_error() {
    if (hasRequiredAssertion_error)
        return assertion_error;
    hasRequiredAssertion_error = 1;
    function e(P, y) {
        var A = Object.keys(P);
        if (Object.getOwnPropertySymbols) {
            var E = Object.getOwnPropertySymbols(P);
            y && (E = E.filter(function(k) {
                return Object.getOwnPropertyDescriptor(P, k).enumerable
            })),
            A.push.apply(A, E)
        }
        return A
    }
    function n(P) {
        for (var y = 1; y < arguments.length; y++) {
            var A = arguments[y] != null ? arguments[y] : {};
            y % 2 ? e(Object(A), !0).forEach(function(E) {
                i(P, E, A[E])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(P, Object.getOwnPropertyDescriptors(A)) : e(Object(A)).forEach(function(E) {
                Object.defineProperty(P, E, Object.getOwnPropertyDescriptor(A, E))
            })
        }
        return P
    }
    function i(P, y, A) {
        return y = c(y),
        y in P ? Object.defineProperty(P, y, {
            value: A,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : P[y] = A,
        P
    }
    function o(P, y) {
        if (!(P instanceof y))
            throw new TypeError("Cannot call a class as a function")
    }
    function l(P, y) {
        for (var A = 0; A < y.length; A++) {
            var E = y[A];
            E.enumerable = E.enumerable || !1,
            E.configurable = !0,
            "value"in E && (E.writable = !0),
            Object.defineProperty(P, c(E.key), E)
        }
    }
    function a(P, y, A) {
        return y && l(P.prototype, y),
        Object.defineProperty(P, "prototype", {
            writable: !1
        }),
        P
    }
    function c(P) {
        var y = u(P, "string");
        return T(y) === "symbol" ? y : String(y)
    }
    function u(P, y) {
        if (T(P) !== "object" || P === null)
            return P;
        var A = P[Symbol.toPrimitive];
        if (A !== void 0) {
            var E = A.call(P, y);
            if (T(E) !== "object")
                return E;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return String(P)
    }
    function h(P, y) {
        if (typeof y != "function" && y !== null)
            throw new TypeError("Super expression must either be null or a function");
        P.prototype = Object.create(y && y.prototype, {
            constructor: {
                value: P,
                writable: !0,
                configurable: !0
            }
        }),
        Object.defineProperty(P, "prototype", {
            writable: !1
        }),
        y && I(P, y)
    }
    function m(P) {
        var y = $();
        return function() {
            var E = L(P), k;
            if (y) {
                var H = L(this).constructor;
                k = Reflect.construct(E, arguments, H)
            } else
                k = E.apply(this, arguments);
            return d(this, k)
        }
    }
    function d(P, y) {
        if (y && (T(y) === "object" || typeof y == "function"))
            return y;
        if (y !== void 0)
            throw new TypeError("Derived constructors may only return object or undefined");
        return p(P)
    }
    function p(P) {
        if (P === void 0)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return P
    }
    function b(P) {
        var y = typeof Map == "function" ? new Map : void 0;
        return b = function(E) {
            if (E === null || !N(E))
                return E;
            if (typeof E != "function")
                throw new TypeError("Super expression must either be null or a function");
            if (typeof y < "u") {
                if (y.has(E))
                    return y.get(E);
                y.set(E, k)
            }
            function k() {
                return g(E, arguments, L(this).constructor)
            }
            return k.prototype = Object.create(E.prototype, {
                constructor: {
                    value: k,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            I(k, E)
        }
        ,
        b(P)
    }
    function g(P, y, A) {
        return $() ? g = Reflect.construct.bind() : g = function(k, H, J) {
            var j = [null];
            j.push.apply(j, H);
            var F = Function.bind.apply(k, j)
              , U = new F;
            return J && I(U, J.prototype),
            U
        }
        ,
        g.apply(null, arguments)
    }
    function $() {
        if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
            return !1;
        if (typeof Proxy == "function")
            return !0;
        try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
            !0
        } catch {
            return !1
        }
    }
    function N(P) {
        return Function.toString.call(P).indexOf("[native code]") !== -1
    }
    function I(P, y) {
        return I = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(E, k) {
            return E.__proto__ = k,
            E
        }
        ,
        I(P, y)
    }
    function L(P) {
        return L = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
            return A.__proto__ || Object.getPrototypeOf(A)
        }
        ,
        L(P)
    }
    function T(P) {
        "@babel/helpers - typeof";
        return T = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y
        }
        : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y
        }
        ,
        T(P)
    }
    var M = util$3
      , q = M.inspect
      , Q = requireErrors()
      , Y = Q.codes.ERR_INVALID_ARG_TYPE;
    function ee(P, y, A) {
        return (A === void 0 || A > P.length) && (A = P.length),
        P.substring(A - y.length, A) === y
    }
    function ie(P, y) {
        if (y = Math.floor(y),
        P.length == 0 || y == 0)
            return "";
        var A = P.length * y;
        for (y = Math.floor(Math.log(y) / Math.log(2)); y; )
            P += P,
            y--;
        return P += P.substring(0, A - P.length),
        P
    }
    var te = ""
      , ne = ""
      , V = ""
      , w = ""
      , x = {
        deepStrictEqual: "Expected values to be strictly deep-equal:",
        strictEqual: "Expected values to be strictly equal:",
        strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
        deepEqual: "Expected values to be loosely deep-equal:",
        equal: "Expected values to be loosely equal:",
        notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
        notStrictEqual: 'Expected "actual" to be strictly unequal to:',
        notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
        notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
        notEqual: 'Expected "actual" to be loosely unequal to:',
        notIdentical: "Values identical but not reference-equal:"
    }
      , v = 10;
    function S(P) {
        var y = Object.keys(P)
          , A = Object.create(Object.getPrototypeOf(P));
        return y.forEach(function(E) {
            A[E] = P[E]
        }),
        Object.defineProperty(A, "message", {
            value: P.message
        }),
        A
    }
    function D(P) {
        return q(P, {
            compact: !1,
            customInspect: !1,
            depth: 1e3,
            maxArrayLength: 1 / 0,
            showHidden: !1,
            breakLength: 1 / 0,
            showProxy: !1,
            sorted: !0,
            getters: !0
        })
    }
    function C(P, y, A) {
        var E = ""
          , k = ""
          , H = 0
          , J = ""
          , j = !1
          , F = D(P)
          , U = F.split(`
`)
          , re = D(y).split(`
`)
          , oe = 0
          , X = "";
        if (A === "strictEqual" && T(P) === "object" && T(y) === "object" && P !== null && y !== null && (A = "strictEqualObject"),
        U.length === 1 && re.length === 1 && U[0] !== re[0]) {
            var Z = U[0].length + re[0].length;
            if (Z <= v) {
                if ((T(P) !== "object" || P === null) && (T(y) !== "object" || y === null) && (P !== 0 || y !== 0))
                    return "".concat(x[A], `

`) + "".concat(U[0], " !== ").concat(re[0], `
`)
            } else if (A !== "strictEqualObject") {
                var se = process$1.stderr && process$1.stderr.isTTY ? process$1.stderr.columns : 80;
                if (Z < se) {
                    for (; U[0][oe] === re[0][oe]; )
                        oe++;
                    oe > 2 && (X = `
  `.concat(ie(" ", oe), "^"),
                    oe = 0)
                }
            }
        }
        for (var ue = U[U.length - 1], he = re[re.length - 1]; ue === he && (oe++ < 2 ? J = `
  `.concat(ue).concat(J) : E = ue,
        U.pop(),
        re.pop(),
        !(U.length === 0 || re.length === 0)); )
            ue = U[U.length - 1],
            he = re[re.length - 1];
        var ve = Math.max(U.length, re.length);
        if (ve === 0) {
            var ge = F.split(`
`);
            if (ge.length > 30)
                for (ge[26] = "".concat(te, "...").concat(w); ge.length > 27; )
                    ge.pop();
            return "".concat(x.notIdentical, `

`).concat(ge.join(`
`), `
`)
        }
        oe > 3 && (J = `
`.concat(te, "...").concat(w).concat(J),
        j = !0),
        E !== "" && (J = `
  `.concat(E).concat(J),
        E = "");
        var _e = 0
          , ce = x[A] + `
`.concat(ne, "+ actual").concat(w, " ").concat(V, "- expected").concat(w)
          , De = " ".concat(te, "...").concat(w, " Lines skipped");
        for (oe = 0; oe < ve; oe++) {
            var be = oe - H;
            if (U.length < oe + 1)
                be > 1 && oe > 2 && (be > 4 ? (k += `
`.concat(te, "...").concat(w),
                j = !0) : be > 3 && (k += `
  `.concat(re[oe - 2]),
                _e++),
                k += `
  `.concat(re[oe - 1]),
                _e++),
                H = oe,
                E += `
`.concat(V, "-").concat(w, " ").concat(re[oe]),
                _e++;
            else if (re.length < oe + 1)
                be > 1 && oe > 2 && (be > 4 ? (k += `
`.concat(te, "...").concat(w),
                j = !0) : be > 3 && (k += `
  `.concat(U[oe - 2]),
                _e++),
                k += `
  `.concat(U[oe - 1]),
                _e++),
                H = oe,
                k += `
`.concat(ne, "+").concat(w, " ").concat(U[oe]),
                _e++;
            else {
                var Ae = re[oe]
                  , Ee = U[oe]
                  , ae = Ee !== Ae && (!ee(Ee, ",") || Ee.slice(0, -1) !== Ae);
                ae && ee(Ae, ",") && Ae.slice(0, -1) === Ee && (ae = !1,
                Ee += ","),
                ae ? (be > 1 && oe > 2 && (be > 4 ? (k += `
`.concat(te, "...").concat(w),
                j = !0) : be > 3 && (k += `
  `.concat(U[oe - 2]),
                _e++),
                k += `
  `.concat(U[oe - 1]),
                _e++),
                H = oe,
                k += `
`.concat(ne, "+").concat(w, " ").concat(Ee),
                E += `
`.concat(V, "-").concat(w, " ").concat(Ae),
                _e += 2) : (k += E,
                E = "",
                (be === 1 || oe === 0) && (k += `
  `.concat(Ee),
                _e++))
            }
            if (_e > 20 && oe < ve - 2)
                return "".concat(ce).concat(De, `
`).concat(k, `
`).concat(te, "...").concat(w).concat(E, `
`) + "".concat(te, "...").concat(w)
        }
        return "".concat(ce).concat(j ? De : "", `
`).concat(k).concat(E).concat(J).concat(X)
    }
    var O = function(P, y) {
        h(E, P);
        var A = m(E);
        function E(k) {
            var H;
            if (o(this, E),
            T(k) !== "object" || k === null)
                throw new Y("options","Object",k);
            var J = k.message
              , j = k.operator
              , F = k.stackStartFn
              , U = k.actual
              , re = k.expected
              , oe = Error.stackTraceLimit;
            if (Error.stackTraceLimit = 0,
            J != null)
                H = A.call(this, String(J));
            else if (process$1.stderr && process$1.stderr.isTTY && (process$1.stderr && process$1.stderr.getColorDepth && process$1.stderr.getColorDepth() !== 1 ? (te = "\x1B[34m",
            ne = "\x1B[32m",
            w = "\x1B[39m",
            V = "\x1B[31m") : (te = "",
            ne = "",
            w = "",
            V = "")),
            T(U) === "object" && U !== null && T(re) === "object" && re !== null && "stack"in U && U instanceof Error && "stack"in re && re instanceof Error && (U = S(U),
            re = S(re)),
            j === "deepStrictEqual" || j === "strictEqual")
                H = A.call(this, C(U, re, j));
            else if (j === "notDeepStrictEqual" || j === "notStrictEqual") {
                var X = x[j]
                  , Z = D(U).split(`
`);
                if (j === "notStrictEqual" && T(U) === "object" && U !== null && (X = x.notStrictEqualObject),
                Z.length > 30)
                    for (Z[26] = "".concat(te, "...").concat(w); Z.length > 27; )
                        Z.pop();
                Z.length === 1 ? H = A.call(this, "".concat(X, " ").concat(Z[0])) : H = A.call(this, "".concat(X, `

`).concat(Z.join(`
`), `
`))
            } else {
                var se = D(U)
                  , ue = ""
                  , he = x[j];
                j === "notDeepEqual" || j === "notEqual" ? (se = "".concat(x[j], `

`).concat(se),
                se.length > 1024 && (se = "".concat(se.slice(0, 1021), "..."))) : (ue = "".concat(D(re)),
                se.length > 512 && (se = "".concat(se.slice(0, 509), "...")),
                ue.length > 512 && (ue = "".concat(ue.slice(0, 509), "...")),
                j === "deepEqual" || j === "equal" ? se = "".concat(he, `

`).concat(se, `

should equal

`) : ue = " ".concat(j, " ").concat(ue)),
                H = A.call(this, "".concat(se).concat(ue))
            }
            return Error.stackTraceLimit = oe,
            H.generatedMessage = !J,
            Object.defineProperty(p(H), "name", {
                value: "AssertionError [ERR_ASSERTION]",
                enumerable: !1,
                writable: !0,
                configurable: !0
            }),
            H.code = "ERR_ASSERTION",
            H.actual = U,
            H.expected = re,
            H.operator = j,
            Error.captureStackTrace && Error.captureStackTrace(p(H), F),
            H.stack,
            H.name = "AssertionError",
            d(H)
        }
        return a(E, [{
            key: "toString",
            value: function() {
                return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message)
            }
        }, {
            key: y,
            value: function(H, J) {
                return q(this, n(n({}, J), {}, {
                    customInspect: !1,
                    depth: 0
                }))
            }
        }]),
        E
    }(b(Error), q.custom);
    return assertion_error = O,
    assertion_error
}
var toStr = Object.prototype.toString, isArguments = function e(n) {
    var i = toStr.call(n)
      , o = i === "[object Arguments]";
    return o || (o = i !== "[object Array]" && n !== null && typeof n == "object" && typeof n.length == "number" && n.length >= 0 && toStr.call(n.callee) === "[object Function]"),
    o
}, implementation$5, hasRequiredImplementation$1;
function requireImplementation$1() {
    if (hasRequiredImplementation$1)
        return implementation$5;
    hasRequiredImplementation$1 = 1;
    var e;
    if (!Object.keys) {
        var n = Object.prototype.hasOwnProperty
          , i = Object.prototype.toString
          , o = isArguments
          , l = Object.prototype.propertyIsEnumerable
          , a = !l.call({
            toString: null
        }, "toString")
          , c = l.call(function() {}, "prototype")
          , u = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
          , h = function(b) {
            var g = b.constructor;
            return g && g.prototype === b
        }
          , m = {
            $applicationCache: !0,
            $console: !0,
            $external: !0,
            $frame: !0,
            $frameElement: !0,
            $frames: !0,
            $innerHeight: !0,
            $innerWidth: !0,
            $onmozfullscreenchange: !0,
            $onmozfullscreenerror: !0,
            $outerHeight: !0,
            $outerWidth: !0,
            $pageXOffset: !0,
            $pageYOffset: !0,
            $parent: !0,
            $scrollLeft: !0,
            $scrollTop: !0,
            $scrollX: !0,
            $scrollY: !0,
            $self: !0,
            $webkitIndexedDB: !0,
            $webkitStorageInfo: !0,
            $window: !0
        }
          , d = function() {
            if (typeof window > "u")
                return !1;
            for (var b in window)
                try {
                    if (!m["$" + b] && n.call(window, b) && window[b] !== null && typeof window[b] == "object")
                        try {
                            h(window[b])
                        } catch {
                            return !0
                        }
                } catch {
                    return !0
                }
            return !1
        }()
          , p = function(b) {
            if (typeof window > "u" || !d)
                return h(b);
            try {
                return h(b)
            } catch {
                return !1
            }
        };
        e = function(g) {
            var $ = g !== null && typeof g == "object"
              , N = i.call(g) === "[object Function]"
              , I = o(g)
              , L = $ && i.call(g) === "[object String]"
              , T = [];
            if (!$ && !N && !I)
                throw new TypeError("Object.keys called on a non-object");
            var M = c && N;
            if (L && g.length > 0 && !n.call(g, 0))
                for (var q = 0; q < g.length; ++q)
                    T.push(String(q));
            if (I && g.length > 0)
                for (var Q = 0; Q < g.length; ++Q)
                    T.push(String(Q));
            else
                for (var Y in g)
                    !(M && Y === "prototype") && n.call(g, Y) && T.push(String(Y));
            if (a)
                for (var ee = p(g), ie = 0; ie < u.length; ++ie)
                    !(ee && u[ie] === "constructor") && n.call(g, u[ie]) && T.push(u[ie]);
            return T
        }
    }
    return implementation$5 = e,
    implementation$5
}
var slice = Array.prototype.slice
  , isArgs = isArguments
  , origKeys = Object.keys
  , keysShim = origKeys ? function e(n) {
    return origKeys(n)
}
: requireImplementation$1()
  , originalKeys = Object.keys;
keysShim.shim = function e() {
    if (Object.keys) {
        var n = function() {
            var i = Object.keys(arguments);
            return i && i.length === arguments.length
        }(1, 2);
        n || (Object.keys = function(o) {
            return isArgs(o) ? originalKeys(slice.call(o)) : originalKeys(o)
        }
        )
    } else
        Object.keys = keysShim;
    return Object.keys || keysShim
}
;
var objectKeys$1 = keysShim, objectKeys = objectKeys$1, hasSymbols = shams$1(), callBound$1 = callBound$7, $Object = esObjectAtoms, $push = callBound$1("Array.prototype.push"), $propIsEnumerable = callBound$1("Object.prototype.propertyIsEnumerable"), originalGetSymbols = hasSymbols ? $Object.getOwnPropertySymbols : null, implementation$4 = function e(n, i) {
    if (n == null)
        throw new TypeError("target must be an object");
    var o = $Object(n);
    if (arguments.length === 1)
        return o;
    for (var l = 1; l < arguments.length; ++l) {
        var a = $Object(arguments[l])
          , c = objectKeys(a)
          , u = hasSymbols && ($Object.getOwnPropertySymbols || originalGetSymbols);
        if (u)
            for (var h = u(a), m = 0; m < h.length; ++m) {
                var d = h[m];
                $propIsEnumerable(a, d) && $push(c, d)
            }
        for (var p = 0; p < c.length; ++p) {
            var b = c[p];
            if ($propIsEnumerable(a, b)) {
                var g = a[b];
                o[b] = g
            }
        }
    }
    return o
}, implementation$3 = implementation$4, lacksProperEnumerationOrder = function() {
    if (!Object.assign)
        return !1;
    for (var e = "abcdefghijklmnopqrst", n = e.split(""), i = {}, o = 0; o < n.length; ++o)
        i[n[o]] = n[o];
    var l = Object.assign({}, i)
      , a = "";
    for (var c in l)
        a += c;
    return e !== a
}, assignHasPendingExceptions = function() {
    if (!Object.assign || !Object.preventExtensions)
        return !1;
    var e = Object.preventExtensions({
        1: 2
    });
    try {
        Object.assign(e, "xy")
    } catch {
        return e[1] === "y"
    }
    return !1
}, polyfill$2 = function e() {
    return !Object.assign || lacksProperEnumerationOrder() || assignHasPendingExceptions() ? implementation$3 : Object.assign
}, numberIsNaN = function(e) {
    return e !== e
}, implementation$2 = function e(n, i) {
    return n === 0 && i === 0 ? 1 / n === 1 / i : !!(n === i || numberIsNaN(n) && numberIsNaN(i))
}, implementation$1 = implementation$2, polyfill$1 = function e() {
    return typeof Object.is == "function" ? Object.is : implementation$1
}, GetIntrinsic = getIntrinsic, callBind = callBindExports, $indexOf = callBind(GetIntrinsic("String.prototype.indexOf")), callBound = function e(n, i) {
    var o = GetIntrinsic(n, !!i);
    return typeof o == "function" && $indexOf(n, ".prototype.") > -1 ? callBind(o) : o
}, defineProperties_1, hasRequiredDefineProperties;
function requireDefineProperties() {
    if (hasRequiredDefineProperties)
        return defineProperties_1;
    hasRequiredDefineProperties = 1;
    var e = objectKeys$1
      , n = typeof Symbol == "function" && typeof Symbol("foo") == "symbol"
      , i = Object.prototype.toString
      , o = Array.prototype.concat
      , l = defineDataProperty
      , a = function(m) {
        return typeof m == "function" && i.call(m) === "[object Function]"
    }
      , c = hasPropertyDescriptors_1()
      , u = function(m, d, p, b) {
        if (d in m) {
            if (b === !0) {
                if (m[d] === p)
                    return
            } else if (!a(b) || !b())
                return
        }
        c ? l(m, d, p, !0) : l(m, d, p)
    }
      , h = function(m, d) {
        var p = arguments.length > 2 ? arguments[2] : {}
          , b = e(d);
        n && (b = o.call(b, Object.getOwnPropertySymbols(d)));
        for (var g = 0; g < b.length; g += 1)
            u(m, b[g], d[b[g]], p[b[g]])
    };
    return h.supportsDescriptors = !!c,
    defineProperties_1 = h,
    defineProperties_1
}
var shim$1, hasRequiredShim$1;
function requireShim$1() {
    if (hasRequiredShim$1)
        return shim$1;
    hasRequiredShim$1 = 1;
    var e = polyfill$1
      , n = requireDefineProperties();
    return shim$1 = function() {
        var o = e();
        return n(Object, {
            is: o
        }, {
            is: function() {
                return Object.is !== o
            }
        }),
        o
    }
    ,
    shim$1
}
var objectIs, hasRequiredObjectIs;
function requireObjectIs() {
    if (hasRequiredObjectIs)
        return objectIs;
    hasRequiredObjectIs = 1;
    var e = requireDefineProperties()
      , n = callBindExports
      , i = implementation$2
      , o = polyfill$1
      , l = requireShim$1()
      , a = n(o(), Object);
    return e(a, {
        getPolyfill: o,
        implementation: i,
        shim: l
    }),
    objectIs = a,
    objectIs
}
var implementation, hasRequiredImplementation;
function requireImplementation() {
    return hasRequiredImplementation || (hasRequiredImplementation = 1,
    implementation = function(n) {
        return n !== n
    }
    ),
    implementation
}
var polyfill, hasRequiredPolyfill;
function requirePolyfill() {
    if (hasRequiredPolyfill)
        return polyfill;
    hasRequiredPolyfill = 1;
    var e = requireImplementation();
    return polyfill = function() {
        return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : e
    }
    ,
    polyfill
}
var shim, hasRequiredShim;
function requireShim() {
    if (hasRequiredShim)
        return shim;
    hasRequiredShim = 1;
    var e = requireDefineProperties()
      , n = requirePolyfill();
    return shim = function() {
        var o = n();
        return e(Number, {
            isNaN: o
        }, {
            isNaN: function() {
                return Number.isNaN !== o
            }
        }),
        o
    }
    ,
    shim
}
var isNan, hasRequiredIsNan;
function requireIsNan() {
    if (hasRequiredIsNan)
        return isNan;
    hasRequiredIsNan = 1;
    var e = callBindExports
      , n = requireDefineProperties()
      , i = requireImplementation()
      , o = requirePolyfill()
      , l = requireShim()
      , a = e(o(), Number);
    return n(a, {
        getPolyfill: o,
        implementation: i,
        shim: l
    }),
    isNan = a,
    isNan
}
var comparisons, hasRequiredComparisons;
function requireComparisons() {
    if (hasRequiredComparisons)
        return comparisons;
    hasRequiredComparisons = 1;
    function e(ae, le) {
        return a(ae) || l(ae, le) || i(ae, le) || n()
    }
    function n() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
    }
    function i(ae, le) {
        if (ae) {
            if (typeof ae == "string")
                return o(ae, le);
            var fe = Object.prototype.toString.call(ae).slice(8, -1);
            if (fe === "Object" && ae.constructor && (fe = ae.constructor.name),
            fe === "Map" || fe === "Set")
                return Array.from(ae);
            if (fe === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(fe))
                return o(ae, le)
        }
    }
    function o(ae, le) {
        (le == null || le > ae.length) && (le = ae.length);
        for (var fe = 0, de = new Array(le); fe < le; fe++)
            de[fe] = ae[fe];
        return de
    }
    function l(ae, le) {
        var fe = ae == null ? null : typeof Symbol < "u" && ae[Symbol.iterator] || ae["@@iterator"];
        if (fe != null) {
            var de, me, ze, pe, xe = [], Se = !0, we = !1;
            try {
                if (ze = (fe = fe.call(ae)).next,
                le !== 0)
                    for (; !(Se = (de = ze.call(fe)).done) && (xe.push(de.value),
                    xe.length !== le); Se = !0)
                        ;
            } catch (ke) {
                we = !0,
                me = ke
            } finally {
                try {
                    if (!Se && fe.return != null && (pe = fe.return(),
                    Object(pe) !== pe))
                        return
                } finally {
                    if (we)
                        throw me
                }
            }
            return xe
        }
    }
    function a(ae) {
        if (Array.isArray(ae))
            return ae
    }
    function c(ae) {
        "@babel/helpers - typeof";
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(le) {
            return typeof le
        }
        : function(le) {
            return le && typeof Symbol == "function" && le.constructor === Symbol && le !== Symbol.prototype ? "symbol" : typeof le
        }
        ,
        c(ae)
    }
    var u = /a/g.flags !== void 0
      , h = function(le) {
        var fe = [];
        return le.forEach(function(de) {
            return fe.push(de)
        }),
        fe
    }
      , m = function(le) {
        var fe = [];
        return le.forEach(function(de, me) {
            return fe.push([me, de])
        }),
        fe
    }
      , d = Object.is ? Object.is : requireObjectIs()
      , p = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
        return []
    }
      , b = Number.isNaN ? Number.isNaN : requireIsNan();
    function g(ae) {
        return ae.call.bind(ae)
    }
    var $ = g(Object.prototype.hasOwnProperty)
      , N = g(Object.prototype.propertyIsEnumerable)
      , I = g(Object.prototype.toString)
      , L = util$3.types
      , T = L.isAnyArrayBuffer
      , M = L.isArrayBufferView
      , q = L.isDate
      , Q = L.isMap
      , Y = L.isRegExp
      , ee = L.isSet
      , ie = L.isNativeError
      , te = L.isBoxedPrimitive
      , ne = L.isNumberObject
      , V = L.isStringObject
      , w = L.isBooleanObject
      , x = L.isBigIntObject
      , v = L.isSymbolObject
      , S = L.isFloat32Array
      , D = L.isFloat64Array;
    function C(ae) {
        if (ae.length === 0 || ae.length > 10)
            return !0;
        for (var le = 0; le < ae.length; le++) {
            var fe = ae.charCodeAt(le);
            if (fe < 48 || fe > 57)
                return !0
        }
        return ae.length === 10 && ae >= Math.pow(2, 32)
    }
    function O(ae) {
        return Object.keys(ae).filter(C).concat(p(ae).filter(Object.prototype.propertyIsEnumerable.bind(ae)))
    }
    /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
    function P(ae, le) {
        if (ae === le)
            return 0;
        for (var fe = ae.length, de = le.length, me = 0, ze = Math.min(fe, de); me < ze; ++me)
            if (ae[me] !== le[me]) {
                fe = ae[me],
                de = le[me];
                break
            }
        return fe < de ? -1 : de < fe ? 1 : 0
    }
    var y = !0
      , A = !1
      , E = 0
      , k = 1
      , H = 2
      , J = 3;
    function j(ae, le) {
        return u ? ae.source === le.source && ae.flags === le.flags : RegExp.prototype.toString.call(ae) === RegExp.prototype.toString.call(le)
    }
    function F(ae, le) {
        if (ae.byteLength !== le.byteLength)
            return !1;
        for (var fe = 0; fe < ae.byteLength; fe++)
            if (ae[fe] !== le[fe])
                return !1;
        return !0
    }
    function U(ae, le) {
        return ae.byteLength !== le.byteLength ? !1 : P(new Uint8Array(ae.buffer,ae.byteOffset,ae.byteLength), new Uint8Array(le.buffer,le.byteOffset,le.byteLength)) === 0
    }
    function re(ae, le) {
        return ae.byteLength === le.byteLength && P(new Uint8Array(ae), new Uint8Array(le)) === 0
    }
    function oe(ae, le) {
        return ne(ae) ? ne(le) && d(Number.prototype.valueOf.call(ae), Number.prototype.valueOf.call(le)) : V(ae) ? V(le) && String.prototype.valueOf.call(ae) === String.prototype.valueOf.call(le) : w(ae) ? w(le) && Boolean.prototype.valueOf.call(ae) === Boolean.prototype.valueOf.call(le) : x(ae) ? x(le) && BigInt.prototype.valueOf.call(ae) === BigInt.prototype.valueOf.call(le) : v(le) && Symbol.prototype.valueOf.call(ae) === Symbol.prototype.valueOf.call(le)
    }
    function X(ae, le, fe, de) {
        if (ae === le)
            return ae !== 0 ? !0 : fe ? d(ae, le) : !0;
        if (fe) {
            if (c(ae) !== "object")
                return typeof ae == "number" && b(ae) && b(le);
            if (c(le) !== "object" || ae === null || le === null || Object.getPrototypeOf(ae) !== Object.getPrototypeOf(le))
                return !1
        } else {
            if (ae === null || c(ae) !== "object")
                return le === null || c(le) !== "object" ? ae == le : !1;
            if (le === null || c(le) !== "object")
                return !1
        }
        var me = I(ae)
          , ze = I(le);
        if (me !== ze)
            return !1;
        if (Array.isArray(ae)) {
            if (ae.length !== le.length)
                return !1;
            var pe = O(ae)
              , xe = O(le);
            return pe.length !== xe.length ? !1 : se(ae, le, fe, de, k, pe)
        }
        if (me === "[object Object]" && (!Q(ae) && Q(le) || !ee(ae) && ee(le)))
            return !1;
        if (q(ae)) {
            if (!q(le) || Date.prototype.getTime.call(ae) !== Date.prototype.getTime.call(le))
                return !1
        } else if (Y(ae)) {
            if (!Y(le) || !j(ae, le))
                return !1
        } else if (ie(ae) || ae instanceof Error) {
            if (ae.message !== le.message || ae.name !== le.name)
                return !1
        } else if (M(ae)) {
            if (!fe && (S(ae) || D(ae))) {
                if (!F(ae, le))
                    return !1
            } else if (!U(ae, le))
                return !1;
            var Se = O(ae)
              , we = O(le);
            return Se.length !== we.length ? !1 : se(ae, le, fe, de, E, Se)
        } else {
            if (ee(ae))
                return !ee(le) || ae.size !== le.size ? !1 : se(ae, le, fe, de, H);
            if (Q(ae))
                return !Q(le) || ae.size !== le.size ? !1 : se(ae, le, fe, de, J);
            if (T(ae)) {
                if (!re(ae, le))
                    return !1
            } else if (te(ae) && !oe(ae, le))
                return !1
        }
        return se(ae, le, fe, de, E)
    }
    function Z(ae, le) {
        return le.filter(function(fe) {
            return N(ae, fe)
        })
    }
    function se(ae, le, fe, de, me, ze) {
        if (arguments.length === 5) {
            ze = Object.keys(ae);
            var pe = Object.keys(le);
            if (ze.length !== pe.length)
                return !1
        }
        for (var xe = 0; xe < ze.length; xe++)
            if (!$(le, ze[xe]))
                return !1;
        if (fe && arguments.length === 5) {
            var Se = p(ae);
            if (Se.length !== 0) {
                var we = 0;
                for (xe = 0; xe < Se.length; xe++) {
                    var ke = Se[xe];
                    if (N(ae, ke)) {
                        if (!N(le, ke))
                            return !1;
                        ze.push(ke),
                        we++
                    } else if (N(le, ke))
                        return !1
                }
                var Le = p(le);
                if (Se.length !== Le.length && Z(le, Le).length !== we)
                    return !1
            } else {
                var Be = p(le);
                if (Be.length !== 0 && Z(le, Be).length !== 0)
                    return !1
            }
        }
        if (ze.length === 0 && (me === E || me === k && ae.length === 0 || ae.size === 0))
            return !0;
        if (de === void 0)
            de = {
                val1: new Map,
                val2: new Map,
                position: 0
            };
        else {
            var Ue = de.val1.get(ae);
            if (Ue !== void 0) {
                var Fe = de.val2.get(le);
                if (Fe !== void 0)
                    return Ue === Fe
            }
            de.position++
        }
        de.val1.set(ae, de.position),
        de.val2.set(le, de.position);
        var Te = be(ae, le, fe, ze, de, me);
        return de.val1.delete(ae),
        de.val2.delete(le),
        Te
    }
    function ue(ae, le, fe, de) {
        for (var me = h(ae), ze = 0; ze < me.length; ze++) {
            var pe = me[ze];
            if (X(le, pe, fe, de))
                return ae.delete(pe),
                !0
        }
        return !1
    }
    function he(ae) {
        switch (c(ae)) {
        case "undefined":
            return null;
        case "object":
            return;
        case "symbol":
            return !1;
        case "string":
            ae = +ae;
        case "number":
            if (b(ae))
                return !1
        }
        return !0
    }
    function ve(ae, le, fe) {
        var de = he(fe);
        return de ?? (le.has(de) && !ae.has(de))
    }
    function ge(ae, le, fe, de, me) {
        var ze = he(fe);
        if (ze != null)
            return ze;
        var pe = le.get(ze);
        return pe === void 0 && !le.has(ze) || !X(de, pe, !1, me) ? !1 : !ae.has(ze) && X(de, pe, !1, me)
    }
    function _e(ae, le, fe, de) {
        for (var me = null, ze = h(ae), pe = 0; pe < ze.length; pe++) {
            var xe = ze[pe];
            if (c(xe) === "object" && xe !== null)
                me === null && (me = new Set),
                me.add(xe);
            else if (!le.has(xe)) {
                if (fe || !ve(ae, le, xe))
                    return !1;
                me === null && (me = new Set),
                me.add(xe)
            }
        }
        if (me !== null) {
            for (var Se = h(le), we = 0; we < Se.length; we++) {
                var ke = Se[we];
                if (c(ke) === "object" && ke !== null) {
                    if (!ue(me, ke, fe, de))
                        return !1
                } else if (!fe && !ae.has(ke) && !ue(me, ke, fe, de))
                    return !1
            }
            return me.size === 0
        }
        return !0
    }
    function ce(ae, le, fe, de, me, ze) {
        for (var pe = h(ae), xe = 0; xe < pe.length; xe++) {
            var Se = pe[xe];
            if (X(fe, Se, me, ze) && X(de, le.get(Se), me, ze))
                return ae.delete(Se),
                !0
        }
        return !1
    }
    function De(ae, le, fe, de) {
        for (var me = null, ze = m(ae), pe = 0; pe < ze.length; pe++) {
            var xe = e(ze[pe], 2)
              , Se = xe[0]
              , we = xe[1];
            if (c(Se) === "object" && Se !== null)
                me === null && (me = new Set),
                me.add(Se);
            else {
                var ke = le.get(Se);
                if (ke === void 0 && !le.has(Se) || !X(we, ke, fe, de)) {
                    if (fe || !ge(ae, le, Se, we, de))
                        return !1;
                    me === null && (me = new Set),
                    me.add(Se)
                }
            }
        }
        if (me !== null) {
            for (var Le = m(le), Be = 0; Be < Le.length; Be++) {
                var Ue = e(Le[Be], 2)
                  , Fe = Ue[0]
                  , Te = Ue[1];
                if (c(Fe) === "object" && Fe !== null) {
                    if (!ce(me, ae, Fe, Te, fe, de))
                        return !1
                } else if (!fe && (!ae.has(Fe) || !X(ae.get(Fe), Te, !1, de)) && !ce(me, ae, Fe, Te, !1, de))
                    return !1
            }
            return me.size === 0
        }
        return !0
    }
    function be(ae, le, fe, de, me, ze) {
        var pe = 0;
        if (ze === H) {
            if (!_e(ae, le, fe, me))
                return !1
        } else if (ze === J) {
            if (!De(ae, le, fe, me))
                return !1
        } else if (ze === k)
            for (; pe < ae.length; pe++)
                if ($(ae, pe)) {
                    if (!$(le, pe) || !X(ae[pe], le[pe], fe, me))
                        return !1
                } else {
                    if ($(le, pe))
                        return !1;
                    for (var xe = Object.keys(ae); pe < xe.length; pe++) {
                        var Se = xe[pe];
                        if (!$(le, Se) || !X(ae[Se], le[Se], fe, me))
                            return !1
                    }
                    return xe.length === Object.keys(le).length
                }
        for (pe = 0; pe < de.length; pe++) {
            var we = de[pe];
            if (!X(ae[we], le[we], fe, me))
                return !1
        }
        return !0
    }
    function Ae(ae, le) {
        return X(ae, le, A)
    }
    function Ee(ae, le) {
        return X(ae, le, y)
    }
    return comparisons = {
        isDeepEqual: Ae,
        isDeepStrictEqual: Ee
    },
    comparisons
}
var hasRequiredAssert;
function requireAssert() {
    if (hasRequiredAssert)
        return assert$2.exports;
    hasRequiredAssert = 1;
    function e(H) {
        "@babel/helpers - typeof";
        return e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(J) {
            return typeof J
        }
        : function(J) {
            return J && typeof Symbol == "function" && J.constructor === Symbol && J !== Symbol.prototype ? "symbol" : typeof J
        }
        ,
        e(H)
    }
    function n(H, J, j) {
        return Object.defineProperty(H, "prototype", {
            writable: !1
        }),
        H
    }
    function i(H, J) {
        if (!(H instanceof J))
            throw new TypeError("Cannot call a class as a function")
    }
    var o = requireErrors(), l = o.codes, a = l.ERR_AMBIGUOUS_ARGUMENT, c = l.ERR_INVALID_ARG_TYPE, u = l.ERR_INVALID_ARG_VALUE, h = l.ERR_INVALID_RETURN_VALUE, m = l.ERR_MISSING_ARGS, d = requireAssertion_error(), p = util$3, b = p.inspect, g = util$3.types, $ = g.isPromise, N = g.isRegExp, I = polyfill$2(), L = polyfill$1(), T = callBound("RegExp.prototype.test"), M, q;
    function Q() {
        var H = requireComparisons();
        M = H.isDeepEqual,
        q = H.isDeepStrictEqual
    }
    var Y = !1
      , ee = assert$2.exports = w
      , ie = {};
    function te(H) {
        throw H.message instanceof Error ? H.message : new d(H)
    }
    function ne(H, J, j, F, U) {
        var re = arguments.length, oe;
        if (re === 0)
            oe = "Failed";
        else if (re === 1)
            j = H,
            H = void 0;
        else {
            if (Y === !1) {
                Y = !0;
                var X = process$1.emitWarning ? process$1.emitWarning : console.warn.bind(console);
                X("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")
            }
            re === 2 && (F = "!=")
        }
        if (j instanceof Error)
            throw j;
        var Z = {
            actual: H,
            expected: J,
            operator: F === void 0 ? "fail" : F,
            stackStartFn: U || ne
        };
        j !== void 0 && (Z.message = j);
        var se = new d(Z);
        throw oe && (se.message = oe,
        se.generatedMessage = !0),
        se
    }
    ee.fail = ne,
    ee.AssertionError = d;
    function V(H, J, j, F) {
        if (!j) {
            var U = !1;
            if (J === 0)
                U = !0,
                F = "No value argument passed to `assert.ok()`";
            else if (F instanceof Error)
                throw F;
            var re = new d({
                actual: j,
                expected: !0,
                message: F,
                operator: "==",
                stackStartFn: H
            });
            throw re.generatedMessage = U,
            re
        }
    }
    function w() {
        for (var H = arguments.length, J = new Array(H), j = 0; j < H; j++)
            J[j] = arguments[j];
        V.apply(void 0, [w, J.length].concat(J))
    }
    ee.ok = w,
    ee.equal = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        J != j && te({
            actual: J,
            expected: j,
            message: F,
            operator: "==",
            stackStartFn: H
        })
    }
    ,
    ee.notEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        J == j && te({
            actual: J,
            expected: j,
            message: F,
            operator: "!=",
            stackStartFn: H
        })
    }
    ,
    ee.deepEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        M === void 0 && Q(),
        M(J, j) || te({
            actual: J,
            expected: j,
            message: F,
            operator: "deepEqual",
            stackStartFn: H
        })
    }
    ,
    ee.notDeepEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        M === void 0 && Q(),
        M(J, j) && te({
            actual: J,
            expected: j,
            message: F,
            operator: "notDeepEqual",
            stackStartFn: H
        })
    }
    ,
    ee.deepStrictEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        M === void 0 && Q(),
        q(J, j) || te({
            actual: J,
            expected: j,
            message: F,
            operator: "deepStrictEqual",
            stackStartFn: H
        })
    }
    ,
    ee.notDeepStrictEqual = x;
    function x(H, J, j) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        M === void 0 && Q(),
        q(H, J) && te({
            actual: H,
            expected: J,
            message: j,
            operator: "notDeepStrictEqual",
            stackStartFn: x
        })
    }
    ee.strictEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        L(J, j) || te({
            actual: J,
            expected: j,
            message: F,
            operator: "strictEqual",
            stackStartFn: H
        })
    }
    ,
    ee.notStrictEqual = function H(J, j, F) {
        if (arguments.length < 2)
            throw new m("actual","expected");
        L(J, j) && te({
            actual: J,
            expected: j,
            message: F,
            operator: "notStrictEqual",
            stackStartFn: H
        })
    }
    ;
    var v = n(function H(J, j, F) {
        var U = this;
        i(this, H),
        j.forEach(function(re) {
            re in J && (F !== void 0 && typeof F[re] == "string" && N(J[re]) && T(J[re], F[re]) ? U[re] = F[re] : U[re] = J[re])
        })
    });
    function S(H, J, j, F, U, re) {
        if (!(j in H) || !q(H[j], J[j])) {
            if (!F) {
                var oe = new v(H,U)
                  , X = new v(J,U,H)
                  , Z = new d({
                    actual: oe,
                    expected: X,
                    operator: "deepStrictEqual",
                    stackStartFn: re
                });
                throw Z.actual = H,
                Z.expected = J,
                Z.operator = re.name,
                Z
            }
            te({
                actual: H,
                expected: J,
                message: F,
                operator: re.name,
                stackStartFn: re
            })
        }
    }
    function D(H, J, j, F) {
        if (typeof J != "function") {
            if (N(J))
                return T(J, H);
            if (arguments.length === 2)
                throw new c("expected",["Function", "RegExp"],J);
            if (e(H) !== "object" || H === null) {
                var U = new d({
                    actual: H,
                    expected: J,
                    message: j,
                    operator: "deepStrictEqual",
                    stackStartFn: F
                });
                throw U.operator = F.name,
                U
            }
            var re = Object.keys(J);
            if (J instanceof Error)
                re.push("name", "message");
            else if (re.length === 0)
                throw new u("error",J,"may not be an empty object");
            return M === void 0 && Q(),
            re.forEach(function(oe) {
                typeof H[oe] == "string" && N(J[oe]) && T(J[oe], H[oe]) || S(H, J, oe, j, re, F)
            }),
            !0
        }
        return J.prototype !== void 0 && H instanceof J ? !0 : Error.isPrototypeOf(J) ? !1 : J.call({}, H) === !0
    }
    function C(H) {
        if (typeof H != "function")
            throw new c("fn","Function",H);
        try {
            H()
        } catch (J) {
            return J
        }
        return ie
    }
    function O(H) {
        return $(H) || H !== null && e(H) === "object" && typeof H.then == "function" && typeof H.catch == "function"
    }
    function P(H) {
        return Promise.resolve().then(function() {
            var J;
            if (typeof H == "function") {
                if (J = H(),
                !O(J))
                    throw new h("instance of Promise","promiseFn",J)
            } else if (O(H))
                J = H;
            else
                throw new c("promiseFn",["Function", "Promise"],H);
            return Promise.resolve().then(function() {
                return J
            }).then(function() {
                return ie
            }).catch(function(j) {
                return j
            })
        })
    }
    function y(H, J, j, F) {
        if (typeof j == "string") {
            if (arguments.length === 4)
                throw new c("error",["Object", "Error", "Function", "RegExp"],j);
            if (e(J) === "object" && J !== null) {
                if (J.message === j)
                    throw new a("error/message",'The error message "'.concat(J.message, '" is identical to the message.'))
            } else if (J === j)
                throw new a("error/message",'The error "'.concat(J, '" is identical to the message.'));
            F = j,
            j = void 0
        } else if (j != null && e(j) !== "object" && typeof j != "function")
            throw new c("error",["Object", "Error", "Function", "RegExp"],j);
        if (J === ie) {
            var U = "";
            j && j.name && (U += " (".concat(j.name, ")")),
            U += F ? ": ".concat(F) : ".";
            var re = H.name === "rejects" ? "rejection" : "exception";
            te({
                actual: void 0,
                expected: j,
                operator: H.name,
                message: "Missing expected ".concat(re).concat(U),
                stackStartFn: H
            })
        }
        if (j && !D(J, j, F, H))
            throw J
    }
    function A(H, J, j, F) {
        if (J !== ie) {
            if (typeof j == "string" && (F = j,
            j = void 0),
            !j || D(J, j)) {
                var U = F ? ": ".concat(F) : "."
                  , re = H.name === "doesNotReject" ? "rejection" : "exception";
                te({
                    actual: J,
                    expected: j,
                    operator: H.name,
                    message: "Got unwanted ".concat(re).concat(U, `
`) + 'Actual message: "'.concat(J && J.message, '"'),
                    stackStartFn: H
                })
            }
            throw J
        }
    }
    ee.throws = function H(J) {
        for (var j = arguments.length, F = new Array(j > 1 ? j - 1 : 0), U = 1; U < j; U++)
            F[U - 1] = arguments[U];
        y.apply(void 0, [H, C(J)].concat(F))
    }
    ,
    ee.rejects = function H(J) {
        for (var j = arguments.length, F = new Array(j > 1 ? j - 1 : 0), U = 1; U < j; U++)
            F[U - 1] = arguments[U];
        return P(J).then(function(re) {
            return y.apply(void 0, [H, re].concat(F))
        })
    }
    ,
    ee.doesNotThrow = function H(J) {
        for (var j = arguments.length, F = new Array(j > 1 ? j - 1 : 0), U = 1; U < j; U++)
            F[U - 1] = arguments[U];
        A.apply(void 0, [H, C(J)].concat(F))
    }
    ,
    ee.doesNotReject = function H(J) {
        for (var j = arguments.length, F = new Array(j > 1 ? j - 1 : 0), U = 1; U < j; U++)
            F[U - 1] = arguments[U];
        return P(J).then(function(re) {
            return A.apply(void 0, [H, re].concat(F))
        })
    }
    ,
    ee.ifError = function H(J) {
        if (J != null) {
            var j = "ifError got unwanted exception: ";
            e(J) === "object" && typeof J.message == "string" ? J.message.length === 0 && J.constructor ? j += J.constructor.name : j += J.message : j += b(J);
            var F = new d({
                actual: J,
                expected: null,
                operator: "ifError",
                message: j,
                stackStartFn: H
            })
              , U = J.stack;
            if (typeof U == "string") {
                var re = U.split(`
`);
                re.shift();
                for (var oe = F.stack.split(`
`), X = 0; X < re.length; X++) {
                    var Z = oe.indexOf(re[X]);
                    if (Z !== -1) {
                        oe = oe.slice(0, Z);
                        break
                    }
                }
                F.stack = "".concat(oe.join(`
`), `
`).concat(re.join(`
`))
            }
            throw F
        }
    }
    ;
    function E(H, J, j, F, U) {
        if (!N(J))
            throw new c("regexp","RegExp",J);
        var re = U === "match";
        if (typeof H != "string" || T(J, H) !== re) {
            if (j instanceof Error)
                throw j;
            var oe = !j;
            j = j || (typeof H != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(e(H), " (").concat(b(H), ")") : (re ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(b(J), `. Input:

`).concat(b(H), `
`));
            var X = new d({
                actual: H,
                expected: J,
                message: j,
                operator: U,
                stackStartFn: F
            });
            throw X.generatedMessage = oe,
            X
        }
    }
    ee.match = function H(J, j, F) {
        E(J, j, F, H, "match")
    }
    ,
    ee.doesNotMatch = function H(J, j, F) {
        E(J, j, F, H, "doesNotMatch")
    }
    ;
    function k() {
        for (var H = arguments.length, J = new Array(H), j = 0; j < H; j++)
            J[j] = arguments[j];
        V.apply(void 0, [k, J.length].concat(J))
    }
    return ee.strict = I(k, ee, {
        equal: ee.strictEqual,
        deepEqual: ee.deepStrictEqual,
        notEqual: ee.notStrictEqual,
        notDeepEqual: ee.notDeepStrictEqual
    }),
    ee.strict.strict = ee.strict,
    assert$2.exports
}
var buffer = require$$0$2, Buffer$2 = buffer.Buffer, safer = {}, key;
for (key in buffer)
    buffer.hasOwnProperty(key) && (key === "SlowBuffer" || key === "Buffer" || (safer[key] = buffer[key]));
var Safer = safer.Buffer = {};
for (key in Buffer$2)
    Buffer$2.hasOwnProperty(key) && (key === "allocUnsafe" || key === "allocUnsafeSlow" || (Safer[key] = Buffer$2[key]));
safer.Buffer.prototype = Buffer$2.prototype;
(!Safer.from || Safer.from === Uint8Array.from) && (Safer.from = function(e, n, i) {
    if (typeof e == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof e);
    if (e && typeof e.length > "u")
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
    return Buffer$2(e, n, i)
}
);
Safer.alloc || (Safer.alloc = function(e, n, i) {
    if (typeof e != "number")
        throw new TypeError('The "size" argument must be of type number. Received type ' + typeof e);
    if (e < 0 || e >= 2 * (1 << 30))
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
    var o = Buffer$2(e);
    return !n || n.length === 0 ? o.fill(0) : typeof i == "string" ? o.fill(n, i) : o.fill(n),
    o
}
);
if (!safer.kStringMaxLength)
    try {
        safer.kStringMaxLength = process$1.binding("buffer").kStringMaxLength
    } catch {}
safer.constants || (safer.constants = {
    MAX_LENGTH: safer.kMaxLength
},
safer.kStringMaxLength && (safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength));
var safer_1 = safer
  , assert$1 = requireAssert()
  , Buffer$1 = safer_1.Buffer
  , ASN1$1 = types
  , errors$1 = errors$3
  , newInvalidAsn1Error$1 = errors$1.newInvalidAsn1Error;
function Reader(e) {
    if (!e || !Buffer$1.isBuffer(e))
        throw new TypeError("data must be a node Buffer");
    this._buf = e,
    this._size = e.length,
    this._len = 0,
    this._offset = 0
}
Object.defineProperty(Reader.prototype, "length", {
    enumerable: !0,
    get: function() {
        return this._len
    }
});
Object.defineProperty(Reader.prototype, "offset", {
    enumerable: !0,
    get: function() {
        return this._offset
    }
});
Object.defineProperty(Reader.prototype, "remain", {
    get: function() {
        return this._size - this._offset
    }
});
Object.defineProperty(Reader.prototype, "buffer", {
    get: function() {
        return this._buf.slice(this._offset)
    }
});
Reader.prototype.readByte = function(e) {
    if (this._size - this._offset < 1)
        return null;
    var n = this._buf[this._offset] & 255;
    return e || (this._offset += 1),
    n
}
;
Reader.prototype.peek = function() {
    return this.readByte(!0)
}
;
Reader.prototype.readLength = function(e) {
    if (e === void 0 && (e = this._offset),
    e >= this._size)
        return null;
    var n = this._buf[e++] & 255;
    if (n === null)
        return null;
    if ((n & 128) === 128) {
        if (n &= 127,
        n === 0)
            throw newInvalidAsn1Error$1("Indefinite length not supported");
        if (n > 4)
            throw newInvalidAsn1Error$1("encoding too long");
        if (this._size - e < n)
            return null;
        this._len = 0;
        for (var i = 0; i < n; i++)
            this._len = (this._len << 8) + (this._buf[e++] & 255)
    } else
        this._len = n;
    return e
}
;
Reader.prototype.readSequence = function(e) {
    var n = this.peek();
    if (n === null)
        return null;
    if (e !== void 0 && e !== n)
        throw newInvalidAsn1Error$1("Expected 0x" + e.toString(16) + ": got 0x" + n.toString(16));
    var i = this.readLength(this._offset + 1);
    return i === null ? null : (this._offset = i,
    n)
}
;
Reader.prototype.readInt = function() {
    return this._readTag(ASN1$1.Integer)
}
;
Reader.prototype.readBoolean = function() {
    return this._readTag(ASN1$1.Boolean) !== 0
}
;
Reader.prototype.readEnumeration = function() {
    return this._readTag(ASN1$1.Enumeration)
}
;
Reader.prototype.readString = function(e, n) {
    e || (e = ASN1$1.OctetString);
    var i = this.peek();
    if (i === null)
        return null;
    if (i !== e)
        throw newInvalidAsn1Error$1("Expected 0x" + e.toString(16) + ": got 0x" + i.toString(16));
    var o = this.readLength(this._offset + 1);
    if (o === null || this.length > this._size - o)
        return null;
    if (this._offset = o,
    this.length === 0)
        return n ? Buffer$1.alloc(0) : "";
    var l = this._buf.slice(this._offset, this._offset + this.length);
    return this._offset += this.length,
    n ? l : l.toString("utf8")
}
;
Reader.prototype.readOID = function(e) {
    e || (e = ASN1$1.OID);
    var n = this.readString(e, !0);
    if (n === null)
        return null;
    for (var i = [], o = 0, l = 0; l < n.length; l++) {
        var a = n[l] & 255;
        o <<= 7,
        o += a & 127,
        a & 128 || (i.push(o),
        o = 0)
    }
    return o = i.shift(),
    i.unshift(o % 40),
    i.unshift(o / 40 >> 0),
    i.join(".")
}
;
Reader.prototype._readTag = function(e) {
    assert$1.ok(e !== void 0);
    var n = this.peek();
    if (n === null)
        return null;
    if (n !== e)
        throw newInvalidAsn1Error$1("Expected 0x" + e.toString(16) + ": got 0x" + n.toString(16));
    var i = this.readLength(this._offset + 1);
    if (i === null)
        return null;
    if (this.length > 4)
        throw newInvalidAsn1Error$1("Integer too long: " + this.length);
    if (this.length > this._size - i)
        return null;
    this._offset = i;
    for (var o = this._buf[this._offset], l = 0, a = 0; a < this.length; a++)
        l <<= 8,
        l |= this._buf[this._offset++] & 255;
    return (o & 128) === 128 && a !== 4 && (l -= 1 << a * 8),
    l >> 0
}
;
var reader = Reader
  , assert = requireAssert()
  , Buffer = safer_1.Buffer
  , ASN1 = types
  , errors = errors$3
  , newInvalidAsn1Error = errors.newInvalidAsn1Error
  , DEFAULT_OPTS = {
    size: 1024,
    growthFactor: 8
};
function merge(e, n) {
    assert.ok(e),
    assert.equal(typeof e, "object"),
    assert.ok(n),
    assert.equal(typeof n, "object");
    var i = Object.getOwnPropertyNames(e);
    return i.forEach(function(o) {
        if (!n[o]) {
            var l = Object.getOwnPropertyDescriptor(e, o);
            Object.defineProperty(n, o, l)
        }
    }),
    n
}
function Writer(e) {
    e = merge(DEFAULT_OPTS, e || {}),
    this._buf = Buffer.alloc(e.size || 1024),
    this._size = this._buf.length,
    this._offset = 0,
    this._options = e,
    this._seq = []
}
Object.defineProperty(Writer.prototype, "buffer", {
    get: function() {
        if (this._seq.length)
            throw newInvalidAsn1Error(this._seq.length + " unended sequence(s)");
        return this._buf.slice(0, this._offset)
    }
});
Writer.prototype.writeByte = function(e) {
    if (typeof e != "number")
        throw new TypeError("argument must be a Number");
    this._ensure(1),
    this._buf[this._offset++] = e
}
;
Writer.prototype.writeInt = function(e, n) {
    if (typeof e != "number")
        throw new TypeError("argument must be a Number");
    typeof n != "number" && (n = ASN1.Integer);
    for (var i = 4; (!(e & 4286578688) || (e & 4286578688) === -8388608) && i > 1; )
        i--,
        e <<= 8;
    if (i > 4)
        throw newInvalidAsn1Error("BER ints cannot be > 0xffffffff");
    for (this._ensure(2 + i),
    this._buf[this._offset++] = n,
    this._buf[this._offset++] = i; i-- > 0; )
        this._buf[this._offset++] = (e & 4278190080) >>> 24,
        e <<= 8
}
;
Writer.prototype.writeNull = function() {
    this.writeByte(ASN1.Null),
    this.writeByte(0)
}
;
Writer.prototype.writeEnumeration = function(e, n) {
    if (typeof e != "number")
        throw new TypeError("argument must be a Number");
    return typeof n != "number" && (n = ASN1.Enumeration),
    this.writeInt(e, n)
}
;
Writer.prototype.writeBoolean = function(e, n) {
    if (typeof e != "boolean")
        throw new TypeError("argument must be a Boolean");
    typeof n != "number" && (n = ASN1.Boolean),
    this._ensure(3),
    this._buf[this._offset++] = n,
    this._buf[this._offset++] = 1,
    this._buf[this._offset++] = e ? 255 : 0
}
;
Writer.prototype.writeString = function(e, n) {
    if (typeof e != "string")
        throw new TypeError("argument must be a string (was: " + typeof e + ")");
    typeof n != "number" && (n = ASN1.OctetString);
    var i = Buffer.byteLength(e);
    this.writeByte(n),
    this.writeLength(i),
    i && (this._ensure(i),
    this._buf.write(e, this._offset),
    this._offset += i)
}
;
Writer.prototype.writeBuffer = function(e, n) {
    if (typeof n != "number")
        throw new TypeError("tag must be a number");
    if (!Buffer.isBuffer(e))
        throw new TypeError("argument must be a buffer");
    this.writeByte(n),
    this.writeLength(e.length),
    this._ensure(e.length),
    e.copy(this._buf, this._offset, 0, e.length),
    this._offset += e.length
}
;
Writer.prototype.writeStringArray = function(e) {
    if (!e instanceof Array)
        throw new TypeError("argument must be an Array[String]");
    var n = this;
    e.forEach(function(i) {
        n.writeString(i)
    })
}
;
Writer.prototype.writeOID = function(e, n) {
    if (typeof e != "string")
        throw new TypeError("argument must be a string");
    if (typeof n != "number" && (n = ASN1.OID),
    !/^([0-9]+\.){3,}[0-9]+$/.test(e))
        throw new Error("argument is not a valid OID string");
    function i(c, u) {
        u < 128 ? c.push(u) : u < 16384 ? (c.push(u >>> 7 | 128),
        c.push(u & 127)) : u < 2097152 ? (c.push(u >>> 14 | 128),
        c.push((u >>> 7 | 128) & 255),
        c.push(u & 127)) : u < 268435456 ? (c.push(u >>> 21 | 128),
        c.push((u >>> 14 | 128) & 255),
        c.push((u >>> 7 | 128) & 255),
        c.push(u & 127)) : (c.push((u >>> 28 | 128) & 255),
        c.push((u >>> 21 | 128) & 255),
        c.push((u >>> 14 | 128) & 255),
        c.push((u >>> 7 | 128) & 255),
        c.push(u & 127))
    }
    var o = e.split(".")
      , l = [];
    l.push(parseInt(o[0], 10) * 40 + parseInt(o[1], 10)),
    o.slice(2).forEach(function(c) {
        i(l, parseInt(c, 10))
    });
    var a = this;
    this._ensure(2 + l.length),
    this.writeByte(n),
    this.writeLength(l.length),
    l.forEach(function(c) {
        a.writeByte(c)
    })
}
;
Writer.prototype.writeLength = function(e) {
    if (typeof e != "number")
        throw new TypeError("argument must be a Number");
    if (this._ensure(4),
    e <= 127)
        this._buf[this._offset++] = e;
    else if (e <= 255)
        this._buf[this._offset++] = 129,
        this._buf[this._offset++] = e;
    else if (e <= 65535)
        this._buf[this._offset++] = 130,
        this._buf[this._offset++] = e >> 8,
        this._buf[this._offset++] = e;
    else if (e <= 16777215)
        this._buf[this._offset++] = 131,
        this._buf[this._offset++] = e >> 16,
        this._buf[this._offset++] = e >> 8,
        this._buf[this._offset++] = e;
    else
        throw newInvalidAsn1Error("Length too long (> 4 bytes)")
}
;
Writer.prototype.startSequence = function(e) {
    typeof e != "number" && (e = ASN1.Sequence | ASN1.Constructor),
    this.writeByte(e),
    this._seq.push(this._offset),
    this._ensure(3),
    this._offset += 3
}
;
Writer.prototype.endSequence = function() {
    var e = this._seq.pop()
      , n = e + 3
      , i = this._offset - n;
    if (i <= 127)
        this._shift(n, i, -2),
        this._buf[e] = i;
    else if (i <= 255)
        this._shift(n, i, -1),
        this._buf[e] = 129,
        this._buf[e + 1] = i;
    else if (i <= 65535)
        this._buf[e] = 130,
        this._buf[e + 1] = i >> 8,
        this._buf[e + 2] = i;
    else if (i <= 16777215)
        this._shift(n, i, 1),
        this._buf[e] = 131,
        this._buf[e + 1] = i >> 16,
        this._buf[e + 2] = i >> 8,
        this._buf[e + 3] = i;
    else
        throw newInvalidAsn1Error("Sequence too long")
}
;
Writer.prototype._shift = function(e, n, i) {
    assert.ok(e !== void 0),
    assert.ok(n !== void 0),
    assert.ok(i),
    this._buf.copy(this._buf, e + i, e, e + n),
    this._offset += i
}
;
Writer.prototype._ensure = function(e) {
    if (assert.ok(e),
    this._size - this._offset < e) {
        var n = this._size * this._options.growthFactor;
        n - this._offset < e && (n += e);
        var i = Buffer.alloc(n);
        this._buf.copy(i, 0, 0, this._offset),
        this._buf = i,
        this._size = n
    }
}
;
var writer = Writer;
(function(e) {
    var n = errors$3
      , i = types
      , o = reader
      , l = writer;
    e.exports = {
        Reader: o,
        Writer: l
    };
    for (var a in i)
        i.hasOwnProperty(a) && (e.exports[a] = i[a]);
    for (var c in n)
        n.hasOwnProperty(c) && (e.exports[c] = n[c])
}
)(ber);
var berExports = ber.exports
  , Ber = berExports
  , lib = {
    Ber,
    BerReader: Ber.Reader,
    BerWriter: Ber.Writer
}
  , formats$1 = {
    exports: {}
}
  , pkcs1 = {
    exports: {}
};
(function(e) {
    var n = lib.Ber
      , i = utils$2._
      , o = utils$2;
    const l = "-----BEGIN RSA PRIVATE KEY-----"
      , a = "-----END RSA PRIVATE KEY-----"
      , c = "-----BEGIN RSA PUBLIC KEY-----"
      , u = "-----END RSA PUBLIC KEY-----";
    e.exports = {
        privateExport: function(h, m) {
            m = m || {};
            var d = h.n.toBuffer()
              , p = h.d.toBuffer()
              , b = h.p.toBuffer()
              , g = h.q.toBuffer()
              , $ = h.dmp1.toBuffer()
              , N = h.dmq1.toBuffer()
              , I = h.coeff.toBuffer()
              , L = d.length + p.length + b.length + g.length + $.length + N.length + I.length + 512
              , T = new n.Writer({
                size: L
            });
            return T.startSequence(),
            T.writeInt(0),
            T.writeBuffer(d, 2),
            T.writeInt(h.e),
            T.writeBuffer(p, 2),
            T.writeBuffer(b, 2),
            T.writeBuffer(g, 2),
            T.writeBuffer($, 2),
            T.writeBuffer(N, 2),
            T.writeBuffer(I, 2),
            T.endSequence(),
            m.type === "der" ? T.buffer : l + `
` + o.linebrk(T.buffer.toString("base64"), 64) + `
` + a
        },
        privateImport: function(h, m, d) {
            d = d || {};
            var p;
            if (d.type !== "der")
                if (Buffer$G.isBuffer(m) && (m = m.toString("utf8")),
                i.isString(m)) {
                    var b = o.trimSurroundingText(m, l, a).replace(/\s+|\n\r|\n|\r$/gm, "");
                    p = Buffer$G.from(b, "base64")
                } else
                    throw Error("Unsupported key format");
            else if (Buffer$G.isBuffer(m))
                p = m;
            else
                throw Error("Unsupported key format");
            var g = new n.Reader(p);
            g.readSequence(),
            g.readString(2, !0),
            h.setPrivate(g.readString(2, !0), g.readString(2, !0), g.readString(2, !0), g.readString(2, !0), g.readString(2, !0), g.readString(2, !0), g.readString(2, !0), g.readString(2, !0))
        },
        publicExport: function(h, m) {
            m = m || {};
            var d = h.n.toBuffer()
              , p = d.length + 512
              , b = new n.Writer({
                size: p
            });
            return b.startSequence(),
            b.writeBuffer(d, 2),
            b.writeInt(h.e),
            b.endSequence(),
            m.type === "der" ? b.buffer : c + `
` + o.linebrk(b.buffer.toString("base64"), 64) + `
` + u
        },
        publicImport: function(h, m, d) {
            d = d || {};
            var p;
            if (d.type !== "der") {
                if (Buffer$G.isBuffer(m) && (m = m.toString("utf8")),
                i.isString(m)) {
                    var b = o.trimSurroundingText(m, c, u).replace(/\s+|\n\r|\n|\r$/gm, "");
                    p = Buffer$G.from(b, "base64")
                }
            } else if (Buffer$G.isBuffer(m))
                p = m;
            else
                throw Error("Unsupported key format");
            var g = new n.Reader(p);
            g.readSequence(),
            h.setPublic(g.readString(2, !0), g.readString(2, !0))
        },
        autoImport: function(h, m) {
            return /^[\S\s]*-----BEGIN RSA PRIVATE KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END RSA PRIVATE KEY-----[\S\s]*$/g.test(m) ? (e.exports.privateImport(h, m),
            !0) : /^[\S\s]*-----BEGIN RSA PUBLIC KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END RSA PUBLIC KEY-----[\S\s]*$/g.test(m) ? (e.exports.publicImport(h, m),
            !0) : !1
        }
    }
}
)(pkcs1);
var pkcs1Exports = pkcs1.exports
  , pkcs8 = {
    exports: {}
};
(function(e) {
    var n = lib.Ber
      , i = utils$2._
      , o = "1.2.840.113549.1.1.1"
      , l = utils$2;
    const a = "-----BEGIN PRIVATE KEY-----"
      , c = "-----END PRIVATE KEY-----"
      , u = "-----BEGIN PUBLIC KEY-----"
      , h = "-----END PUBLIC KEY-----";
    e.exports = {
        privateExport: function(m, d) {
            d = d || {};
            var p = m.n.toBuffer()
              , b = m.d.toBuffer()
              , g = m.p.toBuffer()
              , $ = m.q.toBuffer()
              , N = m.dmp1.toBuffer()
              , I = m.dmq1.toBuffer()
              , L = m.coeff.toBuffer()
              , T = p.length + b.length + g.length + $.length + N.length + I.length + L.length + 512
              , M = new n.Writer({
                size: T
            });
            M.startSequence(),
            M.writeInt(0),
            M.writeBuffer(p, 2),
            M.writeInt(m.e),
            M.writeBuffer(b, 2),
            M.writeBuffer(g, 2),
            M.writeBuffer($, 2),
            M.writeBuffer(N, 2),
            M.writeBuffer(I, 2),
            M.writeBuffer(L, 2),
            M.endSequence();
            var q = new n.Writer({
                size: T
            });
            return q.startSequence(),
            q.writeInt(0),
            q.startSequence(),
            q.writeOID(o),
            q.writeNull(),
            q.endSequence(),
            q.writeBuffer(M.buffer, 4),
            q.endSequence(),
            d.type === "der" ? q.buffer : a + `
` + l.linebrk(q.buffer.toString("base64"), 64) + `
` + c
        },
        privateImport: function(m, d, p) {
            p = p || {};
            var b;
            if (p.type !== "der")
                if (Buffer$G.isBuffer(d) && (d = d.toString("utf8")),
                i.isString(d)) {
                    var g = l.trimSurroundingText(d, a, c).replace("-----END PRIVATE KEY-----", "").replace(/\s+|\n\r|\n|\r$/gm, "");
                    b = Buffer$G.from(g, "base64")
                } else
                    throw Error("Unsupported key format");
            else if (Buffer$G.isBuffer(d))
                b = d;
            else
                throw Error("Unsupported key format");
            var $ = new n.Reader(b);
            $.readSequence(),
            $.readInt(0);
            var N = new n.Reader($.readString(48, !0));
            if (N.readOID(6, !0) !== o)
                throw Error("Invalid Public key format");
            var I = new n.Reader($.readString(4, !0));
            I.readSequence(),
            I.readString(2, !0),
            m.setPrivate(I.readString(2, !0), I.readString(2, !0), I.readString(2, !0), I.readString(2, !0), I.readString(2, !0), I.readString(2, !0), I.readString(2, !0), I.readString(2, !0))
        },
        publicExport: function(m, d) {
            d = d || {};
            var p = m.n.toBuffer()
              , b = p.length + 512
              , g = new n.Writer({
                size: b
            });
            g.writeByte(0),
            g.startSequence(),
            g.writeBuffer(p, 2),
            g.writeInt(m.e),
            g.endSequence();
            var $ = new n.Writer({
                size: b
            });
            return $.startSequence(),
            $.startSequence(),
            $.writeOID(o),
            $.writeNull(),
            $.endSequence(),
            $.writeBuffer(g.buffer, 3),
            $.endSequence(),
            d.type === "der" ? $.buffer : u + `
` + l.linebrk($.buffer.toString("base64"), 64) + `
` + h
        },
        publicImport: function(m, d, p) {
            p = p || {};
            var b;
            if (p.type !== "der") {
                if (Buffer$G.isBuffer(d) && (d = d.toString("utf8")),
                i.isString(d)) {
                    var g = l.trimSurroundingText(d, u, h).replace(/\s+|\n\r|\n|\r$/gm, "");
                    b = Buffer$G.from(g, "base64")
                }
            } else if (Buffer$G.isBuffer(d))
                b = d;
            else
                throw Error("Unsupported key format");
            var $ = new n.Reader(b);
            $.readSequence();
            var N = new n.Reader($.readString(48, !0));
            if (N.readOID(6, !0) !== o)
                throw Error("Invalid Public key format");
            var I = new n.Reader($.readString(3, !0));
            I.readByte(),
            I.readSequence(),
            m.setPublic(I.readString(2, !0), I.readString(2, !0))
        },
        autoImport: function(m, d) {
            return /^[\S\s]*-----BEGIN PRIVATE KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END PRIVATE KEY-----[\S\s]*$/g.test(d) ? (e.exports.privateImport(m, d),
            !0) : /^[\S\s]*-----BEGIN PUBLIC KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END PUBLIC KEY-----[\S\s]*$/g.test(d) ? (e.exports.publicImport(m, d),
            !0) : !1
        }
    }
}
)(pkcs8);
var pkcs8Exports = pkcs8.exports
  , components = {
    exports: {}
};
(function(e) {
    utils$2._,
    e.exports = {
        privateExport: function(n, i) {
            return {
                n: n.n.toBuffer(),
                e: n.e,
                d: n.d.toBuffer(),
                p: n.p.toBuffer(),
                q: n.q.toBuffer(),
                dmp1: n.dmp1.toBuffer(),
                dmq1: n.dmq1.toBuffer(),
                coeff: n.coeff.toBuffer()
            }
        },
        privateImport: function(n, i, o) {
            if (i.n && i.e && i.d && i.p && i.q && i.dmp1 && i.dmq1 && i.coeff)
                n.setPrivate(i.n, i.e, i.d, i.p, i.q, i.dmp1, i.dmq1, i.coeff);
            else
                throw Error("Invalid key data")
        },
        publicExport: function(n, i) {
            return {
                n: n.n.toBuffer(),
                e: n.e
            }
        },
        publicImport: function(n, i, o) {
            if (i.n && i.e)
                n.setPublic(i.n, i.e);
            else
                throw Error("Invalid key data")
        },
        autoImport: function(n, i) {
            return i.n && i.e ? i.d && i.p && i.q && i.dmp1 && i.dmq1 && i.coeff ? (e.exports.privateImport(n, i),
            !0) : (e.exports.publicImport(n, i),
            !0) : !1
        }
    }
}
)(components);
var componentsExports = components.exports
  , openssh = {
    exports: {}
};
(function(e) {
    var n = utils$2._
      , i = utils$2
      , o = jsbn;
    const l = "-----BEGIN OPENSSH PRIVATE KEY-----"
      , a = "-----END OPENSSH PRIVATE KEY-----";
    e.exports = {
        privateExport: function(h, m) {
            const d = h.n.toBuffer();
            let p = Buffer$G.alloc(4);
            for (p.writeUInt32BE(h.e, 0); p[0] === 0; )
                p = p.slice(1);
            const b = h.d.toBuffer()
              , g = h.coeff.toBuffer()
              , $ = h.p.toBuffer()
              , N = h.q.toBuffer();
            let I;
            typeof h.sshcomment < "u" ? I = Buffer$G.from(h.sshcomment) : I = Buffer$G.from([]);
            const L = 15 + p.byteLength + 4 + d.byteLength
              , T = 23 + d.byteLength + 4 + p.byteLength + 4 + b.byteLength + 4 + g.byteLength + 4 + $.byteLength + 4 + N.byteLength + 4 + I.byteLength;
            let M = 43 + L + 4 + T;
            const q = Math.ceil(T / 8) * 8 - T;
            M += q;
            const Q = Buffer$G.alloc(M)
              , Y = {
                buf: Q,
                off: 0
            };
            Q.write("openssh-key-v1", "utf8"),
            Q.writeUInt8(0, 14),
            Y.off += 15,
            u(Y, Buffer$G.from("none")),
            u(Y, Buffer$G.from("none")),
            u(Y, Buffer$G.from("")),
            Y.off = Y.buf.writeUInt32BE(1, Y.off),
            Y.off = Y.buf.writeUInt32BE(L, Y.off),
            u(Y, Buffer$G.from("ssh-rsa")),
            u(Y, p),
            u(Y, d),
            Y.off = Y.buf.writeUInt32BE(M - 47 - L, Y.off),
            Y.off += 8,
            u(Y, Buffer$G.from("ssh-rsa")),
            u(Y, d),
            u(Y, p),
            u(Y, b),
            u(Y, g),
            u(Y, $),
            u(Y, N),
            u(Y, I);
            let ee = 1;
            for (; Y.off < M; )
                Y.off = Y.buf.writeUInt8(ee++, Y.off);
            return m.type === "der" ? Y.buf : l + `
` + i.linebrk(Q.toString("base64"), 70) + `
` + a + `
`
        },
        privateImport: function(h, m, d) {
            d = d || {};
            var p;
            if (d.type !== "der")
                if (Buffer$G.isBuffer(m) && (m = m.toString("utf8")),
                n.isString(m)) {
                    var b = i.trimSurroundingText(m, l, a).replace(/\s+|\n\r|\n|\r$/gm, "");
                    p = Buffer$G.from(b, "base64")
                } else
                    throw Error("Unsupported key format");
            else if (Buffer$G.isBuffer(m))
                p = m;
            else
                throw Error("Unsupported key format");
            const g = {
                buf: p,
                off: 0
            };
            if (p.slice(0, 14).toString("ascii") !== "openssh-key-v1")
                throw "Invalid file format.";
            if (g.off += 15,
            c(g).toString("ascii") !== "none" || c(g).toString("ascii") !== "none" || c(g).toString("ascii") !== "" || (g.off += 4,
            g.off += 4,
            c(g).toString("ascii") !== "ssh-rsa") || (c(g),
            c(g),
            g.off += 12,
            c(g).toString("ascii") !== "ssh-rsa"))
                throw Error("Unsupported key type");
            const $ = c(g)
              , N = c(g)
              , I = c(g)
              , L = c(g)
              , T = c(g)
              , M = c(g)
              , q = new o(I)
              , Q = new o(M)
              , Y = new o(T)
              , ee = q.mod(Y.subtract(o.ONE))
              , ie = q.mod(Q.subtract(o.ONE));
            h.setPrivate($, N, I, T, M, ee.toBuffer(), ie.toBuffer(), L),
            h.sshcomment = c(g).toString("ascii")
        },
        publicExport: function(h, m) {
            let d = Buffer$G.alloc(4);
            for (d.writeUInt32BE(h.e, 0); d[0] === 0; )
                d = d.slice(1);
            const p = h.n.toBuffer()
              , b = Buffer$G.alloc(d.byteLength + 4 + p.byteLength + 4 + 7 + 4)
              , g = {
                buf: b,
                off: 0
            };
            u(g, Buffer$G.from("ssh-rsa")),
            u(g, d),
            u(g, p);
            let $ = h.sshcomment || "";
            return m.type === "der" ? g.buf : "ssh-rsa " + b.toString("base64") + " " + $ + `
`
        },
        publicImport: function(h, m, d) {
            d = d || {};
            var p;
            if (d.type !== "der")
                if (Buffer$G.isBuffer(m) && (m = m.toString("utf8")),
                n.isString(m)) {
                    if (m.substring(0, 8) !== "ssh-rsa ")
                        throw Error("Unsupported key format");
                    let I = m.indexOf(" ", 8);
                    I === -1 ? I = m.length : h.sshcomment = m.substring(I + 1).replace(/\s+|\n\r|\n|\r$/gm, "");
                    const L = m.substring(8, I).replace(/\s+|\n\r|\n|\r$/gm, "");
                    p = Buffer$G.from(L, "base64")
                } else
                    throw Error("Unsupported key format");
            else if (Buffer$G.isBuffer(m))
                p = m;
            else
                throw Error("Unsupported key format");
            const b = {
                buf: p,
                off: 0
            }
              , g = c(b).toString("ascii");
            if (g !== "ssh-rsa")
                throw Error("Invalid key type: " + g);
            const $ = c(b)
              , N = c(b);
            h.setPublic(N, $)
        },
        autoImport: function(h, m) {
            return /^[\S\s]*-----BEGIN OPENSSH PRIVATE KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END OPENSSH PRIVATE KEY-----[\S\s]*$/g.test(m) ? (e.exports.privateImport(h, m),
            !0) : /^[\S\s]*ssh-rsa \s*(?=(([A-Za-z0-9+/=]+\s*)+))\1[\S\s]*$/g.test(m) ? (e.exports.publicImport(h, m),
            !0) : !1
        }
    };
    function c(h) {
        const m = h.buf.readInt32BE(h.off);
        h.off += 4;
        const d = h.buf.slice(h.off, h.off + m);
        return h.off += m,
        d
    }
    function u(h, m) {
        h.buf.writeInt32BE(m.byteLength, h.off),
        h.off += 4,
        h.off += m.copy(h.buf, h.off)
    }
}
)(openssh);
var opensshExports = openssh.exports;
(function(e) {
    utils$2._;
    function n(i) {
        i = i.split("-");
        for (var o = "private", l = {
            type: "default"
        }, a = 1; a < i.length; a++)
            if (i[a])
                switch (i[a]) {
                case "public":
                    o = i[a];
                    break;
                case "private":
                    o = i[a];
                    break;
                case "pem":
                    l.type = i[a];
                    break;
                case "der":
                    l.type = i[a];
                    break
                }
        return {
            scheme: i[0],
            keyType: o,
            keyOpt: l
        }
    }
    e.exports = {
        pkcs1: pkcs1Exports,
        pkcs8: pkcs8Exports,
        components: componentsExports,
        openssh: opensshExports,
        isPrivateExport: function(i) {
            return e.exports[i] && typeof e.exports[i].privateExport == "function"
        },
        isPrivateImport: function(i) {
            return e.exports[i] && typeof e.exports[i].privateImport == "function"
        },
        isPublicExport: function(i) {
            return e.exports[i] && typeof e.exports[i].publicExport == "function"
        },
        isPublicImport: function(i) {
            return e.exports[i] && typeof e.exports[i].publicImport == "function"
        },
        detectAndImport: function(i, o, l) {
            if (l === void 0) {
                for (var a in e.exports)
                    if (typeof e.exports[a].autoImport == "function" && e.exports[a].autoImport(i, o))
                        return !0
            } else if (l) {
                var c = n(l);
                if (e.exports[c.scheme])
                    c.keyType === "private" ? e.exports[c.scheme].privateImport(i, o, c.keyOpt) : e.exports[c.scheme].publicImport(i, o, c.keyOpt);
                else
                    throw Error("Unsupported key format")
            }
            return !1
        },
        detectAndExport: function(i, o) {
            if (o) {
                var l = n(o);
                if (e.exports[l.scheme])
                    if (l.keyType === "private") {
                        if (!i.isPrivate())
                            throw Error("This is not private key");
                        return e.exports[l.scheme].privateExport(i, l.keyOpt)
                    } else {
                        if (!i.isPublic())
                            throw Error("This is not public key");
                        return e.exports[l.scheme].publicExport(i, l.keyOpt)
                    }
                else
                    throw Error("Unsupported key format")
            }
        }
    }
}
)(formats$1);
var formatsExports = formats$1.exports
  , rsa = rsa$1;
requireCryptoBrowserify();
lib.Ber;
var _ = utils$2._
  , utils = utils$2
  , schemes = requireSchemes()
  , formats = formatsExports
  , NodeRSA = function() {
    var e = {
        node10: ["md4", "md5", "ripemd160", "sha1", "sha224", "sha256", "sha384", "sha512"],
        node: ["md4", "md5", "ripemd160", "sha1", "sha224", "sha256", "sha384", "sha512"],
        iojs: ["md4", "md5", "ripemd160", "sha1", "sha224", "sha256", "sha384", "sha512"],
        browser: ["md5", "ripemd160", "sha1", "sha256", "sha512"]
    }
      , n = "pkcs1_oaep"
      , i = "pkcs1"
      , o = "private"
      , l = {
        private: "pkcs1-private-pem",
        "private-der": "pkcs1-private-der",
        public: "pkcs8-public-pem",
        "public-der": "pkcs8-public-der"
    };
    function a(c, u, h) {
        if (!(this instanceof a))
            return new a(c,u,h);
        _.isObject(u) && (h = u,
        u = void 0),
        this.$options = {
            signingScheme: i,
            signingSchemeOptions: {
                hash: "sha256",
                saltLength: null
            },
            encryptionScheme: n,
            encryptionSchemeOptions: {
                hash: "sha1",
                label: null
            },
            environment: utils.detectEnvironment(),
            rsaUtils: this
        },
        this.keyPair = new rsa.Key,
        this.$cache = {},
        Buffer$G.isBuffer(c) || _.isString(c) ? this.importKey(c, u) : _.isObject(c) && this.generateKeyPair(c.b, c.e),
        this.setOptions(h)
    }
    return a.prototype.setOptions = function(c) {
        if (c = c || {},
        c.environment && (this.$options.environment = c.environment),
        c.signingScheme) {
            if (_.isString(c.signingScheme)) {
                var u = c.signingScheme.toLowerCase().split("-");
                u.length == 1 ? e.node.indexOf(u[0]) > -1 ? (this.$options.signingSchemeOptions = {
                    hash: u[0]
                },
                this.$options.signingScheme = i) : (this.$options.signingScheme = u[0],
                this.$options.signingSchemeOptions = {
                    hash: null
                }) : (this.$options.signingSchemeOptions = {
                    hash: u[1]
                },
                this.$options.signingScheme = u[0])
            } else
                _.isObject(c.signingScheme) && (this.$options.signingScheme = c.signingScheme.scheme || i,
                this.$options.signingSchemeOptions = _.omit(c.signingScheme, "scheme"));
            if (!schemes.isSignature(this.$options.signingScheme))
                throw Error("Unsupported signing scheme");
            if (this.$options.signingSchemeOptions.hash && e[this.$options.environment].indexOf(this.$options.signingSchemeOptions.hash) === -1)
                throw Error("Unsupported hashing algorithm for " + this.$options.environment + " environment")
        }
        if (c.encryptionScheme) {
            if (_.isString(c.encryptionScheme) ? (this.$options.encryptionScheme = c.encryptionScheme.toLowerCase(),
            this.$options.encryptionSchemeOptions = {}) : _.isObject(c.encryptionScheme) && (this.$options.encryptionScheme = c.encryptionScheme.scheme || n,
            this.$options.encryptionSchemeOptions = _.omit(c.encryptionScheme, "scheme")),
            !schemes.isEncryption(this.$options.encryptionScheme))
                throw Error("Unsupported encryption scheme");
            if (this.$options.encryptionSchemeOptions.hash && e[this.$options.environment].indexOf(this.$options.encryptionSchemeOptions.hash) === -1)
                throw Error("Unsupported hashing algorithm for " + this.$options.environment + " environment")
        }
        this.keyPair.setOptions(this.$options)
    }
    ,
    a.prototype.generateKeyPair = function(c, u) {
        if (c = c || 2048,
        u = u || 65537,
        c % 8 !== 0)
            throw Error("Key size must be a multiple of 8.");
        return this.keyPair.generate(c, u.toString(16)),
        this.$cache = {},
        this
    }
    ,
    a.prototype.importKey = function(c, u) {
        if (!c)
            throw Error("Empty key given");
        if (u && (u = l[u] || u),
        !formats.detectAndImport(this.keyPair, c, u) && u === void 0)
            throw Error("Key format must be specified");
        return this.$cache = {},
        this
    }
    ,
    a.prototype.exportKey = function(c) {
        return c = c || o,
        c = l[c] || c,
        this.$cache[c] || (this.$cache[c] = formats.detectAndExport(this.keyPair, c)),
        this.$cache[c]
    }
    ,
    a.prototype.isPrivate = function() {
        return this.keyPair.isPrivate()
    }
    ,
    a.prototype.isPublic = function(c) {
        return this.keyPair.isPublic(c)
    }
    ,
    a.prototype.isEmpty = function(c) {
        return !(this.keyPair.n || this.keyPair.e || this.keyPair.d)
    }
    ,
    a.prototype.encrypt = function(c, u, h) {
        return this.$$encryptKey(!1, c, u, h)
    }
    ,
    a.prototype.decrypt = function(c, u) {
        return this.$$decryptKey(!1, c, u)
    }
    ,
    a.prototype.encryptPrivate = function(c, u, h) {
        return this.$$encryptKey(!0, c, u, h)
    }
    ,
    a.prototype.decryptPublic = function(c, u) {
        return this.$$decryptKey(!0, c, u)
    }
    ,
    a.prototype.$$encryptKey = function(c, u, h, m) {
        try {
            var d = this.keyPair.encrypt(this.$getDataForEncrypt(u, m), c);
            return h == "buffer" || !h ? d : d.toString(h)
        } catch (p) {
            throw Error("Error during encryption. Original error: " + p)
        }
    }
    ,
    a.prototype.$$decryptKey = function(c, u, h) {
        try {
            u = _.isString(u) ? Buffer$G.from(u, "base64") : u;
            var m = this.keyPair.decrypt(u, c);
            if (m === null)
                throw Error("Key decrypt method returns null.");
            return this.$getDecryptedData(m, h)
        } catch (d) {
            throw Error("Error during decryption (probably incorrect key). Original error: " + d)
        }
    }
    ,
    a.prototype.sign = function(c, u, h) {
        if (!this.isPrivate())
            throw Error("This is not private key");
        var m = this.keyPair.sign(this.$getDataForEncrypt(c, h));
        return u && u != "buffer" && (m = m.toString(u)),
        m
    }
    ,
    a.prototype.verify = function(c, u, h, m) {
        if (!this.isPublic())
            throw Error("This is not public key");
        return m = !m || m == "buffer" ? null : m,
        this.keyPair.verify(this.$getDataForEncrypt(c, h), u, m)
    }
    ,
    a.prototype.getKeySize = function() {
        return this.keyPair.keySize
    }
    ,
    a.prototype.getMaxMessageSize = function() {
        return this.keyPair.maxMessageLength
    }
    ,
    a.prototype.$getDataForEncrypt = function(c, u) {
        if (_.isString(c) || _.isNumber(c))
            return Buffer$G.from("" + c, u || "utf8");
        if (Buffer$G.isBuffer(c))
            return c;
        if (_.isObject(c))
            return Buffer$G.from(JSON.stringify(c));
        throw Error("Unexpected data type")
    }
    ,
    a.prototype.$getDecryptedData = function(c, u) {
        return u = u || "buffer",
        u == "buffer" ? c : u == "json" ? JSON.parse(c.toString()) : c.toString(u)
    }
    ,
    a
}();
const NodeRSA$1 = getDefaultExportFromCjs(NodeRSA)
  , Br = class Br {
    constructor() {
        ye(this, "n");
        ye(this, "e")
    }
    setFormattedKey(n) {
        [this.n,this.e] = n.split("&").map(i => i.split("=")[1])
    }
    getFormattedKey() {
        return `nn=${this.n}&ee=${this.e}`
    }
    encrypt(n) {
        return !this.n || !this.e ? "" : Br.encrypt(n, this.n, this.e, !0)
    }
    static padWithPKCS1OAEP(n, i, o) {
        return this.signEncryptor || (this.signEncryptor = new NodeRSA$1),
        this.signEncryptor.importKey({
            n: Buffer$G.from(i, "hex"),
            e: Buffer$G.from(o, "hex")
        }, "components-public"),
        this.signEncryptor.encrypt(n, "hex")
    }
    static encrypt(n, i, o, l=!1) {
        if (CertificationService.isSupport(FeatureEnum.RSA_PKCS1_OAEP) && l)
            return this.padWithPKCS1OAEP(n, i, o);
        this.encryptor || (this.encryptor = new RSAKey),
        this.encryptor.setPublic(i, o);
        let a = this.encryptor.encrypt(n);
        const c = i.length || 256
          , u = a.length;
        return c !== u && (a = a.padStart(Math.max(c, u), "0")),
        a
    }
}
;
ye(Br, "encryptor"),
ye(Br, "signEncryptor");
let RSA = Br;
const Tr = class Tr {
    constructor() {
        ye(this, "aes");
        ye(this, "rsa");
        ye(this, "hash");
        ye(this, "sequence");
        ye(this, "SIGNATURE_OFFSET", 53);
        this.aes = new AES,
        this.rsa = new RSA
    }
    static getInstance() {
        return this.encryptor || (this.encryptor = new Tr),
        this.encryptor
    }
    setHash(n) {
        this.hash = n
    }
    getHash() {
        return this.hash || ""
    }
    setSequence(n) {
        this.sequence = n
    }
    getSequence() {
        return this.sequence || 0
    }
    generateAESKey() {
        this.aes.generateKey()
    }
    setAESFormattedKey(n) {
        this.aes.setFormattedKey(n)
    }
    getAESFormattedKey() {
        return this.aes.getFormattedKey()
    }
    setRSAFormattedKey(n) {
        this.rsa.setFormattedKey(n)
    }
    getRSAFormattedKey() {
        return this.rsa.getFormattedKey()
    }
    generateSignature(n, i) {
        let o = `h=${this.hash}&s=${n}`;
        return i && (o = `${this.getAESFormattedKey()}&${o}`),
        this._getEncryptedSignature(o, i)
    }
    _getEncryptedSignature(n, i) {
        const o = n.length;
        let l = 0
          , a = "";
        for (; l < o; ) {
            const c = n.substring(l, l + this.SIGNATURE_OFFSET);
            i ? a += this.rsa.encrypt(c) : a += buildExports.HmacSHA256(c, this.getAESFormattedKey()),
            l += this.SIGNATURE_OFFSET
        }
        return a
    }
    encrypt(n, i=!1) {
        if (!this.sequence)
            return {};
        const o = this.aes.encrypt(n);
        return CertificationService.isSupport(FeatureEnum.REPLACE_HASH) && !i && Token.isValid() && this.setHash(buildExports.SHA256(o).toString()),
        {
            sign: this.generateSignature(this.sequence + o.length, i),
            data: o
        }
    }
    decrypt(n) {
        return this.aes.decrypt(n)
    }
}
;
ye(Tr, "encryptor");
let Encryptor = Tr;
class EncryptManager {
    static getEncryptor() {
        return this.encryptor || (this.encryptor = Encryptor.getInstance()),
        this.encryptor
    }
    static init(n, i, o, l) {
        this.encryptor || this.getEncryptor(),
        this.encryptor.generateAESKey(),
        this.encryptor.setRSAFormattedKey(`nn=${o}&ee=${l}`),
        this.encryptor.setSequence(i),
        this.encryptor.setHash(n),
        this.backup()
    }
    static backup() {
        this.encryptor || this.getEncryptor(),
        localStorage.setItem(ENCRYPTOR_KEY.AES, this.encryptor.getAESFormattedKey()),
        localStorage.setItem(ENCRYPTOR_KEY.SEQ, this.encryptor.getSequence().toString()),
        localStorage.setItem(ENCRYPTOR_KEY.HASH, this.encryptor.getHash()),
        localStorage.setItem(ENCRYPTOR_KEY.RSA, this.encryptor.getRSAFormattedKey()),
        window.encrypt = this.encryptor.encrypt.bind(this.encryptor),
        window.decrypt = this.encryptor.decrypt.bind(this.encryptor)
    }
    static restore() {
        const n = localStorage.getItem(ENCRYPTOR_KEY.HASH)
          , i = Number(localStorage.getItem(ENCRYPTOR_KEY.SEQ))
          , o = localStorage.getItem(ENCRYPTOR_KEY.AES)
          , l = localStorage.getItem(ENCRYPTOR_KEY.RSA);
        if (!o || !l || !i || !n)
            throw new Error("init encryptor error");
        this.encryptor || this.getEncryptor(),
        this.encryptor.setHash(n),
        this.encryptor.setSequence(i),
        this.encryptor.setAESFormattedKey(o),
        this.encryptor.setRSAFormattedKey(l),
        window.encrypt = this.encryptor.encrypt.bind(this.encryptor),
        window.decrypt = this.encryptor.decrypt.bind(this.encryptor)
    }
    static reset() {
        localStorage.removeItem(ENCRYPTOR_KEY.AES),
        localStorage.removeItem(ENCRYPTOR_KEY.SEQ),
        localStorage.removeItem(ENCRYPTOR_KEY.HASH),
        localStorage.removeItem(ENCRYPTOR_KEY.RSA),
        window.encrypt = void 0,
        window.decrypt = void 0
    }
}
ye(EncryptManager, "encryptor");
const ONLINE_UPDATE_URL = "/admin/cloud_account?form=cloud_upgrade";
async function getLatestFirmware() {
    return serviceAdapter.read(ONLINE_UPDATE_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
async function updateLatestFirmware() {
    return serviceAdapter.request(ONLINE_UPDATE_URL, {
        operation: "upgrade"
    }, {
        preventSuccess: !0,
        preventError: !0
    })
}
const CHECK_INTERNET_URL = "/admin/cloud_account?form=check_internet";
async function checkInternet() {
    return serviceAdapter.read(CHECK_INTERNET_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const CHECK_DEVICE_URL = "/admin/cloud_account?form=check_device";
async function checkDevice() {
    return serviceAdapter.read(CHECK_DEVICE_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const CHECK_UPDATE_URL = "/admin/cloud_account?form=check_upgrade";
async function checkUpdate() {
    return serviceAdapter.read(CHECK_UPDATE_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const ONLINE_UPDATE_DOWNLOAD_URL = "/admin/cloud_account?form=detect_upgrade_status";
async function getOnlineDownloadStatusIM() {
    return serviceAdapter.read(ONLINE_UPDATE_DOWNLOAD_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const CLOUD_DEVICE_INFO_URL = "/admin/cloud_account?form=get_deviceInfo";
async function getCloudDeviceInfo() {
    return serviceAdapter.read(CLOUD_DEVICE_INFO_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const CLOUD_REMIND_URL = "/admin/cloud_account?form=remind";
function getCloudAccountRemind() {
    return serviceAdapter.read(CLOUD_REMIND_URL, {
        preventSuccess: !0
    })
}
function setCloudAccountRemind(e) {
    return serviceAdapter.write(CLOUD_REMIND_URL, e, {
        preventSuccess: !0,
        preventError: !0
    })
}
const AUTO_UPDATE_REMIND_URL = "/admin/cloud_account?form=auto_update_remind";
function checkAutoUpdateRemind() {
    return serviceAdapter.read(AUTO_UPDATE_REMIND_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
const useOnlineUpdateStore = defineStore("onlineUpdate", () => {
    const e = ref$1(!1);
    async function n() {
        const {update_number: o} = await checkUpdate();
        return Number(o) > 0
    }
    async function i() {
        e.value = await n()
    }
    return {
        init: i,
        canOnlineUpdate: e
    }
}
)
  , AUTO_UPDATE_URL = "/admin/firmware?form=auto_upgrade";
function getAutoUpdate() {
    return serviceAdapter.read(AUTO_UPDATE_URL)
}
function setAutoUpdate(e) {
    return serviceAdapter.write(AUTO_UPDATE_URL, e)
}
const UPDATE_URL = "/admin/firmware?form=upgrade";
function getUpdateInfo() {
    return serviceAdapter.read(UPDATE_URL, {
        preventSuccess: !0,
        preventError: !0
    })
}
function setQsUpgraded(e) {
    return serviceAdapter.write(UPDATE_URL, {
        upgraded: e
    }, {
        preventSuccess: !0,
        preventError: !0
    })
}
function getUpdateStatus() {
    return serviceAdapter.request(UPDATE_URL, {
        operation: "fwup_check"
    }, {
        preventSuccess: !0,
        preventError: !0
    })
}
const LOCAL_UPDATE_URL = "/admin/firmware?form=save_upgrade";
function uploadLocalFirmware(e) {
    const n = new FormData;
    return n.append("operation", "firmware"),
    n.append("keep", "on"),
    n.append("image", e),
    serviceAdapter.file(LOCAL_UPDATE_URL, n, {
        preventSuccess: !0,
        preventError: !0,
        timeout: 720 * 1e3
    })
}
const MESH_UPDATE_URL = "/admin/firmware?form=slave_cmd";
function loadMeshUpdates() {
    return serviceAdapter.request(MESH_UPDATE_URL, {
        operation: "slave_get_info"
    }, {
        preventSuccess: !0
    })
}
function updateMeshFirmware(e, n) {
    return serviceAdapter.request(MESH_UPDATE_URL, {
        operation: "slave_upgrade_firmware",
        ip: e,
        mac: n
    }, {
        preventSuccess: !0
    })
}
function getMeshUpdateDownload(e, n) {
    return serviceAdapter.request(MESH_UPDATE_URL, {
        operation: "slave_get_upgrade_info",
        ip: e,
        mac: n
    }, {
        preventSuccess: !0
    })
}
const FIRMWARE_CONFIG_URL = "/admin/firmware?form=config";
function getFirmwareConfig() {
    return serviceAdapter.read(FIRMWARE_CONFIG_URL, {
        preventSuccess: !0
    })
}
function checkFirmwareConfig() {
    return serviceAdapter.request(FIRMWARE_CONFIG_URL, {
        operation: "check"
    }, {
        preventSuccess: !0,
        preventError: !0
    })
}
function restore() {
    return serviceAdapter.request(FIRMWARE_CONFIG_URL, {
        operation: "factory",
        all: !1
    }, {
        preventSuccess: !0,
        preventError: !0
    })
}
function restoreAll(e={
    preventSuccess: !0,
    preventError: !0
}) {
    return serviceAdapter.request(FIRMWARE_CONFIG_URL, {
        operation: "factory",
        all: !0
    }, e)
}
const FIRMWARE_CONFIG_FILE_URL = "/admin/firmware?form=config_multipart";
function backup() {
    const e = new FormData;
    return e.append("operation", "backup"),
    serviceAdapter.file(FIRMWARE_CONFIG_FILE_URL, e, {
        preventSuccess: !0,
        preventError: !0
    })
}
function uploadRestoreFile(e) {
    const n = new FormData;
    return n.append("operation", "restore"),
    n.append("file", e),
    serviceAdapter.file(FIRMWARE_CONFIG_FILE_URL, n, {
        preventSuccess: !0,
        preventError: !0,
        timeout: 720 * 1e3
    })
}
const useMeshUpdateStore = defineStore("meshUpdate", () => {
    const e = ref$1([])
      , n = computed( () => e.value.some(l => !l.isLatest));
    async function i() {
        const {deviceConfig: l} = useDeviceStore();
        if (!l.supportMesh)
            return [];
        const a = await loadMeshUpdates();
        return assertArray(a).map(c => ({
            type: c.type,
            name: c.name,
            model: c.model,
            ip: c.ip,
            mac: c.mac,
            version: c.version,
            latestVersion: c.latest_version,
            isLatest: c.is_latest,
            releaseNote: c.releaseNote.replace(/\\n/g, "<br>")
        }))
    }
    async function o() {
        e.value = await i()
    }
    return {
        init: o,
        canMeshUpdate: n,
        meshUpdateList: e
    }
}
);
export {convertDeviceTagToNetworkMode as $, Auth as A, LinkStatusEnum as B, ConnectTypeEnum as C, DialFeatureEnum as D, EncryptManager as E, FeatureEnum as F, IspMacCloneTypeEnum as G, LANGUAGE_CODE as H, IptvModeEnum as I, assertArray as J, LanPriorityEnum as K, LANGUAGE_NAMES as L, MacCloneTypeEnum as M, IgmpVersionEnum as N, OperationModeEnum as O, IptvPortTypeEnum as P, AlgEnum as Q, RSA as R, ServiceProviderEnum as S, Token as T, VpnEnum as U, ViewModeEnum as V, InternetEnum as W, getCloudDeviceInfo as X, YesOrNoEnum as Y, DeviceTagEnum as Z, NetworkModeEnum as _, DEFAULT_HIDDEN_FEATURES as a, checkAutoUpdateRemind as a0, setCloudAccountRemind as a1, restoreAll as a2, UPGRADE_TOKEN_KEY as a3, getLatestFirmware as a4, getCloudAccountRemind as a5, updateLatestFirmware as a6, getOnlineDownloadStatusIM as a7, getUpdateStatus as a8, checkDevice as a9, checkFirmwareConfig as aA, backup as aB, getFirmwareConfig as aC, uploadRestoreFile as aD, restore as aE, DdnsStatusCodeEnum as aF, convertStringOrNumberPropsToNumber as aG, convertBytesToCapacity as aH, convertCapacityToBytes as aI, convertSecondsToHourTime as aJ, convertUnit as aK, convertBytesToCapacityAccurate as aL, defaultErrorHandler as aM, convertSecondsToTimeFormat as aN, PortFactory as aO, DevicePortEnum as aa, convertToUnderScoreCase as ab, convertToLowerCamelCase as ac, CertificationEnum as ad, LevelEnum as ae, INTERNET_VIEW_MODE_KEY as af, StatusTypeEnum as ag, isNetIpLegal as ah, isNetIp as ai, isBroadCastIp as aj, isSameNet as ak, setAutoUpdate as al, getAutoUpdate as am, AutoSwitchEnum as an, TpLinkDomainStatusEnum as ao, OneZeroEnum as ap, WanBindEnum as aq, ipToInt as ar, DownUpEnum as as, convertMinutesToHalfDayTime as at, convertSecondsToHalfDayTime as au, ConnectionsVpnEnum as av, trimAndUpperCase as aw, uploadLocalFirmware as ax, updateMeshFirmware as ay, getMeshUpdateDownload as az, useOnlineUpdateStore as b, useMeshUpdateStore as c, CloudInfo as d, buildExports as e, CertificationService as f, getLanguage as g, checkInternet as h, i18n as i, getUpdateInfo as j, setQsUpgraded as k, loadLanguageAsync as l, isCidrConflict as m, navConfigs as n, convertImageToBase64 as o, convertToBoolEnable as p, convertToStringEnable as q, EnableEnum as r, serviceAdapter as s, DynamicModeEnum as t, useDeviceStore as u, SndConnEnum as v, IpTypeEnum as w, ConnectModeEnum as x, ShareFlagEnum as y, ConnectStatusEnum as z};
